
=== File: .gitignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/.gitignore:1-47
.venv
.env
__pycache__
.pytest_cache
*.db
test
test_state.json
task_flow.egg-info
example_repo
signature.js
git-filter-repo
task/orca/
**/dist/
# yarn.lock
package-lock.json
node_modules
build
migrate.sh
*/dev.js
executables/*
namespace/*
config/*
.env.local
taskStateInfoKeypair.json
localKOIIDB.db
metadata.json
.npmrc
*.pem
.vscode
.cursor
data/chunks
data/process
test_state.csv
todos-example.csv

.env.prod.local
# Ignore auto-generated repository directories
repos/


# Ignore Data
data/*


venv

**/venv/

=== File: README.md ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/README.md:1-73
# Middle Server

## Before ALL: Deployment GUIDE ON COOLIFY:
Checks:
- Make sure you select First server and the domain name is dev1.koii.network (or second one with dev.koii.network)
- Set the private key to Herman GitHub Key (or other keys have access to middle server repo)
Step:
- Copy all env in developer view from builder247-test to your new service.
- Set Build Pack as docker compose & change docker-compose.yaml to docker-compose.yml
- Setup cron job to run ts-node src/cronJobs/syncDB.ts
=================
A monorepo containing the Middle Server and Orca Agent services.

## Project Structure

The project consists of two main services:

- `middle-server/`: The main server component
- `orca-agent/`: The Orca agent service to support middle server

## Prerequisites

- Node.js
- Yarn
- Docker and Docker Compose

## Getting Started

1. Clone the repository:
```bash
git clone <repository-url>
cd middle-server
```

2. Install dependencies:
```bash
yarn install
```

3. Start the services using Docker Compose:
```bash
docker-compose up -d
```

## Development

The project uses Husky for Git hooks. The hooks are automatically set up when you run `yarn install`.

## Docker Services

The project includes two Docker services:

### Middle Server
- Service name: `middle-server`
- Environment: Production
- Auto-restart: Enabled

### Orca Agent
- Service name: `orca-agent`
- Environment: Production
- Auto-restart: Enabled

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

[Add your license information here]

=== File: docker-compose.yml ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/docker-compose.yml:1-27
version: "3.8"
services:
  middle-server:
    exclude_from_hc: true
    build:
      context: ./middle-server
    environment:
      - NODE_ENV=production
    restart: always

  orca-agent:
    exclude_from_hc: true
    build:
      context: ./orca-agent
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    restart: always

  planner-agent:
    exclude_from_hc: true
    build:
      context: ./planner-agent
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    restart: always

=== File: package.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/package.json:1-10
{
  "name": "middle-server-root",
  "private": true,
  "scripts": {
    "prepare": "husky"
  },
  "devDependencies": {
    "husky": "^9.1.7"
  }
}

=== File: middle-server/.gitignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/.gitignore:1-45
.venv
.env
__pycache__
.pytest_cache
*.db
test
test_state.json
task_flow.egg-info
example_repo
signature.js
git-filter-repo
task/orca/
**/dist/
# yarn.lock
package-lock.json
node_modules
build
migrate.sh
*/dev.js
executables/*
namespace/*
config/*
.env.local
taskStateInfoKeypair.json
localKOIIDB.db
metadata.json
.npmrc
*.pem
.vscode
.cursor
data/chunks
data/process
test_state.csv
todos-example.csv

.env.prod.local
# Ignore auto-generated repository directories
repos/


# Ignore Data
data/*


venv

=== File: middle-server/jest.config.js ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/jest.config.js:1-6
module.exports = {
  preset: "ts-jest",
  testEnvironment: "node",
  testMatch: ["**/tests/**/*.test.ts"],
  moduleFileExtensions: ["ts", "js"],
};

=== File: middle-server/.eslintrc.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/.eslintrc.json:1-25
{
  "root": true,
  "env": {
    "node": true,
    "es2021": true,
    "jest": true
  },
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended", "prettier"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "tsconfigRootDir": "."
  },
  "plugins": ["@typescript-eslint"],
  "ignorePatterns": ["dist/**/*", "**/*.d.ts"],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    "no-console": "off",
    "@typescript-eslint/ban-ts-comment": "off"
  }
}

=== File: middle-server/.gitlab-ci.yml ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/.gitlab-ci.yml:1-15
stages:
  - test

cache:
  paths:
    - node_modules/
    - .yarn-cache/

test_job:
  stage: test
  image: node:21
  before_script:
    - yarn install --cache-folder .yarn-cache
  script:
    - yarn test

=== File: middle-server/.prettierrc ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/.prettierrc:1-23
{
  "useTabs": false,
  "tabWidth": 2,
  "singleQuote": false,
  "trailingComma": "all",
  "printWidth": 120,
  "arrowParens": "always",
  "semi": true,
  "overrides": [
    {
      "files": ["*.py"],
      "options": {
        "tabWidth": 4
      }
    },
    {
      "files": ".eslintrc",
      "options": {
        "parser": "json"
      }
    }
  ]
}

=== File: middle-server/.env.example ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/.env.example:1-21
MONGODB_URI=mongodb://localhost:27017/todos

TASK_IDS=1111,1112 # For Builder
DOCUMENT_SUMMARIZER_TASK_ID=your_task_id # For Summarizer
BUG_FINDER_TASK_ID=your_task_id # For BugFinder
PLANNER_TASK_ID=your_task_id # For Planner
SUPPORTER_TASK_ID=your_task_id # For Supporter
GITHUB_TOKEN=your_github_token
GITHUB_USERNAME=your_github_username
BOUNTY_REPO_URL=https://github.com/HermanL02/prometheus-swarm-bounties
PORT=3008

PROMETHEUS_SERVER_URL=https://prometheus-server.koii.network/
PROMETHEUS_SERVER_X_API_KEY=your_api_key
PROMETHEUS_INCOME_REQUEST_API_KEY=your_bypass_key

SLACK_WEBHOOK_URL=SLACK_URL

PROMETHEUS_SERVER_BYPASS_KEY=
NODE_ENV=development


=== File: middle-server/tsconfig.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/tsconfig.json:1-119
{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "jsx": "preserve",                                /* Specify what JSX code is generated. */
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    // "jsxFactory": "",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */
    // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
    // "jsxImportSource": "",                            /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */
    // "reactNamespace": "",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */

    /* Modules */
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "rootDir": "." /* Specify the root folder within your source files. */,
    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
    // "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    "types": ["jest"] /* Specify type package names to be included without being referenced in a source file. */,
    // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
    // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
    // "allowImportingTsExtensions": true,               /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */
    // "rewriteRelativeImportExtensions": true,          /* Rewrite '.ts', '.tsx', '.mts', and '.cts' file extensions in relative import paths to their JavaScript equivalent in output files. */
    // "resolvePackageJsonExports": true,                /* Use the package.json 'exports' field when resolving package imports. */
    // "resolvePackageJsonImports": true,                /* Use the package.json 'imports' field when resolving imports. */
    // "customConditions": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */
    // "noUncheckedSideEffectImports": true,             /* Check side effect imports. */
    // "resolveJsonModule": true,                        /* Enable importing .json files. */
    // "allowArbitraryExtensions": true,                 /* Enable importing files with any extension, provided a declaration file is present. */
    // "noResolve": true,                                /* Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project. */

    /* JavaScript Support */
    // "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    // "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
    // "maxNodeModuleJsDepth": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */

    /* Emit */
    // "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
    // "emitDeclarationOnly": true,                      /* Only output d.ts files and not JavaScript files. */
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    // "inlineSourceMap": true,                          /* Include sourcemap files inside the emitted JavaScript. */
    // "noEmit": true,                                   /* Disable emitting files from a compilation. */
    // "outFile": "./",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
    "outDir": "./dist" /* Specify an output folder for all emitted files. */,
    // "removeComments": true,                           /* Disable emitting comments. */
    // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */
    // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */
    // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */
    // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */
    // "newLine": "crlf",                                /* Set the newline character for emitting files. */
    // "stripInternal": true,                            /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
    // "noEmitHelpers": true,                            /* Disable generating custom helper functions like '__extends' in compiled output. */
    // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */
    // "preserveConstEnums": true,                       /* Disable erasing 'const enum' declarations in generated code. */
    // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */

    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    // "verbatimModuleSyntax": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */
    // "isolatedDeclarations": true,                     /* Require sufficient annotation on exports so other tools can trivially generate declaration files. */
    // "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    // "strictBuiltinIteratorReturn": true,              /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */
    // "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    // "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
    // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
    // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    // "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
    // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*", "deprecated_unit_tests/**/*"],
  "exclude": ["node_modules"],
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": ["**/tests/**/*.test.ts"],
    "moduleFileExtensions": ["ts", "js"]
  }
}

=== File: middle-server/.dockerignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/.dockerignore:1-37
# Tests
src/tests/

# Development files
.git
.gitignore
README.md
*.md
.editorconfig
.eslintrc
.prettierrc

# Build output
dist/
node_modules/
build/
*.log
Dockerfile
docker-compose.yml
venv/
.venv/
__pycache__/
.pytest_cache/
*.db
*.egg-info
repos/

# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment files
.env
.env.*
!.env.example

=== File: middle-server/package.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/package.json:1-51
{
  "scripts": {
    "start": "ts-node src/index.ts",
    "dev": "nodemon --watch 'src/**/*.ts' --exec 'ts-node' src/index.ts",
    "build": "tsc && cpx './src/utils/webasm_bincode_deserializer/**/*' './dist/src/utils/webasm_bincode_deserializer'",
    "test": "jest --runInBand",
    "test:watch": "jest --watch",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "install:root": "cd .. && yarn install",
    "prepare": "yarn install:root"
  },
  "devDependencies": {
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.13.2",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "7.0.0",
    "@typescript-eslint/parser": "7.0.0",
    "add": "^2.0.6",
    "cpx": "^1.5.0",
    "eslint": "8.56.0",
    "eslint-config-prettier": "9.1.0",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.4.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "yarn": "^1.22.22"
  },
  "dependencies": {
    "@_koii/create-task-cli": "^1.1.7",
    "@_koii/namespace-wrapper": "^1.0.23",
    "@_koii/storage-task-sdk": "^1.2.7",
    "@_koii/web3.js": "^0.1.11",
    "@octokit/rest": "^21.1.1",
    "@typegoose/typegoose": "^12.14.0",
    "@types/morgan": "^1.9.9",
    "bs58": "^6.0.0",
    "csv-parse": "^5.6.0",
    "express": "^4.21.2",
    "fzstd": "^0.1.1",
    "mongoose": "^8.10.0",
    "morgan": "^1.10.0",
    "node-cache": "^5.1.2",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "tsx": "^4.19.3"
  }
}

=== File: middle-server/nodemon.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/nodemon.json:1-9
{
  "watch": ["src"],
  "ext": ".ts,.js",
  "ignore": [],
  "exec": "ts-node ./src/index.ts",
  "env": {
    "NODE_ENV": "development"
  }
}

=== File: middle-server/deprecated_unit_tests/controllers/createToDoTest.ts ===

-- Chunk 1 --
// createToDoTest.ts:6-20
async function main() {
  startServer();
  await connectToDatabase();
  try {
    const response = await axios.post("http://localhost:3000/api/builder/create-to-do", {
      title: "Sample ToDo",
      acceptanceCriteria: "Criteria for acceptance",
      repoOwner: "OwnerName",
      repoName: "RepoName",
    });
    console.log("Response:", response.data);
  } catch (error) {
    console.error(error);
  }
}

=== File: middle-server/deprecated_unit_tests/controllers/createFetchAddPRTest.ts ===

-- Chunk 1 --
// createFetchAddPRTest.ts:8-54
async function test() {
  const server = await startServer();
  await connectToDatabase();
  // Example of creating a todo:
  // const response = await axios.post("http://localhost:3000/api/builder/create-to-do", {
  //   title: "test",
  //   acceptanceCriteria: "test",
  //   repoOwner: "test",
  //   repoName: "test"
  // });
  // console.log(response.data);

  const taskId = "tempSimulateTaskID";
  const roundNumber = "1";
  const notSignedData = { taskId, roundNumber };
  const keypair = Keypair.generate();
  const signature = await signData(keypair, notSignedData);
  const pubKey = keypair.publicKey.toBase58();
  const githubUsername = "mockGithubUsername";

  try {
    const response2 = await axios.post("http://localhost:3000/api/builder/fetch-to-do", {
      signature,
      pubKey,
      github_username: githubUsername,
    });
    console.log(response2.data);
  } catch (error) {
    console.log(error);
  }

  const notSignedData3 = { taskId, roundNumber, type: "Audit" };
  const signature3 = await signData(keypair, notSignedData3);
  const prUrl = "https://github.com/koii-network/koii-core/pull/1234";
  console.log("1111111");

  try {
    const response3 = await axios.post("http://localhost:3000/api/builder/add-pr-to-to-do", {
      signature: signature3,
      pubKey,
      prUrl,
    });
    console.log(response3.data);
  } catch (error) {
    console.log(error);
  }
}

=== File: middle-server/deprecated_unit_tests/utils/signTest.ts ===

-- Chunk 1 --
// signTest.ts:5-17
async function main() {
  const body = {
    roundNumber: 1,
    taskId: "tempSimulateTaskID",
    pubKey: "tempSimulatePubKey",
  };

  const signedMessage = await signData(keypair, body);

  const verified = await verifySignature(signedMessage, keypair.publicKey.toBase58());

  console.log(verified);
}

=== File: middle-server/src/app.ts ===

-- Chunk 1 --
// app.ts:13-24
(req, res) => {
  const status = res.statusCode;
  const color =
    status >= 500
      ? 31 // red
      : status >= 400
        ? 33 // yellow
        : status >= 300
          ? 36 // cyan
          : 32; // green
  return `\x1b[${color}m${status}\x1b[0m`;
}

-- Chunk 2 --
// app.ts:27-34
(req, res, next) => {
  const originalJson = res.json;
  res.json = function (body) {
    res.locals.responseBody = body;
    return originalJson.call(this, body);
  };
  next();
}

-- Chunk 3 --
// app.ts:37-43
(req, res) => {
  const expressRes = res as express.Response;
  if (expressRes.statusCode >= 400) {
    return expressRes.locals.responseBody?.message || "";
  }
  return "";
}

-- Chunk 4 --
// app.ts:48-48
(req) => req.url === "/healthz"

-- Chunk 5 --
// app.ts:56-73
(err: Error, req: express.Request, res: express.Response, next: express.NextFunction) => {
  console.error("\x1b[31m%s\x1b[0m", "Error:", {
    timestamp: new Date().toISOString(),
    name: err.name,
    message: err.message,
    stack: err.stack,
    path: req.path,
    method: req.method,
    body: req.body,
    query: req.query,
    headers: req.headers,
  });

  res.status(500).json({
    success: false,
    message: "Internal server error",
  });
}

-- Chunk 6 --
// app.ts:75-77
(req: express.Request, res: express.Response) => {
  res.send("Hello World!");
}

-- Chunk 7 --
// app.ts:84-91
async function connectToDatabase() {
  try {
    await checkConnections();
    console.log("\x1b[32m%s\x1b[0m", "Connected to MongoDB");
  } catch (error) {
    console.error("\x1b[31m%s\x1b[0m", "Error connecting to MongoDB:", error);
  }
}

-- Chunk 8 --
// app.ts:93-97
function startServer(): http.Server {
  return app.listen(port, () => {
    console.log("\x1b[36m%s\x1b[0m", `Server running at http://localhost:${port}`);
  });
}

=== File: middle-server/src/index.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/index.ts:1-4
import { startServer, connectToDatabase } from "./app";

connectToDatabase();
startServer();

=== File: middle-server/src/types/bounty.ts ===

-- Chunk 1 --
// bounty.ts:1-18
interface Bounty {
  _id: string;
  email: string;
  githubUrl: string;
  projectName: string;
  description: string;
  bountyAmount: number;
  isAutoIntegrationKit: boolean;
  swarmType: string;
  bountyType: string;
  walletAddress: string;
  txHash: string;
  status: string;
  network: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
}

-- Chunk 2 --
// bounty.ts:20-23
interface BountyResponse {
  success: boolean;
  data: Bounty[];
}

=== File: middle-server/src/config/constant.ts ===

-- Chunk 1 --
// constant.ts:28-28
(id) => id.trim()

=== File: middle-server/src/services/summarizer/fetchDistribution.ts ===

-- Chunk 1 --
// fetchDistribution.ts:14-33
async () => {
  const rounds = await getDistributionListRounds(process.env.DOCUMENT_SUMMARIZER_TASK_ID!);

  console.log("rounds", rounds);
  for (const round of rounds) {
    // check if the round is already in the database
    const distributionResult = await DistributionResultModel.findOne({
      taskId: process.env.DOCUMENT_SUMMARIZER_TASK_ID!,
      round: round,
    });
    if (distributionResult) {
      continue;
    }
    const distributionList = await getDistributionListWrapper(
      process.env.DOCUMENT_SUMMARIZER_TASK_ID!,
      round.toString(),
    );
    await fetchDistribution(distributionList, process.env.DOCUMENT_SUMMARIZER_TASK_ID!, round);
  }
}

-- Chunk 2 --
// fetchDistribution.ts:35-61
async (distributionList: any, taskId: string, round: number) => {
  let positiveKeys: string[] = [];
  let negativeKeys: string[] = [];
  if (distributionList) {
    const { positive, negative } = await getKeysByValueSign(distributionList);
    positiveKeys = positive;
    negativeKeys = negative;
  } else {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "No Distribution List found.",
      },
    };
  }
  // save rounds and positiveKeys and negativeKeys
  const distributionResult = await DistributionResultModel.create({
    taskId,
    round,
    positiveKeys,
    negativeKeys,
  });
  await distributionResult.save();
  const response = await updateSubtaskStatus(positiveKeys, negativeKeys, round);
  return response;
}

-- Chunk 3 --
// fetchDistribution.ts:62-110
async (positiveKeys: string[], negativeKeys: string[], round: number) => {
  console.log("positiveKeys", positiveKeys);
  console.log("negativeKeys", negativeKeys);
  console.log("round", round);
  // ============== Update the subtask status ==============
  const specs = await DocumentationModel.find({
    stakingKey: { $in: [...positiveKeys, ...negativeKeys] },
    roundNumber: round,
    status: DocumentationStatus.IN_REVIEW,
  });
  for (const spec of specs) {
    for (const assignee of spec.assignedTo) {
      if (!assignee.taskId || assignee.roundNumber == undefined || !assignee.stakingKey || !assignee.prUrl) {
        console.log("Missing required fields for assignee:");
        if (!assignee.taskId) console.log("- Missing taskId");
        if (assignee.roundNumber == undefined) console.log("- Missing roundNumber");
        if (!assignee.stakingKey) console.log("- Missing stakingKey");
        if (!assignee.prUrl) console.log("- Missing prUrl");
        console.log("Assignee object:", assignee);
        continue;
      }
      if (positiveKeys.includes(assignee.stakingKey) && assignee.roundNumber === round) {
        assignee.auditResult = true;
        spec.status = DocumentationStatus.DONE;
        if (spec.swarmBountyId && process.env.NODE_ENV !== "development") {
          await updateSwarmBountyStatus(spec.swarmBountyId, SwarmBountyStatus.COMPLETED);
        }
      }
      // Even the previous ones are passed, we need to set the status to initialized
      if (negativeKeys.includes(assignee.stakingKey) && assignee.roundNumber === round) {
        assignee.auditResult = false;
        // If the staking key is the current one, we need to set the status to initialized to allow it to be finished again
        if (spec.stakingKey === assignee.stakingKey && spec.roundNumber === round) {
          spec.status = DocumentationStatus.INITIALIZED;
        }
      }
    }
    // Save the todo
    await spec.save();
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Task processed successfully.",
    },
  };
}

=== File: middle-server/src/services/summarizer/syncDB.ts ===

-- Chunk 1 --
// syncDB.ts:8-39
async function syncDB() {
  // Get all feature bounties
  // Access the endpoint to get the swarm bounties
  try {
    const data = await getSwarmBounty();
    if (!data) {
      console.log("No data found");
      return;
    }
    const swarmBounties = data.data.filter((bounty: any) => bounty.swarmType === SwarmBountyType.DOCUMENT_SUMMARIZER);
    const docs = await DocumentationModel.find();
    console.log("swarmBounties", swarmBounties.length);
    // Create a map of existing specs by swarmBountyId for quick lookup
    const existingDocs = new Map(docs.map((doc) => [doc.swarmBountyId, doc]));
    console.log("existingDocs", existingDocs.size);
    // Process each feature bounty
    for (const bounty of swarmBounties) {
      const bountyId = bounty._id.toString();
      if (!existingDocs.has(bountyId)) {
        // Create new spec if it doesn't exist
        await DocumentationModel.create({
          repoOwner: bounty.githubUrl.split("/")[3], // Extract owner from GitHub URL
          repoName: bounty.githubUrl.split("/")[4], // Extract repo name from GitHub URL
          swarmBountyId: bountyId,
        });
      }
    }
    console.log("syncDB summarizer completed");
  } catch (error) {
    console.error("Error syncing DB", error);
  }
}

=== File: middle-server/src/services/slack/message.ts ===

-- Chunk 1 --
// message.ts:1-27
async function sendMessageToSlack(message: string): Promise<void> {
  try {
    const slackWebhookUrl = process.env.SLACK_WEBHOOK_URL;
    if (!slackWebhookUrl) {
      throw new Error("SLACK_WEBHOOK_URL is not set");
    }

    const payload = {
      text: message,
    };

    const response = await fetch(slackWebhookUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });

    if (!response.ok) {
      throw new Error("Failed to send message to Slack");
    }
  } catch (error) {
    console.error("Error sending message to Slack:", error);
    throw error;
  }
}

=== File: middle-server/src/services/swarmBounty/existingIssues.ts ===

-- Chunk 1 --
// existingIssues.ts:3-12
interface BountyIssue {
  githubUrl: string;
  projectName: string;
  bountyTask: string;
  description: string;
  bountyAmount: string;
  bountyType: string;
  transactionHash: string;
  status: string;
}

-- Chunk 2 --
// existingIssues.ts:14-93
async function getExistingIssues(): Promise<BountyIssue[]> {
  try {
    // read from the bounty markdown file
    console.log("Fetching markdown file from:", defaultBountyMarkdownFile);
    const bountyMarkdownFile = await fetch(defaultBountyMarkdownFile);
    const bountyMarkdownFileText = await bountyMarkdownFile.text();

    console.log("Raw markdown content:", bountyMarkdownFileText);

    const bountyMarkdownFileLines = bountyMarkdownFileText.split("\n");
    console.log("Number of lines:", bountyMarkdownFileLines.length);

    const issues: BountyIssue[] = [];
    let isTableStarted = false;

    for (const line of bountyMarkdownFileLines) {
      // Skip empty lines
      if (line.trim() === "") {
        console.log("Skipping empty line");
        continue;
      }

      console.log("Processing line:", line);

      // Skip the title line starting with #
      if (line.startsWith("#")) {
        console.log("Found title line:", line);
        continue;
      }

      // Skip the header and separator lines
      if (line.startsWith("|") && line.includes("GitHub URL")) {
        console.log("Found header line");
        continue;
      }
      if (line.startsWith("|") && line.includes("-----")) {
        console.log("Found separator line");
        continue;
      }

      // Process table rows
      if (line.startsWith("|")) {
        isTableStarted = true;
        // Remove first and last | and split by |
        const cells = line
          .slice(1, -1)
          .split("|")
          .map((cell) => cell.trim());
        console.log("Parsed cells:", cells);

        // Extract GitHub URL and name from markdown link format [name](url)
        const githubUrlMatch = cells[0].match(/\[(.*?)\]\((.*?)\)/);
        console.log("GitHub URL match:", githubUrlMatch);

        const projectName = githubUrlMatch ? githubUrlMatch[1] : "";
        const githubUrl = githubUrlMatch ? githubUrlMatch[2] : "";

        const issue: BountyIssue = {
          githubUrl,
          projectName,
          bountyTask: cells[1],
          description: cells[3],
          bountyAmount: cells[4],
          bountyType: cells[5],
          transactionHash: cells[6],
          status: cells[7],
        };

        console.log("Created issue object:", issue);
        issues.push(issue);
      }
    }
    // Filter all issues with status "Initialized" && Bounty Task is Document & Summarize
    console.log("Final parsed issues number:", issues.length);
    return issues;
  } catch (error) {
    console.error("Error processing markdown:", error);
    throw error;
  }
}

-- Chunk 3 --
// existingIssues.ts:95-97
async function getInitializedDocumentSummarizeIssues(issues: BountyIssue[]) {
  return issues.filter((issue) => issue.status === "Initialized" && issue.bountyTask === "Document & Summarize");
}

=== File: middle-server/src/services/swarmBounty/updateStatus.ts ===

-- Chunk 1 --
// updateStatus.ts:4-30
async function updateSwarmBountyStatus(swarmBountyId: string, status: SwarmBountyStatus) {
  try {
    if (process.env.SKIP_PROMETHEUS_SERVER) {
      return;
    }
    const endpoint = `${process.env.PROMETHEUS_SERVER_URL}/api/v1/bounty`;

    const response = await fetch(endpoint, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${process.env.PROMETHEUS_SERVER_X_API_KEY || ""}`,
        "x-vercel-protection-bypass": process.env.PROMETHEUS_SERVER_BYPASS_KEY || "",
      },
      body: JSON.stringify({ id: swarmBountyId, status: status }),
    });
    if (!response.ok) {
      const errorText = await response.text();
      console.error(`API Error: ${response.status} ${response.statusText}`);
      console.error("Response body:", errorText);
      throw new Error(`API request failed with status ${response.status}`);
    }
    return response.json();
  } catch (error) {
    console.error("Error updating swarm bounty status", error);
  }
}

=== File: middle-server/src/services/bugFinder/syncDB.ts ===

-- Chunk 1 --
// syncDB.ts:8-39
async function syncDB() {
  // Get all feature bounties
  // Access the endpoint to get the swarm bounties
  try {
    const data = await getSwarmBounty();
    if (!data) {
      console.log("No data found");
      return;
    }
    const swarmBounties = data.data.filter((bounty: any) => bounty.swarmType === SwarmBountyType.FIND_BUGS);
    const docs = await BugFinderModel.find();
    console.log("swarmBounties", swarmBounties.length);
    // Create a map of existing specs by swarmBountyId for quick lookup
    const existingDocs = new Map(docs.map((doc) => [doc.swarmBountyId, doc]));
    console.log("existingDocs", existingDocs.size);
    // Process each feature bounty
    for (const bounty of swarmBounties) {
      const bountyId = bounty._id.toString();
      if (!existingDocs.has(bountyId)) {
        // Create new spec if it doesn't exist
        await BugFinderModel.create({
          repoOwner: bounty.githubUrl.split("/")[3], // Extract owner from GitHub URL
          repoName: bounty.githubUrl.split("/")[4], // Extract repo name from GitHub URL
          swarmBountyId: bountyId,
        });
      }
    }
    console.log("syncDB bug finder completed");
  } catch (error) {
    console.error("Error syncing DB", error);
  }
}

=== File: middle-server/src/services/database/database.ts ===

-- Chunk 1 --
// database.ts:18-20
() => {
  console.log("\x1b[32m%s\x1b[0m", "Connected to builder247 database");
}

-- Chunk 2 --
// database.ts:22-24
() => {
  console.log("\x1b[32m%s\x1b[0m", "Connected to prometheus database");
}

-- Chunk 3 --
// database.ts:26-28
(err) => {
  console.error("\x1b[31m%s\x1b[0m", "builder247 database connection error:", err);
}

-- Chunk 4 --
// database.ts:30-32
(err) => {
  console.error("\x1b[31m%s\x1b[0m", "prometheus database connection error:", err);
}

-- Chunk 5 --
// database.ts:35-63
async () => {
  try {
    // Wait for both connections to be ready
    await Promise.all([
      new Promise<void>((resolve, reject) => {
        if (builder247DB.readyState === 1) {
          resolve();
        } else {
          builder247DB.once("connected", () => resolve());
          builder247DB.once("error", (err) => reject(err));
        }
      }),
      new Promise<void>((resolve, reject) => {
        if (prometheusDB.readyState === 1) {
          resolve();
        } else {
          prometheusDB.once("connected", () => resolve());
          prometheusDB.once("error", (err) => reject(err));
        }
      }),
    ]);

    console.log("\x1b[32m%s\x1b[0m", "Connected to all MongoDB databases");
    return true;
  } catch (error) {
    console.error("\x1b[31m%s\x1b[0m", "Error checking database connections:", error);
    return false;
  }
}

-- Chunk 6 --
// database.ts:66-74
async () => {
  try {
    await checkConnections();
    return true;
  } catch (error) {
    console.error("\x1b[31m%s\x1b[0m", "Failed to initialize database connections:", error);
    return false;
  }
}

=== File: middle-server/src/services/planner/syncDB.ts ===

-- Chunk 1 --
// syncDB.ts:10-54
async function syncDB() {
  // Get all feature bounties
  const data = await getSwarmBounty();
  if (!data) {
    console.log("No data found");
    return;
  }
  const swarmBounties = data.data.filter((bounty: any) => bounty.swarmType === SwarmBountyType.BUILD_FEATURE);
  const specs = await SpecModel.find();

  // Create a map of existing specs by swarmBountyId for quick lookup
  const existingSpecs = new Map(specs.map((spec) => [spec.swarmBountyId, spec]));

  // Process each feature bounty
  for (const bounty of swarmBounties) {
    const bountyId = bounty._id.toString();
    if (!existingSpecs.has(bountyId)) {
      // Create new spec if it doesn't exist
      await SpecModel.create({
        title: bounty.projectName,
        description: bounty.description,
        repoOwner: bounty.githubUrl.split("/")[3], // Extract owner from GitHub URL
        repoName: bounty.githubUrl.split("/")[4], // Extract repo name from GitHub URL
        swarmBountyId: bountyId,
      });

      const forkUrl = await createFork(bounty.githubUrl);

      const response = await startPlannerLogic({
        sourceUrl: bounty.githubUrl,
        forkUrl: forkUrl,
        issueSpec: bounty.description,
        bountyId: bountyId,
      });
      if (response.statuscode < 200 || response.statuscode >= 300) {
        await sendMessageToSlack(
          `Planner failed for ${bounty.projectName} with bounty id ${bountyId} and error ${response.data.message}`,
        );
      } else {
        console.log("Planner completed for ", bounty.projectName);
      }
    }
  }
  console.log("syncDB planner completed");
}

=== File: middle-server/src/models/BugFinderLogs.ts ===

-- Chunk 1 --
// BugFinderLogs.ts:4-13
class LogEntry {
  @prop({ required: true })
  public level!: string; // e.g., "info", "error", "warning"

  @prop({ required: true })
  public message!: string;

  @prop({ required: true, default: () => new Date() })
  public timestamp!: Date;
}

-- Chunk 2 --
// BugFinderLogs.ts:15-34
@modelOptions({
  schemaOptions: {
    timestamps: true,
    expireAfterSeconds: 86400, // 24 hours in seconds
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class BugFinderLogs {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public swarmBountyId!: string;

  @prop({ type: () => [LogEntry], default: [] })
  public logs!: LogEntry[];
}

=== File: middle-server/src/models/DistributionResult.ts ===

-- Chunk 1 --
// DistributionResult.ts:4-25
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class DistributionResult {
  @prop({ required: true })
  public taskId!: string;

  @prop({ required: true })
  public round!: number;

  @prop({ required: true })
  public positiveKeys!: string[];

  @prop({ required: true })
  public negativeKeys!: string[];
}

=== File: middle-server/src/models/TaskRoundTime.ts ===

-- Chunk 1 --
// TaskRoundTime.ts:4-19
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class TaskRoundTime {
  @prop({ required: true })
  public taskId!: string;

  @prop({ required: true })
  public roundTimeInMS!: number;
}

=== File: middle-server/src/models/Summarizer.ts ===

-- Chunk 1 --
// Summarizer.ts:4-15
@modelOptions({
  schemaOptions: { collection: "summarizer_records" },
  existingConnection: builder247DB,
})
class SummarizerRecord {
  @prop({ required: true })
  public taskID!: string;
  @prop({ required: true })
  public roundNumber!: number;
  @prop({ required: true })
  public transactionHashs!: string[];
}

=== File: middle-server/src/models/BugFinder.ts ===

-- Chunk 1 --
// BugFinder.ts:3-21
class AssignedInfo {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public taskId!: string;

  @prop({ required: false })
  public githubUsername?: string;

  @prop({ required: false })
  public roundNumber?: number;

  @prop({ required: false })
  public prUrl?: string;

  @prop({ required: false })
  public auditResult?: boolean;
}

-- Chunk 2 --
// BugFinder.ts:32-69
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class BugFinder {
  @prop({ required: true })
  public repoOwner!: string;

  @prop({ required: true })
  public repoName!: string;

  @prop({ required: true })
  public swarmBountyId!: string;

  @prop({ required: false })
  public taskId?: string;

  @prop({ required: false })
  public stakingKey?: string;

  @prop({ required: false })
  public roundNumber?: number;

  @prop({ type: () => [AssignedInfo], default: [] })
  public assignedTo!: AssignedInfo[];

  @prop({
    enum: BugFinderStatus,
    default: BugFinderStatus.INITIALIZED,
    required: true,
  })
  public status!: BugFinderStatus;
}

=== File: middle-server/src/models/StarFollow.ts ===

-- Chunk 1 --
// StarFollow.ts:4-29
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class StarFollow {
  @prop({ required: true })
  public gitHubId!: string;

  @prop({ required: true })
  public stakingKey!: string;

  // Username is changable, so we store GitHubUsername as a backup
  @prop({ required: true })
  public gitHubUsername!: string;

  @prop({ required: false })
  public pendingRepos!: string[];

  @prop({ required: false })
  public completedRepos!: string[];
}

=== File: middle-server/src/models/Spec.ts ===

-- Chunk 1 --
// Spec.ts:3-18
class AssignedInfo {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public taskId!: string;

  @prop({ required: true })
  public roundNumber!: number;

  @prop({ required: false })
  public prUrl?: string;

  @prop({ required: false })
  public auditResult?: boolean;
}

-- Chunk 2 --
// Spec.ts:28-68
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class Spec {
  @prop({ required: true })
  public title!: string;

  @prop({ required: true })
  public description!: string;

  @prop({ required: true })
  public repoOwner!: string;

  @prop({ required: true })
  public repoName!: string;

  @prop({ required: true })
  public swarmBountyId!: string;

  @prop({ required: false })
  public taskId!: string;

  @prop({ required: false })
  public roundNumber!: number;

  @prop({ type: () => [AssignedInfo], default: [] })
  public assignedTo!: AssignedInfo[];

  @prop({
    enum: SpecStatus,
    default: SpecStatus.INITIALIZED,
    required: true,
  })
  public status!: SpecStatus;
}

=== File: middle-server/src/models/SystemPrompt.ts ===

-- Chunk 1 --
// SystemPrompt.ts:4-22
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class SystemPrompt {
  @prop({ required: true, unique: true })
  public bountyId!: string;

  @prop({ required: false, enum: SwarmBountyType })
  public bountyType?: SwarmBountyType;

  @prop({ required: true })
  public prompt!: string;
}

=== File: middle-server/src/models/Issue.ts ===

-- Chunk 1 --
// Issue.ts:17-40
class AssignedInfo {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public githubUsername!: string;
  @prop({ required: true })
  public roundNumber!: number;

  @prop({ required: false })
  public approved?: boolean;

  @prop({ required: false })
  public failedAuditReason?: string;

  @prop({ required: false })
  public failedAuditFeedback?: string;

  @prop({ required: false })
  public prUrl?: string;

  @prop({ default: true })
  public isFinal!: boolean;
}

-- Chunk 2 --
// Issue.ts:42-93
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },

  existingConnection: builder247DB,
})
class Issue {
  @prop({ required: true })
  public uuid!: string;

  @prop({ required: false })
  public title?: string;

  @prop({ required: false })
  public description?: string;

  @prop({ required: false, enum: SwarmBountyType })
  public bountyType?: SwarmBountyType;

  @prop({ required: true })
  public repoOwner!: string;

  @prop({ required: false })
  public bountyId?: string;

  @prop({ required: true })
  public repoName!: string;

  @prop({ required: false })
  public aggregatorOwner?: string;

  @prop({ required: false })
  public aggregatorUrl?: string;

  @prop({ required: false })
  public forkOwner?: string;

  @prop({ required: false })
  public forkUrl?: string;
  @prop({ required: false })
  public assignees?: AssignedInfo[];

  @prop({ required: true, enum: IssueStatus, default: IssueStatus.INITIALIZED })
  public status!: IssueStatus;

  @prop({ required: false })
  public predecessorUuid?: string; // UUID of the immediately previous issue in the chain
}

=== File: middle-server/src/models/BugFinderErrorLogs.ts ===

-- Chunk 1 --
// BugFinderErrorLogs.ts:4-10
class ErrorEntry {
  @prop({ required: true })
  public message!: string;

  @prop({ required: false, default: () => new Date() })
  public timestamp!: Date;
}

-- Chunk 2 --
// BugFinderErrorLogs.ts:11-30
@modelOptions({
  schemaOptions: {
    timestamps: true,
    expireAfterSeconds: 86400, // 24 hours in seconds
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class BugFinderErrorLogs {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public swarmBountyId!: string;

  @prop({ type: () => [ErrorEntry], default: [] })
  public errors!: ErrorEntry[];
}

=== File: middle-server/src/models/Documentation.ts ===

-- Chunk 1 --
// Documentation.ts:3-21
class AssignedInfo {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public taskId!: string;

  @prop({ required: false })
  public githubUsername?: string;

  @prop({ required: false })
  public roundNumber?: number;

  @prop({ required: false })
  public prUrl?: string;

  @prop({ required: false })
  public auditResult?: boolean;
}

-- Chunk 2 --
// Documentation.ts:33-73
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class Documentation {
  @prop({ required: true })
  public repoOwner!: string;

  @prop({ required: true })
  public repoName!: string;

  @prop({ required: false })
  public description?: string;

  @prop({ required: true })
  public swarmBountyId!: string;

  @prop({ required: false })
  public taskId?: string;

  @prop({ required: false })
  public stakingKey?: string;

  @prop({ required: false })
  public roundNumber?: number;

  @prop({ type: () => [AssignedInfo], default: [] })
  public assignedTo!: AssignedInfo[];

  @prop({
    enum: DocumentationStatus,
    default: DocumentationStatus.INITIALIZED,
    required: true,
  })
  public status!: DocumentationStatus;
}

=== File: middle-server/src/models/Audit.ts ===

-- Chunk 1 --
// Audit.ts:10-40
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class Audit {
  @prop({ required: true })
  public taskId!: string;

  @prop({ required: true })
  public roundNumber!: number;

  @prop({ enum: AuditStatus, default: AuditStatus.PENDING })
  public status!: AuditStatus;

  @prop({ default: 0 })
  public todosProcessed!: number;

  @prop({ default: 0 })
  public issuesProcessed!: number;

  @prop({ default: null })
  public error?: string;

  @prop({ required: false, enum: SwarmBountyType })
  public bountyType?: SwarmBountyType;
}

=== File: middle-server/src/models/DocumentationErrorLogs.ts ===

-- Chunk 1 --
// DocumentationErrorLogs.ts:4-23
@modelOptions({
  schemaOptions: {
    timestamps: true,
    expireAfterSeconds: 86400, // 24 hours in seconds
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class DocumentationErrorLogs {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public swarmBountyId!: string;

  @prop({ required: true })
  public error!: string[];
}

=== File: middle-server/src/models/Todo.ts ===

-- Chunk 1 --
// Todo.ts:24-47
class AssignedInfo {
  @prop({ required: true })
  public stakingKey!: string;

  @prop({ required: true })
  public githubUsername!: string;
  @prop({ required: true })
  public roundNumber!: number;

  @prop({ required: false })
  public approved?: boolean;

  @prop({ required: false })
  public failedReason?: string;

  @prop({ required: false })
  public failedFeedback?: string;

  @prop({ required: false })
  public prUrl?: string;

  @prop({ default: true })
  public isFinal!: boolean;
}

-- Chunk 2 --
// Todo.ts:49-99
@modelOptions({
  schemaOptions: {
    timestamps: true,
  },
  options: {
    allowMixed: Severity.ALLOW,
  },
  existingConnection: builder247DB,
})
class Todo {
  @prop({ required: true })
  public title!: string;

  @prop({ required: false, enum: SwarmBountyType })
  public bountyType?: SwarmBountyType;

  @prop({ required: true })
  public uuid!: string;

  @prop({ required: false })
  public bountyId?: string;

  @prop({ required: true })
  public issueUuid!: string;

  @prop({ required: true })
  public description!: string;

  @prop({ required: true, type: () => [String] })
  public acceptanceCriteria!: string[];

  @prop({ required: true })
  public repoOwner!: string;

  @prop({ required: true })
  public repoName!: string;

  @prop({ type: () => [String], default: [] })
  public dependencyTasks!: string[];

  @prop({ required: false })
  public assignees?: AssignedInfo[];

  @prop({
    type: String,
    enum: [...Object.values(TodoStatus), ...Object.values(DocumentationStatus)],
    default: TodoStatus.INITIALIZED,
    required: true,
  })
  public status!: TodoStatus | DocumentationStatus;
}

=== File: middle-server/src/controllers/summarizer/worker/addRoundNumber.ts ===

-- Chunk 1 --
// addRoundNumber.ts:10-23
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addRoundNumber.ts:26-54
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ prUrl: string; swarmBountyId: string | null } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== documentSummarizerTaskID ||
      body.action !== action ||
      !body.prUrl ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.swarmBountyId
    ) {
      return null;
    }
    return { prUrl: body.prUrl, swarmBountyId: body.swarmBountyId };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addRoundNumber.ts:55-121
async function updateAssignedInfoRoundNumber(
  stakingKey: string,
  prUrl: string,
  signature: string,
  roundNumber: number,
  swarmBountyId: string | null,
): Promise<{ statuscode: number; data: { success: boolean; message: string; swarmBountyId?: string } }> {
  if (!swarmBountyId) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to verify signature",
      },
    };
  }
  console.log("updateAssignedInfoRoundNumber", { stakingKey, prUrl, signature, roundNumber });
  console.log({
    taskId: documentSummarizerTaskID,
    stakingKey: stakingKey,
    prUrl: prUrl,
    roundNumber: roundNumber,
  });
  const result = await DocumentationModel.findOneAndUpdate(
    {
      taskId: documentSummarizerTaskID,
      stakingKey: stakingKey,
      roundNumber: { $exists: false },
      assignedTo: {
        $elemMatch: {
          taskId: documentSummarizerTaskID,
          stakingKey: stakingKey,
          prUrl: prUrl,
          roundNumber: { $exists: false },
        },
      },
    },
    {
      $set: {
        roundNumber: roundNumber - 1,
        "assignedTo.$.roundNumber": roundNumber - 1,
        status: DocumentationStatus.IN_REVIEW,
      },
    },
  )
    .select("_id")
    .lean();
  console.log("prUrl update result", result);

  if (result !== null) {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "Round number added",
        swarmBountyId: result?.swarmBountyId,
      },
    };
  }
  return {
    statuscode: 401,
    data: {
      success: false,
      message: "Failed to add round number",
    },
  };
}

-- Chunk 4 --
// addRoundNumber.ts:123-152
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-round-number");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(documentSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addRoundNumberLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addRoundNumber.ts:154-180
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { prUrl: string; swarmBountyId: string | null },
) => {
  // console.log("prUrl", signatureData.prUrl);
  const roundNumber = await getCurrentRound(documentSummarizerTaskID);
  if (roundNumber === null || roundNumber === undefined) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to get current round",
      },
    };
  }
  const result = await updateAssignedInfoRoundNumber(
    requestBody.stakingKey,
    signatureData.prUrl,
    requestBody.signature,
    roundNumber,
    signatureData.swarmBountyId,
  );
  if (result.data.swarmBountyId && process.env.NODE_ENV !== "development") {
    await updateSwarmBountyStatus(result.data.swarmBountyId, SwarmBountyStatus.AUDITING);
  }
  return result;
}

=== File: middle-server/src/controllers/summarizer/worker/addTodoDraftPR.ts ===

-- Chunk 1 --
// addTodoDraftPR.ts:9-22
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addTodoDraftPR.ts:25-53
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ prUrl: string; swarmBountyId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== documentSummarizerTaskID ||
      body.action !== action ||
      !body.prUrl ||
      !body.stakingKey ||
      !body.swarmBountyId ||
      body.stakingKey !== stakingKey
    ) {
      return null;
    }
    return { prUrl: body.prUrl, swarmBountyId: body.swarmBountyId };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addTodoDraftPR.ts:54-112
async function updateAssignedInfoPrUrl(
  stakingKey: string,
  prUrl: string,
  swarmBountyId: string,
  // signature: string,
): Promise<{ statuscode: number; data: { success: boolean; message: string; swarmBountyId?: string } }> {
  console.log("updateAssignedInfoWithIPFS", { stakingKey, prUrl, swarmBountyId });
  console.log({
    taskId: documentSummarizerTaskID,
    stakingKey: stakingKey,
    swarmBountyId: swarmBountyId,
    assignedTo: {
      $elemMatch: {
        taskId: documentSummarizerTaskID,
        stakingKey: stakingKey,
      },
    },
  });
  const result = await DocumentationModel.findOneAndUpdate(
    {
      taskId: documentSummarizerTaskID,
      stakingKey: stakingKey,
      swarmBountyId: swarmBountyId,
      assignedTo: {
        $elemMatch: {
          taskId: documentSummarizerTaskID,
          stakingKey: stakingKey,
        },
      },
    },
    {
      $set: { "assignedTo.$.prUrl": prUrl, status: DocumentationStatus.PR_RECEIVED },
      $unset: {
        roundNumber: "",
      },
    },
  )
    .select("_id")
    .lean();
  console.log("prUrl update result", result);

  if (result !== null) {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "PR URL updated",
        swarmBountyId: swarmBountyId,
      },
    };
  }
  return {
    statuscode: 401,
    data: {
      success: false,
      message: "Failed to update PR URL",
    },
  };
}

-- Chunk 4 --
// addTodoDraftPR.ts:114-143
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-todo-draft-pr");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(documentSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addPRUrlLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addTodoDraftPR.ts:145-160
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { prUrl: string; swarmBountyId: string },
) => {
  console.log("prUrl", signatureData.prUrl);
  const result = await updateAssignedInfoPrUrl(
    requestBody.stakingKey,
    signatureData.prUrl,
    signatureData.swarmBountyId,
    // requestBody.signature,
  );
  if (result.data.swarmBountyId && process.env.NODE_ENV !== "development") {
    await updateSwarmBountyStatus(result.data.swarmBountyId, SwarmBountyStatus.AUDITING);
  }
  return result;
}

=== File: middle-server/src/controllers/summarizer/worker/addTodoStatus.ts ===

-- Chunk 1 --
// addTodoStatus.ts:9-22
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addTodoStatus.ts:25-52
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ SwarmBountyId: string | null }> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return { SwarmBountyId: null };
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== documentSummarizerTaskID ||
      body.action !== action ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.swarmBountyId
    ) {
      return { SwarmBountyId: null };
    }
    return { SwarmBountyId: body.swarmBountyId };
  } catch {
    return { SwarmBountyId: null };
  }
}

-- Chunk 3 --
// addTodoStatus.ts:53-77
async function updateTaskStatus(stakingKey: string, signature: string, swarmBountyId: string): Promise<boolean> {
  console.log("updateAssignedInfoWithIPFS", { stakingKey, signature, swarmBountyId });
  const result = await DocumentationModel.findOneAndUpdate(
    {
      assignedTo: {
        $elemMatch: {
          taskId: documentSummarizerTaskID,
          stakingKey: stakingKey,
          swarmBountyId: swarmBountyId,
        },
      },
    },
    {
      $set: { status: DocumentationStatus.INITIALIZED },
      $unset: {
        taskId: "",
        stakingKey: "",
        roundNumber: "",
      },
    },
  )
    .select("_id")
    .lean();
  return result !== null;
}

-- Chunk 4 --
// addTodoStatus.ts:79-108
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-todo-status");
  if (!signatureData.SwarmBountyId) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(documentSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addStatusLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addTodoStatus.ts:110-141
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { SwarmBountyId: string | null },
) => {
  if (!signatureData.SwarmBountyId) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to verify signature",
      },
    };
  }
  const result = await updateTaskStatus(requestBody.stakingKey, requestBody.signature, signatureData.SwarmBountyId);
  if (!result) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to update status",
      },
    };
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Status updated",
    },
  };
}

=== File: middle-server/src/controllers/summarizer/worker/checkTodo.ts ===

-- Chunk 1 --
// checkTodo.ts:6-26
function verifyRequestBody(req: Request): {
  stakingKey: string;
  roundNumber: string; // remove roundNumber to use time based
  githubUsername: string;
  prUrl: string;
} | null {
  try {
    console.log("Request body:", req.body);

    const stakingKey = req.body.stakingKey as string;
    const roundNumber = req.body.roundNumber as string;
    const githubUsername = req.body.githubUsername as string;
    const prUrl = req.body.prUrl as string;
    if (!stakingKey || !githubUsername || !prUrl) {
      return null;
    }
    return { stakingKey, roundNumber, githubUsername, prUrl };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// checkTodo.ts:28-61
async function checkToDoAssignment(
  stakingKey: string,
  roundNumber: string,
  githubUsername: string,
  prUrl: string,
): Promise<boolean> {
  try {
    const data = {
      stakingKey,
      roundNumber,
      githubUsername,
      prUrl,
      taskId: documentSummarizerTaskID,
    };
    console.log("Data:", data);
    // WE SHOULD NOT CHECK THE LIVE ROUND NUMBER, BECAUSE WE NEED TO PAY IF DISTRIBUTION LATE
    const result = await DocumentationModel.findOne({
      assignedTo: {
        $elemMatch: {
          stakingKey: stakingKey,
          taskId: documentSummarizerTaskID,
          prUrl: prUrl,
          roundNumber: Number(roundNumber),
        },
      },
    });

    console.log("Todo assignment check result:", result);
    return result !== null;
  } catch (error) {
    console.error("Error checking todo assignment:", error);
    return false;
  }
}

-- Chunk 3 --
// checkTodo.ts:63-91
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }
  const isValid = await checkToDoAssignment(
    requestBody.stakingKey,
    requestBody.roundNumber,
    requestBody.githubUsername,
    requestBody.prUrl,
  );

  if (!isValid) {
    res.status(409).json({
      success: false,
      message: "No matching todo assignment found",
    });
    return;
  }

  res.status(200).json({
    success: true,
    message: "Todo assignment verified successfully",
  });
}

=== File: middle-server/src/controllers/summarizer/worker/fetchTodo.ts ===

-- Chunk 1 --
// fetchTodo.ts:14-37
async function checkExistingAssignment(stakingKey: string) {
  try {
    const result = await DocumentationModel.findOne({
      taskId: documentSummarizerTaskID,
      stakingKey: stakingKey,
      status: { $nin: [DocumentationStatus.DONE, DocumentationStatus.FAILED] },
    }).lean();

    if (!result) return null;

    // Find the specific assignment entry
    const assignment = result.assignedTo.find(
      (a: any) => a.stakingKey === stakingKey && a.taskId === documentSummarizerTaskID,
    );

    return {
      spec: result,
      hasPR: Boolean(assignment?.prUrl),
    };
  } catch (error) {
    console.error("Error checking assigned info:", error);
    return null;
  }
}

-- Chunk 2 --
// fetchTodo.ts:38-50
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }
    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// fetchTodo.ts:51-80
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ githubUsername: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return null;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    if (
      !body.taskId ||
      body.taskId !== documentSummarizerTaskID ||
      body.action !== action ||
      !body.githubUsername ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey
    ) {
      console.log("bad signature data");
      return null;
    }
    return { githubUsername: body.githubUsername };
  } catch (error) {
    console.log("unexpected signature error", error);
    return null;
  }
}

-- Chunk 4 --
// fetchTodo.ts:81-86
async () => {
  // if (process.env.NODE_ENV !== "development") {
  //   await syncDB();
  // }
  await updateFailedPlannerTask();
}

-- Chunk 5 --
// fetchTodo.ts:87-107
async () => {
  const docs = await DocumentationModel.find({
    assignedTo: { $size: 5 },
    status: { $nin: [DocumentationStatus.DONE, DocumentationStatus.FAILED] },
  });
  for (const doc of docs) {
    for (const assignee of doc.assignedTo) {
      if (assignee.prUrl) {
        doc.status = DocumentationStatus.DONE;
        break;
      }
    }
    if (doc.status !== DocumentationStatus.DONE) {
      doc.status = DocumentationStatus.FAILED;
      if (process.env.NODE_ENV !== "development") {
        await updateSwarmBountyStatus(doc.swarmBountyId, SwarmBountyStatus.FAILED);
      }
    }
    await doc.save();
  }
}

-- Chunk 6 --
// fetchTodo.ts:109-137
async (req: Request, res: Response) => {
  const requestBody: { signature: string; stakingKey: string } | null = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "fetch-todo");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(documentSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }
  const response = await fetchTodoLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 7 --
// fetchTodo.ts:139-288
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { githubUsername: string },
): Promise<{ statuscode: number; data: any }> => {
  await preProcessTodoLogic();
  const existingAssignment = await checkExistingAssignment(requestBody.stakingKey);
  if (existingAssignment) {
    if (existingAssignment.hasPR) {
      return {
        statuscode: 401,
        data: {
          success: false,
          message: "Task already completed",
        },
      };
    } else {
      return {
        statuscode: 200,
        data: {
          success: true,
          role: "worker",
          data: {
            id: existingAssignment.spec.swarmBountyId.toString(),
            repo_owner: existingAssignment.spec.repoOwner,
            repo_name: existingAssignment.spec.repoName,
          },
        },
      };
    }
  }

  try {
    const roundTimeInMS = await getRoundTime(documentSummarizerTaskID);
    if (!roundTimeInMS) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "Failed to get round time",
        },
      };
    }
    const currentRound = await getCurrentRound(documentSummarizerTaskID);
    if (currentRound === null || currentRound === undefined) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "Failed to get current round",
        },
      };
    }
    /**
     * The design of the task assignment is like ACL...
     */
    const updatedTodo = await DocumentationModel.findOneAndUpdate(
      {
        // Not assigned to the nodes that have already attempted the task
        $nor: [
          { status: { $in: [DocumentationStatus.DONE, DocumentationStatus.FAILED] } },
          { "assignedTo.stakingKey": requestBody.stakingKey },
          { "assignedTo.githubUsername": signatureData.githubUsername },
        ],
        $or: [
          // Condition: If Documentation Status is Initialized, then it should be assigned to the user
          { $and: [{ status: DocumentationStatus.INITIALIZED }] },
          // Condition: If Documentation Status is IN_PROGRESS, and it takes more than 1 round to be PR_RECEIVED, then it should be assigned to the user
          {
            $and: [
              { status: DocumentationStatus.IN_PROGRESS },
              { updatedAt: { $lt: new Date(Date.now() - roundTimeInMS) } },
            ],
          },
          // Condition: If Documentation status is DRAFT_PR_RECEIVED, and it takes more than 1 round to be PR_RECEIVED, then it should be assigned to the user
          {
            $and: [
              { status: DocumentationStatus.DRAFT_PR_RECEIVED },
              { updatedAt: { $lt: new Date(Date.now() - roundTimeInMS) } },
            ],
          },
          {
            $and: [
              { status: DocumentationStatus.PR_RECEIVED },
              { updatedAt: { $lt: new Date(Date.now() - roundTimeInMS) } },
            ],
          },
          // Condition: If Documentation status is IN_REVIEW, and it takes more than 4 rounds to be DONE, then it should be assigned to the new user
          {
            $and: [{ status: DocumentationStatus.IN_REVIEW }, { roundNumber: { $lt: currentRound - 4 } }],
          },
          // Condition: If Documentation Assigned to previous task, and it is not done or failed, then it should be assigned to the user

          { taskId: { $ne: documentSummarizerTaskID } },
        ],
      },
      {
        $push: {
          assignedTo: {
            stakingKey: requestBody.stakingKey,
            taskId: documentSummarizerTaskID,
            githubUsername: signatureData.githubUsername,
            todoSignature: requestBody.signature,
          },
        },
        $set: {
          status: DocumentationStatus.IN_PROGRESS,
          taskId: documentSummarizerTaskID,
          stakingKey: requestBody.stakingKey,
        },
        $unset: {
          roundNumber: "",
        },
      },
      { new: true },
    )
      .sort({ createdAt: 1 })
      .exec();

    if (!updatedTodo) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "No available todos found",
        },
      };
    }
    try {
      if (process.env.NODE_ENV !== "development") {
        await updateSwarmBountyStatus(updatedTodo.swarmBountyId, SwarmBountyStatus.ASSIGNED);
      }
    } catch (error) {
      console.error("Error updating swarm bounty status:", error);
    }
    // Validate required data fields
    if (!updatedTodo.repoOwner || !updatedTodo.repoName) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Todo data is incomplete",
        },
      };
    }

    return {
      statuscode: 200,
      data: {
        success: true,
        role: "worker",

-- Chunk 8 --
// fetchTodo.ts:289-306
        data: {
          id: updatedTodo.swarmBountyId.toString(),
          repo_owner: updatedTodo.repoOwner,
          repo_name: updatedTodo.repoName,
        },
      },
    };
  } catch (error) {
    console.error("Error fetching todos:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Failed to fetch todos",
      },
    };
  }
}

=== File: middle-server/src/controllers/summarizer/worker/addTodoPR.ts ===

-- Chunk 1 --
// addTodoPR.ts:9-22
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addTodoPR.ts:25-53
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ prUrl: string; swarmBountyId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== documentSummarizerTaskID ||
      body.action !== action ||
      !body.prUrl ||
      !body.stakingKey ||
      !body.swarmBountyId ||
      body.stakingKey !== stakingKey
    ) {
      return null;
    }
    return { prUrl: body.prUrl, swarmBountyId: body.swarmBountyId };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addTodoPR.ts:54-112
async function updateAssignedInfoPrUrl(
  stakingKey: string,
  prUrl: string,
  swarmBountyId: string,
  // signature: string,
): Promise<{ statuscode: number; data: { success: boolean; message: string; swarmBountyId?: string } }> {
  console.log("updateAssignedInfoWithIPFS", { stakingKey, prUrl, swarmBountyId });
  console.log({
    taskId: documentSummarizerTaskID,
    stakingKey: stakingKey,
    swarmBountyId: swarmBountyId,
    assignedTo: {
      $elemMatch: {
        taskId: documentSummarizerTaskID,
        stakingKey: stakingKey,
      },
    },
  });
  const result = await DocumentationModel.findOneAndUpdate(
    {
      taskId: documentSummarizerTaskID,
      stakingKey: stakingKey,
      swarmBountyId: swarmBountyId,
      assignedTo: {
        $elemMatch: {
          taskId: documentSummarizerTaskID,
          stakingKey: stakingKey,
        },
      },
    },
    {
      $set: { "assignedTo.$.prUrl": prUrl, status: DocumentationStatus.PR_RECEIVED },
      $unset: {
        roundNumber: "",
      },
    },
  )
    .select("_id")
    .lean();
  console.log("prUrl update result", result);

  if (result !== null) {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "PR URL updated",
        swarmBountyId: swarmBountyId,
      },
    };
  }
  return {
    statuscode: 401,
    data: {
      success: false,
      message: "Failed to update PR URL",
    },
  };
}

-- Chunk 4 --
// addTodoPR.ts:114-143
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-todo-pr");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(documentSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addPRUrlLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addTodoPR.ts:145-160
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { prUrl: string; swarmBountyId: string },
) => {
  console.log("prUrl", signatureData.prUrl);
  const result = await updateAssignedInfoPrUrl(
    requestBody.stakingKey,
    signatureData.prUrl,
    signatureData.swarmBountyId,
    // requestBody.signature,
  );
  if (result.data.swarmBountyId && process.env.NODE_ENV !== "development") {
    await updateSwarmBountyStatus(result.data.swarmBountyId, SwarmBountyStatus.AUDITING);
  }
  return result;
}

=== File: middle-server/src/controllers/summarizer/worker/addFailedInfo.ts ===

-- Chunk 1 --
// addFailedInfo.ts:4-18
async (stakingKey: string, swarmBountyId: string, error: string) => {
  try {
    const documentationErrorLogs = await DocumentationErrorLogsModel.findOne({ stakingKey, swarmBountyId });
    if (documentationErrorLogs) {
      documentationErrorLogs.error.push(error);
      await documentationErrorLogs.save();
    } else {
      const newDocumentationErrorLogs = new DocumentationErrorLogsModel({ stakingKey, swarmBountyId, error: [error] });
      await newDocumentationErrorLogs.save();
    }
  } catch (err) {
    console.error("Error adding failed info:", err);
    throw err;
  }
}

-- Chunk 2 --
// addFailedInfo.ts:20-36
async (req: Request, res: Response) => {
  try {
    const { stakingKey, swarmBountyId, error } = req.body;
    // check if stakingKey and error already in the DB
    const existingFailedInfo = await DocumentationErrorLogsModel.findOne({ stakingKey, error });
    if (existingFailedInfo) {
      res.status(200).json({ message: "Failed info already exists" });
      return;
    }

    await addFailedInfo(stakingKey, swarmBountyId, error);
    res.status(200).json({ message: "Failed info added" });
  } catch (err) {
    console.error("Error in addFailedInfoRequest:", err);
    res.status(500).json({ error: "Failed to add error information" });
  }
}

=== File: middle-server/src/controllers/bug-finder/worker/addRoundNumber.ts ===

-- Chunk 1 --
// addRoundNumber.ts:10-23
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addRoundNumber.ts:26-54
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ prUrl: string; swarmBountyId: string | null } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== bugFinderSummarizerTaskID ||
      body.action !== action ||
      !body.prUrl ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.swarmBountyId
    ) {
      return null;
    }
    return { prUrl: body.prUrl, swarmBountyId: body.swarmBountyId };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addRoundNumber.ts:55-121
async function updateAssignedInfoRoundNumber(
  stakingKey: string,
  prUrl: string,
  signature: string,
  roundNumber: number,
  swarmBountyId: string | null,
): Promise<{ statuscode: number; data: { success: boolean; message: string; swarmBountyId?: string } }> {
  if (!swarmBountyId) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to verify signature",
      },
    };
  }
  console.log("updateAssignedInfoRoundNumber", { stakingKey, prUrl, signature, roundNumber });
  console.log({
    taskId: bugFinderSummarizerTaskID,
    stakingKey: stakingKey,
    prUrl: prUrl,
    roundNumber: roundNumber,
  });
  const result = await BugFinderModel.findOneAndUpdate(
    {
      taskId: bugFinderSummarizerTaskID,
      stakingKey: stakingKey,
      roundNumber: { $exists: false },
      assignedTo: {
        $elemMatch: {
          taskId: bugFinderSummarizerTaskID,
          stakingKey: stakingKey,
          prUrl: prUrl,
          roundNumber: { $exists: false },
        },
      },
    },
    {
      $set: {
        roundNumber: roundNumber - 1,
        "assignedTo.$.roundNumber": roundNumber - 1,
        status: BugFinderStatus.IN_REVIEW,
      },
    },
  )
    .select("_id")
    .lean();
  console.log("prUrl update result", result);

  if (result !== null) {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "Round number added",
        swarmBountyId: result?.swarmBountyId,
      },
    };
  }
  return {
    statuscode: 401,
    data: {
      success: false,
      message: "Failed to add round number",
    },
  };
}

-- Chunk 4 --
// addRoundNumber.ts:123-152
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-round-number");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(bugFinderSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addRoundNumberLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addRoundNumber.ts:154-180
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { prUrl: string; swarmBountyId: string | null },
) => {
  // console.log("prUrl", signatureData.prUrl);
  const roundNumber = await getCurrentRound(bugFinderSummarizerTaskID);
  if (roundNumber === null || roundNumber === undefined) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to get current round",
      },
    };
  }
  const result = await updateAssignedInfoRoundNumber(
    requestBody.stakingKey,
    signatureData.prUrl,
    requestBody.signature,
    roundNumber,
    signatureData.swarmBountyId,
  );
  if (result.data.swarmBountyId && process.env.NODE_ENV !== "development") {
    await updateSwarmBountyStatus(result.data.swarmBountyId, SwarmBountyStatus.AUDITING);
  }
  return result;
}

=== File: middle-server/src/controllers/bug-finder/worker/addTodoStatus.ts ===

-- Chunk 1 --
// addTodoStatus.ts:9-22
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addTodoStatus.ts:25-52
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ SwarmBountyId: string | null }> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return { SwarmBountyId: null };
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== bugFinderSummarizerTaskID ||
      body.action !== action ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.swarmBountyId
    ) {
      return { SwarmBountyId: null };
    }
    return { SwarmBountyId: body.swarmBountyId };
  } catch {
    return { SwarmBountyId: null };
  }
}

-- Chunk 3 --
// addTodoStatus.ts:53-77
async function updateTaskStatus(stakingKey: string, signature: string, swarmBountyId: string): Promise<boolean> {
  console.log("updateAssignedInfoWithIPFS", { stakingKey, signature, swarmBountyId });
  const result = await BugFinderModel.findOneAndUpdate(
    {
      assignedTo: {
        $elemMatch: {
          taskId: bugFinderSummarizerTaskID,
          stakingKey: stakingKey,
          swarmBountyId: swarmBountyId,
        },
      },
    },
    {
      $set: { status: BugFinderStatus.INITIALIZED },
      $unset: {
        taskId: "",
        stakingKey: "",
        roundNumber: "",
      },
    },
  )
    .select("_id")
    .lean();
  return result !== null;
}

-- Chunk 4 --
// addTodoStatus.ts:79-108
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-todo-status");
  if (!signatureData.SwarmBountyId) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(bugFinderSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addStatusLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addTodoStatus.ts:110-141
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { SwarmBountyId: string | null },
) => {
  if (!signatureData.SwarmBountyId) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to verify signature",
      },
    };
  }
  const result = await updateTaskStatus(requestBody.stakingKey, requestBody.signature, signatureData.SwarmBountyId);
  if (!result) {
    return {
      statuscode: 401,
      data: {
        success: false,
        message: "Failed to update status",
      },
    };
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Status updated",
    },
  };
}

=== File: middle-server/src/controllers/bug-finder/worker/checkTodo.ts ===

-- Chunk 1 --
// checkTodo.ts:6-26
function verifyRequestBody(req: Request): {
  stakingKey: string;
  roundNumber: string; // remove roundNumber to use time based
  githubUsername: string;
  prUrl: string;
} | null {
  try {
    console.log("Request body:", req.body);

    const stakingKey = req.body.stakingKey as string;
    const roundNumber = req.body.roundNumber as string;
    const githubUsername = req.body.githubUsername as string;
    const prUrl = req.body.prUrl as string;
    if (!stakingKey || !githubUsername || !prUrl) {
      return null;
    }
    return { stakingKey, roundNumber, githubUsername, prUrl };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// checkTodo.ts:28-61
async function checkToDoAssignment(
  stakingKey: string,
  roundNumber: string,
  githubUsername: string,
  prUrl: string,
): Promise<boolean> {
  try {
    const data = {
      stakingKey,
      roundNumber,
      githubUsername,
      prUrl,
      taskId: bugFinderSummarizerTaskID,
    };
    console.log("Data:", data);
    // WE SHOULD NOT CHECK THE LIVE ROUND NUMBER, BECAUSE WE NEED TO PAY IF DISTRIBUTION LATE
    const result = await BugFinderModel.findOne({
      assignedTo: {
        $elemMatch: {
          stakingKey: stakingKey,
          taskId: bugFinderSummarizerTaskID,
          prUrl: prUrl,
          roundNumber: Number(roundNumber),
        },
      },
    });

    console.log("Todo assignment check result:", result);
    return result !== null;
  } catch (error) {
    console.error("Error checking todo assignment:", error);
    return false;
  }
}

-- Chunk 3 --
// checkTodo.ts:63-91
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }
  const isValid = await checkToDoAssignment(
    requestBody.stakingKey,
    requestBody.roundNumber,
    requestBody.githubUsername,
    requestBody.prUrl,
  );

  if (!isValid) {
    res.status(409).json({
      success: false,
      message: "No matching todo assignment found",
    });
    return;
  }

  res.status(200).json({
    success: true,
    message: "Todo assignment verified successfully",
  });
}

=== File: middle-server/src/controllers/bug-finder/worker/addLog.ts ===

-- Chunk 1 --
// addLog.ts:6-24
async (stakingKey: string, swarmBountyId: string, error: string) => {
  try {
    const bugFinderErrorLogs = await BugFinderErrorLogsModel.findOne({ stakingKey, swarmBountyId });
    if (bugFinderErrorLogs) {
      bugFinderErrorLogs.errors.push({ message: error, timestamp: new Date() });
      await bugFinderErrorLogs.save();
    } else {
      const newBugFinderErrorLogs = new BugFinderErrorLogsModel({
        stakingKey,
        swarmBountyId,
        errors: [{ message: error, timestamp: new Date() }],
      });
      await newBugFinderErrorLogs.save();
    }
  } catch (err) {
    console.error("Error adding failed info:", err);
    throw err;
  }
}

-- Chunk 2 --
// addLog.ts:26-44
async (stakingKey: string, swarmBountyId: string, logMessage: string, logLevel: string) => {
  try {
    const bugFinderLogs = await BugFinderLogsModel.findOne({ stakingKey, swarmBountyId });
    if (bugFinderLogs) {
      bugFinderLogs.logs.push({ level: logLevel, message: logMessage, timestamp: new Date() });
      await bugFinderLogs.save();
    } else {
      const newBugFinderLogs = new BugFinderLogsModel({
        stakingKey,
        swarmBountyId,
        logs: [{ level: logLevel, message: logMessage, timestamp: new Date() }],
      });
      await newBugFinderLogs.save();
    }
  } catch (err) {
    console.error("Error adding failed info:", err);
    throw err;
  }
}

-- Chunk 3 --
// addLog.ts:46-76
async (req: Request, res: Response) => {
  try {
    const { stakingKey, swarmBountyId, error: errorMessage, signature } = req.body;

    // Verify Signature
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return res.status(400).json({ message: "Invalid signature error" });
    }
    const parsedData = JSON.parse(data);
    if (stakingKey !== parsedData.stakingKey) {
      return res.status(400).json({ message: "Signature error - unparseable data" });
    }
    // check if stakingKey and error already in the DB
    const existingFailedInfo = await BugFinderErrorLogsModel.findOne({
      stakingKey,
      swarmBountyId,
      "errors.message": errorMessage,
    });
    if (existingFailedInfo) {
      res.status(200).json({ message: "Failed info already exists" });
      return;
    }
    await addErrorLog(stakingKey, swarmBountyId, errorMessage);
    res.status(200).json({ message: "Failed info added" });
  } catch (err) {
    console.error("Error in addErrorLogToDB:", err);
    res.status(500).json({ error: "Failed to add Error log to db" });
  }
}

-- Chunk 4 --
// addLog.ts:78-110
async (req: Request, res: Response) => {
  try {
    const { stakingKey, swarmBountyId, logMessage, logLevel, signature } = req.body;

    // console.log("addLogToDB", { stakingKey, swarmBountyId, logMessage, logLevel, signature });
    // Verify Signature
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const parsedData = JSON.parse(data);
    if (stakingKey !== parsedData.stakingKey) {
      return res.status(400).json({ message: "Signature error - unparseable data" });
    }

    // check if stakingKey and error already in the DB
    const existingFailedInfo = await BugFinderLogsModel.findOne({
      stakingKey,
      swarmBountyId,
      "logs.message": logMessage,
    });
    if (existingFailedInfo) {
      res.status(200).json({ message: "logMessage already exists" });
      return;
    }
    await addLog(stakingKey, swarmBountyId, logMessage, logLevel);
    res.status(200).json({ message: "logMessage added" });
  } catch (err) {
    console.error("Error in addLogToDB:", err);
    res.status(500).json({ error: "Failed to add logMessage" });
  }
}

=== File: middle-server/src/controllers/bug-finder/worker/fetchTodo.ts ===

-- Chunk 1 --
// fetchTodo.ts:14-37
async function checkExistingAssignment(stakingKey: string) {
  try {
    const result = await BugFinderModel.findOne({
      taskId: bugFinderSummarizerTaskID,
      stakingKey: stakingKey,
      status: { $nin: [BugFinderStatus.DONE, BugFinderStatus.FAILED] },
    }).lean();

    if (!result) return null;

    // Find the specific assignment entry
    const assignment = result.assignedTo.find(
      (a: any) => a.stakingKey === stakingKey && a.taskId === bugFinderSummarizerTaskID,
    );

    return {
      spec: result,
      hasPR: Boolean(assignment?.prUrl),
    };
  } catch (error) {
    console.error("Error checking assigned info:", error);
    return null;
  }
}

-- Chunk 2 --
// fetchTodo.ts:38-50
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }
    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// fetchTodo.ts:51-80
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ githubUsername: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return null;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    if (
      !body.taskId ||
      body.taskId !== bugFinderSummarizerTaskID ||
      body.action !== action ||
      !body.githubUsername ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey
    ) {
      console.log("bad signature data");
      return null;
    }
    return { githubUsername: body.githubUsername };
  } catch (error) {
    console.log("unexpected signature error", error);
    return null;
  }
}

-- Chunk 4 --
// fetchTodo.ts:81-86
async () => {
  // if (process.env.NODE_ENV !== "development") {
  //   await syncDB();
  // }
  await updateFailedPlannerTask();
}

-- Chunk 5 --
// fetchTodo.ts:87-107
async () => {
  const docs = await BugFinderModel.find({
    assignedTo: { $size: 5 },
    status: { $nin: [BugFinderStatus.DONE, BugFinderStatus.FAILED] },
  });
  for (const doc of docs) {
    for (const assignee of doc.assignedTo) {
      if (assignee.prUrl) {
        doc.status = BugFinderStatus.DONE;
        break;
      }
    }
    if (doc.status !== BugFinderStatus.DONE) {
      doc.status = BugFinderStatus.FAILED;
      if (process.env.NODE_ENV !== "development") {
        await updateSwarmBountyStatus(doc.swarmBountyId, SwarmBountyStatus.FAILED);
      }
    }
    await doc.save();
  }
}

-- Chunk 6 --
// fetchTodo.ts:109-137
async (req: Request, res: Response) => {
  const requestBody: { signature: string; stakingKey: string } | null = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "fetch-todo");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(bugFinderSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }
  const response = await fetchTodoLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 7 --
// fetchTodo.ts:139-288
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { githubUsername: string },
): Promise<{ statuscode: number; data: any }> => {
  await preProcessTodoLogic();
  const existingAssignment = await checkExistingAssignment(requestBody.stakingKey);
  if (existingAssignment) {
    if (existingAssignment.hasPR) {
      return {
        statuscode: 401,
        data: {
          success: false,
          message: "Task already completed",
        },
      };
    } else {
      return {
        statuscode: 200,
        data: {
          success: true,
          role: "worker",
          data: {
            id: existingAssignment.spec.swarmBountyId.toString(),
            repo_owner: existingAssignment.spec.repoOwner,
            repo_name: existingAssignment.spec.repoName,
          },
        },
      };
    }
  }

  try {
    const roundTimeInMS = await getRoundTime(bugFinderSummarizerTaskID);
    if (!roundTimeInMS) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "Failed to get round time",
        },
      };
    }
    const currentRound = await getCurrentRound(bugFinderSummarizerTaskID);
    if (currentRound === null || currentRound === undefined) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "Failed to get current round",
        },
      };
    }

    const updatedTodo = await BugFinderModel.findOneAndUpdate(
      {
        // Not assigned to the nodes that have already attempted the task
        $nor: [
          { status: { $in: [BugFinderStatus.DONE, BugFinderStatus.FAILED] } },
          { "assignedTo.stakingKey": requestBody.stakingKey },
          { "assignedTo.githubUsername": signatureData.githubUsername },
        ],
        $or: [
          // Condition: If Documentation Status is Initialized, then it should be assigned to the user
          { $and: [{ status: BugFinderStatus.INITIALIZED }] },
          // Condition: If Documentation Status is IN_PROGRESS, and it takes more than 2 round to be PR_RECEIVED, then it should be assigned to the user
          {
            $and: [
              { status: BugFinderStatus.IN_PROGRESS },
              { updatedAt: { $lt: new Date(Date.now() - roundTimeInMS * 2) } },
            ],
          },
          // Condition: If Documentation status is PR_RECEIVED, and it takes more than 2 round to be IN_REVIEW, then it should be assigned to the user
          {
            $and: [
              { status: BugFinderStatus.PR_RECEIVED },
              { updatedAt: { $lt: new Date(Date.now() - roundTimeInMS * 2) } },
            ],
          },
          // Condition: If Documentation status is IN_REVIEW, and it takes more than 4 rounds to be DONE, then it should be assigned to the new user
          {
            $and: [{ status: BugFinderStatus.IN_REVIEW }, { roundNumber: { $lt: currentRound - 4 } }],
          },
          // Condition: If Documentation Assigned to previous task, and it is not done or failed, then it should be assigned to the user

          { taskId: { $ne: bugFinderSummarizerTaskID } },
        ],
      },
      {
        $push: {
          assignedTo: {
            stakingKey: requestBody.stakingKey,
            taskId: bugFinderSummarizerTaskID,
            githubUsername: signatureData.githubUsername,
            todoSignature: requestBody.signature,
          },
        },
        $set: {
          status: BugFinderStatus.IN_PROGRESS,
          taskId: bugFinderSummarizerTaskID,
          stakingKey: requestBody.stakingKey,
        },
        $unset: {
          roundNumber: "",
        },
      },
      { new: true },
    )
      .sort({ createdAt: 1 })
      .exec();

    if (!updatedTodo) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "No available todos found",
        },
      };
    }
    try {
      if (process.env.NODE_ENV !== "development") {
        await updateSwarmBountyStatus(updatedTodo.swarmBountyId, SwarmBountyStatus.ASSIGNED);
      }
    } catch (error) {
      console.error("Error updating swarm bounty status:", error);
    }
    // Validate required data fields
    if (!updatedTodo.repoOwner || !updatedTodo.repoName) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Todo data is incomplete",
        },
      };
    }

    return {
      statuscode: 200,
      data: {
        success: true,
        role: "worker",
        data: {
          id: updatedTodo.swarmBountyId.toString(),
          repo_owner: updatedTodo.repoOwner,
          repo_name: updatedTodo.repoName,
        },
      },
    };
  } catch (error) {

-- Chunk 8 --
// fetchTodo.ts:289-298
    console.error("Error fetching todos:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Failed to fetch todos",
      },
    };
  }
}

=== File: middle-server/src/controllers/bug-finder/worker/addTodoPR.ts ===

-- Chunk 1 --
// addTodoPR.ts:9-22
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addTodoPR.ts:25-53
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ prUrl: string; swarmBountyId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== bugFinderSummarizerTaskID ||
      body.action !== action ||
      !body.prUrl ||
      !body.stakingKey ||
      !body.swarmBountyId ||
      body.stakingKey !== stakingKey
    ) {
      return null;
    }
    return { prUrl: body.prUrl, swarmBountyId: body.swarmBountyId };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addTodoPR.ts:54-112
async function updateAssignedInfoPrUrl(
  stakingKey: string,
  prUrl: string,
  swarmBountyId: string,
  // signature: string,
): Promise<{ statuscode: number; data: { success: boolean; message: string; swarmBountyId?: string } }> {
  console.log("updateAssignedInfoWithIPFS", { stakingKey, prUrl, swarmBountyId });
  console.log({
    taskId: bugFinderSummarizerTaskID,
    stakingKey: stakingKey,
    swarmBountyId: swarmBountyId,
    assignedTo: {
      $elemMatch: {
        taskId: bugFinderSummarizerTaskID,
        stakingKey: stakingKey,
      },
    },
  });
  const result = await BugFinderModel.findOneAndUpdate(
    {
      taskId: bugFinderSummarizerTaskID,
      stakingKey: stakingKey,
      swarmBountyId: swarmBountyId,
      assignedTo: {
        $elemMatch: {
          taskId: bugFinderSummarizerTaskID,
          stakingKey: stakingKey,
        },
      },
    },
    {
      $set: { "assignedTo.$.prUrl": prUrl, status: BugFinderStatus.PR_RECEIVED },
      $unset: {
        roundNumber: "",
      },
    },
  )
    .select("_id")
    .lean();
  console.log("prUrl update result", result);

  if (result !== null) {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "PR URL updated",
        swarmBountyId: swarmBountyId,
      },
    };
  }
  return {
    statuscode: 401,
    data: {
      success: false,
      message: "Failed to update PR URL",
    },
  };
}

-- Chunk 4 --
// addTodoPR.ts:114-143
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "add-todo-pr");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(bugFinderSummarizerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addPRUrlLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addTodoPR.ts:145-160
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { prUrl: string; swarmBountyId: string },
) => {
  console.log("prUrl", signatureData.prUrl);
  const result = await updateAssignedInfoPrUrl(
    requestBody.stakingKey,
    signatureData.prUrl,
    signatureData.swarmBountyId,
    // requestBody.signature,
  );
  if (result.data.swarmBountyId && process.env.NODE_ENV !== "development") {
    await updateSwarmBountyStatus(result.data.swarmBountyId, SwarmBountyStatus.AUDITING);
  }
  return result;
}

=== File: middle-server/src/controllers/supporter/triggerFetchAuditResult.ts ===

-- Chunk 1 --
// triggerFetchAuditResult.ts:15-60
async function triggerFetchAuditResult(req: Request, res: Response): Promise<void> {
  const { taskId, round } = req.body;
  console.log("[TRIGGER FETCH AUDIT RESULT] taskId: ", taskId);
  console.log("[TRIGGER FETCH AUDIT RESULT] round: ", round);
  if (taskId !== SUPPORTER_TASK_ID) {
    res.status(400).send("Invalid task ID.");
    return;
  }
  // Check if the taskId and round have already been processed
  if (cache[taskId] && cache[taskId].has(round)) {
    res.status(200).send("Task already processed.");
    return;
  }

  // If not processed, add to cache
  if (!cache[taskId]) {
    cache[taskId] = new Set();
  }
  cache[taskId].add(round);

  // Dummy processing logic
  // ... existing code ...
  const submitter = await getDistributionListSubmitter(taskId, round);
  if (!submitter) {
    cache[taskId].delete(round);
    res.status(200).send("No Distribution List Submitter found.");
    return;
  }

  const distributionList = await getDistributionListWrapper(taskId, round);
  console.log("distributionList", distributionList);
  let positiveKeys: string[] = [];
  let negativeKeys: string[] = [];
  if (distributionList) {
    const { positive, negative } = await getKeysByValueSign(distributionList);
    positiveKeys = positive;
    negativeKeys = negative;
  } else {
    cache[taskId].delete(round);
    res.status(200).send("No Distribution List found.");
    return;
  }

  const response = await triggerFetchAuditResultLogic(positiveKeys, negativeKeys);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 2 --
// triggerFetchAuditResult.ts:62-81
async (positiveKeys: string[], negativeKeys: string[]) => {
  // ============== Update the subtask status ==============
  const starFollows = await StarFollowModel.find({ stakingKey: { $in: [...positiveKeys, ...negativeKeys] } });
  // console.log('Todos Found');
  for (const starFollow of starFollows) {
    // complete repos append pending repos
    starFollow.completedRepos = [...starFollow.completedRepos, ...starFollow.pendingRepos];
    starFollow.pendingRepos = [];
    // Save the todo
    await starFollow.save();
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Task processed successfully.",
    },
  };
}

=== File: middle-server/src/controllers/supporter/fetchRequest.ts ===

-- Chunk 1 --
// fetchRequest.ts:13-28
async function checkExistingAssignment(stakingKey: string) {
  try {
    const result = await StarFollowModel.findOne({
      stakingKey: stakingKey,
      pendingRepos: { $ne: [] },
    });

    if (!result) return null;

    // Find the specific assignment entry
    return result.pendingRepos;
  } catch (error) {
    console.error("Error checking assigned info:", error);
    return null;
  }
}

-- Chunk 2 --
// fetchRequest.ts:29-40
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }
    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// fetchRequest.ts:41-72
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
  taskId: string,
  roundNumber: number,
): Promise<boolean> {
  console.log(`round number: ${roundNumber}`);
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return false;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    if (
      body.action !== action ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      body.taskId !== taskId ||
      body.roundNumber !== roundNumber
    ) {
      console.log("bad signature data");
      return false;
    }
    return true;
  } catch (error) {
    console.log("unexpected signature error", error);
    return false;
  }
}

-- Chunk 4 --
// fetchRequest.ts:74-115
async (req: Request, res: Response) => {
  const requestBody: { signature: string; stakingKey: string } | null = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }
  const roundNumber = await getCurrentRound(SUPPORTER_TASK_ID);
  if (roundNumber === null || roundNumber === undefined) {
    res.status(500).json({
      success: false,
      message: "Failed to get current round",
    });
    return;
  }
  const signatureData = await verifySignatureData(
    requestBody.signature,
    requestBody.stakingKey,
    "fetch",
    SUPPORTER_TASK_ID,
    roundNumber,
  );
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(SUPPORTER_TASK_ID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }
  const response = await fetchStarFollowAssignment(requestBody);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// fetchRequest.ts:117-205
async (requestBody: {
  signature: string;
  stakingKey: string;
}): Promise<{ statuscode: number; data: any }> => {
  const existingAssignment = await checkExistingAssignment(requestBody.stakingKey);
  if (existingAssignment) {
    return {
      statuscode: 200,
      data: {
        success: true,
        data: {
          pendingRepos: existingAssignment,
        },
      },
    };
  }

  try {
    const swarmBountyData = await getSwarmBounty();
    if (!swarmBountyData) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "Failed to fetch swarm bounty",
        },
      };
    }
    const repoUrls = swarmBountyData.data.map((bounty: Bounty) => bounty.githubUrl);

    const existingAssignment = await StarFollowModel.findOne({
      stakingKey: requestBody.stakingKey,
    });
    if (!existingAssignment) {
      return {
        statuscode: 404,
        data: {
          success: false,
          message: "No existing assignment found",
        },
      };
    }

    const existingCompletedRepos = existingAssignment.completedRepos || [];

    // Filter out repos that are already in pending or completed lists
    const newRepos = repoUrls.filter((url: string) => !existingCompletedRepos.includes(url));

    // Update the document with new repos and task info
    const updatedDoc = await StarFollowModel.findOneAndUpdate(
      { _id: existingAssignment._id },
      {
        $set: {
          pendingRepos: newRepos,
        },
      },
      { new: true },
    );

    if (!updatedDoc) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "Failed to update document",
        },
      };
    }

    return {
      statuscode: 200,
      data: {
        success: true,
        data: {
          pendingRepos: updatedDoc.pendingRepos,
        },
      },
    };
  } catch (error) {
    console.error("Error fetching repos:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Failed to fetch repos",
      },
    };
  }
}

=== File: middle-server/src/controllers/supporter/bindRequest.ts ===

-- Chunk 1 --
// bindRequest.ts:4-102
async (req: Request, res: Response) => {
  try {
    const { stakingKey, githubId, githubUsername, issueNumber } = req.body;
    // console.log("[BIND] request received with stakingKey", stakingKey, "githubId", githubId, "githubUsername", githubUsername, "issueNumber", issueNumber);
    // Initialize Octokit
    const { Octokit } = await import("@octokit/rest");
    const octokit = new Octokit({
      auth: process.env.GITHUB_TOKEN,
    });

    // Check if stakin

    // 1. Verify GitHub username matches GitHub ID
    try {
      const { data: user } = await octokit.users.getByUsername({ username: githubUsername });
      // console.log("user.id", user.id, "type:", typeof user.id);
      // console.log("githubId", githubId, "type:", typeof githubId);
      // console.log("user.id.toString()", user.id.toString(), "githubId", githubId);
      if (user.id !== githubId) {
        res.status(400).json({
          success: false,
          message: "GitHub username does not match the provided GitHub ID",
        });
        return;
      }
    } catch (error) {
      res.status(400).json({
        success: false,
        message: "Invalid GitHub username or ID",
      });
      return;
    }

    // 2. Check if stakingKey matches in the issue
    // get issue body
    const issueData = await octokit.issues.get({
      owner: "koii-network",
      repo: "StarAndFollowSupportRepo",
      issue_number: issueNumber,
    });
    const issueBody = issueData.data.body;
    if (!issueBody) {
      res.status(400).json({
        success: false,
        message: "Issue body not found",
      });
      return;
    }
    const issueBodyJson = JSON.parse(issueBody);
    if (issueBodyJson.stakingKey !== stakingKey) {
      res.status(400).json({
        success: false,
        message: "Staking key does not match the issue",
      });
      return;
    }

    // 3. Check if GitHub ID already exists in the database
    const existingStarFollow = await StarFollowModel.findOne({ gitHubId: githubId });
    if (existingStarFollow) {
      if (existingStarFollow.stakingKey === stakingKey) {
        res.status(201).json({
          success: true,
          message: "Successfully bound request",
          data: existingStarFollow,
        });
        return;
      } else {
        res.status(400).json({
          success: false,
          message: "GitHub ID already exists in the database",
        });
        return;
      }
    }

    // Create new entry in the database
    const newStarFollow = await StarFollowModel.create({
      gitHubId: githubId,
      stakingKey: stakingKey,
      gitHubUsername: githubUsername,
      status: "initialized",
    });

    res.status(200).json({
      success: true,
      message: "Successfully bound request",
      data: newStarFollow,
    });
    return;
  } catch (error) {
    console.error("Error in bindRequest:", error);
    res.status(500).json({
      success: false,
      message: "Internal server error",
    });
    return;
  }
}

=== File: middle-server/src/controllers/supporter/checkRequest.ts ===

-- Chunk 1 --
// checkRequest.ts:8-22
function verifyRequestBody(req: Request): {
  stakingKey: string;
} | null {
  try {
    console.log("Request body:", req.body);

    const stakingKey = req.body.stakingKey as string;
    if (!stakingKey) {
      return null;
    }
    return { stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// checkRequest.ts:24-54
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }
  const result = await StarFollowModel.findOne({
    stakingKey: requestBody.stakingKey,
    pendingRepos: { $ne: [] },
  });

  if (!result) {
    res.status(404).json({
      success: false,
      message: "No matching todo assignment found",
    });
    return;
  }

  res.status(200).json({
    success: true,
    message: "Todo assignment verified successfully",
    data: {
      githubUsername: result.gitHubUsername,
      pendingRepos: result.pendingRepos,
    },
  });
}

=== File: middle-server/src/controllers/prometheus/classification.ts ===

-- Chunk 1 --
// classification.ts:3-24
async (req: Request, res: Response) => {
  const { repo_url } = req.body;
  try {
    const baseUrl = process.env.NODE_ENV === "production" ? "http://orca-agent:8080" : "http://127.0.0.1:8080";

    const response = await fetch(`${baseUrl}/repo_classify`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ repo_url: repo_url }),
    });
    const data = await response.json();
    res.json(data);
  } catch (error) {
    console.error("Error in classification:", error);
    res.status(500).json({
      error: "Failed to process classification request",
      details: error instanceof Error ? error.message : "Unknown error",
    });
  }
}

=== File: middle-server/src/controllers/prometheus/getAssignedTo.ts ===

-- Chunk 1 --
// getAssignedTo.ts:4-29
async (req: Request, res: Response) => {
  const { swarmBountyId } = req.query;
  if (!swarmBountyId) {
    res.status(400).json({ error: "swarmBountyId is required" });
    return;
  }
  const assignedTo = await getAssignedToLogic(swarmBountyId as string);
  if (!assignedTo) {
    res.status(409).json({ error: "Assigned to not found" });
    return;
  }
  if (assignedTo.statuscode === 200) {
    res.json(assignedTo.data);
    return;
  }
  if (assignedTo.statuscode === 409) {
    res.status(409).json({ error: "Assigned to not found" });
    return;
  }
  if (assignedTo.statuscode === 500) {
    res.status(500).json({ error: "Error getting assigned to" });
    return;
  }

  res.status(409).json({ error: "Assigned to not found" });
}

-- Chunk 2 --
// getAssignedTo.ts:31-61
async (swarmsBountyId: string): Promise<{ statuscode: number; data: any }> => {
  try {
    const assignedTo = await DocumentationModel.findOne({ swarmBountyId: swarmsBountyId });
    console.log(assignedTo);
    if (assignedTo && assignedTo.assignedTo) {
      return {
        statuscode: 200,
        data: {
          success: true,
          message: "Returned assignedTo",
          assignedTo: assignedTo.assignedTo,
        },
      };
    }
    return {
      statuscode: 409,
      data: {
        success: false,
        message: "Assigned to not found",
      },
    };
  } catch (error) {
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Error getting assigned to",
      },
    };
  }
}

=== File: middle-server/src/controllers/prometheus/info.ts ===

-- Chunk 1 --
// info.ts:7-36
async (req: Request, res: Response) => {
  const { swarmBountyId, swarmType } = req.query;

  if (!swarmBountyId || !swarmType) {
    res.status(400).json({ error: "swarmBountyId and swarmType are required" });
    return;
  }
  const validTypes = Object.values(SwarmBountyType);
  if (!validTypes.includes(swarmType as any)) {
    res.status(400).json({ error: "Invalid swarm type" });
    return;
  }
  if (swarmType === SwarmBountyType.DOCUMENT_SUMMARIZER) {
    const { statuscode, data } = await getDocumentationInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  if (swarmType === SwarmBountyType.FIND_BUGS) {
    const { statuscode, data } = await getFindBugsInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  if (swarmType === SwarmBountyType.BUILD_FEATURE) {
    const { statuscode, data } = await getBuildFeatureInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  res.status(500).json({ error: "Internal server error" });
  return;
}

-- Chunk 2 --
// info.ts:38-50
async (swarmsBountyId: string): Promise<{ statuscode: number; data: any }> => {
  return {
    statuscode: 200,
    data: {
      success: true,
      data: {
        issues: 0,
        nodes: 0,
        status: SwarmBountyStatus.IN_PROGRESS,
      },
    },
  };
}

-- Chunk 3 --
// info.ts:52-64
async (swarmsBountyId: string): Promise<{ statuscode: number; data: any }> => {
  return {
    statuscode: 200,
    data: {
      success: true,
      data: {
        issues: 0,
        nodes: 0,
        status: SwarmBountyStatus.IN_PROGRESS,
      },
    },
  };
}

-- Chunk 4 --
// info.ts:65-72
async (): Promise<number> => {
  const documentationTaskId = process.env.DOCUMENT_SUMMARIZER_TASK_ID;
  if (!documentationTaskId) {
    throw new Error("DOCUMENTATION_TASK_ID is not set");
  }
  const numberOfNodes = await getLastRoundValueLength(documentationTaskId);
  return numberOfNodes;
}

-- Chunk 5 --
// info.ts:73-125
async (swarmsBountyId: string): Promise<{ statuscode: number; data: any }> => {
  try {
    console.log("swarmsBountyId", swarmsBountyId);
    const documentation = await DocumentationModel.findOne({ swarmBountyId: swarmsBountyId });
    console.log("documentation", documentation);
    if (documentation && documentation.assignedTo) {
      const numberOfNodes = await getDocumentationNumberOfNodesTemp();
      let status;
      if (documentation.status === DocumentationStatus.IN_PROGRESS) {
        if (documentation.assignedTo.length === 0) {
          status = SwarmBountyStatus.IN_PROGRESS;
        } else {
          if (documentation.assignedTo[documentation.assignedTo.length - 1].prUrl) {
            if (documentation.assignedTo[documentation.assignedTo.length - 1].auditResult == true) {
              status = SwarmBountyStatus.COMPLETED;
            } else {
              status = SwarmBountyStatus.AUDITING;
            }
          } else {
            status = SwarmBountyStatus.ASSIGNED;
          }
        }
      }
      return {
        statuscode: 200,
        data: {
          success: true,
          data: {
            issues: 1,
            nodes: numberOfNodes,
            status: documentation.status,
          },
        },
      };
    }
    return {
      statuscode: 409,
      data: {
        success: false,
        message: "Documentation not found",
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Error getting assigned to in documentation",
      },
    };
  }
}

=== File: middle-server/src/controllers/prometheus/v3/info.ts ===

-- Chunk 1 --
// info.ts:12-16
interface ResponseInfo {
  success: boolean;
  data?: DocsBugFinderInfo | BuilderInfo | null;
  error?: string;
}

-- Chunk 2 --
// info.ts:18-26
interface DocsBugFinderInfo {
  swarmBountyId: string;
  taskName: string;
  swarmType: SwarmBountyType;
  nodes: number;
  status: SwarmBountyStatus; // TODO the insider ones are not matching
  githubUsername: string;
  prUrl: string;
}

-- Chunk 3 --
// info.ts:28-37
interface BuilderInfo {
  swarmBountyId: string;
  taskName: string;
  swarmType: SwarmBountyType;
  nodes: number;
  status: SwarmBountyStatus; // TODO the insider ones are not matching
  githubUsername: string;
  prUrl: string;
  issues?: IssueInfo[];
}

-- Chunk 4 --
// info.ts:39-47
interface IssueInfo {
  title: string;
  description: string;
  nodes: number;
  status: SwarmBountyStatus; // TODO the insider ones are not matching
  githubUsername: string;
  prUrl: string;
  todos?: TodoInfo[];
}

-- Chunk 5 --
// info.ts:49-57
interface TodoInfo {
  title: string;
  description: string;
  acceptanceCriteria: string[];
  nodes: number;
  status: SwarmBountyStatus; // TODO the insider ones are not matching
  githubUsername: string;
  prUrl: string;
}

-- Chunk 6 --
// info.ts:111-148
async (req: Request, res: Response) => {
  const { swarmBountyId, swarmType } = req.query;

  if (!swarmBountyId || !swarmType) {
    const response: ResponseInfo = {
      success: false,
      error: "swarmBountyId and swarmType are required",
    };
    res.status(400).json(response);
    return;
  }
  const validTypes = Object.values(SwarmBountyType);
  if (!validTypes.includes(swarmType as any)) {
    const response: ResponseInfo = {
      success: false,
      error: "Invalid swarm type",
    };
    res.status(400).json(response);
    return;
  }
  if (swarmType === SwarmBountyType.DOCUMENT_SUMMARIZER) {
    const { statuscode, data } = await getDocumentationInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  if (swarmType === SwarmBountyType.FIND_BUGS) {
    const { statuscode, data } = await getFindBugsInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  if (swarmType === SwarmBountyType.BUILD_FEATURE) {
    const { statuscode, data } = await getSpecInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  res.status(500).json({ error: "Internal server error" });
  return;
}

-- Chunk 7 --
// info.ts:150-163
async function getLastAvailableAssigneeInfo(assignees: { githubUsername?: string; prUrl?: string }[]) {
  for (let i = assignees.length - 1; i >= 0; i--) {
    if (assignees[i].prUrl) {
      return {
        githubUsername: assignees[i].githubUsername || "",
        prUrl: assignees[i].prUrl || "",
      };
    }
  }
  return {
    githubUsername: "",
    prUrl: "",
  };
}

-- Chunk 8 --
// info.ts:165-206
async (swarmsBountyId: string): Promise<{ statuscode: number; data: ResponseInfo }> => {
  try {
    const bugFinder = await BugFinderModel.findOne({ swarmBountyId: swarmsBountyId });
    if (!bugFinder) {
      return {
        statuscode: 409,
        data: {
          success: false,
          data: null,
        },
      };
    }
    const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(bugFinder.assignedTo);

    const detailedInfo: DocsBugFinderInfo = {
      swarmBountyId: swarmsBountyId,
      taskName: bugFinder?.repoName + " - " + "Bug Finder",
      swarmType: SwarmBountyType.FIND_BUGS,
      nodes: bugFinder?.assignedTo.length || 0,
      status: SwarmBountyStatusBugFinderStatusMapping[bugFinder.status as BugFinderStatus],
      githubUsername,
      prUrl,
    };
    //
    return {
      statuscode: 200,
      data: {
        success: true,
        data: detailedInfo,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        data: null,
      },
    };
  }
}

-- Chunk 9 --
// info.ts:208-248
async (swarmBountyId: string): Promise<{ statuscode: number; data: ResponseInfo }> => {
  try {
    const spec = await SpecModel.findOne({ swarmBountyId: swarmBountyId });
    if (!spec) {
      return {
        statuscode: 409,
        data: {
          success: false,
          data: null,
        },
      };
    }
    const issues = await getIssueInfo(swarmBountyId);
    const detailedInfo: BuilderInfo = {
      swarmBountyId: swarmBountyId,
      taskName: spec?.repoName + " - " + "Spec",
      swarmType: SwarmBountyType.BUILD_FEATURE,
      nodes: spec?.assignedTo.length || 0,
      status: SwarmBountyStatusSpecStatusMapping[spec.status as SpecStatus],
      githubUsername: "", // Not available for spec
      prUrl: "", // Not available for spec
      issues: issues,
    };
    return {
      statuscode: 200,
      data: {
        success: true,
        data: detailedInfo,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        data: null,
      },
    };
  }
}

-- Chunk 10 --
// info.ts:249-275
async (swarmBountyId: string): Promise<IssueInfo[]> => {
  try {
    const issues = await IssueModel.find({ bountyId: swarmBountyId });
    const responseInfo: IssueInfo[] = await Promise.all(
      issues.map(async (issue) => {
        const todos = await getTodoInfo(issue.uuid);
        const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(issue.assignees || []);
        return {
          title: issue.title || "",
          description: issue.description || "",
          swarmBountyId: swarmBountyId,
          // taskName: issue.repoName + " - " + "Issue",
          swarmType: SwarmBountyType.BUILD_FEATURE,
          nodes: todos.length || 0,
          status: SwarmBountyStatusIssueStatusMapping[issue.status as IssueStatus],
          githubUsername,
          prUrl,
          todos: todos,
        };
      }),
    );
    return responseInfo;
  } catch (error) {
    console.log("error", error);
    return [];
  }
}

-- Chunk 11 --
// info.ts:276-300
async (issueUuid: string): Promise<TodoInfo[]> => {
  try {
    const todos = await TodoModel.find({ issueUuid: issueUuid });
    return Promise.all(
      todos.map(async (todo) => {
        const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(todo.assignees || []);
        return {
          title: todo.title || "",
          description: todo.description || "",
          acceptanceCriteria: todo.acceptanceCriteria || [],
          //   swarmBountyId: swarmsBountyId,
          taskName: todo.repoName + " - " + "Todo",
          swarmType: SwarmBountyType.BUILD_FEATURE,
          nodes: todo.assignees?.length || 0,
          status: SwarmBountyStatusTodoStatusMapping[todo.status as TodoStatus],
          githubUsername,
          prUrl,
        };
      }),
    );
  } catch (error) {
    console.log("error", error);
    return [];
  }
}

-- Chunk 12 --
// info.ts:301-342
async (
  swarmsBountyId: string,
): Promise<{ statuscode: number; data: { success: boolean; data: DocsBugFinderInfo | null } }> => {
  try {
    const documentation = await DocumentationModel.findOne({ swarmBountyId: swarmsBountyId });
    if (!documentation) {
      return {
        statuscode: 409,
        data: {
          success: false,
          data: null,
        },
      };
    }
    const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(documentation.assignedTo);
    const detailedInfo: DocsBugFinderInfo = {
      swarmBountyId: swarmsBountyId,
      taskName: documentation?.repoName + " - " + "Documentation",
      swarmType: SwarmBountyType.DOCUMENT_SUMMARIZER,
      nodes: documentation?.assignedTo.length || 0,
      status: SwarmBountyStatusDocumentationStatusMapping[documentation.status],
      githubUsername,
      prUrl,
    };
    return {
      statuscode: 200,
      data: {
        success: true,
        data: detailedInfo,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        data: null,
      },
    };
  }
}

=== File: middle-server/src/controllers/prometheus/v2/info.ts ===

-- Chunk 1 --
// info.ts:12-16
interface ResponseInfo {
  success: boolean;
  data?: DetailedInfo | null;
  error?: string;
}

-- Chunk 2 --
// info.ts:17-26
interface DetailedInfo {
  swarmBountyId: string;
  taskName: string;
  swarmType: SwarmBountyType;
  nodes: number;
  status: SwarmBountyStatus; // TODO the insider ones are not matching
  githubUsername: string;
  prUrl: string;
  subTasks?: DetailedInfo[];
}

-- Chunk 3 --
// info.ts:79-116
async (req: Request, res: Response) => {
  const { swarmBountyId, swarmType } = req.query;

  if (!swarmBountyId || !swarmType) {
    const response: ResponseInfo = {
      success: false,
      error: "swarmBountyId and swarmType are required",
    };
    res.status(400).json(response);
    return;
  }
  const validTypes = Object.values(SwarmBountyType);
  if (!validTypes.includes(swarmType as any)) {
    const response: ResponseInfo = {
      success: false,
      error: "Invalid swarm type",
    };
    res.status(400).json(response);
    return;
  }
  if (swarmType === SwarmBountyType.DOCUMENT_SUMMARIZER) {
    const { statuscode, data } = await getDocumentationInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  if (swarmType === SwarmBountyType.FIND_BUGS) {
    const { statuscode, data } = await getFindBugsInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  if (swarmType === SwarmBountyType.BUILD_FEATURE) {
    const { statuscode, data } = await getSpecInfo(swarmBountyId as string);
    res.status(statuscode).json(data);
    return;
  }
  res.status(500).json({ error: "Internal server error" });
  return;
}

-- Chunk 4 --
// info.ts:118-131
async function getLastAvailableAssigneeInfo(assignees: { githubUsername?: string; prUrl?: string }[]) {
  for (let i = assignees.length - 1; i >= 0; i--) {
    if (assignees[i].prUrl) {
      return {
        githubUsername: assignees[i].githubUsername || "",
        prUrl: assignees[i].prUrl || "",
      };
    }
  }
  return {
    githubUsername: "",
    prUrl: "",
  };
}

-- Chunk 5 --
// info.ts:133-174
async (swarmsBountyId: string): Promise<{ statuscode: number; data: ResponseInfo }> => {
  try {
    const bugFinder = await BugFinderModel.findOne({ swarmBountyId: swarmsBountyId });
    if (!bugFinder) {
      return {
        statuscode: 409,
        data: {
          success: false,
          data: null,
        },
      };
    }
    const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(bugFinder.assignedTo);

    const detailedInfo: DetailedInfo = {
      swarmBountyId: swarmsBountyId,
      taskName: bugFinder?.repoName + " - " + "Bug Finder",
      swarmType: SwarmBountyType.FIND_BUGS,
      nodes: bugFinder?.assignedTo.length || 0,
      status: SwarmBountyStatusBugFinderStatusMapping[bugFinder.status as BugFinderStatus],
      githubUsername,
      prUrl,
    };
    //
    return {
      statuscode: 200,
      data: {
        success: true,
        data: detailedInfo,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        data: null,
      },
    };
  }
}

-- Chunk 6 --
// info.ts:176-216
async (swarmBountyId: string): Promise<{ statuscode: number; data: ResponseInfo }> => {
  try {
    const spec = await SpecModel.findOne({ swarmBountyId: swarmBountyId });
    if (!spec) {
      return {
        statuscode: 409,
        data: {
          success: false,
          data: null,
        },
      };
    }
    const issues = await getIssueInfo(swarmBountyId);
    const detailedInfo: DetailedInfo = {
      swarmBountyId: swarmBountyId,
      taskName: spec?.repoName + " - " + "Spec",
      swarmType: SwarmBountyType.BUILD_FEATURE,
      nodes: spec?.assignedTo.length || 0,
      status: SwarmBountyStatusSpecStatusMapping[spec.status as SpecStatus],
      githubUsername: "", // Not available for spec
      prUrl: "", // Not available for spec
      subTasks: issues,
    };
    return {
      statuscode: 200,
      data: {
        success: true,
        data: detailedInfo,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        data: null,
      },
    };
  }
}

-- Chunk 7 --
// info.ts:217-241
async (swarmBountyId: string): Promise<DetailedInfo[]> => {
  try {
    const issues = await IssueModel.find({ bountyId: swarmBountyId });
    const responseInfo: DetailedInfo[] = await Promise.all(
      issues.map(async (issue) => {
        const todos = await getTodoInfo(issue.uuid, swarmBountyId);
        const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(issue.assignees || []);
        return {
          swarmBountyId: swarmBountyId,
          taskName: issue.repoName + " - " + "Issue",
          swarmType: SwarmBountyType.BUILD_FEATURE,
          nodes: todos.length || 0,
          status: SwarmBountyStatusIssueStatusMapping[issue.status as IssueStatus],
          githubUsername,
          prUrl,
          subTasks: todos,
        };
      }),
    );
    return responseInfo;
  } catch (error) {
    console.log("error", error);
    return [];
  }
}

-- Chunk 8 --
// info.ts:242-263
async (issueUuid: string, swarmsBountyId: string): Promise<DetailedInfo[]> => {
  try {
    const todos = await TodoModel.find({ issueUuid: issueUuid, swarmBountyId: swarmsBountyId });
    return Promise.all(
      todos.map(async (todo) => {
        const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(todo.assignees || []);
        return {
          swarmBountyId: swarmsBountyId,
          taskName: todo.repoName + " - " + "Todo",
          swarmType: SwarmBountyType.BUILD_FEATURE,
          nodes: todo.assignees?.length || 0,
          status: SwarmBountyStatusTodoStatusMapping[todo.status as TodoStatus],
          githubUsername,
          prUrl,
        };
      }),
    );
  } catch (error) {
    console.log("error", error);
    return [];
  }
}

-- Chunk 9 --
// info.ts:264-305
async (
  swarmsBountyId: string,
): Promise<{ statuscode: number; data: { success: boolean; data: DetailedInfo | null } }> => {
  try {
    const documentation = await DocumentationModel.findOne({ swarmBountyId: swarmsBountyId });
    if (!documentation) {
      return {
        statuscode: 409,
        data: {
          success: false,
          data: null,
        },
      };
    }
    const { githubUsername, prUrl } = await getLastAvailableAssigneeInfo(documentation.assignedTo);
    const detailedInfo: DetailedInfo = {
      swarmBountyId: swarmsBountyId,
      taskName: documentation?.repoName + " - " + "Documentation",
      swarmType: SwarmBountyType.DOCUMENT_SUMMARIZER,
      nodes: documentation?.assignedTo.length || 0,
      status: SwarmBountyStatusDocumentationStatusMapping[documentation.status],
      githubUsername,
      prUrl,
    };
    return {
      statuscode: 200,
      data: {
        success: true,
        data: detailedInfo,
      },
    };
  } catch (error) {
    console.log("error", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        data: null,
      },
    };
  }
}

=== File: middle-server/src/controllers/feature-builder/worker/getSourceRepo.ts ===

-- Chunk 1 --
// getSourceRepo.ts:5-55
async (req: Request, res: Response) => {
  try {
    const { uuid, nodeType } = req.params;
    if (nodeType === "leader") {
      const issue = await IssueModel.findOne({ uuid, bountyType: SwarmBountyType.BUILD_FEATURE }).select(
        "forkOwner repoName",
      );
      if (!issue) {
        return res.status(409).json({
          success: false,
          message: "Issue not found",
          data: null,
        });
      }
      return res.status(200).json({
        success: true,
        message: "Issue found",
        data: {
          repoOwner: issue.forkOwner,
          repoName: issue.repoName,
        },
      });
    } else {
      const todo = await TodoModel.findOne({ uuid, bountyType: SwarmBountyType.BUILD_FEATURE }).select(
        "repoOwner repoName",
      );
      if (!todo) {
        return res.status(409).json({
          success: false,
          message: "Todo not found",
          data: null,
        });
      }
      return res.status(200).json({
        success: true,
        message: "Todo found",
        data: {
          repoOwner: todo.repoOwner,
          repoName: todo.repoName,
        },
      });
    }
  } catch (error) {
    console.error("Error in getIssuePrUrls:", error);
    res.status(500).json({
      success: false,
      message: "Internal server error while fetching PR URLs",
      data: null,
    });
  }
}

=== File: middle-server/src/controllers/feature-builder/worker/assignIssue.ts ===

-- Chunk 1 --
// assignIssue.ts:7-14
function verifyRequestBody(req: Request): { githubUsername: string } | null {
  console.log("verifyRequestBody", req.body);
  const githubUsername = req.body.githubUsername as string;
  if (!githubUsername) {
    return null;
  }
  return { githubUsername };
}

-- Chunk 2 --
// assignIssue.ts:16-28
async (req: Request, res: Response) => {
  const body = verifyRequestBody(req);
  if (!body) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const response = await assignIssueLogic();
  res.status(response.statuscode).json(response.data);
}

-- Chunk 3 --
// assignIssue.ts:30-150
async () => {
  // First check for any issues stuck in AGGREGATOR_PENDING
  const stuckIssue = await IssueModel.findOneAndUpdate(
    {
      status: IssueStatus.AGGREGATOR_PENDING,
      bountyType: SwarmBountyType.BUILD_FEATURE,
      updatedAt: { $lt: new Date(Date.now() - AGGREGATOR_TIMEOUT) },
    },
    { $set: { status: IssueStatus.INITIALIZED } },
    { new: true, sort: { createdAt: 1 } },
  );

  if (stuckIssue) {
    console.log(`Found stuck issue ${stuckIssue.uuid} in AGGREGATOR_PENDING, resetting to INITIALIZED`);
  }

  // Find all issues in initialized status, sorted by creation date
  const issues = await IssueModel.find({
    status: IssueStatus.INITIALIZED,
    bountyType: SwarmBountyType.BUILD_FEATURE,
  }).sort({ createdAt: 1 });

  if (!issues || issues.length === 0) {
    return {
      statuscode: 409,
      data: {
        success: false,
        message: "No issues available for assignment",
      },
    };
  }

  // Keep track of bounties we've skipped
  const skippedBounties = new Set<string>();

  // Loop through issues to find the first assignable one
  for (const issue of issues) {
    // Skip issues from bounties we've already determined are blocked
    if (issue.bountyId && skippedBounties.has(issue.bountyId)) {
      console.log(`Skipping issue from blocked bounty ${issue.bountyId}`);
      continue;
    }

    // If issue has no predecessor, it can be assigned
    if (!issue.predecessorUuid) {
      const result = await IssueModel.findOneAndUpdate(
        { uuid: issue.uuid, bountyType: SwarmBountyType.BUILD_FEATURE },
        { $set: { status: IssueStatus.AGGREGATOR_PENDING } },
        { new: true },
      );

      if (!result) {
        console.error(`Failed to update issue ${issue.uuid}`);
        continue;
      }

      return {
        statuscode: 200,
        data: {
          success: true,
          message: "Issue assigned",
          issueId: result.uuid,
          repoOwner: result.forkOwner,
          repoName: result.repoName,
          bountyId: result.bountyId,
          forkUrl: result.forkUrl,
        },
      };
    }

    // Check if predecessor is approved
    const predecessor = await IssueModel.findOne({
      uuid: issue.predecessorUuid,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    });
    if (!predecessor) {
      console.error(`Predecessor issue ${issue.predecessorUuid} not found`);
      continue;
    }

    if (predecessor.status === IssueStatus.APPROVED) {
      const result = await IssueModel.findOneAndUpdate(
        { uuid: issue.uuid, bountyType: SwarmBountyType.BUILD_FEATURE },
        { $set: { status: IssueStatus.AGGREGATOR_PENDING } },
        { new: true },
      );

      if (!result) {
        console.error(`Failed to update issue ${issue.uuid}`);
        continue;
      }

      return {
        statuscode: 200,
        data: {
          success: true,
          message: "Issue assigned",
          issueId: result.uuid,
          repoOwner: result.forkOwner,
          repoName: result.repoName,
          bountyId: result.bountyId,
          forkUrl: result.forkUrl,
        },
      };
    }

    // If predecessor is not approved, mark this bounty as skipped
    if (predecessor.bountyId) {
      console.log(`Marking bounty ${predecessor.bountyId} as blocked due to unapproved predecessor`);
      skippedBounties.add(predecessor.bountyId);
    }
  }

  return {
    statuscode: 409,
    data: {
      success: false,
      message: "No issues available for assignment",
    },
  };
}

=== File: middle-server/src/controllers/feature-builder/worker/fetchIssue.ts ===

-- Chunk 1 --
// fetchIssue.ts:11-47
async function checkExistingAssignment(stakingKey: string, roundNumber: number) {
  try {
    console.log(`Checking existing assignment for stakingKey: ${stakingKey}, round: ${roundNumber}`);
    const result = await IssueModel.findOne({
      bountyType: SwarmBountyType.BUILD_FEATURE,
      assignees: {
        $elemMatch: {
          stakingKey: stakingKey,
          roundNumber: roundNumber,
        },
      },
    })
      .select("title acceptanceCriteria repoName uuid assignees aggregatorOwner status bountyId forkOwner")
      .lean();

    console.log("Existing assignment query result:", {
      found: !!result,
      uuid: result?.uuid,
      status: result?.status,
      assigneesCount: result?.assignees?.length,
      assignees: result?.assignees,
    });

    if (!result) return null;

    const hasPR = Boolean(result.assignees?.find((a) => a.prUrl && a.isFinal));
    console.log(`Has PR: ${hasPR}`);

    return {
      issue: result,
      hasPR,
    };
  } catch (error) {
    console.error("Error checking assigned info:", error);
    return null;
  }
}

-- Chunk 2 --
// fetchIssue.ts:48-61
function verifyRequestBody(req: Request): { signature: string; stakingKey: string; pubKey: string } | null {
  console.log("verifyRequestBody", req.body);
  try {
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    const pubKey = req.body.pubKey as string;
    if (!signature || !stakingKey || !pubKey) {
      return null;
    }
    return { signature, stakingKey, pubKey };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// fetchIssue.ts:62-99
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  pubKey: string,
  action: string,
): Promise<{ roundNumber: number; githubUsername: string; taskId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return null;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    if (
      !body.taskId ||
      typeof body.roundNumber !== "number" ||
      !taskIDs.includes(body.taskId) ||
      body.action !== action ||
      !body.githubUsername ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey
    ) {
      console.log("bad signature data");
      return null;
    }
    return {
      roundNumber: body.roundNumber,
      githubUsername: body.githubUsername,
      taskId: body.taskId,
    };
  } catch (error) {
    console.log("unexpected signature error", error);
    return null;
  }
}

-- Chunk 4 --
// fetchIssue.ts:101-135
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(
    requestBody.signature,
    requestBody.stakingKey,
    requestBody.pubKey,
    "fetch-issue",
  );
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(signatureData.taskId, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await fetchIssueLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// fetchIssue.ts:137-284
async (
  requestBody: { signature: string; stakingKey: string; pubKey: string },
  signatureData: { roundNumber: number; githubUsername: string; taskId: string },
) => {
  console.log("Starting fetchIssueLogic with:", {
    stakingKey: requestBody.stakingKey,
    roundNumber: signatureData.roundNumber,
    githubUsername: signatureData.githubUsername,
  });

  // 1. Check if user already has an assignment
  const existingAssignment = await checkExistingAssignment(requestBody.stakingKey, signatureData.roundNumber);

  if (existingAssignment) {
    console.log("Found existing assignment:", {
      uuid: existingAssignment.issue.uuid,
      status: existingAssignment.issue.status,
      hasPR: existingAssignment.hasPR,
    });

    if (existingAssignment.hasPR) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Issue already completed",
        },
      };
    }

    console.log("existingAssignment", existingAssignment);

    // Get PR dict for the existing assignment
    const prDict = await getPRDict(existingAssignment.issue.uuid);
    console.log("PR dict for existing assignment:", prDict);

    // Return consistent response format with snake_case
    return {
      statuscode: 200,
      data: {
        success: true,
        data: {
          repo_owner: existingAssignment.issue.aggregatorOwner,
          repo_name: existingAssignment.issue.repoName,
          issue_uuid: existingAssignment.issue.uuid,
          pr_list: prDict || {},
          bounty_id: existingAssignment.issue.bountyId,
          fork_owner: existingAssignment.issue.forkOwner,
        },
      },
    };
  }

  try {
    console.log("Looking for eligible issue with status:", IssueStatus.ASSIGN_PENDING);

    // First check what issues are available
    const availableIssues = await IssueModel.find({
      status: IssueStatus.ASSIGN_PENDING,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    })
      .select("uuid status")
      .lean();

    console.log("Available issues before assignment:", availableIssues);

    const eligibleIssue = await IssueModel.findOneAndUpdate(
      {
        $or: [
          { status: IssueStatus.ASSIGN_PENDING, bountyType: SwarmBountyType.BUILD_FEATURE },
          {
            $and: [
              { status: IssueStatus.ASSIGNED, bountyType: SwarmBountyType.BUILD_FEATURE },
              { updatedAt: { $lt: new Date(Date.now() - 20 * 60 * 1000) } }, // 20 minutes timeout
            ],
          },
        ],
      },
      {
        $set: {
          status: IssueStatus.ASSIGNED,
          updatedAt: new Date(),
        },
        $push: {
          assignees: {
            stakingKey: requestBody.stakingKey,
            githubUsername: signatureData.githubUsername,
            roundNumber: signatureData.roundNumber,
          },
        },
      },
      { new: true, sort: { createdAt: 1 } },
    );

    console.log("Eligible issue found:", {
      found: !!eligibleIssue,
      uuid: eligibleIssue?.uuid,
      status: eligibleIssue?.status,
      assigneesCount: eligibleIssue?.assignees?.length,
    });

    if (!eligibleIssue) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "No eligible issues found",
        },
      };
    }

    const prDict = await getPRDict(eligibleIssue.uuid);
    if (!prDict) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Issue not found",
        },
      };
    }

    return {
      statuscode: 200,
      data: {
        success: true,
        data: {
          repo_owner: eligibleIssue.aggregatorOwner,
          repo_name: eligibleIssue.repoName,
          issue_uuid: eligibleIssue.uuid,
          pr_list: prDict,
          bounty_id: eligibleIssue.bountyId,
          fork_owner: eligibleIssue.forkOwner,
          aggregator_owner: eligibleIssue.aggregatorOwner,
        },
      },
    };
  } catch (error) {
    console.error("Error fetching issue:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Failed to fetch issue",
      },
    };
  }
}

=== File: middle-server/src/controllers/feature-builder/worker/checkIssue.ts ===

-- Chunk 1 --
// checkIssue.ts:11-28
function verifyRequestBody(req: Request): {
  signature: string;
  stakingKey: string;
  pubKey: string;
} | null {
  try {
    console.log("Request body:", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    const pubKey = req.body.pubKey as string;
    if (!signature || !stakingKey || !pubKey) {
      return null;
    }
    return { signature, pubKey, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// checkIssue.ts:31-71
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  pubKey: string,
): Promise<{ roundNumber: number; issueUuid: string; taskId: string; prUrl: string; bountyId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("Signature verification failed:", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("Signature payload:", body);

    if (
      !body.taskId ||
      typeof body.roundNumber !== "number" ||
      !taskIDs.includes(body.taskId) ||
      body.action !== "audit" ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.prUrl ||
      !body.bountyId
    ) {
      console.log("Signature payload validation failed");
      return null;
    }
    return {
      roundNumber: body.roundNumber,
      issueUuid: body.issueUuid,
      taskId: body.taskId,
      prUrl: body.prUrl,
      bountyId: body.bountyId,
    };
  } catch (error) {
    console.error("Error in verifySignatureData:", error);
    return null;
  }
}

-- Chunk 3 --
// checkIssue.ts:73-114
async function checkIssueAssignment(
  stakingKey: string,
  roundNumber: number,
  prUrl: string,
  bountyId: string,
): Promise<{ issueUuid: string | null; systemPrompt?: string }> {
  try {
    const result = await IssueModel.findOne({
      bountyId: bountyId,
      bountyType: SwarmBountyType.BUILD_FEATURE,
      assignees: {
        $elemMatch: {
          stakingKey: stakingKey,
          roundNumber: roundNumber,
          prUrl: prUrl,
        },
      },
    })
      .select("uuid bountyId")
      .lean();

    if (!result) {
      return { issueUuid: null };
    }

    // Get system prompt
    const systemPrompt = await SystemPromptModel.findOne({
      bountyId: result.bountyId,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    })
      .select("prompt")
      .lean();

    return {
      issueUuid: result.uuid,
      systemPrompt: systemPrompt?.prompt,
    };
  } catch (error) {
    console.error("Error checking issue assignment:", error);
    return { issueUuid: null };
  }
}

-- Chunk 4 --
// checkIssue.ts:116-183
async (req: Request, res: Response) => {
  console.log("\nProcessing check-issue request");
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    console.log("Invalid request body");
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, requestBody.pubKey);
  if (!signatureData) {
    console.log("Failed to verify signature data");
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(signatureData.taskId, requestBody.stakingKey))) {
    console.log("Invalid staking key:", requestBody.stakingKey);
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const result = await checkIssueAssignment(
    requestBody.stakingKey,
    signatureData.roundNumber,
    signatureData.prUrl,
    signatureData.bountyId,
  );

  if (!result.issueUuid) {
    console.log("No matching issue assignment found");
    res.status(409).json({
      success: false,
      message: "No matching issue assignment found",
    });
    return;
  }

  // Get the PR dictionary
  const prDict = await getPRDict(result.issueUuid);
  if (!prDict) {
    res.status(409).json({
      success: false,
      message: "Issue not found",
    });
    return;
  }

  console.log("Issue assignment verified successfully");
  res.status(200).json({
    success: true,
    message: "Issue assignment verified successfully",
    data: {
      pr_list: prDict,
      issue_uuid: result.issueUuid,
      system_prompt: result.systemPrompt,
    },
  });
}

=== File: middle-server/src/controllers/feature-builder/worker/checkTodo.ts ===

-- Chunk 1 --
// checkTodo.ts:9-26
function verifyRequestBody(req: Request): {
  signature: string;
  stakingKey: string;
  pubKey: string;
} | null {
  try {
    console.log("Request body:", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    const pubKey = req.body.pubKey as string;
    if (!signature || !stakingKey || !pubKey) {
      return null;
    }
    return { signature, pubKey, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// checkTodo.ts:29-86
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  pubKey: string,
): Promise<{ roundNumber: string; githubUsername: string; prUrl: string; taskId: string; bountyId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("Signature verification failed:", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("Signature payload:", body);

    // Log all validation checks
    console.log({
      taskIDFromEnv: taskIDs,
      taskIdFromPayload: body.taskId,
      roundNumberValue: body.roundNumber,
      githubUsername: body.githubUsername,
      pubKey: body.pubKey,
      stakingKey: body.stakingKey,
      prUrl: body.prUrl,
      taskIDMatch: taskIDs.includes(body.taskId),
      roundNumberTypeMatch: typeof body.roundNumber === "number",
      actionMatch: body.action === "audit",
      pubKeyMatch: body.pubKey === pubKey,
      stakingKeyMatch: body.stakingKey === stakingKey,
    });

    if (
      !body.taskId ||
      typeof body.roundNumber !== "number" ||
      !taskIDs.includes(body.taskId) ||
      body.action !== "audit" ||
      !body.prUrl ||
      !body.githubUsername ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.bountyId
    ) {
      console.log("Signature payload validation failed");
      return null;
    }
    return {
      roundNumber: body.roundNumber,
      githubUsername: body.githubUsername,
      prUrl: body.prUrl,
      taskId: body.taskId,
      bountyId: body.bountyId,
    };
  } catch (error) {
    console.error("Error in verifySignatureData:", error);
    return null;
  }
}

-- Chunk 3 --
// checkTodo.ts:88-129
async function checkToDoAssignment(
  stakingKey: string,
  githubUsername: string,
  prUrl: string,
  bountyId: string,
): Promise<{ isValid: boolean; systemPrompt?: string }> {
  try {
    const result = await TodoModel.findOne({
      bountyId: bountyId,
      bountyType: SwarmBountyType.BUILD_FEATURE,
      assignees: {
        $elemMatch: {
          stakingKey: stakingKey,
          githubUsername: githubUsername,
          prUrl: prUrl,
        },
      },
    })
      .select("_id bountyId")
      .lean();

    if (!result) {
      return { isValid: false };
    }

    // Get system prompt
    const systemPrompt = await SystemPromptModel.findOne({
      bountyId: result.bountyId,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    })
      .select("prompt")
      .lean();

    return {
      isValid: true,
      systemPrompt: systemPrompt?.prompt,
    };
  } catch (error) {
    console.error("Error checking todo assignment:", error);
    return { isValid: false };
  }
}

-- Chunk 4 --
// checkTodo.ts:131-185
async (req: Request, res: Response) => {
  console.log("\nProcessing check-to-do request");
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    console.log("Invalid request body");
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, requestBody.pubKey);
  if (!signatureData) {
    console.log("Failed to verify signature data");
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(signatureData.taskId, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const result = await checkToDoAssignment(
    requestBody.stakingKey,
    signatureData.githubUsername,
    signatureData.prUrl,
    signatureData.bountyId,
  );

  if (!result.isValid) {
    console.log("No matching todo assignment found");
    res.status(409).json({
      success: false,
      message: "No matching todo assignment found",
    });
    return;
  }

  console.log("Todo assignment verified successfully");
  res.status(200).json({
    success: true,
    message: "Todo assignment verified successfully",
    data: {
      system_prompt: result.systemPrompt,
    },
  });
}

=== File: middle-server/src/controllers/feature-builder/worker/addLog.ts ===

-- Chunk 1 --
// addLog.ts:6-24
async (stakingKey: string, swarmBountyId: string, error: string) => {
  try {
    const bugFinderErrorLogs = await BugFinderErrorLogsModel.findOne({ stakingKey, swarmBountyId });
    if (bugFinderErrorLogs) {
      bugFinderErrorLogs.errors.push({ message: error, timestamp: new Date() });
      await bugFinderErrorLogs.save();
    } else {
      const newBugFinderErrorLogs = new BugFinderErrorLogsModel({
        stakingKey,
        swarmBountyId,
        errors: [{ message: error, timestamp: new Date() }],
      });
      await newBugFinderErrorLogs.save();
    }
  } catch (err) {
    console.error("Error adding failed info:", err);
    throw err;
  }
}

-- Chunk 2 --
// addLog.ts:26-44
async (stakingKey: string, swarmBountyId: string, logMessage: string, logLevel: string) => {
  try {
    const bugFinderLogs = await BugFinderLogsModel.findOne({ stakingKey, swarmBountyId });
    if (bugFinderLogs) {
      bugFinderLogs.logs.push({ level: logLevel, message: logMessage, timestamp: new Date() });
      await bugFinderLogs.save();
    } else {
      const newBugFinderLogs = new BugFinderLogsModel({
        stakingKey,
        swarmBountyId,
        logs: [{ level: logLevel, message: logMessage, timestamp: new Date() }],
      });
      await newBugFinderLogs.save();
    }
  } catch (err) {
    console.error("Error adding failed info:", err);
    throw err;
  }
}

-- Chunk 3 --
// addLog.ts:46-75
async (req: Request, res: Response) => {
  try {
    const { stakingKey, swarmBountyId, error: errorMessage, signature } = req.body;

    // Verify Signature
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return res.status(400).json({ message: "Invalid signature error" });
    }
    const parsedData = JSON.parse(data);
    if (stakingKey !== parsedData.stakingKey) {
      return res.status(400).json({ message: "Signature error - unparseable data" });
    }
    // check if stakingKey and error already in the DB
    const existingFailedInfo = await BugFinderErrorLogsModel.findOne({
      stakingKey,
      "errors.message": errorMessage,
    });
    if (existingFailedInfo) {
      res.status(200).json({ message: "Failed info already exists" });
      return;
    }
    await addErrorLog(stakingKey, swarmBountyId, errorMessage);
    res.status(200).json({ message: "Failed info added" });
  } catch (err) {
    console.error("Error in addErrorLogToDB:", err);
    res.status(500).json({ error: "Failed to add Error log to db" });
  }
}

-- Chunk 4 --
// addLog.ts:77-108
async (req: Request, res: Response) => {
  try {
    const { stakingKey, swarmBountyId, logMessage, logLevel, signature } = req.body;

    console.log("addLogToDB", { stakingKey, swarmBountyId, logMessage, logLevel, signature });
    // Verify Signature
    // const { data, error } = await verifySignature(signature, stakingKey);
    // if (error || !data) {
    //   console.log("signature error", error);
    //   return null;
    // }
    // const parsedData = JSON.parse(data);
    // if (stakingKey !== parsedData.stakingKey) {
    //   return res.status(400).json({ message: "Signature error - unparseable data" });
    // }

    // check if stakingKey and error already in the DB
    const existingFailedInfo = await BugFinderLogsModel.findOne({
      stakingKey,
      "logs.message": logMessage,
    });
    if (existingFailedInfo) {
      res.status(200).json({ message: "logMessage already exists" });
      return;
    }
    await addLog(stakingKey, swarmBountyId, logMessage, logLevel);
    res.status(200).json({ message: "logMessage added" });
  } catch (err) {
    console.error("Error in addLogToDB:", err);
    res.status(500).json({ error: "Failed to add logMessage" });
  }
}

=== File: middle-server/src/controllers/feature-builder/worker/addAggregatorInfo.ts ===

-- Chunk 1 --
// addAggregatorInfo.ts:9-22
function verifyRequestBody(req: Request): { signature: string; stakingKey: string; pubKey: string } | null {
  console.log("verifyRequestBody", req.body);
  try {
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    const pubKey = req.body.pubKey as string;
    if (!signature || !stakingKey || !pubKey) {
      return null;
    }
    return { signature, stakingKey, pubKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addAggregatorInfo.ts:24-79
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  pubKey: string,
  action: string,
): Promise<{
  roundNumber: number;
  githubUsername: string;
  issueUuid: string;
  taskId: string;
  aggregatorUrl: string;
} | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return null;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    console.log("task id matches", taskIDs.includes(body.taskId));
    console.log("round number is number", typeof body.roundNumber === "number");
    console.log("pub key matches", body.pubKey === pubKey);
    console.log("staking key matches", body.stakingKey === stakingKey);
    console.log("action matches", body.action === action);
    console.log("github username exists", body.githubUsername);
    console.log("aggregator url exists", body.aggregatorUrl);
    console.log("issue uuid exists", body.issueUuid);
    if (
      !body.taskId ||
      typeof body.roundNumber !== "number" ||
      !taskIDs.includes(body.taskId) ||
      body.action !== action ||
      !body.githubUsername ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      !body.aggregatorUrl ||
      !body.issueUuid
    ) {
      console.log("bad signature data");
      return null;
    }
    return {
      roundNumber: body.roundNumber,
      githubUsername: body.githubUsername,
      issueUuid: body.issueUuid,
      taskId: body.taskId,
      aggregatorUrl: body.aggregatorUrl,
    };
  } catch (error) {
    console.log("unexpected signature error", error);
    return null;
  }
}

-- Chunk 3 --
// addAggregatorInfo.ts:81-107
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(
    requestBody.signature,
    requestBody.stakingKey,
    requestBody.pubKey,
    "create-repo",
  );
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  const response = await addAggregatorInfoLogic(signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 4 --
// addAggregatorInfo.ts:109-171
async (signatureData: {
  roundNumber: number;
  githubUsername: string;
  issueUuid: string;
  aggregatorUrl: string;
}) => {
  console.log("Searching for issue with:", {
    uuid: signatureData.issueUuid,
  });
  const issue = await IssueModel.findOneAndUpdate(
    {
      uuid: signatureData.issueUuid,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    },
    {
      $set: {
        status: IssueStatus.IN_PROGRESS,
        aggregatorOwner: signatureData.githubUsername,
        aggregatorUrl: signatureData.aggregatorUrl,
      },
    },
    { new: true },
  );
  if (!issue) {
    return {
      statuscode: 409,
      data: {
        success: false,
        message: "Issue not found",
      },
    };
  }

  // Update all todos associated with this issue to use the aggregator owner
  // This ensures workers fork from the aggregator repo, not the original
  const todoUpdateResult = await TodoModel.updateMany(
    { issueUuid: signatureData.issueUuid },
    { $set: { repoOwner: signatureData.githubUsername } },
  );

  console.log("Updated todos for issue:", {
    issueUuid: signatureData.issueUuid,
    todosUpdated: todoUpdateResult.modifiedCount,
    aggregatorOwner: signatureData.githubUsername,
  });

  issue.status = IssueStatus.IN_PROGRESS;

  await issue.save();

  if (issue.bountyId) {
    await updateSwarmBountyStatus(issue.bountyId, SwarmBountyStatus.ASSIGNED);
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Aggregator info added and todos updated",
      todosUpdated: todoUpdateResult.modifiedCount,
    },
  };
}

=== File: middle-server/src/controllers/feature-builder/worker/updateAuditResult.ts ===

-- Chunk 1 --
// updateAuditResult.ts:17-27
async function getOctokit() {
  if (octokitInstance) {
    return octokitInstance;
  }

  const { Octokit } = await import("@octokit/rest");
  octokitInstance = new Octokit({
    auth: process.env.GITHUB_TOKEN,
  });
  return octokitInstance;
}

-- Chunk 2 --
// updateAuditResult.ts:34-48
function verifyRequestBody(req: Request): { taskId: string; round: number } | null {
  console.log("updateAuditResult request body:", req.body);
  try {
    const taskId = req.body.taskId as string;
    const round = req.body.round as number;

    if (!taskId || typeof round !== "number") {
      return null;
    }

    return { taskId, round };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// updateAuditResult.ts:55-101
async function resetStaleAssignments(round: number): Promise<void> {
  console.log(`Resetting stale assignments for round ${round}`);

  // Reset stale todos
  const staleTodos = await TodoModel.find({
    status: { $in: [TodoStatus.IN_PROGRESS, TodoStatus.IN_REVIEW] },
    bountyType: SwarmBountyType.BUILD_FEATURE,
    assignees: { $exists: true, $ne: [] },
  });

  for (const todo of staleTodos) {
    if (!todo.assignees || todo.assignees.length === 0) continue;
    const lastAssignee = todo.assignees[todo.assignees.length - 1];
    if (lastAssignee && lastAssignee.roundNumber <= round) {
      if (todo.assignees.length >= 5) {
        console.log(`Setting stale todo ${todo._id} to FAILED - has ${todo.assignees.length} assignees`);
        todo.status = TodoStatus.FAILED;
      } else {
        console.log(`Resetting stale todo ${todo._id} from ${todo.status} to INITIALIZED`);
        todo.status = TodoStatus.INITIALIZED;
      }
      await todo.save();
    }
  }

  // Reset stale issues
  const staleIssues = await IssueModel.find({
    status: { $in: [IssueStatus.ASSIGNED, IssueStatus.IN_PROGRESS, IssueStatus.IN_REVIEW] },
    bountyType: SwarmBountyType.BUILD_FEATURE,
    assignees: { $exists: true, $ne: [] },
  });

  for (const issue of staleIssues) {
    if (!issue.assignees || issue.assignees.length === 0) continue;
    const lastAssignee = issue.assignees[issue.assignees.length - 1];
    if (lastAssignee && lastAssignee.roundNumber <= round) {
      if (issue.assignees.length >= 5) {
        console.log(`Setting stale issue ${issue.uuid} to FAILED - has ${issue.assignees.length} assignees`);
        issue.status = IssueStatus.FAILED;
      } else {
        console.log(`Resetting stale issue ${issue.uuid} from ${issue.status} to ASSIGN_PENDING`);
        issue.status = IssueStatus.ASSIGN_PENDING;
      }
      await issue.save();
    }
  }
}

-- Chunk 4 --
// updateAuditResult.ts:103-226
async function updateAuditResult(req: Request, res: Response): Promise<void> {
  // Verify the request body
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(400).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const { taskId, round } = requestBody;

  if (process.env.NODE_ENV === "development") {
    console.log(`[TEST MODE] Update audit result in test mode for round ${round}`);

    // In test mode, directly update todos and issues without checking distribution list
    await updateTestEnvironmentStatus(round);
    res.status(200).json({
      success: true,
      message: "[TEST MODE] Task processed successfully.",
    });
    return;
  }

  // Check for existing audit
  const existingAudit = await AuditModel.findOne({
    roundNumber: round,
    taskId: taskId,
    bountyType: SwarmBountyType.BUILD_FEATURE,
    $or: [
      { status: AuditStatus.COMPLETED },
      {
        status: AuditStatus.IN_PROGRESS,
        updatedAt: { $gt: new Date(Date.now() - PROCESS_TIMEOUT) },
      },
    ],
  });

  if (existingAudit) {
    const message =
      existingAudit.status === AuditStatus.COMPLETED ? "Task already processed." : "Task is being processed.";
    res.status(200).json({
      success: true,
      message,
    });
    return;
  }

  // Case 3: Stale or failed - retry processing
  const audit = await AuditModel.findOneAndUpdate(
    {
      roundNumber: round,
    },
    {
      status: AuditStatus.IN_PROGRESS,
      error: null,
    },
    { upsert: true, new: true },
  );

  try {
    // Normal production flow - use distribution list
    let positiveKeys: string[] = [];
    let negativeKeys: string[] = [];

    const submitter = await getDistributionListSubmitter(taskId, String(round));
    if (!submitter) {
      await TodoModel.updateMany(
        { status: TodoStatus.IN_REVIEW, assignees: { $elemMatch: { roundNumber: round } } },
        {
          $set: {
            status: TodoStatus.INITIALIZED,
          },
        },
      );
      // Reset stale assignments when no distribution list
      await resetStaleAssignments(round);
      throw new Error("No Distribution List Submitter found");
    }

    const distributionList = await getDistributionListWrapper(taskId, String(round));
    if (!distributionList) {
      await TodoModel.updateMany(
        { status: TodoStatus.IN_REVIEW, assignees: { $elemMatch: { roundNumber: round } } },
        {
          $set: {
            status: TodoStatus.INITIALIZED,
          },
        },
      );
      // Reset stale assignments when no distribution list
      await resetStaleAssignments(round);
      throw new Error("No Distribution List found");
    }

    const { positive, negative } = await getKeysByValueSign(distributionList);
    positiveKeys = positive;
    negativeKeys = negative;

    await triggerFetchAuditResultLogic(positiveKeys, negativeKeys, round);

    // Reset any stale assignments after processing
    await resetStaleAssignments(round);

    await AuditModel.findByIdAndUpdate(audit._id, {
      status: AuditStatus.COMPLETED,
    });

    res.status(200).json({
      success: true,
      message: "Task processed successfully.",
    });
  } catch (error) {
    await AuditModel.findByIdAndUpdate(audit._id, {
      status: AuditStatus.FAILED,
      error: error instanceof Error ? error.message : "Unknown error",
    });
    res.status(500).json({
      success: false,
      message: error instanceof Error ? error.message : "Audit processing failed",
    });
  }
}

-- Chunk 5 --
// updateAuditResult.ts:232-379
async function updateTestEnvironmentStatus(round: number): Promise<void> {
  console.log(`[TEST MODE] Starting audit results processing for round ${round}`);

  // 1. Update IN_REVIEW todos to APPROVED if they have PR URLs
  const inReviewTodos = await TodoModel.find({
    status: TodoStatus.IN_REVIEW,
    assignees: {
      $elemMatch: {
        roundNumber: round,
        prUrl: { $exists: true, $ne: null },
      },
    },
  });

  for (const todo of inReviewTodos) {
    if (todo.assignees && todo.assignees.length >= 5) {
      todo.status = TodoStatus.FAILED;
      console.log(`[TEST MODE] Setting todo ${todo._id} to FAILED - has ${todo.assignees.length} assignees`);
    } else {
      todo.status = TodoStatus.APPROVED;
      const assignee = todo.assignees?.find((a) => a.roundNumber === round);
      if (assignee) {
        assignee.approved = true;
      }
      console.log(`[TEST MODE] Setting todo ${todo._id} to APPROVED`);
    }
    await todo.save();
  }

  console.log(`[TEST MODE] Updated ${inReviewTodos.length} todos from IN_REVIEW to APPROVED for round ${round}`);

  // 2. Find all IN_PROGRESS issues (these are issues that have been audited by the leader)
  const inProgressIssues = await IssueModel.find({ status: IssueStatus.IN_PROGRESS });

  console.log(`[TEST MODE] Found ${inProgressIssues.length} issues in IN_PROGRESS status`);

  // 3. For each IN_PROGRESS issue, check if all its todos are APPROVED
  for (const issue of inProgressIssues) {
    console.log(`[TEST MODE] Processing issue ${issue.uuid}`);
    const todos = await TodoModel.find({ issueUuid: issue.uuid });
    console.log(`[TEST MODE] Found ${todos.length} todos for issue ${issue.uuid}`);

    const allTodosApproved = todos.every((todo) => todo.status === TodoStatus.APPROVED);

    console.log(`[TEST MODE] All todos approved: ${allTodosApproved}`);

    if (allTodosApproved) {
      // Update to ASSIGN_PENDING if all todos are approved
      await IssueModel.updateOne({ _id: issue._id }, { $set: { status: IssueStatus.ASSIGN_PENDING } });
      console.log(`[TEST MODE] Updated issue ${issue.uuid} to ASSIGN_PENDING - all todos are approved`);
    } else {
      console.log(`[TEST MODE] Issue ${issue.uuid} remains IN_PROGRESS - not all todos are approved`);
    }
  }

  // 4. For issues IN_REVIEW, update them to APPROVED and set assignee.approved
  const inReviewIssues = await IssueModel.find({ status: IssueStatus.IN_REVIEW });
  for (const issue of inReviewIssues) {
    const assignee = issue.assignees?.find((a) => a.roundNumber === round);

    if (assignee?.prUrl && issue.forkOwner && issue.repoName) {
      try {
        // Use the same mergePullRequest function that production uses
        await mergePullRequest(issue);
        console.log(`[TEST MODE] Merged PR for issue ${issue.uuid}`);
      } catch (error) {
        console.error(`[TEST MODE] Failed to merge PR for issue ${issue.uuid}:`, error);
      }
    }

    if (issue.assignees && issue.assignees.length >= 5) {
      issue.status = IssueStatus.FAILED;
      console.log(`[TEST MODE] Setting issue ${issue.uuid} to FAILED - has ${issue.assignees.length} assignees`);
    } else {
      issue.status = IssueStatus.APPROVED;
      if (assignee) {
        assignee.approved = true;
      }
      console.log(`[TEST MODE] Setting issue ${issue.uuid} to APPROVED`);
    }
    await issue.save();
  }
  console.log(`[TEST MODE] Updated ${inReviewIssues.length} issues from IN_REVIEW to APPROVED`);

  // 5. Close unapproved PRs
  const unapprovedIssues = await IssueModel.find({
    status: IssueStatus.ASSIGN_PENDING,
    assignees: {
      $elemMatch: {
        roundNumber: round,
        prUrl: { $exists: true, $ne: null },
      },
    },
  });

  for (const issue of unapprovedIssues) {
    const assignee = issue.assignees?.find((a) => a.roundNumber === round);
    if (assignee?.prUrl && issue.forkOwner && issue.repoName) {
      try {
        const octokit = await getOctokit();
        const prNumber = parseInt(assignee.prUrl.split("/").pop() || "");
        if (!isNaN(prNumber)) {
          await octokit.pulls.update({
            owner: issue.forkOwner,
            repo: issue.repoName,
            pull_number: prNumber,
            state: "closed",
          });
          console.log(`[TEST MODE] Closed unapproved PR #${prNumber} for issue ${issue.uuid}`);
        }
      } catch (error) {
        console.error(`[TEST MODE] Failed to close unapproved PR for issue ${issue.uuid}:`, error);
      }
    }
  }

  // 6. Create PR to source repository for approved bounties
  const approvedIssues = await IssueModel.find({ status: IssueStatus.APPROVED });
  const uniqueBountyIds = new Set(approvedIssues.map((issue) => issue.bountyId));

  for (const bountyId of uniqueBountyIds) {
    if (!bountyId) continue;

    const bountyIssues = await IssueModel.find({
      bountyId: bountyId,
      status: IssueStatus.APPROVED,
    });

    // Check if all issues for this bounty are approved
    const allIssuesForBounty = await IssueModel.find({ bountyId: bountyId });
    const allApproved = allIssuesForBounty.every((issue) => issue.status === IssueStatus.APPROVED);

    if (allApproved && bountyIssues.length > 0) {
      try {
        console.log(`[TEST MODE] Creating PR to source repo for bounty ${bountyId}`);
        const prUrl = await createPullRequestToSource(bountyIssues[0]);
        console.log(`[TEST MODE] Created PR to source repo for bounty ${bountyId}: ${prUrl}`);
      } catch (error) {
        console.error(`[TEST MODE] Failed to create PR to source repo for bounty ${bountyId}:`, error);
      }
    }
  }

  // Add reset of stale assignments at the end of test environment updates
  await resetStaleAssignments(round);

  console.log(`[TEST MODE] Completed audit results processing for round ${round}`);
}

-- Chunk 6 --
// updateAuditResult.ts:381-421
async function mergePullRequest(issue: any) {
  try {
    const octokit = await getOctokit();
    const assignee = issue.assignees?.find((a: any) => a.prUrl);
    if (!assignee?.prUrl) {
      console.log(`No PR URL found for issue ${issue.uuid}`);
      return;
    }

    // Parse PR URL to get owner, repo, and PR number
    // URL format: https://github.com/{owner}/{repo}/pull/{number}
    const urlParts = assignee.prUrl.replace("https://github.com/", "").split("/");
    if (urlParts.length < 4) {
      console.log(`Invalid PR URL format: ${assignee.prUrl}`);
      return;
    }

    const owner = urlParts[0];
    const repo = urlParts[1];
    const pull_number = parseInt(urlParts[3]);

    console.log({ owner, repo, pull_number });

    if (Number.isNaN(pull_number)) {
      console.log(`Invalid PR number from URL: ${assignee.prUrl}`);
      return;
    }

    // Merge the PR
    await octokit.pulls.merge({
      owner,
      repo,
      pull_number,
    });

    console.log(`Successfully merged PR ${pull_number} for issue ${issue.uuid}`);
  } catch (error) {
    console.error(`Failed to merge PR for issue ${issue.uuid}:`, error);
    throw error;
  }
}

-- Chunk 7 --
// updateAuditResult.ts:423-470
async function createPullRequestToSource(issue: any) {
  try {
    const octokit = await getOctokit();

    // Get the spec for this bounty
    const spec = await SpecModel.findOne({ swarmBountyId: issue.bountyId });
    if (!spec) {
      throw new Error(`No spec found for bounty ${issue.bountyId}`);
    }

    // Get all issues for this bounty
    const bountyIssues = await IssueModel.find({ bountyId: issue.bountyId });

    // Build the PR description with spec and issue details
    let prBody = `# Bounty Specification\n\n${spec.description}\n\n`;
    prBody += `# Completed Issues\n\n`;

    for (const bountyIssue of bountyIssues) {
      const assignee = bountyIssue.assignees?.find((a) => a.prUrl);
      prBody += `## ${bountyIssue.title}\n\n`;
      prBody += `${bountyIssue.description}\n\n`;
      if (assignee?.prUrl) {
        prBody += `PR: [View Changes](${assignee.prUrl})\n\n`;
      }
    }

    // Create PR from fork's main to source repo
    const response = await octokit.pulls.create({
      owner: issue.repoOwner,
      repo: issue.repoName,
      title: spec.title,
      body: prBody,
      head: `${issue.forkOwner}:main`,
      base: "main",
    });

    console.log(`Created PR from fork to source repo: ${response.data.html_url}`);

    // Update all issues for this bounty to SUBMITTED status to prevent repeated PR creation
    await IssueModel.updateMany({ bountyId: issue.bountyId }, { $set: { status: IssueStatus.SUBMITTED } });
    console.log(`Updated all issues for bounty ${issue.bountyId} to SUBMITTED status`);

    return response.data.html_url;
  } catch (error) {
    console.error(`Failed to create PR to source repo for issue ${issue.uuid}:`, error);
    throw error;
  }
}

-- Chunk 8 --
// updateAuditResult.ts:472-610
async (positiveKeys: string[], negativeKeys: string[], round: number) => {
  console.log(`Processing audit results for round ${round}`);
  console.log(`Positive keys: ${positiveKeys.length}, Negative keys: ${negativeKeys.length}`);

  // Update the subtask status
  const auditableTodos = await TodoModel.find({ "assignees.roundNumber": round });

  console.log(`Found ${auditableTodos.length} auditable todos`);

  for (const todo of auditableTodos) {
    const assignee = todo.assignees?.find((a) => a.roundNumber === round);
    if (!assignee) continue;

    if (positiveKeys.includes(assignee.stakingKey)) {
      todo.status = TodoStatus.APPROVED;
      assignee.approved = true;
      console.log(`Approving todo ${todo._id} with key ${assignee.stakingKey}`);
    } else {
      if (todo.assignees && todo.assignees.length >= 5) {
        todo.status = TodoStatus.FAILED;
        console.log(`Setting todo ${todo._id} to FAILED - has ${todo.assignees.length} assignees`);
      } else {
        todo.status = TodoStatus.INITIALIZED;
        console.log(`Rejecting todo ${todo._id}`);
      }
      assignee.prUrl = undefined;
      assignee.approved = false;
    }
    await todo.save();
  }

  // Check all in progress issues
  const issues = await IssueModel.find({ status: IssueStatus.IN_PROGRESS });
  console.log(`Found ${issues.length} issues related to updated todos`);

  for (const issue of issues) {
    const todos = await TodoModel.find({ issueUuid: issue.uuid });
    if (todos.every((todo) => todo.status === TodoStatus.APPROVED)) {
      issue.status = IssueStatus.ASSIGN_PENDING;
      console.log(`Setting issue ${issue.uuid} to ASSIGN_PENDING - all todos approved`);
    } else {
      console.log(
        `Issue ${issue.uuid} remains in current status - not all todos are approved:`,
        todos.map((t) => ({
          id: t._id,
          status: t.status,
        })),
      );
    }
    await issue.save();
    if (issue.bountyId) {
      const allBountyIssues = await IssueModel.find({ bountyId: issue.bountyId }).lean();
      if (allBountyIssues.every((i) => i.status === IssueStatus.APPROVED)) {
        await updateSwarmBountyStatus(issue.bountyId, SwarmBountyStatus.COMPLETED);
      }
    }
  }

  // Now update the has PR issues
  const auditedIssues = await IssueModel.find({ "assignees.roundNumber": round });

  console.log(`Found ${auditedIssues.length} audited issues`);

  for (const issue of auditedIssues) {
    const assignee = issue.assignees?.find((a) => a.roundNumber === round);
    if (!assignee) continue;

    if (positiveKeys.includes(assignee.stakingKey)) {
      issue.status = IssueStatus.APPROVED;
      assignee.approved = true;
      await issue.save();
      console.log(`Setting issue ${issue.uuid} to APPROVED`);

      // Merge the PR into the fork
      await mergePullRequest(issue);

      console.log(`Merged PR for issue ${issue.uuid}`);

      await TodoModel.updateMany({ issueUuid: issue.uuid }, { $set: { status: TodoStatus.MERGED } });
      console.log(`Updated todos for issue ${issue.uuid} to MERGED`);
    } else {
      if (issue.assignees && issue.assignees.length >= 5) {
        issue.status = IssueStatus.FAILED;
        console.log(`Setting issue ${issue.uuid} to FAILED - has ${issue.assignees.length} assignees`);
      } else {
        issue.status = IssueStatus.ASSIGN_PENDING;
        console.log(`Setting issue back to ${issue.uuid} to ASSIGN_PENDING`);
      }
      assignee.approved = false;
      await issue.save();

      // Close the unapproved PR
      if (assignee.prUrl && issue.forkOwner && issue.repoName) {
        try {
          const octokit = await getOctokit();
          const prNumber = parseInt(assignee.prUrl.split("/").pop() || "");
          if (!isNaN(prNumber)) {
            await octokit.pulls.update({
              owner: issue.forkOwner,
              repo: issue.repoName,
              pull_number: prNumber,
              state: "closed",
            });
            console.log(`Closed unapproved PR #${prNumber} for issue ${issue.uuid}`);
          }
        } catch (error) {
          console.error(`Failed to close unapproved PR for issue ${issue.uuid}:`, error);
        }
      }
    }
  }

  // Get unique bounty IDs from audited issues
  const uniqueBountyIds = new Set(auditedIssues.map((issue) => issue.bountyId));

  // Check each bounty separately
  for (const bountyId of uniqueBountyIds) {
    if (!bountyId) continue;

    const bountyIssues = await IssueModel.find({
      bountyId: bountyId,
      status: IssueStatus.APPROVED,
    });

    // Check if all issues for this bounty are approved
    const allIssuesForBounty = await IssueModel.find({ bountyId: bountyId });
    const allApproved = allIssuesForBounty.every((issue) => issue.status === IssueStatus.APPROVED);

    if (allApproved && bountyIssues.length > 0) {
      // All issues for this bounty are approved, create PR to source repo
      try {
        const prUrl = await createPullRequestToSource(bountyIssues[0]);
        console.log(`Created PR to source repo for bounty ${bountyId}: ${prUrl}`);
      } catch (error) {
        console.error(`Failed to create PR to source repo for bounty ${bountyId}:`, error);
      }
    }
  }
}

=== File: middle-server/src/controllers/feature-builder/worker/fetchTodo.ts ===

-- Chunk 1 --
// fetchTodo.ts:13-47
async function getDependencies(dependencyUuids: string[]): Promise<string[]> {
  if (!dependencyUuids || dependencyUuids.length === 0) {
    console.log("No dependency UUIDs provided");
    return [];
  }

  console.log("Looking for dependencies with UUIDs:", dependencyUuids);

  const dependencyTodos = await TodoModel.find({
    uuid: { $in: dependencyUuids },
    bountyType: SwarmBountyType.BUILD_FEATURE,
    status: TodoStatus.APPROVED,
  })
    .select("uuid status assignees")
    .lean();

  console.log("Found dependency todos:", dependencyTodos);

  // If we didn't find all dependencies, some are not APPROVED
  if (dependencyTodos.length !== dependencyUuids.length) {
    console.log("Not all dependencies are APPROVED");
    throw new Error("Not all dependencies are APPROVED");
  }

  const prUrls = dependencyTodos
    .map((todo) => {
      const assignee = todo.assignees?.find((a) => a.approved);
      return assignee?.prUrl;
    })
    .filter((url): url is string => url !== null && url !== undefined);

  console.log("Extracted PR URLs:", prUrls);

  return prUrls;
}

-- Chunk 2 --
// fetchTodo.ts:50-83
async function checkExistingAssignment(stakingKey: string, roundNumber: number) {
  try {
    const todo = await TodoModel.findOne({
      bountyType: SwarmBountyType.BUILD_FEATURE,
      assignees: {
        $elemMatch: {
          stakingKey: stakingKey,
          roundNumber: roundNumber,
        },
      },
    })
      .select("title acceptanceCriteria repoOwner repoName uuid issueUuid assignees dependencyTasks bountyId")
      .lean();

    if (!todo) return null;

    console.log("Found todo with dependencies:", todo.dependencyTasks);

    // Get PR URLs for dependencies
    const dependencyPrUrls = await getDependencies(todo.dependencyTasks || []);

    const assignee = todo.assignees?.find((a) => a.stakingKey === stakingKey && a.roundNumber === roundNumber);
    const hasPR = Boolean(assignee?.prUrl && assignee?.isFinal);

    return {
      todo: todo,
      hasPR,
      dependencyPrUrls,
    };
  } catch (error) {
    console.error("Error checking assigned info:", error);
    return null;
  }
}

-- Chunk 3 --
// fetchTodo.ts:85-98
function verifyRequestBody(req: Request): { signature: string; stakingKey: string; pubKey: string } | null {
  console.log("verifyRequestBody", req.body);
  try {
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    const pubKey = req.body.pubKey as string;
    if (!signature || !stakingKey || !pubKey) {
      return null;
    }
    return { signature, stakingKey, pubKey };
  } catch {
    return null;
  }
}

-- Chunk 4 --
// fetchTodo.ts:100-137
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  pubKey: string,
  action: string,
): Promise<{ roundNumber: number; githubUsername: string; taskId: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return null;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    if (
      !body.taskId ||
      typeof body.roundNumber !== "number" ||
      !taskIDs.includes(body.taskId) ||
      body.action !== action ||
      !body.githubUsername ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey
    ) {
      console.log("bad signature data");
      return null;
    }
    return {
      roundNumber: body.roundNumber,
      githubUsername: body.githubUsername,
      taskId: body.taskId,
    };
  } catch (error) {
    console.log("unexpected signature error", error);
    return null;
  }
}

-- Chunk 5 --
// fetchTodo.ts:139-172
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(
    requestBody.signature,
    requestBody.stakingKey,
    requestBody.pubKey,
    "fetch-todo",
  );
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(signatureData.taskId, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }
  const response = await fetchTodoLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 6 --
// fetchTodo.ts:174-323
async (
  requestBody: { signature: string; stakingKey: string; pubKey: string },
  signatureData: { roundNumber: number; githubUsername: string; taskId: string },
) => {
  // 1. Check if user already has an assignment
  const existingAssignment = await checkExistingAssignment(requestBody.stakingKey, signatureData.roundNumber);
  if (existingAssignment) {
    console.log(`Found existing assignment ${existingAssignment.todo.uuid}`);
    if (existingAssignment.hasPR) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Task already completed",
        },
      };
    }
    return {
      statuscode: 200,
      data: {
        success: true,
        data: {
          title: existingAssignment.todo.title,
          todo_uuid: existingAssignment.todo.uuid,
          issue_uuid: existingAssignment.todo.issueUuid,
          acceptance_criteria: existingAssignment.todo.acceptanceCriteria,
          repo_owner: existingAssignment.todo.repoOwner,
          repo_name: existingAssignment.todo.repoName,
          dependency_pr_urls: existingAssignment.dependencyPrUrls,
          bounty_id: existingAssignment.todo.bountyId,
        },
      },
    };
  }

  try {
    // 1. Find all in-progress issues, sorted by creation date (FIFO)
    const inProgressIssues = await IssueModel.find({
      status: IssueStatus.IN_PROGRESS,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    }).sort({ createdAt: 1 });

    if (inProgressIssues.length === 0) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "No active issues found",
        },
      };
    }

    const uniqueBountyIds = new Set();
    const uniqueBountyIssues = new Set();

    for (const issue of inProgressIssues) {
      if (issue.bountyId && !uniqueBountyIds.has(issue.bountyId)) {
        uniqueBountyIds.add(issue.bountyId);
        uniqueBountyIssues.add(issue.uuid);
      }
    }

    // 3. Use aggregation to find eligible todos across all unique bounty issues
    const eligibleTodos = await TodoModel.aggregate([
      // Match initial criteria
      {
        $match: {
          issueUuid: { $in: Array.from(uniqueBountyIssues) },
          $or: [
            { status: TodoStatus.INITIALIZED },
            {
              $and: [
                { status: TodoStatus.IN_PROGRESS },
                { updatedAt: { $lt: new Date(Date.now() - 40 * 60 * 1000) } }, // 40 minutes timeout
              ],
            },
          ],
        },
      },
      // Lookup dependencies
      {
        $lookup: {
          from: "todos",
          let: { dependencyTasks: { $ifNull: ["$dependencyTasks", []] } },
          pipeline: [
            {
              $match: {
                $expr: {
                  $and: [{ $in: ["$uuid", "$$dependencyTasks"] }, { $ne: ["$status", TodoStatus.APPROVED] }],
                },
              },
            },
          ],
          as: "unmetDependencies",
        },
      },
      // Only keep todos with no unmet dependencies
      {
        $match: {
          $or: [
            { dependencyTasks: { $size: 0 } }, // no dependencies
            { unmetDependencies: { $size: 0 } }, // all dependencies met
          ],
        },
      },
      // Lookup issues for the same bounty to count completed ones
      {
        $lookup: {
          from: "issues",
          let: { bountyId: "$bountyId" },
          pipeline: [
            {
              $match: {
                $expr: {
                  $and: [
                    { $eq: ["$bountyId", "$$bountyId"] },
                    { $in: ["$status", [IssueStatus.APPROVED, IssueStatus.SUBMITTED, IssueStatus.MERGED]] },
                  ],
                },
              },
            },
            {
              $count: "completedCount",
            },
          ],
          as: "completedIssues",
        },
      },
      // Add a field for the number of completed issues (default to 0 if none found)
      {
        $addFields: {
          completedIssuesCount: {
            $ifNull: [{ $arrayElemAt: ["$completedIssues.completedCount", 0] }, 0],
          },
        },
      },
      // Sort by completed issues count (ascending) and then by creation date
      {
        $sort: {
          completedIssuesCount: 1,
          createdAt: 1,
        },
      },
      // Take the first one
      {
        $limit: 1,
      },
    ]);

    if (eligibleTodos.length === 0) {

-- Chunk 7 --
// fetchTodo.ts:324-426
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "No todos with completed dependencies available",
        },
      };
    }

    // 4. Assign the eligible todo to the worker
    const updatedTodo = await TodoModel.findOneAndUpdate(
      {
        _id: eligibleTodos[0]._id,
        bountyType: SwarmBountyType.BUILD_FEATURE,
        $or: [
          { status: TodoStatus.INITIALIZED },
          {
            $and: [{ status: TodoStatus.IN_PROGRESS }, { updatedAt: { $lt: new Date(Date.now() - 20 * 60 * 1000) } }],
          },
        ],
      },
      {
        $push: {
          assignees: {
            stakingKey: requestBody.stakingKey,
            githubUsername: signatureData.githubUsername,
            roundNumber: signatureData.roundNumber,
          },
        },
        $set: {
          status: TodoStatus.IN_PROGRESS,
        },
      },
      { new: true },
    );

    if (!updatedTodo) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Task assignment conflict",
        },
      };
    }

    // Get PR URLs for dependencies
    const dependencyPrUrls = await getDependencies(updatedTodo.dependencyTasks || []);

    console.log("dependencyPrUrls", dependencyPrUrls);

    // Get task-specific system prompt using bounty ID
    const systemPrompt = await SystemPromptModel.findOne({
      bountyId: updatedTodo.bountyId,
      bountyType: SwarmBountyType.BUILD_FEATURE,
    });
    if (!systemPrompt) {
      return {
        statuscode: 500,
        data: {
          success: false,
          message: "System prompt not found for bounty",
        },
      };
    }

    const data = {
      _id: updatedTodo._id,
      title: updatedTodo.title,
      todo_uuid: updatedTodo.uuid,
      issue_uuid: updatedTodo.issueUuid,
      acceptance_criteria: updatedTodo.acceptanceCriteria,
      repo_owner: updatedTodo.repoOwner,
      repo_name: updatedTodo.repoName,
      dependency_pr_urls: dependencyPrUrls,
      bounty_id: updatedTodo.bountyId,
      system_prompt: systemPrompt.prompt,
    };

    console.log("TODO DATA:", data);

    // if (updatedTodo.bountyId) {
    //   await updateSwarmBountyStatus(updatedTodo.bountyId, SwarmBountyStatus.IN_PROGRESS);
    // }

    return {
      statuscode: 200,
      data: {
        success: true,
        data,
      },
    };
  } catch (error) {
    console.error("Error fetching todo:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Failed to fetch todo",
      },
    };
  }
}

=== File: middle-server/src/controllers/feature-builder/worker/addIssuePR.ts ===

-- Chunk 1 --
// addIssuePR.ts:6-29
function verifyRequestBody(req: Request): {
  signature: string;
  stakingKey: string;
  pubKey: string;
  issueUuid: string;
  isFinal: boolean;
  prUrl?: string;
} | null {
  console.log("verifyRequestBody", req.body);
  try {
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    const pubKey = req.body.pubKey as string;
    const issueUuid = req.body.issueUuid as string;
    const isFinal = req.body.isFinal as boolean;
    const prUrl = req.body.prUrl as string;
    if (!signature || !stakingKey || !pubKey || !issueUuid || isFinal === undefined || (isFinal && !prUrl)) {
      return null;
    }
    return { signature, stakingKey, pubKey, issueUuid, isFinal, prUrl };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addIssuePR.ts:31-68
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  pubKey: string,
  action: string,
): Promise<{ roundNumber: number; taskId: string; prUrl?: string; isFinal: boolean } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, pubKey, stakingKey });
    console.log("taskIDs match", taskIDs.includes(body.taskId));
    console.log("typeof body.roundNumber", typeof body.roundNumber);
    console.log("body.action", body.action);
    console.log("body.pubKey", body.pubKey);
    console.log("body.stakingKey", body.stakingKey);
    if (
      !body.taskId ||
      !taskIDs.includes(body.taskId) ||
      typeof body.roundNumber !== "number" ||
      body.action !== action ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      body.isFinal === undefined ||
      (body.isFinal && body.prUrl === undefined)
    ) {
      return null;
    }
    return { roundNumber: body.roundNumber, taskId: body.taskId, prUrl: body.prUrl, isFinal: body.isFinal };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addIssuePR.ts:70-96
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(
    requestBody.signature,
    requestBody.stakingKey,
    requestBody.pubKey,
    "add-issue-pr",
  );
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  const response = await addIssuePRLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 4 --
// addIssuePR.ts:98-157
async (
  requestBody: {
    signature: string;
    stakingKey: string;
    pubKey: string;
    issueUuid: string;
    prUrl?: string;
  },
  signatureData: { roundNumber: number; taskId: string; prUrl?: string; isFinal: boolean },
) => {
  const prUrl = signatureData.prUrl ?? requestBody.prUrl;
  if (!prUrl) {
    return {
      statuscode: 400,
      data: {
        success: false,
        message: "PR URL is required",
      },
    };
  }

  const issue = await IssueModel.findOneAndUpdate(
    {
      uuid: requestBody.issueUuid,
      bountyType: SwarmBountyType.BUILD_FEATURE,
      assignees: {
        $elemMatch: {
          stakingKey: requestBody.stakingKey,
          roundNumber: signatureData.roundNumber,
        },
      },
    },
    {
      $set: {
        "assignees.$.prUrl": prUrl,
        "assignees.$.isFinal": signatureData.isFinal,
        status: signatureData.isFinal ? IssueStatus.IN_REVIEW : IssueStatus.IN_PROGRESS,
      },
    },
    { new: true },
  );

  if (!issue) {
    return {
      statuscode: 409,
      data: {
        success: false,
        message: "Issue not found",
      },
    };
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Issue PR added",
    },
  };
}

=== File: middle-server/src/controllers/feature-builder/worker/addTodoPR.ts ===

-- Chunk 1 --
// addTodoPR.ts:7-31
function verifyRequestBody(req: Request): {
  signature: string;
  pubKey: string;
  stakingKey: string;
  todo_uuid: string;
  isFinal: boolean;
  prUrl?: string;
} | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const pubKey = req.body.pubKey as string;
    const stakingKey = req.body.stakingKey as string;
    const todo_uuid = req.body.todo_uuid as string;
    const prUrl = req.body.prUrl as string;
    const isFinal = req.body.isFinal as boolean;
    if (!signature || !pubKey || !stakingKey || !todo_uuid || isFinal === undefined || (isFinal && !prUrl)) {
      return null;
    }

    return { signature, pubKey, stakingKey, todo_uuid, isFinal, prUrl };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addTodoPR.ts:34-71
async function verifySignatureData(
  signature: string,
  pubKey: string,
  stakingKey: string,
  action: string,
): Promise<{ roundNumber: number; taskId: string; prUrl: string; isFinal: boolean } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, pubKey, stakingKey });
    console.log("taskIDs match", taskIDs.includes(body.taskId));
    console.log("typeof body.roundNumber", typeof body.roundNumber);
    console.log("body.action", body.action);
    console.log("body.pubKey", body.pubKey);
    console.log("body.stakingKey", body.stakingKey);
    if (
      !body.taskId ||
      !taskIDs.includes(body.taskId) ||
      typeof body.roundNumber !== "number" ||
      body.action !== action ||
      !body.pubKey ||
      body.pubKey !== pubKey ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey ||
      body.isFinal === undefined ||
      (body.isFinal && body.prUrl === undefined)
    ) {
      return null;
    }
    return { roundNumber: body.roundNumber, taskId: body.taskId, prUrl: body.prUrl, isFinal: body.isFinal };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addTodoPR.ts:73-106
async function updateTodoWithPRUrl(
  todo_uuid: string,
  stakingKey: string,
  roundNumber: number,
  prUrl: string,
  isFinal: boolean,
): Promise<boolean> {
  console.log("updateTodoWithPRUrl", { todo_uuid, stakingKey, roundNumber, prUrl });
  const result = await TodoModel.findOneAndUpdate(
    {
      uuid: todo_uuid,
      bountyType: SwarmBountyType.BUILD_FEATURE,
      assignees: {
        $elemMatch: {
          stakingKey: stakingKey,
          roundNumber: roundNumber,
        },
      },
    },
    {
      $set: {
        status: isFinal ? TodoStatus.IN_REVIEW : TodoStatus.IN_PROGRESS,
        "assignees.$.prUrl": prUrl,
        "assignees.$.isFinal": isFinal,
      },
    },
  )
    .select("_id")
    .lean();

  console.log("pr update result", result);

  return result !== null;
}

-- Chunk 4 --
// addTodoPR.ts:108-142
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(
    requestBody.signature,
    requestBody.pubKey,
    requestBody.stakingKey,
    "add-todo-pr",
  );
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(signatureData.taskId, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addPRLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addTodoPR.ts:144-190
async (
  requestBody: {
    signature: string;
    pubKey: string;
    stakingKey: string;
    todo_uuid: string;
    prUrl?: string;
  },
  signatureData: { roundNumber: number; taskId: string; prUrl?: string; isFinal: boolean },
) => {
  const prUrl = signatureData.prUrl ?? requestBody.prUrl;
  if (!prUrl) {
    return {
      statuscode: 400,
      data: {
        success: false,
        message: "PR URL is required",
      },
    };
  }

  console.log("prUrl", prUrl);
  const result = await updateTodoWithPRUrl(
    requestBody.todo_uuid,
    requestBody.stakingKey,
    signatureData.roundNumber,
    prUrl,
    signatureData.isFinal,
  );
  if (!result) {
    return {
      statuscode: 409,
      data: {
        success: false,
        message: "Todo not found",
      },
    };
  }

  return {
    statuscode: 200,
    data: {
      success: true,
      message: "Pull request URL updated",
    },
  };
}

=== File: middle-server/src/controllers/feature-builder/planner/triggerFetchAuditResult.ts ===

-- Chunk 1 --
// triggerFetchAuditResult.ts:19-23
interface Issue {
  uuid: string;
  title: string;
  description: string;
}

-- Chunk 2 --
// triggerFetchAuditResult.ts:25-36
interface Task {
  acceptanceCriteria: string;
  assignedTo: string[];
  dependencyTasks: string[];
  description: string;
  issueUuid: string;
  repoName: string;
  repoOwner: string;
  status: string;
  title: string;
  uuid: string;
}

-- Chunk 3 --
// triggerFetchAuditResult.ts:38-83
async function triggerFetchAuditResult(req: Request, res: Response): Promise<void> {
  const { taskId, round } = req.body;
  console.log("[TRIGGER FETCH AUDIT RESULT] taskId: ", taskId);
  console.log("[TRIGGER FETCH AUDIT RESULT] round: ", round);
  if (taskId !== plannerTaskID) {
    res.status(400).send("Invalid task ID.");
    return;
  }
  // Check if the taskId and round have already been processed
  if (cache[taskId] && cache[taskId].has(round)) {
    res.status(200).send("Task already processed.");
    return;
  }

  // If not processed, add to cache
  if (!cache[taskId]) {
    cache[taskId] = new Set();
  }
  cache[taskId].add(round);

  // Dummy processing logic
  // ... existing code ...
  const submitter = await getDistributionListSubmitter(taskId, round);
  if (!submitter) {
    cache[taskId].delete(round);
    res.status(200).send("No Distribution List Submitter found.");
    return;
  }

  const distributionList = await getDistributionListWrapper(taskId, round);
  console.log("distributionList", distributionList);
  let positiveKeys: string[] = [];
  let negativeKeys: string[] = [];
  if (distributionList) {
    const { positive, negative } = await getKeysByValueSign(distributionList);
    positiveKeys = positive;
    negativeKeys = negative;
  } else {
    cache[taskId].delete(round);
    res.status(200).send("No Distribution List found.");
    return;
  }

  const response = await triggerFetchAuditResultLogic(positiveKeys, negativeKeys, round);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 4 --
// triggerFetchAuditResult.ts:85-163
async (positiveKeys: string[], negativeKeys: string[], round: number) => {
  console.log("positiveKeys", positiveKeys);
  console.log("negativeKeys", negativeKeys);
  console.log("round", round);
  // ============== Update the subtask status ==============
  try {
    const specs = await SpecModel.find({ "assignedTo.stakingKey": { $in: [...positiveKeys, ...negativeKeys] } });

    for (const spec of specs) {
      try {
        for (const assignee of spec.assignedTo) {
          if (!assignee.taskId || !assignee.roundNumber || !assignee.stakingKey) {
            console.log("Missing required fields for assignee:", assignee);
            continue;
          }
          if (positiveKeys.includes(assignee.stakingKey) && assignee.roundNumber === round) {
            if (!assignee.prUrl) {
              return {
                statuscode: 400,
                data: {
                  success: false,
                  message: "No PR URL found for assignee.",
                },
              };
            }

            const result = await processAuditResult({
              cid: assignee.prUrl,
              swarmBountyId: spec.swarmBountyId,
              repoName: spec.repoName,
              repoOwner: spec.repoOwner,
            });
            if (result) {
              assignee.auditResult = true;
            } else {
              assignee.auditResult = false;
            }

            spec.status = SpecStatus.DONE;
            if (spec.swarmBountyId) {
              await updateSwarmBountyStatus(spec.swarmBountyId, SwarmBountyStatus.COMPLETED);
            }
          } else if (negativeKeys.includes(assignee.stakingKey) && assignee.roundNumber === round) {
            assignee.auditResult = false;
          }
        }
        // Save the spec with error handling
        try {
          await spec.save();
        } catch (saveError) {
          console.error("Error saving spec:", saveError);
          // Continue with next spec instead of failing the entire process
          continue;
        }
      } catch (assigneeError) {
        console.error("Error processing assignee:", assigneeError);
        // Continue with next spec
        continue;
      }
    }

    return {
      statuscode: 200,
      data: {
        success: true,
        message: "Task processed successfully.",
      },
    };
  } catch (error) {
    console.error("Error in triggerFetchAuditResultLogic:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Internal server error while processing audit results.",
      },
    };
  }
}

-- Chunk 5 --
// triggerFetchAuditResult.ts:165-256
async ({
  cid,
  swarmBountyId,
  repoName,
  repoOwner,
}: {
  cid: string;
  swarmBountyId: string;
  repoName: string;
  repoOwner: string;
}) => {
  let decodedFile = null;
  try {
    decodedFile = await decodeFile(cid);
    if (!decodedFile) {
      return null;
    }
  } catch (error) {
    console.error("Error decoding file:", error);
    return null;
  }
  console.log("decodedFile", decodedFile);
  try {
    const { issues, tasks } = decodedFile;

    // Prepare bulk operations for tasks
    const taskId = uuidv4();
    const taskOperations = tasks.map(
      (task: Task) => (
        console.log({
          swarmBountyId: swarmBountyId,
          acceptanceCriteria: task.acceptanceCriteria,
          assignedTo: task.assignedTo,
          dependencyTasks: task.dependencyTasks,
          description: task.description,
          issueUuid: task.issueUuid,
          repoName: task.repoName,
          repoOwner: task.repoOwner,
          status: task.status,
          title: task.title,
          uuid: task.uuid,
        }),
        {
          insertOne: {
            document: {
              swarmBountyId: swarmBountyId,
              acceptanceCriteria: task.acceptanceCriteria,
              assignedTo: task.assignedTo,
              dependencyTasks: task.dependencyTasks,
              description: task.description,
              issueUuid: task.issueUuid,
              repoName: task.repoName,
              repoOwner: task.repoOwner,
              status: task.status,
              title: task.title,
              uuid: task.uuid,
              taskId: taskId,
            },
          },
        }
      ),
    );
    // // Prepare bulk operations for issues
    const issueOperations = issues.map((issue: Issue) => ({
      insertOne: {
        document: {
          swarmBountyId: swarmBountyId,
          issueUuid: issue.uuid,
          title: issue.title,
          description: issue.description,
          repoName: repoName,
          repoOwner: repoOwner,
          status: IssueStatus.INITIALIZED,
          assignedTo: [],
          taskId: taskId,
        },
      },
    }));
    // Execute bulk operations

    if (taskOperations.length > 0) {
      await TodoModel.bulkWrite(taskOperations);
    }
    if (issueOperations.length > 0) {
      await IssueModel.bulkWrite(issueOperations);
    }
    return true;
  } catch (error) {
    console.error("Error processing audit result:", error);
    return null;
  }
}

-- Chunk 6 --
// triggerFetchAuditResult.ts:257-273
async (cid: string) => {
  try {
    const file = await getFile(cid);
    const decodedFile = JSON.parse(file);
    if (decodedFile.tasks && decodedFile.issues) {
      // Flatten the nested tasks array if it exists
      const flattenedTasks = Array.isArray(decodedFile.tasks[0]) ? decodedFile.tasks[0] : decodedFile.tasks;
      return {
        issues: decodedFile.issues,
        tasks: flattenedTasks,
      };
    }
  } catch (error) {
    console.error("Error decoding file:", error);
    return null;
  }
}

=== File: middle-server/src/controllers/feature-builder/planner/fetchRequest.ts ===

-- Chunk 1 --
// fetchRequest.ts:13-42
async function checkExistingAssignment(stakingKey: string, roundNumber: number) {
  try {
    const result = await SpecModel.findOne({
      assignedTo: {
        $elemMatch: {
          taskId: plannerTaskID,
          stakingKey: stakingKey,
          roundNumber: roundNumber,
        },
      },
    })

      .lean();

    if (!result) return null;

    // Find the specific assignment entry
    const assignment = result.assignedTo.find(
      (a: any) => a.stakingKey === stakingKey && a.roundNumber === roundNumber && a.taskId === plannerTaskID,
    );

    return {
      spec: result,
      hasPR: Boolean(assignment?.prUrl),
    };
  } catch (error) {
    console.error("Error checking assigned info:", error);
    return null;
  }
}

-- Chunk 2 --
// fetchRequest.ts:43-54
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }
    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// fetchRequest.ts:55-85
async function verifySignatureData(
  signature: string,
  stakingKey: string,
  action: string,
): Promise<{ roundNumber: number; githubUsername: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("bad signature");
      return null;
    }
    const body = JSON.parse(data);
    console.log({ signature_payload: body });
    if (
      !body.taskId ||
      typeof body.roundNumber !== "number" ||
      body.taskId !== plannerTaskID ||
      body.action !== action ||
      !body.githubUsername ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey
    ) {
      console.log("bad signature data");
      return null;
    }
    return { roundNumber: body.roundNumber, githubUsername: body.githubUsername };
  } catch (error) {
    console.log("unexpected signature error", error);
    return null;
  }
}

-- Chunk 4 --
// fetchRequest.ts:87-115
async (req: Request, res: Response) => {
  const requestBody: { signature: string; stakingKey: string } | null = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey, "fetch");
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(plannerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }
  const response = await fetchTodoLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// fetchRequest.ts:117-122
async () => {
  // if (process.env.NODE_ENV !== "development") {
  //   await syncDB();
  // }
  await updateFailedPlannerTask();
}

-- Chunk 6 --
// fetchRequest.ts:123-130
async () => {
  const specs = await SpecModel.find({ assignedTo: { $size: 5 }, status: { $ne: SpecStatus.FAILED } });
  for (const spec of specs) {
    spec.status = SpecStatus.FAILED;

    await updateSwarmBountyStatus(spec.swarmBountyId, SwarmBountyStatus.FAILED);
  }
}

-- Chunk 7 --
// fetchRequest.ts:131-252
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { roundNumber: number; githubUsername: string },
): Promise<{ statuscode: number; data: any }> => {
  await preProcessTodoLogic();
  const existingAssignment = await checkExistingAssignment(requestBody.stakingKey, signatureData.roundNumber);
  if (existingAssignment) {
    if (existingAssignment.hasPR) {
      return {
        statuscode: 401,
        data: {
          success: false,
          message: "Task already completed",
        },
      };
    } else {
      console.log("existingAssignment", existingAssignment);
      return {
        statuscode: 200,
        data: {
          success: true,
          role: "worker",
          data: {
            repo_owner: existingAssignment.spec.repoOwner,
            repo_name: existingAssignment.spec.repoName,
            description: existingAssignment.spec.description,
          },
        },
      };
    }
  }

  try {
    const updatedTodo = await SpecModel.findOneAndUpdate(
      {
        // Not assigned to the current user
        $nor: [
          { "assignedTo.stakingKey": requestBody.stakingKey },
          { "assignedTo.githubUsername": signatureData.githubUsername },
        ],
        $or: [
          {
            $and: [
              {
                $or: [
                  {
                    $and: [{ roundNumber: { $lt: signatureData.roundNumber - 3 } }, { taskId: plannerTaskID }],
                  },
                  { taskId: { $ne: plannerTaskID } },
                ],
              },
              { status: SpecStatus.IN_PROGRESS },
            ],
          },
          { $and: [{ status: SpecStatus.INITIALIZED }] },
        ],
      },
      {
        $push: {
          assignedTo: {
            stakingKey: requestBody.stakingKey,
            taskId: plannerTaskID,
            roundNumber: signatureData.roundNumber,
            githubUsername: signatureData.githubUsername,
            todoSignature: requestBody.signature,
          },
        },
        $set: {
          status: SpecStatus.IN_PROGRESS,
          taskId: plannerTaskID,
          roundNumber: signatureData.roundNumber,
        },
      },
      { new: true },
    )
      .sort({ createdAt: 1 })
      .exec();

    if (!updatedTodo) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "No available todos found",
        },
      };
    }

    // Validate required data fields
    if (!updatedTodo.repoOwner || !updatedTodo.repoName) {
      return {
        statuscode: 409,
        data: {
          success: false,
          message: "Todo data is incomplete",
        },
      };
    }

    return {
      statuscode: 200,
      data: {
        success: true,
        role: "worker",
        data: {
          repo_owner: updatedTodo.repoOwner,
          repo_name: updatedTodo.repoName,
          description: updatedTodo.description,
        },
      },
    };
  } catch (error) {
    console.error("Error fetching todos:", error);
    return {
      statuscode: 500,
      data: {
        success: false,
        message: "Failed to fetch todos",
      },
    };
  }
}

=== File: middle-server/src/controllers/feature-builder/planner/checkRequest.ts ===

-- Chunk 1 --
// checkRequest.ts:6-24
function verifyRequestBody(req: Request): {
  stakingKey: string;
  roundNumber: string;
  prUrl: string;
} | null {
  try {
    console.log("Request body:", req.body);

    const stakingKey = req.body.stakingKey as string;
    const roundNumber = req.body.roundNumber as string;
    const prUrl = req.body.prUrl as string;
    if (!stakingKey || !roundNumber || !prUrl) {
      return null;
    }
    return { stakingKey, roundNumber, prUrl };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// checkRequest.ts:26-52
async function checkToDoAssignment(stakingKey: string, roundNumber: string, prUrl: string): Promise<Spec | null> {
  try {
    const data = {
      stakingKey,
      roundNumber,
      prUrl,
      taskId: plannerTaskID,
    };
    console.log("Data:", data);

    const result = await SpecModel.findOne({
      assignedTo: {
        $elemMatch: {
          stakingKey: stakingKey,
          taskId: plannerTaskID,
          roundNumber: Number(roundNumber),
        },
      },
    }).lean();

    console.log("Todo assignment check result:", result);
    return result;
  } catch (error) {
    console.error("Error checking todo assignment:", error);
    return null;
  }
}

-- Chunk 3 --
// checkRequest.ts:54-78
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }
  const spec = await checkToDoAssignment(requestBody.stakingKey, requestBody.roundNumber, requestBody.prUrl);

  if (!spec) {
    res.status(409).json({
      success: false,
      message: "No matching todo assignment found",
    });
    return;
  }

  res.status(200).json({
    success: true,
    message: "Todo assignment verified successfully",
    data: spec,
  });
}

=== File: middle-server/src/controllers/feature-builder/planner/addRequest.ts ===

-- Chunk 1 --
// addRequest.ts:8-21
function verifyRequestBody(req: Request): { signature: string; stakingKey: string } | null {
  try {
    console.log("req.body", req.body);
    const signature = req.body.signature as string;
    const stakingKey = req.body.stakingKey as string;
    if (!signature || !stakingKey) {
      return null;
    }

    return { signature, stakingKey };
  } catch {
    return null;
  }
}

-- Chunk 2 --
// addRequest.ts:24-51
async function verifySignatureData(
  signature: string,
  stakingKey: string,
): Promise<{ roundNumber: number; prUrl: string } | null> {
  try {
    const { data, error } = await verifySignature(signature, stakingKey);
    if (error || !data) {
      console.log("signature error", error);
      return null;
    }
    const body = JSON.parse(data);
    console.log("signature payload", { body, stakingKey });
    if (
      !body.taskId ||
      body.taskId !== plannerTaskID ||
      // typeof body.roundNumber !== "number" ||
      body.action !== "add" ||
      !body.prUrl ||
      !body.stakingKey ||
      body.stakingKey !== stakingKey
    ) {
      return null;
    }
    return { roundNumber: parseInt(body.roundNumber), prUrl: body.prUrl };
  } catch {
    return null;
  }
}

-- Chunk 3 --
// addRequest.ts:52-94
async function updateAssignedInfoPrUrl(
  stakingKey: string,
  roundNumber: number,
  prUrl: string,
  signature: string,
): Promise<{ statuscode: number; data: { success: boolean; message: string } }> {
  console.log("updateAssignedInfoWithIPFS", { stakingKey, roundNumber, prUrl, signature });
  const result = await SpecModel.findOneAndUpdate(
    {
      assignedTo: {
        $elemMatch: {
          taskId: plannerTaskID,
          stakingKey: stakingKey,
          roundNumber: roundNumber,
        },
      },
    },
    {
      $set: { "assignedTo.$.prUrl": prUrl },
    },
  )
    .select("_id")
    .lean();

  console.log("prUrl update result", result);

  if (result !== null) {
    return {
      statuscode: 200,
      data: {
        success: true,
        message: "PR URL updated",
      },
    };
  }
  return {
    statuscode: 401,
    data: {
      success: false,
      message: "Failed to update PR URL",
    },
  };
}

-- Chunk 4 --
// addRequest.ts:95-124
async (req: Request, res: Response) => {
  const requestBody = verifyRequestBody(req);
  if (!requestBody) {
    res.status(401).json({
      success: false,
      message: "Invalid request body",
    });
    return;
  }

  const signatureData = await verifySignatureData(requestBody.signature, requestBody.stakingKey);
  if (!signatureData) {
    res.status(401).json({
      success: false,
      message: "Failed to verify signature",
    });
    return;
  }

  if (!(await isValidStakingKey(plannerTaskID, requestBody.stakingKey))) {
    res.status(401).json({
      success: false,
      message: "Invalid staking key",
    });
    return;
  }

  const response = await addPRUrlLogic(requestBody, signatureData);
  res.status(response.statuscode).json(response.data);
}

-- Chunk 5 --
// addRequest.ts:126-138
async (
  requestBody: { signature: string; stakingKey: string },
  signatureData: { roundNumber: number; prUrl: string },
) => {
  console.log("prUrl", signatureData.prUrl);
  const result = await updateAssignedInfoPrUrl(
    requestBody.stakingKey,
    signatureData.roundNumber,
    signatureData.prUrl,
    requestBody.signature,
  );
  return result;
}

=== File: middle-server/src/controllers/feature-builder/planner/startPlanner.ts ===

-- Chunk 1 --
// startPlanner.ts:3-8
interface PlannerRequestBody {
  sourceUrl: string;
  forkUrl: string;
  issueSpec: string;
  bountyId: string;
}

-- Chunk 2 --
// startPlanner.ts:10-14
async (req: Request, res: Response) => {
  console.log(req.body);
  const response = await startPlannerLogic(req.body as PlannerRequestBody);
  res.json(response.data);
}

-- Chunk 3 --
// startPlanner.ts:16-53
async (
  requestBody: PlannerRequestBody,
): Promise<{
  statuscode: number;
  data: {
    success: boolean;
    data?: any;
    message?: string;
  };
}> => {
  try {
    const baseUrl = process.env.NODE_ENV === "production" ? "http://planner-agent:8080" : "http://127.0.0.1:8080";

    const response = await fetch(`${baseUrl}/create-plan`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(requestBody),
    });
    const data = await response.json();
    return {
      statuscode: response.status,
      data: {
        success: response.ok,
        data: data,
      },
    };
  } catch (error) {
    return {
      statuscode: 500,
      data: {
        success: false,
        message: error instanceof Error ? error.message : "Unknown error",
      },
    };
  }
}

=== File: middle-server/src/middleware/auth.ts ===

-- Chunk 1 --
// auth.ts:3-37
(req: Request, res: Response, next: NextFunction): void => {
  const authHeader = req.headers.authorization;

  if (!authHeader) {
    res.status(401).json({
      success: false,
      message: "No authorization header provided",
    });
    return;
  }

  const token = authHeader.split(" ")[1];

  if (!token) {
    res.status(401).json({
      success: false,
      message: "No bearer token provided",
    });
    return;
  }

  // In a real application, you would verify the token against your authentication system
  // For now, we'll just check if it matches the expected token from environment variables
  const expectedToken = process.env.PROMETHEUS_INCOME_REQUEST_API_KEY;

  if (token !== expectedToken) {
    res.status(403).json({
      success: false,
      message: "Invalid bearer token",
    });
    return;
  }

  next();
}

=== File: middle-server/src/utils/sign.test.ts ===

-- Chunk 1 --
// sign.test.ts:6-57
() => {
  let keypair: Keypair;

  beforeAll(() => {
    keypair = Keypair.generate();
  });

  describe("signData", () => {
    it("should successfully sign data", async () => {
      const testData = { test: "Hello World" };
      const signature = await signData(keypair, testData);
      expect(typeof signature).toBe("string");
      expect(() => bs58.decode(signature)).not.toThrow();
    });
  });

  describe("verifySignature", () => {
    it("should verify valid signature successfully", async () => {
      const testData = { message: "Test Message" };
      const signature = await signData(keypair, testData);
      const publicKey = bs58.encode(Buffer.from(keypair.publicKey.toBytes()));

      const result = await verifySignature(signature, publicKey);

      expect(result.error).toBeUndefined();
      expect(result.data).toBeDefined();
      expect(JSON.parse(result.data!)).toEqual(testData);
    });

    it("should reject invalid signature", async () => {
      const invalidSignature = bs58.encode(Buffer.from("invalid signature"));
      const publicKey = bs58.encode(Buffer.from(keypair.publicKey.toBytes()));

      const result = await verifySignature(invalidSignature, publicKey);

      expect(result.error).toBeDefined();
      expect(result.data).toBeUndefined();
    });

    it("should reject when using wrong public key", async () => {
      const testData = { message: "Test Message" };
      const signature = await signData(keypair, testData);
      const wrongKeypair = Keypair.generate();
      const wrongPublicKey = bs58.encode(Buffer.from(wrongKeypair.publicKey.toBytes()));

      const result = await verifySignature(signature, wrongPublicKey);

      expect(result.error).toBeDefined();
      expect(result.data).toBeUndefined();
    });
  });
}

=== File: middle-server/src/utils/taskState.ts ===

-- Chunk 1 --
// taskState.ts:9-22
async function getTaskState(taskId: string): Promise<string[]> {
  const cachedTaskState = taskCache.get(taskId);
  if (cachedTaskState) {
    return cachedTaskState as string[];
  }

  const connection = new Connection(RPCURL);
  const taskState = await getTaskStateInfo(connection, taskId);
  //   console.log(Object.keys(taskState.stake_list));
  const stakeListKeys = Object.keys(taskState.stake_list);

  taskCache.set(taskId, stakeListKeys);
  return stakeListKeys;
}

-- Chunk 2 --
// taskState.ts:24-39
async function isValidStakingKey(taskId: string, pubKey: string): Promise<boolean> {
  // Skip blockchain checks during testing
  if (BYPASS_TASK_STATE_CHECK) {
    console.log(`[TEST MODE] Bypassing task state check for stakingKey: ${pubKey}`);
    return true;
  }

  let stakeListKeys: string[];
  try {
    stakeListKeys = await getTaskState(taskId);
  } catch (error) {
    console.log("Error fetching task state", error);
    return true;
  }
  return stakeListKeys.includes(pubKey);
}

=== File: middle-server/src/utils/sign.ts ===

-- Chunk 1 --
// sign.ts:6-11
async function signData(keypair: Keypair, body: Record<string, unknown>): Promise<string> {
  const msg = new TextEncoder().encode(JSON.stringify(body));
  const signedMessage = nacl.sign(msg, keypair.secretKey);
  const bs58Encoded = bs58.encode(signedMessage);
  return bs58Encoded;
}

-- Chunk 2 --
// sign.ts:13-15
async function bs58Decode(data: string): Promise<Uint8Array> {
  return new Uint8Array(bs58.decode(data));
}

-- Chunk 3 --
// sign.ts:17-19
function decodePayload(payload: Uint8Array): string {
  return new TextDecoder().decode(payload);
}

-- Chunk 4 --
// sign.ts:21-33
async function verifySignature(
  signedMessage: string,
  stakingKey: string,
): Promise<{ data?: string; error?: string }> {
  try {
    const payload = nacl.sign.open(await bs58Decode(signedMessage), await bs58Decode(stakingKey));
    if (!payload) return { error: "Invalid signature" };
    return { data: decodePayload(payload) };
  } catch (e) {
    console.error(e);
    return { error: `Verification failed: ${e}` };
  }
}

=== File: middle-server/src/utils/issueUtils.ts ===

-- Chunk 1 --
// issueUtils.ts:3-27
async function getPRDict(issueUuid: string) {
  const todos = await TodoModel.find({ issueUuid, status: TodoStatus.APPROVED }).select("assignees").lean();

  console.log("todos", todos);

  // Create a dictionary with staking keys as keys and arrays of PR URLs as values
  const prDict: Record<string, string[]> = {};

  // Add todos that have PR URLs and staking keys
  for (const todo of todos) {
    if (todo.assignees) {
      for (const assignee of todo.assignees) {
        if (assignee.prUrl && assignee.stakingKey) {
          if (!prDict[assignee.stakingKey]) {
            prDict[assignee.stakingKey] = [];
          }
          prDict[assignee.stakingKey].push(assignee.prUrl);
        }
      }
    }
  }

  console.log("prDict", prDict);
  return prDict;
}

=== File: middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1-150
 asm   (`` `` `` ` ` ` ``  ` ```~ `~`|`~`	~~~ ``~~ `~`~ `~~`~`~`~ `
`~~`~ `~~ `~`~`| `} `} `~ `~ `| `| 6__wbindgen_placeholder____wbindgen_object_drop_ref __wbindgen_placeholder____wbindgen_error_new  __wbindgen_placeholder____wbg_log_fb911463b057a706 __wbindgen_placeholder____wbindgen_object_clone_ref __wbindgen_placeholder____wbindgen_is_object __wbindgen_placeholder____wbindgen_jsval_loose_eq  __wbindgen_placeholder____wbindgen_boolean_get __wbindgen_placeholder____wbindgen_number_get __wbindgen_placeholder____wbindgen_string_get __wbindgen_placeholder____wbindgen_number_new __wbindgen_placeholder____wbindgen_bigint_from_u64 __wbindgen_placeholder____wbindgen_string_new  __wbindgen_placeholder____wbg_set_20cbc34131e76824 __wbindgen_placeholder____wbindgen_is_undefined __wbindgen_placeholder____wbg_instruction_new __wbindgen_placeholder____wbg_pubkey_new __wbindgen_placeholder__
__wbg_debug_9a6b3243fbbebb61 __wbindgen_placeholder__
__wbg_error_788ae33f81d3b84b __wbindgen_placeholder____wbg_info_2e30e8204b29d91d __wbindgen_placeholder____wbg_log_1d3ae0273d8f4f8a __wbindgen_placeholder____wbg_warn_d60e832f9882c1b2 __wbindgen_placeholder____wbg_new_abda76e883ba8a5f __wbindgen_placeholder__
__wbg_stack_658279fe44541cf6 __wbindgen_placeholder__
__wbg_error_f851667af71bcfc6 __wbindgen_placeholder____wbindgen_is_string __wbindgen_placeholder____wbg_get_44be0491f933a435  __wbindgen_placeholder__
__wbg_length_fff51ee6522a1a18 __wbindgen_placeholder____wbg_new_898a68150f225f2e __wbindgen_placeholder____wbindgen_is_function __wbindgen_placeholder____wbg_new_56693dbed0c32988 __wbindgen_placeholder____wbg_next_526fc47e980da008 __wbindgen_placeholder____wbg_next_ddb3312ca1c4e32a __wbindgen_placeholder____wbg_done_5c1f01fb660d73b5 __wbindgen_placeholder__
__wbg_value_1695675138684bd5 __wbindgen_placeholder____wbg_iterator_97f0c81209c6c35a __wbindgen_placeholder____wbg_get_97b561fb56f034b5  __wbindgen_placeholder____wbg_call_cb65541d95d71282  __wbindgen_placeholder____wbg_new_b51585de1b234aff __wbindgen_placeholder__$__wbg_newwithlength_3ec098a360da1909 __wbindgen_placeholder____wbg_set_502d29070ea18557 __wbindgen_placeholder__
__wbg_isArray_4c24b343cb13cfb1 __wbindgen_placeholder____wbg_push_ca1c26067ef907ac  __wbindgen_placeholder__-__wbg_instanceof_ArrayBuffer_39ac22089b74fddb __wbindgen_placeholder__
__wbg_values_e80af618f92c8649 __wbindgen_placeholder____wbg_set_bedc3d02d0f05eb0 __wbindgen_placeholder__$__wbg_isSafeInteger_bb8e18dd21c97288 __wbindgen_placeholder__
__wbg_buffer_085ec1f694018c4f __wbindgen_placeholder____wbg_new_8125e318e6245eed __wbindgen_placeholder____wbg_set_5cf90238115182c3 __wbindgen_placeholder__
__wbg_length_72e2208bbc0efc61 __wbindgen_placeholder__,__wbg_instanceof_Uint8Array_d8d9cb2b8e8ac1d4 __wbindgen_placeholder____wbindgen_debug_string __wbindgen_placeholder____wbindgen_throw __wbindgen_placeholder____wbindgen_memory  
     	
   	    
  	   

      
    
   
       	       
 !
  	"$&    
                           

      
 p 	A 
*memory bincode_js_deserialize borsh_bpf_js_deserialize __wbg_hash_free solana_program_init __wbg_message_free "__wbg_get_message_recent_blockhash "__wbg_set_message_recent_blockhash __wbg_instruction_free hash_constructor 
hash_toString 
hash_equals 
hash_toBytes __wbg_instructions_free instructions_constructor instructions_push pubkey_constructor pubkey_toString pubkey_isOnCurve 
pubkey_equals pubkey_toBytes pubkey_createWithSeed pubkey_createProgramAddress pubkey_findProgramAddress systeminstruction_createAccount 'systeminstruction_createAccountWithSeed systeminstruction_assign  systeminstruction_assignWithSeed systeminstruction_transfer "systeminstruction_transferWithSeed systeminstruction_allocate "systeminstruction_allocateWithSeed $systeminstruction_createNonceAccount %systeminstruction_advanceNonceAccount &systeminstruction_withdrawNonceAccount 'systeminstruction_authorizeNonceAccount __wbg_pubkey_free __wbindgen_malloc __wbindgen_realloc __wbindgen_add_to_stack_pointer __wbindgen_free __wbindgen_exn_store 	 A
mG|onetiwgLxN
	;&# Ak"$  A A U!  (
!$  (!%  (!   (!!  (
!&  (!'  (!"  ( !# @  Atj!(@A !@  j  j(  "At AqAtr AvAq Avrr6  Aj"A G
 
 (<! (8! (4! (0! (,! ((! ($! ( ! (
! (! (! (! (
! (!
 (!
 ( !
  '6  &6  %6  $6   6  !6  "6  #6  
Aߨj"6  
A݉j"6  
Ak"6  AȨk"6 Aj" Aj"
 Aj"
 Aj"  6L  6H  6D  6@ (! (! (! (!   6  !6  "6  #6  6  6  6  6 
 
  A@k (! (!	 (!
 (!
  6  6  6  6  
6  
6  	6  6  Aۄj"6  Aj"6  Ak"6  Ak"6  
 
   6\  6X  6T  6P (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  A j (! (!	 (!
 (!
  6  6  6  6  
6  
6  	6  6  Ak"6  Aj"6  Aơj"6  Aj"6  
 
   6l  6h  6d  6` (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  A j (! (!	 (!
 (!
  6  6  6  6  
6  
6  	6  6  Aj"6  Ak"6  Ak"6  Ak"6  
 
   6|  6x  6t  6p (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  A j (! (!	 (!
 (!
  
6  
6  
6  6  6  6  6  6  6  6  6  6  6  6  6  6 Aj"  
 
 y (! (!
 (!
 (!
  6  6  6  6  
6  
6  	6  6  
Ak"6  
Ak"6  
Aƻ j"6  Aòj"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  6  6  6  6  6  6  6  6  
6  
6  
6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  Aؤj"6  Aj"6  Aj"6  Aڑj"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  6  6  6  6  
6  
6  
6  6  6  6  6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  A݆k"6  Ak"6  Ak"6  Ak"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  
6  
6  
6  6  6  6  6  6  6  6  6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  Ak"6  Ak"6  AƩ6j"6  AҤj"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  
6  
6  
6  6  6  6  6  6  6  6  6  6  6  6  6  6   

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:151-300
 
 y (! (!
 (!
 (!
  6  6  6  6  
6  
6  	6  6  
Aܽj"6  
Aj"6  
A۱j"6  Aj"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  6  6  6  6  6  6  6  6  
6  
6  
6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  A橨j"6  Aj"6  Ak"6  Ak"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  6  6  6  6  
6  
6  
6  6  6  6  6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  A߮k"6  Ak"6  Ak"6  Ak"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  
6  
6  
6  6  6  6  6  6  6  6  6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  A篴k"6  Ak"6  A k"6  Aj"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  
6  
6  
6  6  6  6  6  6  6  6  6  6  6  6  6  6   
 
 y (! (!
 (!
 (!
  6  6  6  6  
6  
6  	6  6  
Aj"6  
Aj"6  
Aj"6  A¥j"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  6  6  6  6  6  6  6  6  
6  
6  
6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  Aj"6  Aj"6  Aϔj"6  A߹j"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  6  6  6  6  
6  
6  
6  6  6  6  6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  Aj"6  Aƕj"6  Ak"6  Ak"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6 
 
  Aj (! (!	 (!
 (!
  6  6  6  6  
6  
6  
6  6  6  6  6  6  6  6  6  6   
 
 y (! (! (! (!  6  6  6  6  
6  
6  	6  6  Ak"6  Ak"6  Ak"6  Ak"6  
 
   6  6  6  6 (! (! (! (!  
6  
6  	6  6  6  6  6  6  $j!$  %j!%  &j!&  'j!' 
 
   (  j!  ( !j!! ( "j!" ( #j!# A@k" (G
 

   $6
   %6    6   !6   &6
   '6   "6   #6  Aj$ 
$	~# Ak"$ @@@@@@  AO@A   A{O
  A
j"Axq!A ( "	E
A!A  k!  AM@ A Avg" kvAq  AtkA>j!
 AtA j( "E@A ! 

A !  A AvkA  AGt!@@ (Axq" I
   k" O
  ! "
 A ! ! 

 ("     A
vAqjAj( "G   !  At! 
 


A ( "A  A
jAq  A

-- Chunk 3 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:301-450
I"Av" v"Aq@@ AsAq  j"At" A j"  A j( "("G@  6
  6

A  A~ wq6 
   Ar6   j"   (Ar6 Aj

 A ( M
@@ E@A ( " E
  hAtA j( "(Axq k! !@@ (" 
  (" 
  (!@@  (
" F@ AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ ! " Aj  Aj  ("!  AA j( "
 
 A 6 
 E
  (
AtA j"( G@ AA ( Fj  6   E


   6   
A A ( A~ (
wq6 

  (Axq k"   I"!    !  !
 
 
@A  t"A  kr   tqh"At"A j" A j( " ("G@  6
  6

A  A~ wq6 
   Ar6   j"  k"Ar6   j 6 A ( "@ AxqA j!A ( !A ( "A Avt"qE@A   r6  

 (
!  6  6
  6
  6
A  6 A  6   Aj

   6 ("@   6   6
 ("E
    6   6
@@ AO@  Ar6  j" Ar6  j 6 A ( "E
 AxqA j! A ( !A ( "A Avt"qE@A   r6   

  (
!   6  6
   6
  6

   j" Ar6   j"   (Ar6

A  6 A  6 
 Aj

   rE@A !A t" A   kr 	q" E
  hAtA j( ! 
  E

@     (Axq" k" I"!	  ("E@  (!
  	  I" !      ! " 
 

 E
  A ( " M    kOq
  (!@@  (
" F@ AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ ! " Aj  Aj  ("!  AA j( "
 
 A 6 
 E
  (
AtA j"( G@ AA ( Fj  6   E


   6   
A A ( A~ (
wq6 

@@@@@ A ( "K@ A ( " O@ AjA|q"Av@ !  Aj"A 6 A  A|q  AF"6 A   At 6 A  ("E
	 (
!A  ("A ( j" 6 A A ( "     I6 @@A ( "@A ! @   ( "  ("jF
  (" 
 


A ( " A    ME@A  6 
A A6 A  6 A  6 A  6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aį A 6 A A 6 A̯ A 6 A A 6 Aԯ Aȯ 6 Aȯ A 6 Aܯ AЯ 6 AЯ Aȯ 6 Aد AЯ 6 A Aد 6 A Aد 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aİ A 6 A A 6 A̰ A 6 A A 6 A԰ AȰ 6 AȰ A 6 Aܰ Aа 6 Aа AȰ 6 A Aذ 6 Aذ Aа 6 A A 6 A Aذ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A  AjAxq" Ak"6 A A 6 A  A(k"   kjAj" 6    Ar6  jA(6A A6 

  I  Mr
   (
"Aq
  Av F

A A ( "     I6   j!A ! @@@   ( "G@  (" 



  (
"Aq
  Av F

A ! @@   ( "O@    (j"I

  (! 


A  AjAxq" Ak"6 A  A(k"	   kjAj" 6    Ar6  	jA(6A A6   A kAxqAk"    AjI"A6A ) !
 AjA ) 7   
7A  6 A  6 A  6 A  Aj6  A
j! @  A6   Aj"  I
 
  F
  (A~q6   k" Ar6   6   AO@   k

  AqA j!A ( "A  Avt" qE@A    r6  

 (
!   6   6
  6
   6

   6     ( j6 AjAxqAk" Ar6 AjAxqAk"  j" k! A ( F
 A ( F
 ("AqAF@  Axq"`  j!  j"(!
  A~q6   Ar6   j 6  AO@   k

 AqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6

A    k"6 A A ( "  j"6   Ar6   Ar6  Aj

A ( ! @  k"AM@A A 6 A A 6    Ar6   j" (Ar6

A  6 A    j"6   Ar6   j 6    Ar6
  Aj

-- Chunk 4 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:451-600

    j6A A ( " AjAxq"Ak"6 A A (  j"   kjAj"6   Ar6   jA(6A A6 

A   6 A A (  j"6    Ar6

A   6 A A (  j"6    Ar6   j 6 
 Aj

A A ( "  M
A    k"6 A A ( "  j"6   Ar6   Ar6  Aj

   6 ("@   6   6
 ("E
    6   6
@ AO@  Ar6  j"  Ar6   j 6  AO@   k

 AqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6

   j" Ar6   j"   (Ar6
 Aj
 Aj$ 
	~# Ak"$   ) " ) " Aj ) " )"B~ Aj )" )"
B~" Aj )"	 )"
B~" Aj )"
 ) "B~"
 A j 
  Aj   Aj   Aj   Aj 	 
 A j 	  Aj 
  A j  
 Aj   Aj  
 A j   Aj 	  Aj 
 
 A0j  
 Aj  
 Aj   Aj   Aj 	 
 Aj 
 
 A@k     )" ) |" )|" )`|" )|" )" )|" )|"	 )|"
 )P|"
 )" ) |"
 )|"
 )|" )|"B3  V Aj)  
 V Aj)  
 
V Aj)  
 T Aj)  Aj) ||||||||B
|"
B3 
 
V 
 
V A j)  	 
V Aj)   	V Aj)   T Aj)  Aj) |||||||||B
|"B7   )" )0|"	 )p|"
 )|"
 )|"
  T  V Aj)   V A j)   V Aj)   T Aj)  A(j) |||||||||B
 B3|"B7   )" )@|" )|" )|" )|"  
T 
 
V Aj)  
 
V Aj)  	 
V A j)  	 T Aj)  A8j) |||||||||B
 B3|"B7     T  T Aj)   V Aj)   V Aj)   T Aj)  A j) |||||||||B
 B3B~ B|"B7    
B B3|7 Aj$ 
	~@@@@ AO@ Aq"E
  ("A)O
 E@  A 6

 AkAq"Aj"Aq! AtA j(  v!	 AI@  !

 Aq!  !@  5  	~ |">  Aj" 5  	~ B |">  Aj" 5  	~ B |">  A
j" 5  	~ B |">  B ! Aj! Ak"
 


  ("A)O
 E@  A 6
 AtA j5 !	 AkAq"Aj"Aq!@ AI@  !

 Aq!  !@  5  	~ |">  Aj" 5  	~ B |">  Aj" 5  	~ B |">  A
j" 5  	~ B |">  B ! Aj! Ak"
 

 @@  5  	~ |">  Aj! B ! Ak"
 

@   BZ A(F
   Atj >  Aj 
6


 @@  5  	~ |">  Aj! B ! Ak"
 

@   BZ A(F
   Atj >  Aj 
6



@ Aq@@@  ("A)I@ E@A !

 AkAq"Aj"Aq! AI@B !  !

 Aq!B !  !@  5 B~ |">  Aj" 5 B~ B |">  Aj" 5 B~ B |">  A
j" 5 B~ B |">  B ! Aj! Ak"
 




 @@  5 B~ |">  Aj! B ! Ak"
 

 BT
  A(F
   Atj >  Aj!
   6
 Aq@  A A?
 A q@  A A?
 A q@  A A?
 Aq@  A A
?
 Aq@  A A?
   R


 A(A  
A(A(A  
~# Ak"$  ) ! )! )! )! ) !@ Aj   Aj  B~"
 A@k  B~"	 Aj 	  A j   A0j  
 A j   A j   Aj 	  Aj 
  Aj   Aj      Aj   A j   )" )P|"B" ) |" )" )|"B" )|" ) " )|"B" )`|"
 )p" )0|"	B" )|"
 )" )@|"
B" )|"
B3 
 T Aj)  
 T Aj)  A j) ||B 
B?||B
|"
B3 

-- Chunk 5 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:601-750
 
T 
 T Aj)  	 T A j)  A8j) ||B 	B?|||B
|"	B3 	 
T 
 T A j)   T A(j)  Aj) ||B B?|||B
|"B3  V  T Aj)   T Aj)  Aj) ||B B?|||B
|"B3  T  T Aj)   T Aj)  A j) ||B B?|||B
B~ 
B|"B! 
B B3|! B! B! 	B! Ak"
 
   7    7   7   7   7  Aj$ 
	~# A k"$ @@@@@@@@ ("AO@  Ak"6  ( "Aj6  (  

 A8jAA A - 8AF@ (<

 )8"BBR
 B 
"E@A !A!

  I
   k"6  ( " j"6  A8j A AA (<! (8AF
 (@  C!  6  6  )"70  6, AxG@ B ! !

 A8jA   A OA AA (<! (8AF
 A 6  (@6  6
@@@ @  Ak"6  Aj"6  -  ! !

 A8jAA A - 8AF@A ! - 9!

 )8"BBR
 B!A !
 (" (
F@ A
jÅ 
 ( j :    Aj"6 Ak"
 
 (! (
! (,AxG@ A,j
 AxG


 (<! (8! A
j (,AxF
 A,j

 (<! (8!

  (@A  
 AjAA A (! (!

  (@A  
  Ax6     B 7

 A8j  D (8E@   6    B 7 

  )<7  6
   B 7 A 64 B7, A 6X A: P B 7H A 6@ A 68  A,j6T A8j!# A0k"$  Aj"- AF@  - :  A6
 A 6 B7$  B
7  AjB 7  Aj6  (
 (  AjI

 A6
 A̒ 6 B7$  B
7  Aj6  (
 (  AjI
 A0j$ 
 A(j A4j( 6   ),7   AjA A j A
j  Ax6 
 A j$ 
A܆ A7 A jĂ A  
@@   AjA|q"  k"I
   k"AI
  Aq!A !@   F"	
 @   k"A|K@A !

A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj! Aj"
 

 	
    j!@  ,  AJj! Aj! Aj"
 

   j! @ E
    A|qj",  AJ! AF
   , AJj! AF
   , AJj!
 Av!  j!@  ! E
A  AO"Aq! At! A ! AO@   Aqj! !@  ( "AsAv AvrAqj ("AsAv AvrAqj ("AsAv AvrAqj (
"AsAv AvrAqj! Aj" G
 

  k!   j!  AvAq AqjAlAv j! E
 
  AqAtj" ( "AsAv AvrAq" AF
    ("AsAv AvrAqj" AF
   (" AsAv  AvrAq j
"AvA
q AqjAlAv j
 E@A 
 Aq!@ AI@

 A|q!@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
    j!@  ,  AJj! Aj! Ak"
 

 
# Ak"$ A!
@ (
"	A" ( "
("  
 @ E@A !

A  k!  ! !@@@@  j!A !@@  j"
-  "A kAqAI A"Fr A Fr
  Aj"G
 
  j

 
Aj!@ 
,  "
A N@ 
Aq!

 -  A?q! 
Aq! 
Aj! 
A_M@ At r!

 -  A?q Atr! 
Aj! 
ApI@  A
tr!

 AtA q -  A?q Atrr! 
Aj!
 Aj AB@@ - AF
  -  - kAqAF
    j"K
@ E
   M@  G


   j,  AL


-- Chunk 6 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:751-900
@ E
   M@  jE


   j j,  AL

 	   j  k j 
(
" 
@ - AF@ 	 (   E


 	 - " Ajj -  k  

A AI
 A AI
 AA AI
 j j!
A AI
 A AI
 AA AI
 j" j!  k"E



     Ađ  


  j
" I
 A !@ E
   M@ " G


 "  j,  AL

 E@A !

  M@ !  F


 !   j,  AJ

     Aԑ  
 	   j  k 
(
 
  	A"   !

 Aj$  

'~# Ak"$ @@ ("AO@  Ak6  ( "Aj6  (  

 A jAA A - xAF@ (|

 )x"!BBR
 !B 
! A 6 A 6 @@@@ @ A j! Aj!
 A j! A j! Aj! Aj!@ A j ; )|!! (x"AxF@  A6    !7

  !7  6
 ("AO@  Ak6  ( "Aj6  (  

 A jAA A - xAF@ (|

 )x"!BBR
 !B 
! A 60 A 6(  @ A j ; )|!! (x"AxF
  !78  64 A j!# Ak"$  A8j S@@@@@ - 8E@ A
j - ;:   Aj A j) 7  A
j A j)  7    / 9;
  )D7  ("AO@ )<!"  Ak"6  ( "Aj6  )  !#@@ AO@  A
k6  A
j6  ( 

 A8jAA A - 8AF@ (<

 )8"!BBR
 !B 
"E@A!A !A !

 Ax6  A8jA   A OA AA0 (<! (8AF
 A 64  (@60  6, A@k!	 A j"Aj!@ A8j!# A k"$ @@@@ ("
E@ AA A

  
Ak6  ( "
Aj6   
-  "
: G 
AI
 A6$ A 6  B7, A6L  A j6(  A j6H Aj"
 A j[ A 

 -  AF@ - !


 ) "!BBR
 !B!

 A j S -  E@ A j"
 - #:   Aj"
 A4j) 7  Aj" A9j)  7    / !;D  ),7 ("
AO@ )$!!  
Ak6  ( "
Aj6  
)  !$ Aj 
-  :    /D;    )7 
 Aj 
) 7   Aj )  7    
: (  $7   !7 

 A jArAA A
 )$!! A: (  !7 

 A: (  !7 
 A j$  - `"
AF
 )8!! Aj"
 	Aj) 7  Aj"
 	Aj) 7  A j" 	Aj) 7   	) 7p  (  6h  (  6 k (4" (,F@# Ak"$  Aj A,j"
 
( AAA0v ("
AxG@ 
 (
Å  
 Aj$ 
 (0 A0lj" )p7  !7   
: (  (h6 ) A,j ( k6   Aj ) 7  Aj 
) 7  A j 
) 7   Aj"64 Ak"
 
 (0! (,! ( AxG@ A jAA0
 AxF

  /
;    ) 7 
  6(  #7   "7  Aj A
j-  :   Aj Aj) 7   Aj A
j)  7     B 7,

 (<! (8! A,jAA0 ( AxF
 A jAA0

 A8jArAA A
 )<!!

 (<! (8!
  B !!


-- Chunk 7 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:901-1050
  (@A  
 Ax6(  !7 
 Aj$  )x!! ("AxF
  ) 7   ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj( 6   6h  !7@ Aj A<j( 6   )47 A j! A@k!# A k"$  Aj! Aj!
# Ak"$ @ A(j"( "	E@ A 6  6
  
) 7  Aj 
Aj( 6 

 (!# A k"$   6
  	6 Aj Aj 
 (!
@@ ("
E
  @ Ak!@ 	 
AtjAj( !	  6
  	6 Aj Aj 
 (
!
 ("
E
 Ak"AG
 

A !

A !

  
6
  6  	6  
6  A j$  Aj! ( E@  6 Ax6   ) 7 A
j Aj( 6  


  6
  ) 7  
) 7  Aj Aj( 6  Aj 
Aj( 6 
 Aj$ @ (AxG@ A8j A
j( 6  A0j Aj) 7  A(j A
j) 7   )7  A@k!A !	# A0k"
$  A j"(E@ (
!"A 6 A 6  6  A;  ) 7 Aj Aj( 6   A8CA 

 
Aj Aj"Aj( 6  
 ) 7 
A(j Aj( 6  
 ) 7  
Aj! 
A j!	 A
j!
# Ak"$  Aj!
# A k"$ @@@@@@ 
Aj"
( "/"A
O@ 
("AI
 A j!
 A j! Ak
 Aj" 
("A
lj!
 
(!@  Aj"
I@ 
 	) 7  
Aj 	Aj( 6 

  
A
lj 
  k"A
l 
Aj 	Aj( 6  
 	) 7   
A8lj  A8lj A8l
  A8lj A8C 
 6` 
 6\ 
 6X 
Ax6   Aj;

 A6  6
  
(6 Ak!

  6
  
(6 A6 Aj A
j (`"Aj! (d!
@ /"
AM@  	) 7  Aj 	Aj( 6 

 Aj  
Ak"A
l Aj 	Aj( 6   	) 7  Aj Aj A8l
 Aj A8C  
Aj; 
 AjA C"A6`  
6\  6X

 A j!
 A j! A6  6
  
(6

 A6  6
  
(6A !
 Aj A
j ( "
Aj A
lj! 
( !@  
/"
O@  	) 7  Aj 	Aj( 6 

 A
j  
 k"A
l Aj 	Aj( 6   	) 7  
 A8lj"	A8j 	 A8l
 
 A8lj A8C 
 
Aj; 
 AjA C" 6`  6\  
6X
 A j$ @@@ (AxF@  (h6  )`7 

 (T! (P! Aj AjA C (h! (`!
 (d! (X!	 (\!@ ("@ Aj!
@  6t  /6|  Aj6x Aj! Aj!# Ak"$ @  A j"("
AkF@@@ ( "
/A
O@ ("AI
 A j! A j!@@@ Ak 
 A6  
6  
6
 Ak! Aj A
j

 A6  
6  
6
 Aj" A
j A6|  )`7t A j  

-- Chunk 8 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1051-1200
 	b  A C

 A6  
6  
6
 Aj A
jA !

   
 	b Ax6 

 A j! A j! A6  
6  
6
 Aj A
j
  6|  ( 6x  ( 6t A j  
 	b  AjA C

A A5A  
 Aj$  (AxF
 (T! (P! Aj AjA C (X!	 (\! ("
 

 Aj AjA C  6\  	6X  6T  6P 
( "( "E
 (!
" 6 A ; A 6 A ;  6  
Aj"6  6   6  6 Aj! Aj!
@@  Aj"(AkF@ ( "/"A
O
  Aj";  A
lj"
Aj Aj( 6  
Aj ) 7   A8lj 
A8C  AtjAj 	6  	 ; 	 6

A A0A  
A A A  

  6  6  
6 
 Aj$ 

A  
 (
! 
(
!	 
(! 
(
!  (Aj6  	6  6  6   (
6
 
A0j$  Ax6(

  ( (A8lj"A8C  A8C
 A j$  (AxG@ 
AA0
 Ak"
 
 (0A 
6   )(7  Aj( 6   )
7@ A j  A@k Aj (x@ 
  Aj"  G
 

   ) 7  A 6   A
j Aj( 6 

 A4j
 A(j
  A6    !7 A
j
 

  A6    !7
 Aj$ 

~# Ak"$  A AU!
@@@@   ("M@ A)O
  Atj!
@@ @ Aj!
 At!	@ 
 Atj!@ ! !  
F
	 Aj! Aj! ( ! Aj"
! E
 
 !B ! 	! !  !@ A(O
   5 | 5  ~|">  B ! Aj! Aj! Aj! Ak"
 
  BZ  j"A(O
 
 Atj >  
 
 j"  I! 
!
 
 
@  
F
 Aj! (  Aj!E
   Ak"  I!
 
 
 A(A  
 A(A  
 A)O
 At!
 Aj!
   Atj!  !@ 
 Atj!@ !
 !  F
 Aj! 
Aj! ( !	 Aj"! 	E
 
 	!B ! 
!	 
! !@@ A(O
   5 | 5  ~|">  B ! Aj! Aj! Aj! 	Ak"	
 
  BZ  
j"A(O
 
 Atj >  
 
 
j"  I! !


 A(A  
 A(A  
 A(A  
 A(A  
   
AC 6 
Aj$ 
@  ( "  ("r@@ AqE
   j!@  (
"E@ !

 !@ " F
 Aj ,  "A N
  Aj A`I
  Aj ApI
  Aj
" k j! Ak"
 


-- Chunk 9 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1201-1350
  F
  ,    @ E
   M@  F
A 

  j,  A@N
 A 

 
"!   !
 E
  (!@ AO@  <!

 E@A !

 Aq!@ AI@A !A !

 A
q!A !A !@   j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
   j!@  ,  AJj! Aj! Ak"
 

@  I@  k!@@@  - "A  AG"Ak 
 !A !

 Av! AjAv!
 Aj!  (!  ( !  (
! @ Ak"E
    (  E
 
A


     (
 @A
A !@  F@A 
 Aj!    (  E
 
 Ak I
  (
    ( (
 
  (
    ( (
 
 E@  (!A-!
 Aj

A+A   ("Aq"!
  j
!@ AqE@A !

@ AO@  <!

 E@A !

 Aq!	@ AI@A !

 A
q!
A !@   j"
,  AJj 
Aj,  AJj 
Aj,  AJj 
Aj,  AJj! 
 Aj"G
 

 	E
   j!@  ,  AJj! Aj! 	Ak"	
 

  j!
  ( E@  (
"  ( "  
  @A
     (
 
@@@   ("O@  (
"  ( "  
  E
A
 AqE
  (!
  A06  - !
A!  A:   (
"  ( "	 
  
  kAj!@@ Ak"E
 A0 	(  E
 
A
    	(
 @A
   
:    
6A 
     (
 !

  k!@@@A  - " AF"Ak 
 !A !

 Av! AjAv!
 Aj!  (!  ( !  (
! @@ Ak"E
    (  E
 
A
A!    
  
      (
 
 A !@  F@A 
 Aj!    (  E
 
 Ak I
 

# A k"$ @@@@@@@@@@@@ ( 
 A F

 AqE AIr
@AA  AO" Ar" A
t" AtA j( A
tI" Ar" AtA j( A
t K" Ar" AtA j( A
t K" Aj" AtA j( A
t K" Aj" AtA j( A
t K"AtA j( A
t" F  Kj j"A!M@ AtA j"( Av!A!@ A!F
  (Av! 
 A 

 Ak( A q
!@  AsjE
   k!A  AM! Ak!A !@  F
  A j-  j" K
  Aj"G
 
 !
 Aq

 A"A  
 AA  
E
 A : 

-- Chunk 10 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1351-1500
 A ;  AvA j-  : 
  AvAqA j-  :   AvAqA j-  :   A
vAqA j-  : 
  AvAqA j-  : 
 ArgAv" Aj"j"A :   AkA :    Ak"jA :   Aj" AqA j-  :    A
: 
   : 
   )7  A :   Aj / ; 
	
  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

 AqE
  A;
  B 7  A ; 

 Aq

A  A I
 A A I
  AO@ A qA
G A qA
Gq A
kAzIq A
kArIq A
kAqIq A
kAlIq A
kAtIq AЦ
kA{Iq A8kATIq A8Iq AO
 A A,A AAЙ A]

 A A(A AA A]
E@ A :  A ;  AvA j-  :   AvAqA j-  :   AvAqA j-  :   A
vAqA j-  :   AvAqA j-  :  ArgAv" Aj"j"A :   AkA :    Ak"jA :   A
j" AqA j-  :    A
: 
   : 
   )7  A : 
  Aj / ; 

   6  A:  

  A;
  B 7  A ; 
 A j$ 
@ AI@  !

@  A   kAq"j"  M
   ! ! @ !@  -  :   Aj! Aj! Ak"
 

 AkAI
 @  -  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj! Aj" G
 

   k"A|q"j!@  j"AqE@  M
 !@  ( 6  Aj! Aj" I
 


  M
  At"Aq! A|q"	Aj!A  kAq!
 	( !@   v ( " 
tr6  Aj! Aj" I
 

 Aq!  j!
@   j"O
  Aq"@@  -  :   Aj! Aj! Ak"
 

 AkAI
 @  -  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj! Aj" G
 

  
~@ E
  Ak"A   O! AjA|q k!A !@@@@  j-  ""A N@  kAq
  O
@  j"( ( rAxq
 Aj" I
 


B !
B!	@@~@@@@@@@@@ A j-  Ak 

 Aj" I
B !
B !	
	
B !
 Aj" I
B !	

B !
 Aj" I
B !	

  j,  AJ


  j,  !@@ Ak"@ A
F@


 
 A`qAF


 AJ


 AjAqA
O@ A~qAnG
 A@H


 A@H


  j,  !@@@@ Ak    
 AjAqAK A@Nr


 A jAqA0O


 AJ

  Aj"M@B !	

  j,  AJ
B !	 Aj" O
  j,  AL
B 

B 

-- Chunk 11 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1501-1650

B !	 Aj" O
  j,  AL

B 
!
B!	
   
  	7  A6 
 Aj!

 Aj!

  M
 @  j,  A H
  Aj"G
 


  K
 

   6   6  A 6 
  Ak"  Ak( "Axq" j!@@ Aq
  AqE
 ( "  j!   k"A ( F@ (AqAG
A   6   (A~q6   Ar6   6 
  `
@@@@@ ("AqE@ A ( F
 A ( F
  Axq"`    j" Ar6   j  6  A ( G
A   6 
  A~q6   Ar6   j  6 
  AI
   kA !A A ( Ak" 6   
A ( " @@ Aj!  (" 
 

A A  AM6 
A  6 A A (   j" 6    Ar6A (  F@A A 6 A A 6 
  A ( "M
A ( "E
A ! A ( "A)I
A !@  ( "O@   (jI

 (!
 
 
A  6 A A (   j" 6    Ar6   j  6 
  AqA j!A ( "A  Avt" qE@A    r6  

 (
!   6   6
  6
   6
A ( "@@  Aj!  ("
 

A A    AM6   O
 A A6 

	~# Ak"$  A8jB 7  A@kB 7  A jB 7  B 70  )  B7   ) "B
B7  B7(  ) BB7  ) 
BB7  ) BB7 A j" A: A j" )  A(j") }B?|"B ) )}B?|"B3|7   B ) )}B?|"B3|7  B ) )}B?|"B3|7  B )  ) }B?|"B3|7  B3B~ B|7  Aj A 8A !@ Aj j" )  A(j j) |7  Aj"A(G
 
 Aj" Aj"A(C# Ak"$  Aj" A: Aj"  8  A: A0j"	  8 Aj" A j"
 8 Aj"
 
 	8# Ak"$  Aj" 
A: Aj"	 A: A0j"
 	A: A j" 
 
8 Aj"
  8 Aj" 
A: Aj"  8 Aj" A: Aj"  8 Aj" A
: Aj"  8 Aj" A: Aj"
  8 Aj" 
A
: Aj"  8 Aj" A2: Aj"  8 Aj" A : Aj"
  8 	 
A2:  	 8 A(j 
A(C Aj$  Aj" A(C  A: Aj" 
 8 A j"	  8  	A: 
  8 
 
!  
 
 !  
  A 8 
 !
 A  	8 B   
rB}" )p" ) "7p  )x" )  "7x  )X" )  "7X  )`" )  "7`   )h" ) "7h  	M  B  - AqB}" B? }"BB? }"B3|7x    BB? }"B3| 7p  BB? }"B3|   7h  BB? }"B3|   7`  B3B~ B|   7X   r:   Aj 	A(C Aj$  - ! Aj AjA(C  ~ AF@ B  B?B}"B? )"}"BB? )"}"B3|  7    BB? )"}"B3| 7    BB? )"}"B3| 7    BB? )"}"B3| 7    B3B~ B| 7 Aj" Aj"A(C Aj  8 Aj A(C Aj A(jA(C  Aj ACB

B 
7  Aj$ 
|# A0k"$ @@@@@@@@@@@@@@@@@@  -  Ak	



 
   - :  A6 A 6 B7
 A 6,  A(j6  Aj6( (
 (  AjI

   )7 A6 A 6 B7
 A6,  A(j6  Aj6( (
 (  AjI

   )7 A6 A 6 B7
 A 6,  A(j6  Aj6( (
 (  AjI

  +! A6 A 6 B7
 A 6
  9(  Aj6  A(j6 (
 (  AjI

   (6 A6 A 6 B7
 A 6,  A(j6  Aj6( (
 (  AjI


   )7 A6 A 6 B7
 A 6,  A(j6  Aj6( (
 (  AjI


 A A



 A A



 A A

	
 A A

 A A

 A A

 A A

 A A


 A A

-- Chunk 12 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1651-1800

 A A


 A A

   (  (
 A0j$ 
~# Ak"$  Aj A C A j Aj )(! A0j" - p"j"A:    "B; B	"	 B"BB( BB BB BB BB BB 	B87 A(j!@@ A?F
  AjA  A?sU A8qA8F
  A jA AjAA  Aj A6

 Aj" A6 Aj" AjA AjAA   A6
 A : p B 7 A 6  Aj"6  Aj6 Aj! Aj! ("E@A  
 A 6
  6  6  ) 7  Aj Aj) 7  Aj Aj( 6   (
 n"6$    kAv"  I6 @ (" (O
 @  Aj6  Aj"("6  (  lj6  ( "E
 (!  ( Atj( "At AqAtr AvAq Avrr6   AjAAЫ  (" (I
 

 A jA  AjA A   Aj Aj)  7    Aj Aj)  7    Aj Aj)  7     ) x7   Aj$ 

# A0k"$   6,   6( A: $ B 7
 A 6 A 6
@@@ ("
E@ (
" E
 ("  Atj!  AkAqAj! ( ! @  Aj( "@ ((  (   (,(
 

 (  A
j Aj(   
  Aj!  Aj" G
 


 (" E
   At!
  AkA?qAj! (! ( ! @  Aj( "@ ((  (   (,(
 

   
j"Aj( 6
  A
j-  : $  Aj( 6  A
j( !A !	A !@@@ Aj( Ak 
 At j"
( 
 
(!
A!
  6  6
 Aj( !@@@ ( Ak 
 At j"( 
 (!
A!	
  6  	6  Aj( Atj"(  A
j Aj(   
  Aj!  
 A j"G
 

  (O
 (( (  Atj" (   ( (,(
 E

A

A 
 A0j$ 
~# Ak"$ @@@  ( "AE@AA "AFA  "AF
A ! A !

 A: ` A j  !

 Aj  A j ( +  (`AF@ )h!
A!A ! 

 Aj @ ("E
  (!  6d  6h  6` Aj A jA  A j ( (
 (HAxF
  A0j A j( "6   )H7(A!A! (,!A 

 A j!# Ak"$ @  @ Aj   Aj A
j( 6   )7 

  ( *E@ Ax6 

   ( /"6  Aj  Aj A
j( 6   )7  AI
   
 Aj$  (T"	AxF"E@ A@k" !   A j( 6   )T78A! A<j

 A0j! A6d A؝ 6` B7l A6|   6x  A j6h A(j A j[A! A,j
 ( !( ! 	AxG
!  !

  
7h  6d  : a  : ` A j  !  @ A8j
 E
  A(j
 Aj$  
	# Ak"$ @@@  ( AF@  (!  (
"6
  ("6  ("6  ( "6   - !	  (!
  - Aq
 
! 	

  (
  (  O!

  (
    ( (
 
  A: A0!  A06 B7   k!A ! A   M!A
! @ A
l!@@@@ / Ak 
 (

 (

 /"AO@AA A I

A A
I
 AA A I
 A
j! j! A
k"
 

@  I@  k!@@@A  AqAFAq"Ak 
 !A !

 Av! AjAv!
 Aj!  ( !  (
!@ Ak"E
   (  E
 


  (
  (  O

   O
A !@   F
 Aj!   (  E
 

-- Chunk 13 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1801-1950
 Ak
 I
!   	:    
6

A!
 Aj$  
# Ak"$ @@@ ("AqE@ A q
A!  ( A jE


  ( !@  jA j Aq"A0r A j A
I:   Ak! AI Av!E
 
A! AA A  jAjA  kAE


  ( !@  jA j Aq"A0r A7j A
I:   Ak! AK Av!
 
A! AA A  jAjA  kA

 (
A A ( (
 
 @ ("AqE@ A q
  (A j!

  (!A !@  jA j Aq" A0r  A j  A
I:   Ak! AK Av!
 
 AA A  jAjA  kA!

  (!A !@  jA j Aq" A0r  A7j  A
I:   Ak! AK Av!
 
 AA A  jAjA  kA!
 Aj$  
~   ) "B3B~ ) "B|"B|B3 )"B B3|"|B3 )"B B3|"|B3 )"B B3|"|B3 B B3|"|B3B~ |"<     B(<    B <    B<    B<    B<    B3 |"B%< 
   B
< 
   B< 	   B
<    B<    B0B B<    B3 |"B*<    B"<    B<    B<    B
<    B< 
   B BB-< 
   B3 |"B'<    B<    B<    B<    B<    B BB2<    B3 |"B$< 
   B
< 
   B< 
   B
<    B<    BB,<    B BB/< 

 Ak!  (!
  ( !
  (!
@@ 
@@  I
 @  j!@@@  k"AM@  G
 !

@ AjA|q" k"@A ! @   j-  A
F
   Aj" G
 
  Ak" M


 Ak! 
@A ( "	A sk 	rA Aj( "	A sk 	rqAxqAxG
 Aj! Aj"  M
 


A ! @   j-  A
F
   Aj" G
 
 !

  F@ !

@  j-  A
F@ ! 

  Aj"G
 
 !

   j"Aj!@  M
    j-  A
G
  ! ! 

  O
 

A! "  "F

@ 
-  @ 
A A 
(
 

A !   G@   j-  A
F!
   k!   j! 
 :   ! 
    
(
 E


A!

 

	# Ak"$ @ ("E
    (   (
 E
 A

 (
"@ (" A
lj! A
j!	@@@@@ / Ak 
@ ("A O@ A
j( !@A  A A   
 A@j"A K
 


 E

  A   A
j(  E
A

   ( ( A
j(  E
A

 /! 	A :   A 6AA A I AO
 A A
I
 AA A I
" Aj"
j"Ak"  A
n"
A

-- Chunk 14 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:1951-2100
lkA0r:  @  
F
  Ak" 
A
pA0r:   Aj F
  Ak" A nA
pA0r:   Aj F
  Ak" AnA
pA0r:   Aj F
  Ak A nA0r:  
   Aj  A
j(  E
 A

 A
j" G
 

A 
 Aj$ 
# Ak"$ @@@ AM@  At"j! !@ E@ AjA ! A :  AjA ) 7  AjA ) 7  AjA ) 7  B 7 A ) 7 Aj AjA C 


 Ak! ( Aj!A M
 
  A;  

  A;  

@ Aj (  ( Aj" G
 

 A6 A 6 A 6  6@ Aj Aj j"(  ( Aj"AG
 
 Aj" AjA C A j H Aj Aj")  7  Aj Aj")  7  Aj Aj")  7   ) x7 Aj" Aj  F )P@  Aj" ) x7    A :   Aj )  7   Aj )  7   Aj )  7  

  A;  
 Aj$ 
 ("@ ( !@@ Aj!   j-  ""	A N
 @@@@@@@@@@@ A j-  Ak 

A   j  O-  AqAG

 Aj


A   j  O,  ! Ak"E
 A
F


A   j  O,  ! Ak
 A`qAG


 AJ


 	AjAqA
O@ 	A~qAnG A@Nr


 A@N


 	AjAqAK A@Nr


 A jAqA0O


 AJ

A   Aj"j  O-  AqAG
A   Aj"j  O-  AqAG
 Aj

A   Aj"j  O-  AqAG
 Aj
"" I


   6   6    k6   j6     k6
    j6
  A 6 
@@ A
I@ Av!@@  ("@ Ak! At  jAk!  jAt  jAk! A)I!@ E
  j"A(O
  ( 6  Ak! Ak! Ak"AG
 

 Aq! A O@  A  AtU
  ( j! E@   6  
 Ak"A'K
 !   Atj( "A  k"v"E
 A'M@   Atj 6  Aj!

 A(A  
 A(A  
 A(A  
A A
A  
 A(A  
@  Aj"K@ Aq! At  jAk!@ AkA(O
 Aj  t ( " vr6  Ak!  Ak"I
 

   Atj" (  t6    6  
AA(A  
~# A@j"$  A0jB 7  A(jB 7  A jB 7  B 7@@@ ("A O@ AjA  ( "A A   A k6  A j6 

 A8jAA A@ - 8AF@ - 9AqE


 )8"BBR
 BB R

 ( !@@ @  Ak"6  Aj"6  -  ! !

 A8jAA A - 8AF@A ! - 9!

 )8"BBR
 B!A !
 Aj j :   Aj"A G
 

   /;   Aj - :   A
j" A0j)  7   Aj" A+j)  7   ) #"7  ) !	  Aj )  7    Aj ) 7    7
   	7  A :  

  A:     7
 A@k$ 
   j!@@  ("Aq
  AqE
  ( " j!   k" A ( F@ (AqAG
A  6   (A~q6   Ar6  6 

   `
@@@ ("AqE@ A ( F
 A ( F
  Axq"`    j"Ar6   j 6   A ( G
A  6 
  A~q6   Ar6   j 6 
 AO@   k
 AqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6

-- Chunk 15 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:2101-2250
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
A   6 A A (  j"6    Ar6   j 6 

@ AI@  !

@  A   kAq"j"  M
   ! @ !@  :   Aj! Ak"
 

 AkAI
 @  :   Aj :   Aj :   Aj :   Aj :   Aj :   Aj :   Aj :   Aj" G
 

   k"A|qj" K@ AqAl!@  6  Aj" I
 

 Aq!
@   j"O
  Aq"@@  :   Aj! Ak"
 

 AkAI
 @  :   Aj :   Aj :   Aj :   Aj :   Aj :   Aj :   Aj :   Aj" G
 

  
~# A@j"$ @@@@@ ("AO@  Ak6  ( "Aj6  (  

 A0jAA A - 0AF@ (4

 )0"BBR
 B 
! A 6 A 6 @@ A0j ; )4! (0"AxF
  7  6 ("AI
  Ak6  ( "Aj6  )  ! A(j A
j( 6   )7 # A k"
$  
Aj! A j!
# Ak"$ @ Aj"	( "E@ A 6  	6
  
) 7  Aj 
Aj( 6 

 	(!# A k"$   6
  6 Aj Aj 
 (!
@@ ("E
  @ Ak!@  
AtjAj( !  6
  6 Aj Aj 
 (
!
 ("E
 Ak"AG
 

A !

A !
  
6
  6  6  6  A j$  Aj! ( E@  	6 Ax6   ) 7 A
j Aj( 6  


  	6
  ) 7  
) 7  Aj Aj( 6  Aj 
Aj( 6 
 Aj$  A0j"~ 
(AxG@ 
A8j 
A
j( 6  
A0j 
Aj) 7  
A(j 
A
j) 7  
 
)7  
A@k!A !# A0k"$  
A j"
(E@ 
(
!"A 6X A 6  6  A;  7   
) 7\ A j 
Aj( 6 A 

 Aj 
Aj"Aj( 6   ) 7 A(j 
Aj( 6   
) 7  Aj!
 A j!
 
A
j!# A k"$ # A k"$ @@@ Aj"( "	/A
O@ ("AI
 A4j! A0j!@@@ Ak 
 A6
  	6  (6 Ak!

 A6
  	6  (6 Aj" Aj )(! A6L  7D A8j A j 
  )8! (@!  A(C" 60  7(

 A6
  	6  (6A !

 Aj  
  Ax6   (60  )7(

 A,j! A(j! A6
  	6  (6
 Aj" Aj ( !	 ( !  6L  6H  	6D A8j A j 
  )8! (@!  A(C" 60  7(
 A j$ @@@ ( AxF@ 
 (06 
 )(7 

 (
! (! A j" Aj") 7   ) 7H )! ($! ( !	 (,! ((! (0!@ (X"@@  6<  /6D  Aj6@ A j!# A k"$ @  A<j"("AkF@@@ ( "
/A
O@ ("AI
 A8j! A<j!@@@ Ak 
 A6  6  
6
 Ak! Aj A
jr

 A6  6  
6
 Aj" A
jr A6L  )07D A j   	s  A(C

 A6  6  
6
 Aj A
jrA !

    	s Ax6 

 A0j! A4j! A6  6  
6
 Aj A
jr
  6L  ( 6H  ( 6D A j   	s  AjA(C

A A5A  

-- Chunk 16 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:2251-2400
 A j$  ( AxF
  ) 7   ) 7H (
! )! ($! ( !	 ("(X"
 

  ) 7   )H7   6$  	6   6
  6  7 ( "( "E
 (!
" 6 A ; A 6X A ;  6X  
Aj"6  6   6\  6X@@  A j"(AkF@ ( "/"A
O
  Aj";  Atj 7   A
lj"A j Aj( 6  A j ) 7   AtjAj 	6  	 ; 	 6X

A A0A  
A A A  

 
 6 
 6 
 6 
 A j$ 

A  
 
(
! (! (! (

!  (Aj6  6  6  6   
(
6
 A0j$ B 

 
( 
(Atj") !  7   7B
7  
A j$  Ak"
 

   )7  A 6   A
j Aj( 6 

  A6    7

  A6    7

 A0jArAA A )4!  A6    7 Aj
 Aj
 A@k$ 
@@@@@@@  V@  } X
@   }T  B} BZqE@  V



  I


   }"} V
  I
  j!
 !
@@  	F
 	Aj!	 
Ak"
 j"
-  A9F
 
 
 
-  Aj:    	kAj O
 
AjA0 	AkU

A1 E
 A1:   AG
A0

  A 6 
 AjA0 AkUA0
!	 Aj" L  Mr
 
 	:   Aj!

  A 6 
  A  
  A  
  O
   A  
   ;   6   6 
  A 6 
# A k"$  ( "E@A !A 

  64 A 60  6$ A 6   ("68  6( (!A
!  6<  6,  6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj A
j ("E
 (!  6l  6X A j!# Ak"$  Aj A@k" A j Aj" (@ (
!A

# A k"$  (! A 6@@ @  (
"6 Aj ( ( "( ( (
!@@ (E@  6 ( 
 Aj Aj Aj"AO@   (!
 AO@  
 ("AI
  

 AI
  

  6
 A
jE@! AO@  
 AI
  

 Aj  
A 

A A 
 !
A
!  6  6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!
A
!   6   6  A j$ 
@A{A    AM" k M
   A A
jAxq A
I"jA
j7"E
  Ak!@  Ak" qE@ ! 

 Ak"( "Axq  jA   kqAk"  A   kAMj"  k"k! Aq@     (AqrAr6   j" (Ar6   ( AqrAr6   j" (Ar6  T

 ( !   6    j6 
@  ("AqE
  Axq" AjM
     AqrAr6   j"  k"Ar6   j" (Ar6  T
  Aj!
 
  ( "Aj"  (" A

-- Chunk 17 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:2401-2550
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7   Atj   Atj At
   Atj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6 Aj!   G
 


# Ak"$ @@@@@ ("E
  ( ! Aq!@ AI@A !

 A
j! A|q!A !@ (  Ak(  Ak(  Ak(  jjjj! A j!  Aj"G
 

 @ At jAj!@ (  j! Aj! Ak"
 

 (
@ A H
 (E AIq
 At!
A ! A H
 

A!A !

A -  A! A"E

 A 6  6  6  A  IE
A A  AjA A  
  A  
   ) 7   Aj Aj( 6  Aj$ 
~# A@j"$ A!@  - 
   - !  ( "- AqE@ (
A A  Aq"AA  ( (
 
 (
   ( (
 
 (
AЎ A ( (
 
   (
  !

 AqE@ (
A A ( (
 

 A:  A j Aj) 7  A(j Aj) 7  A0j Aj( 6   )
7 ) !	 A 68  	7  Aj6  Aj"64   N
  AjAЎ AN
   Aj (
  
  (4A A (8(
 !
  A:    :  A@k$   
A!	@@ E
   Atj!
  AqAv!
  Aq!
@ Aj!
  - "j! 
 -  "G@  
K
 ! 
" 
F


@@  M@  I
  j!@ E
 Ak! -   Aj! 
G
 
A !	

  A  
  A  
 ! 
" 
G
 

 E
   j!  Aq!@ Aj! @ ,  "A N@  !

   G@ -  A qAtr! Aj!

A  
  k"A H
 	As!	  G
 

 	Aq
# A0k"$   ( "/" ("Asj"; Aj Aj" A
lj"	Aj( 6  Aj  Atj"Aj) 7  A j Aj) 7  A(j Aj) 7   	) 7   ) 7@ A
I@  Aj"k G
 Aj  A
lj A
lC   Atj AtC  ;   ) 7   Aj Aj( 6    )7  Aj Aj) 7   A j A j) 7   A(j A(j) 7  A0j$ 
 A
Aă  
A A(A  
  ( "Aj"  (" A
l"	j!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
l"
j    kA
l" Aj Aj( 6   ) 7  Aj" 
j  	j 
   A
lj"Aj Aj( 6  Aj ) 7  Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6  Aj!   G
 


  (
!@@ AO@  (!@@   F@  AA  ("j( "
A !

  (" 6
  6

  Aj  Aj !@ ! "Aj Aj ("! AA j( "
 
 A 6 
 E
    (
AtA j"( G@ AA (  Fj 6  E


  6  
A A ( A~  (
wq6 

  ("  G@   6
   6
A A ( A~ Avwq6 
  6  ("@  6  6
  (" E
    6   6

@ @ -  A0M
 A; @@@@@ "A J@  6 Aq" I
 A ;

-- Chunk 18 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:2551-2700
  6   k6 
A!

  6   6
 A; A ;
 A6 A 6 A  k"6A!  O
  k" M
  j!

 A; A6 A 6 A;
  6   k"6    j6
  I
A!

 A6  A 6
 A;

  k!
  6( A ;$A!
   6   6 
A A!AĊ  
AԊ AA  
  ( "Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7   A8lj   A8lj A8l
   A8lj A8C Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6 Aj!   G
 


  ( "Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7   A0lj   A0lj A0l
   A0lj A0C Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6 Aj!   G
 


# Ak"$ A -  A A"E@AA  
 A;    )  7    )  7 " Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A*j Aj)  7   A2j Aj)  7   A:j Aj)  7   A; B A6  6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A j Aj)  7  A j Aj)  7  A j Aj)  7   7@  78 A : 0  )  7H   Aj A0j"  Aj   Aj$ 
# Ak"$ @ AO@ A 6
 AO@ AO@ A
jAr!  AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

 A
jAr!  A
vAr: 
  AvA?qAr: 
A

 A
jAr!  AvAr: 
A
!  A?qAr:     (   ("kK      ( 
  (j A
j C    ( j6

  ("  ( F@  A 
  ( j :     Aj6
 Aj$ A 
~# A k"$ A!@  B T@  !

@ A
j j"Ak    B "B ~}"AqA n"AtA j/  ;   Ak  A lkAqAtA j/  ;   Ak!  B/V ! 
 

@ B X@ !

 Ak" A
jj " AqA n"A lkAqAtA j/  ;  
@ A
O@ Ak" A
jj AtA j/  ;  

 Ak" A
jj A0r:  
  AA  A
j jA kA A j$ 
# Ak"$ @ AO@ A 6
 AO@ AO@ A
jAr!  AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

 A
jAr!  A
vAr: 
  AvA?qAr: 
A

 A
jAr!  AvAr: 
A
!  A?qAr:     (   ("kK@      (!
  ( j A
j C    j6

  ("  ( F@  A 
   Aj6  ( j :  
 Aj$ A 
  ( "Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7  Aj" j   j 
   jAj :   Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6  Aj!   G
 


# Ak"$ @ AO@ A 6
 AO@ AO@  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (   ("kK@    {  (!
  ( j A
j C    j6

  ("  ( F@  A 
  ( j :     Aj6
 Aj$ A 
# Ak"$ A
!@  A I@  !

@ Aj j"Ak    A n"A lk"AqA n"AtA j/  ;   Ak  A lkAqAtA j/  ;   Ak!  A/K ! 
 

@ A M@ ! 

-- Chunk 19 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:2701-2850

 Ak" Ajj  AqA n" A lkAqAtA j/  ;  
@  A
O@ Ak" Ajj  AtA j/  ;  

 Ak" Ajj  A0r:  
  AA  Aj jA
 kA Aj$ 
  B 7  A  AI
 A AK
  A Avg"kvAq AtkA>j
"6
 AtA j!A t"A ( qE@   6    6    6
    6A A (  r6 
@@  ( "(AxqF@ !

 A AvkA  AGt!@  A
vAqjAj"( "E
 At! ! (Axq G
 

 ("  6
   6  A 6   6
   6
   6    6    6
    6
# A@j"$ A!@  (
"    ( "(
" 
 @  - AqE@ A A  
    (
  E


 A A  
 A:  A j  Aj) 7  A(j  Aj) 7  A0j  Aj( 6   6
  6 A 68   ) 7  Aj6  Aj64  Aj (
  
 (4A A (8(
 

@ 
   - Aq
   (
A A  ( (
 

  (
A A  ( (
 !
 A@k$  
# Ak"$ @ AO@ A 6
 AO@ AO@ A
jAr!  AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

 A
jAr!  A
vAr: 
  AvA?qAr: 
A

 A
jAr!  AvAr: 
A
!  A?qAr:       (  (j A
j C    ( j6

  ("  ( F@  A 
  ( j :     Aj6
 Aj$ A 
# Ak"$ @ AO@ A 6
 AO@ AO@ A
jAr!  AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

 A
jAr!  A
vAr: 
  AvA?qAr: 
A

 A
jAr!  AvAr: 
A
!  A?qAr:       (  (j A
j C    ( j6

  ("  ( F@  A 
  ( j :     Aj6
 Aj$ A 
# Ak"$ @ AO@ A 6
   AO@ AO@  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
"  (  (j A
j C    ( j6

  ("  ( F@  A 
  ( j :     Aj6
 Aj$ A 
# A k"$   ( "/" ("Asj"; Aj Aj" A
l"j"	Aj( 6  Aj  Aj"j"
Aj( 6   	) 7   
) 7@ A
I@  Aj"k G
 Aj  A
l"j A
l"C Aj  j C  ;   ) 7   Aj Aj( 6    )7
  Aj Aj( 6  A j$ 
 A
Aă  
A A(A  
# A k"$  ( "/!"A ; A 6  Aj  p /"Aj!@ A
I@   ("k"G
 Aj  AtjAj AtC! (!A !@@  Atj( " ;  6   O
    Ij" M


   6
   6   )7    6$   6   Aj Aj) 7   Aj Aj) 7  A j$ 
 A
Aԃ  
A A(A  
# A k"$  ( "/!"A ; A 6X Aj   /"Aj!@ A
I@   ("k"G
 Aj  AtjAj AtC! (!A !@@  Atj( " ;  6X  O
    Ij" M


   6
   6   )7    6$   6   Aj Aj) 7   Aj Aj) 7  A j$ 
 A
Aԃ  
A A(A  
  ( "A j! /"Aj!   (" Aj"O@  A

-- Chunk 20 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:2851-3000
lj   A
lj   kA
l
   A
lj" ) 7  Aj Aj( 6       Aj!  Aj" Aj"	I@  Atj  Atj   kAt
  Atj 6   ;  	I@ Aj!  At jAj!@ ( "  Aj" ;  6X Aj!   G
 


# Ak"$   ( !  (  (r@ A 6
  A
j  AO@  AO@  AO@   A?qAr:    AvAr: 
   AvA?qAr:    A
vA?qAr: 
A

   A?qAr:    A
vAr: 
   AvA?qAr: 
A

   A?qAr: 
   AvAr: 
A

   : 
A
@

 (
   ( (  
 Aj$ 
# A0k"
$  (E@ (
!"A 6  A 6  6  A;  ) 7 Aj Aj( 6   ) 7 A
j Aj( 6 A 

 
Aj Aj"Aj( 6  
 ) 7 
A(j Aj( 6  
 ) 7  
Aj! 
A j! A
j!# A k"$ # A@j"$ @@@@@@ 
Aj"( "/"
A
O@ ("AI
 A<j!	 A8j!
 Ak
 Aj"
 ("	A
l"j! (!@ 
 	Aj"
I@  ) 7  Aj Aj( 6 

 
 
A
l"
j  
 	kA
l"
 Aj Aj( 6   ) 7  
 Aj"j  j 

  	A
lj"Aj Aj( 6  Aj ) 7   	60  6,  6( Ax6   
Aj;

 A6  6
  (6 Ak!

  6
  (6 A6 Aj A
j (0"A@k! (4!	@ /"AM@  ) 7  Aj Aj( 6 

 A j  A
lA<k"
 Aj Aj( 6   ) 7  Aj Aj 

  ) 7  Aj; Aj Aj( 6   AjA(C"A60  	6,  6(

 A4j!	 A0j!
 A6  6
  (6

 A6  6
  (6A !
 Aj A
j 
( "Aj"
 A
l"
j! 	( !@  /"	O@  ) 7  Aj Aj( 6 

 
 
A
j"
j  	 kA
l"
 Aj Aj( 6   ) 7  
 Aj"j  
j 

  A
lj"Aj Aj( 6  Aj ) 7   	Aj;  AjA(C" 60  6,  6(
 A@k$ @@@ ( AxF@  (06  )(7 

 (
! (! A j" Aj"
) 7  A j" Aj") 7   ) 7@ ($! ( ! (,! ((! (0!@ ( "@ A j!
@  64  /6<  Aj68 A@k!
# A@j"$ @  A4j"("AkF@@@ ( "	/A
O@ ("AI
 A,j! A0j!@@@ Ak 
 A6  6  	6  Ak! A
j q

 A6  6  	6  A
j" q A6<  )$74 A4j 
 
 _  A(C

 A6  6  	6  A
j qA !

  
 
 _ Ax6 

 A$j! A(j! A6  6  	6  A
j q
  6<  ( 68  ( 64 A4j 
 
 _  A
jA(C

A A5A  
 A@k$  ( AxF
  ) 7   
) 7   ) 7@ (
! ($! ( ! ("( "
 

 
 ) 7   ) 7   )@7   6$  6   6
  6 ( "( "E
 (!" 6 A ; A 6  A ;  6   Aj"6  6   6\  6X A

-- Chunk 21 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3001-3150
j!@@  A j"(AkF@ ( "/"A
O
  Aj";  A
lj"Aj ) 7  A
j Aj( 6  Aj ) 7  Aj Aj( 6   AtjAj 6   ;  6 

A A0A  
A A A  

  6  6  6 
 A j$ 

A  
 (
! 
(
! 
(! 
(
!  (Aj6   6   6   6    (
6
 
A0j$ 
~# A k"$ @ E
   j" I
   jAkA  kqAAA AI AF" ( "At"	   	I"  K"	~"
B 
  
"Ax kK
      l6
  (6 A 
6 Aj! Aj"@@ A N@ (@ ("@ (    


 E
A -    

 A 6

 
"@  6  6A 

  6  6
A
6  (E@ (
!  	6   6Ax!

 (! (
!
   6   6  A j$ 
~# A@j"$  ( AxF@ (
! A$j"A 6  B7
 A0j ( "Aj) 7  A8j Aj) 7   ) 7( A
jA  A(jI Aj ( "6   )
"7 Aj 6   7 
 ) ! B7  Aj" Aj"( 6  A 6 A -    7 A
A"E@AA
 
  ) 7  Aj ( 6   A 6   6  A@k$ 
~# Ak"$   ( ) !@ (" AqE@  A q
 A f

A ! @   jA j Aq"A0r A j A
I:    Ak!  BV B!
 
 AA A   jAjA   kA

A ! @   jA j Aq"A0r A7j A
I:    Ak!  BV B!
 
 AA A   jAjA   kA
 Aj$ 
   ( (
 ("Aw Aws Avsjj ("Aw A
ws A
vsj"6
   (  ("Aw Aws Avsjj ( "Aw A
ws A
vsj"6   (   ( "Aw Aws Avsjj Aw A
ws A
vsj6    (
j (
" Aw  Aws  Avsj Aw A
ws A
vsj6 
# A k"$   ( "/" ("Asj"; Aj Aj" A
lj"Aj( 6   ) 7 Aj  A8ljA8C@ A
I@  Aj"k G
 Aj  A
lj A
lC   A8lj A8lC  ;   )7   Aj Aj( 6   Aj AjA8C A j$ 
 A
Aă  
A A(A  
~# A k"$ @@   j"K@A !

A !A  ( "At"   I" AI""B PE
  "AK
     6
   (6AA 
6 Aj  Aj (AG
 (! (
!
  A  
 (
!   6    6 A j$ 
# Ak"$ @@@@@@@@@A  ( " ( Axs" AOAk 
   Aj6
 A A A
jA l

   Aj6
 A A A
jA l

   Aj6
 A A A
jAԻ l

 A A

   Aj6
 A A A
jA l

 A A

 Aȼ A	

 AѼ A

   6
 A A A
jA l
 Aj$ 
# A@j"$   ( "/" ("Asj"; Aj Aj" A
lj"Aj( 6   ) 7  Aj  A0ljA0C@ A
I@  Aj"k G
 Aj  A
lj A
lC   A0lj A0lC  ;   ) 7   Aj Aj( 6   Aj AjA0C A@k$ 
 A
Aă  
A A(A  
# Ak"$  ( "/!"A ; A 6     /"Aj!@ A
I@   ("k"G
 Aj  AtjAj AtC! (!A !@@  Atj( " ;  6   O
    Ij" M



-- Chunk 22 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3151-3300
   6   6   ) 7    6
   6  Aj Aj) 7  Aj$ 
 A
Aԃ  
A A(A  
@@ ( "  Ak6  "E
 (!@ (" ( "/I@ !

@ ( "E
 Aj! /! !  /O
 

 Aj!@ E@ !

  AtjAj!@ ( "Aj! Ak"
 
A !
  6 A 6  6   A
lj"Aj! AjA 
!   6   6 
A  
A  
# A k"$  ( "/!"A ; A 6 Aj  z /"Aj!@ A
I@   ("k"G
 Aj  AtjAj AtC! (!A !@@  Atj( " ;  6  O
    Ij" M


   6L   6H   AjA C"  6T   6P A j$ 
 A
Aԃ  
A A(A  
   (
 (
 ("Aw Aws Awsjj (" (
"s q sj" (j"6
    ( " ( "	 ("sq  	qs A
w Aws A
wsjj"6   	  (j    sqsj Aw Aws Awsj"j6   A
w Aws A
ws   sq  qsj j6 
# A k"$ "! ( " #! Aj@@@ (E@@ 
AG@  A:  AK


  $! Aj@ (E@  6
@ A
j( "AG
  
"
AF! AI
   
 E@  A:  AM
  

  A :    6  AO@  
 AI


 (
!  A:    6 
 AI

  

 (!  A:    6 
 AM

  
 A j$ 

# A k"$  A j   ($!
 (  Aj  (
!
 (!	 Aj  (!
 (!
  6l  6h  6d Aj A jAش  (
! (!   (! A,j!! 	! 
!  ( !
# Ak"$ A -  @@A A"	@ 	A;   	 )  7   	 )  7 " 	Aj Aj)  7   	Aj Aj)  7   	Aj Aj)  7   	A*j Aj)  7   	A2j Aj)  7   	A:j Aj)  7   	A; B 	A; d 	  )  7 D 	A j  Aj")  7   	A j  Aj")  7   	A j  Aj")  7   A6  	6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A0j A AA (4! (0AF
 (8  C!	 A j )  7  A j )  7  A j )  7  A j 
Aj)  7  Aj 
Aj)  7  Aj 
Aj)  7   7h  7`  6<  	68  64   )  7@  
)  7p A: 0  Aj A0j"  Aj   Aj$ 

AA  
  (8Aȷ  
  ( Ak6  @  A
 
 
( Ak6  
 
( Ak6  
 
( Ak6  A,j A j$ 
# A@j"$  ( "/!"A ; A 6   } /"Aj!@ A
I@   ("k"G
 Aj  AtjAj AtC! (!A !@@  Atj( " ;  6  O
    Ij" M


   6D   6@   A C"  6L   6H A@k$ 
 A
Aԃ  
A A(A  
# A0k"$  ( "/!"A ; A 6   ^ /"Aj!@ A
I@   ("k"G
 Aj  AtjAj AtC! (!A !@@  Atj( " ;  6  O
    Ij" M


   64   60   A0C"  6<   68 A0j$ 
 A
Aԃ  
A A(A  
# Ak"$  A(j   (,!	 ((!  A j  ($!
 ( !  6|  6x  6t Aj A jAش  A0j" ( (
 Aj  (!
 (! Aj  (
!
 A<j!
 (!# Ak"$ A -  A A"E@AA  
 A;     )  7    )  7 " Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A*j Aj)  7   A2j Aj)  7   A:j Aj)  7   A; B A; d  )  7 D A j Aj)  7   A j Aj)  7   A j Aj)  7   A6  6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A<j Aj( 6  A j Aj)  7  A j Aj)  7  A j Aj)  7   7@ A
: 0  ) 74  )  7H 
 Aj A0j"  Aj   Aj$  
 
( Ak6  
 
( Ak6  
 
( Ak6  	 	( Ak6  
 Aj$ 
# Ak"$   ( "/" ("Asj"; Aj Aj" A
lj"Aj( 6   ) 7 @ A
I@  Aj"k G
 Aj" j-  !	 Aj  A
lj A
lC Aj  j C  ;   	: 
   ) 7   Aj Aj( 6  Aj$ 
 A
Aă  
A A(A  
~# Ak"$   ( "/" ("Asj"; Aj A j" A
lj"Aj( 6   ) 7 @ A
I@  Aj"k G
  Atj) !	 A j  A
lj A

-- Chunk 23 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3301-3450
lC  Atj!   AtC  ;   	7   ) 7   Aj Aj( 6  Aj$ 
 A
Aă  
A A(A  
~# A k"$  Aj     (AxG@ A8j A
j( 6  A0j Aj) 7  A(j A
j) 7   )7  A@k A j uA 

 ( (A
lj"Aj") !  ) 7    7 Aj"( !  Aj( 6   A
j 6 A
6  A j$ 
~# A k"$  Aj  @ (AxG@ A8j A
j( 6  A0j Aj) 7  A(j A
j) 7   )7  A@k A j u  Ax6 

 ( (A
lj"Aj") !  ) 7    7  Aj"( !  Aj( 6   Aj 6 
 A j$ 
# A k"$  Aj  (
! (!  6L  6H  6D Aj A jAش  (! (! Aj  (
!
 A j! (!# A0k"	$ # A k"$  	Aj"
@@ A!O@ 
A : 

 A
jA A
 
A: 
A

 A 6
  6  6  6 A 6
  6 
Aj# Ak"$  Aj A :  A jA ) 7  AjA ) 7  AjA ) 7  B 7 A ) 7p  A jA C! Aj"Aj!
@  (  ( Aj" 
G
 
 A j" A C H Aj$ A 
:   A j$ A!@ 	- E@  	Aj")  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7  A !

  	- 6
  :   	A0j$  
 
( Ak6  @  A
  ( Ak6    -  E@A ! A jAr!A 

 ($!A
6   6   6  A j$ 

# A k"$  A j   ($!	 (  Aj  (
!
 (!  6l  6h  6d Aj A jAش  (! (! Aj  (
!
 A,j!
! !  (!# Ak"$ A -  @@A A"@ A;    )  7     )  7 " Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A*j  Aj"
)  7   A2j  Aj")  7   A:j  Aj")  7   A; B A6  6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A0j A AA (4! (0AF
 (8  C! A j )  7  A j )  7  A j 
)  7  A j Aj)  7  A j Aj)  7  Aj Aj)  7   7`  6<  68  64   )  7@  )  7h A	: 0 
 Aj A0j"  Aj   Aj$ 

AA  
  (8Aȷ  
 
 
( Ak6  @  A
 
 
( Ak6  	 	( Ak6  A,j A j$ 
# A@j"$  ( ! A
j! (!	# Ak"$  Aj 	AAA (!
@ (E@ (
!
  	6  
6  
6  Aj$ 

 
 (
A  
 Aj! (! Aj"
( ! (!A !@@ 	E
   	j! - ! !
@@@@ 
,  "A N@  j-  "AG
  
6  6 

  
6 A 6 

@@  M@ !
 ! 


  A  
@  -  A:l j":   Aj! Av! 
Ak"

 

 @  O
  j :   Aj!
 
Aj!
 
Aj"
 G
 
    K!@@  -  F@  F
 Aj!  jA :   Aj! 	Ak"	


  K
 AI
 Av!  jAk!@ -  !  -  :    :   Ak! Aj! Ak"
 


 B 7 

 B 7 

  A  
 A 6   6
 A(j 
( 6   )
7 @ (A F@ (
! A8j" 
( 6   )
70 A0j   Aj ( 6    )07 

   )7  Ax6  A j
 A@k$ 

# A k"$  A j   ($! (  Aj  (
!	 (!  6l  6h  6d Aj A jAش  (! (! Aj  (
!
 A,j!
! !  (!# Ak"$ A -  @@A A"@ A;    )  7     )  7 " Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A*j  Aj"
)  7   A2j  Aj"
)  7   A:j  Aj")  7   A; B A6  6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A0j A AA (4! (0AF
 (8  C! A j )  7   A j 
)  7   A9j 
)  7   A j Aj)  7   A j Aj)  7   A j Aj)  7    6|  6x  6t   )  7 1  )  7 Q A
: 0 
 Aj A0j"  Aj   Aj$ 

-- Chunk 24 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3451-3600

AA  
  (8Aȷ  
 
 
( Ak6  @  A
 	 	( Ak6   ( Ak6  A,j A j$ 
# Ak"$   (
!@@@@@@  ( 
 
A!A ! 

 
   ( "(!  ( !

 Aj  [ (
!  (!

 Aj  A AA (! (AF
 (
"   C!   6
  6  6
    Aj Aj$ 
  (
A  
# A k"$   6
  6 Aj Aj  (!@@ ("E
  @ Ak!@  AtjAj( !  6
  6 Aj Aj  (
! ("E
 Ak"AG
 

A !

A !
   6
   6   6   6  A j$ 
# A k"$   6
@ A
j"A  "@ Aj" ( 6 A 6  6  A 6
# A k"$  ( @ (" (k"A   O!
 AjA   A OA AA (!@ (AG@ A 6  (
6
  6 Aj @@ - E@@ - E
 - ! (" (F@ AjA 
 (
 j :    Aj6 Aj  - E
 

   (6  Ax6  Aj

   )7   Aj Aj( 6 
 A j$ 

  (
Aԓ  


 Aj A
j (!@@@ - "Ak 
  Ax6    6

 A
j AjA J!  Ax6    6

# A k"$   Aq:   6  AjA A AA (!@ (AG@ A 6  (
6
  6 Aj @@@ - E@@ - E
 - ! (" (F@ AjA 
 (
 j :    Aj6 Aj  - E
 

   (6  Ax6  Aj ( " AK


   )7   Aj Aj( 6  ( " AI

   
 A j$ 

  (
Aԓ  

 (
" AK@   
 A j$ 
# A k"$ @A    j"K
 A A  ( "At"   I" AM"A H
 A !    6
   (6A 
6 Aj  Aj (AG
 (!  (

  A  
 (
!   6    6 A j$ 
# Ak"$ @ ( "E@  A 6   6
   ) 7   Aj Aj( 6 

   (  Aj! ( E@   6  Ax6    ) 7  A
j Aj( 6  

   6
   ) 7   ) 7   Aj Aj( 6   Aj Aj( 6 
 Aj$ 
# A k"$   ( "AF@A A   
A At" Aj"  K" AM"A H@A A   
A !    6
   (6A 
6 Aj  Aj (AF@ (
 (  
 (
!   6    6 A j$ 
  A(j!@@@A   - h"k" M@ 


  j   A   j!

  j   Aؤ     ) B|7    A6  k!  j!
 A?q! A O@    )  Av"|7     6
    A@qj A 
   : h
 ( "/"	A
l!A! Aj! (! (!A!@@ E@ 	!

 (! (! Aj! A
k! A
j!A      I"  k "A G A H"AF
 
 Aq
 A !
   6   6 
 ( "/"	A
l!A! Aj! (! (!A!@@ E@ 	!

 (! (! Aj! A
k! A
j!A      I"  k "A G A H"AF
 
 Aq
 A !
   6   6 
 ( "/"	A
l!A! Aj! (! (!A!@@ E@ 	!

 (! (! Aj! A
k! A
j!A      I"  k "A G A H"AF

-- Chunk 25 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3601-3750
 
 Aq
 A !
   6   6 
 ( "/"	A
l!A! Aj! (! (!A!@@ E@ 	!

 (! (! Aj! A
k! A
j!A      I"  k "A G A H"AF
 
 Aq
 A !
   6   6 
 ( "/"	A
l!A! A j! (! (!A!@@ E@ 	!

 (! (! Aj! A
k! A
j!A      I"  k "A G A H"AF
 
 Aq
 A !
   6   6 
 ( "/"	A
l!A! Aj! (! (!A!@@ E@ 	!

 (! (! Aj! A
k! A
j!A      I"  k "A G A H"AF
 
 Aq
 A !
   6   6 
# A0k"$ @  ) B B Z@ A6 A 6 B7
 A 6,   6(  A(j6 (
 (  AjI!

 A : 
  6A! A6 A 6 B7
 A 6,   6(  A(j6 Aj Aj
  - 
E@ A A

A !
 A0j$  

~# Ak"$ @ ( "E@ (  A 6 @ (
! (!@ ("E@ @@ (! Ak"
 

A ! A 6  6

  6  6
  6
# Ak"$  Aj Aj"(  (@ ("@ Aj  (


 Aj$ 
  A 6 

  Ak6  "@# A0k"$  Aj!# Ak"	$  (!@ ("
 ( "/O@@ 	Aj   	("E@ A 6 

 	(! 	(
"
 /O
 

 
Aj!@ E@ !

  AtjAj! !
@ ( "Aj! 
Ak"

 
A !
  
6  6  6
  6 A 6  6 
 	Aj$  (E@A  
   )7  A(j Aj( "6   Aj A
j( 6   )"
7  Aj 6   
7  A0j$ 

Aؑ  
 Aj$ 

~# Ak"$ @ ( "E@ (  A 6 @ (
! (!@ ("E@ @@ (! Ak"
 

A ! A 6  6

  6  6
  6
# Ak"$  Aj Aj"(  (@ ("@ Aj  (


 Aj$ 
  A 6 

  Ak6  "@# A0k"$  Aj!# Ak"	$  (!@ ("
 ( "/O@@ 	Aj   	("E@ A 6 

 	(! 	(
"
 /O
 

 
Aj!@ E@ !

  AtjAj! !
@ ( "Aj! 
Ak"

 
A !
  
6  6  6
  6 A 6  6 
 	Aj$  (E@A  
   )7  A(j Aj( "6   Aj A
j( 6   )"
7  Aj 6   
7  A0j$ 

Aؑ  
 Aj$ 

~# Ak"$ @ ( "E@ (  A 6 @ (
! (!@ ("E@ @@ (! Ak"
 

A ! A 6  6

  6  6
  6
# Ak"$  Aj Aj"(  (@ ("@ Aj  (


 Aj$ 
  A 6 

  Ak6  "@# A0k"$  Aj!# Ak"	$  (!@ ("
 ( "/O@@ 	Aj   	("E@ A 6 


-- Chunk 26 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3751-3900
 	(! 	(
"
 /O
 

 
Aj!@ E@ !

  AtjAj! !
@ ( "Aj! 
Ak"

 
A !
  
6  6  6
  6 A 6  6 
 	Aj$  (E@A  
   )7  A(j Aj( "6   Aj A
j( 6   )"
7  Aj 6   
7  A0j$ 

Aؑ  
 Aj$ 

~# Ak"$ @ ( "E@ (  A 6 @ (
! (!@ ("E@ @@ (! Ak"
 

A ! A 6  6

  6  6
  6
# Ak"$  Aj Aj"(  (@ ("@ Aj  (


 Aj$ 
  A 6 

  Ak6  "@# A0k"$  Aj!# Ak"	$  (!@ ("
 ( "/O@@ 	Aj   	("E@ A 6 

 	(! 	(
"
 /O
 

 
Aj!@ E@ !

  AtjAj! !
@ ( "Aj! 
Ak"

 
A !
  
6  6  6
  6 A 6  6 
 	Aj$  (E@A  
   )7  A(j Aj( "6   Aj A
j( 6   )"
7  Aj 6   
7  A0j$ 

Aؑ  
 Aj$ 

~# Ak"$ @ ( "E@ (  A 6 @ (
! (!@ ("E@ @@ (! Ak"
 

A ! A 6  6

  6  6
  6
# Ak"$  Aj Aj"(  (@ ("@ Aj  (


 Aj$ 
  A 6 

  Ak6  "@# A0k"$  Aj!# Ak"	$  (!@ ("
 ( "/O@@ 	Aj   	("E@ A 6 

 	(! 	(
"
 /O
 

 
Aj!@ E@ !

  AtjAj! !
@ ( "Aj! 
Ak"

 
A !
  
6  6  6
  6 A 6  6 
 	Aj$  (E@A  
   )7  A(j Aj( "6   Aj A
j( 6   )"
7  Aj 6   
7  A0j$ 

Aؑ  
 Aj$ 

~# Ak"$ @ ( "E@ (  A 6 @ (
! (!@ ("E@ @@ (! Ak"
 

A ! A 6  6

  6  6
  6
# Ak"$  Aj Aj"(  (@ ("@ Aj  (


 Aj$ 
  A 6 

  Ak6  "@# A0k"$  Aj!# Ak"	$  (!@ ("
 ( "/O@@ 	Aj   	("E@ A 6 

 	(! 	(
"
 /O
 

 
Aj!@ E@ !

  AtjAj! !
@ ( "Aj! 
Ak"

 
A !
  
6  6  6
  6 A 6  6 
 	Aj$  (E@A  
   )7  A(j Aj( "6   Aj A
j( 6   )"
7  Aj 6   

-- Chunk 27 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:3901-4050
7  A0j$ 

Aؑ  
 Aj$ 
# A@j"$   7 @ BZ@ A6
 A 6 B7$ A 6< A 68 A64  A0j6   60 A
j Aj[A -  A
A"E
  )
7  Aj Aj( 6 A

 !A 
!   6   6  A@k$ 
AA
 
~# A k"$ @A A (  "@ ( 
 A6   ( !  (!# Ak"$  Aj" ("   "q! "BB~!  ( !@@@@  j)  " "B B}B"PE@@   zAv j qAtlj"A
k( F@ Ak(  F

 B} "PE
 

  BBPE
  
Aj"
j q!


   6  6 A ! 

  (E@ Aj!# A@j"$ @  (
"
Aj" 
O@  (" Aj"Av"Al AI"Av I@ A0j!  Aj  K"AO@A AtAnAkgvAj AM
 (
! (!

AA AI
!# Ak"$ @@@ B
~"B 
  "Aj" I
  Axq" Ajj" I
  AM

  ) 7 A 6 

 A -   AA
"	@ A 6
  Ak"6   	j6    AvAl AI6

A  
 Aj$  (4! (0"E@ (8!

 )8! A A	jU!	  B >,  "6(  6$  	6  A6
 
@ 	A
k!
 	Aj!  ( "A
k! ) BB! 
! !@ P@@ 
Aj!
 ) Aj!B"BQ
 
 B!
 	  zAv 
j"
Atlj"A
k( " Ak(  " q"j)  B"P@A!@  j! Aj! 	  q"j)  B"P
 

 B} ! 	 zAv j q"j,  A N@ 	) BzAv!
  	j Av":    Ak qj :   
 Atlj"Aj  
Atlj"Aj(  6    )  7   Ak"
 

  
6,   
k6(A !@   j"( !   jA j"( 6   6  Aj"AG
 
@ ($"E
   A
lAjAxq"jA	j"E
  (  k A
Ax!A!

  ( !  AqA Gj"@ !@  ) "BBB B߿ |7  Aj! Ak"
 

@@ AO@  j )  7  

 Aj   E

 Aj!
 A
k! !A !@@  "j"-  AG
   Atlj!	@@ 	( " 	( "
 q"
!  
j)  B"P@A!@  j! Aj!   q"j)  B"P
 

  zAv j q"j,  A N@ ) BzAv!
  
k  
ks qAI
  j"-    
Av":   
 Ak qj :   Atl!AG@  j!At!@  j"
-  !
 
  j"
-  :   
 
:   Aj"
 



 A:   
 Ak qjA:    j"Aj 	Aj(  6    	)  7  

  
Av":   
 Ak qj :  
 Aj! A
k!  G
 

    
k6Ax!

 (! ( !
  6  6  A@k$ 
  6
  6  7 
   6 Aj$  ("E@ ( 

 ) ! )!   
6  7  ( " (" "
q" j)  B"P@A!@   j!  Aj!    q" j)  B"P
 

  zAv  j q" j,  "A N@  ) BzAv" j-  !
   j 
Av"
:     Ak qjAj 
:    ( Aqk6  (
Aj6
   Atlj" A

-- Chunk 28 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4051-4200
k" ) 7  Aj Aj( 6   
Ak(   ( Aj6  A j$ 
A A  AjA A  
# A0k" $   A6
  A 6  B7    A/jB7     A j6  AjA  
~# A0k"$  ( AxF@ (
! Aj"A 6  B7
 A j ( "Aj) 7  A(j Aj) 7   ) 7 A
jA  AjI Aj ( "6   )
"7  Aj 6   7 
  A 6   6  A0j$ 
# A k"$ A A ( "Aj6 @A  A H
 AAȱ -  
 Aȱ A:  Aı Aı ( Aj6 A
Aq"AG@ AqE
 Aj   (  
A ( "A H
 A  Aj6 A A (     (   : 
  : 
  6  ) 7A (  AjA ( ( A ( Ak 
6 Aȱ A :   E
  
 
# A k"$    :  A 6( B7  A 6L A: D B 7< A 64 A 6,  A j6H A,j! @@@ Aj-  Ak 
  A A5

  A A/

  A A

@AЦ A7 AjA A  
 Aj A(j( " 6   ) 7 (  
 Aj A j$ 
# Ak"
$   (
    ( (
 ! 
A : 
 
 : 
 
  6 
Aj    \   	 
\! 
- 
" 
- 
"r! @ Aq AGr
  ( " - AqE@  (
A A  ( (
 ! 

  (
A A  ( (
 ! 
 
Aj$   Aq
~  @  jAkA  kq ~"B 
  "Ax kK
  E@   6  A 6A 

A -   E@  

@ A	O@  Y

 7
"E
  Ak-  AqE
  A  U
 
"@   6   6A 

   6   6A

  A 6A
6 
~# A k"$ # A k"$  B 7@@ ("AM@ B 7 Aj!

 AjA ( "AA   Ak6  Aj6  Aj ) (
! (
 @@  ("K@ AjA%AA A -   )!A
A"
AA
 
   k6  ( " j6  Aj A AA (! (AF
 (  C!  6  6  6 

  7 Ax6   6 Ax6 

  (A  
 Ax6   6
 A j$  (!@ ( "AxG@   ("D ( E@   6   6   6 

  )"7
  6  6  6  Ax6  7 Aj!   Ax6    6

  Ax6    6
 A j$ 

~# Ak"$ # A0k"$  B 7  A/j6  Aj") !	 ~@@@@@@@@@@@@@ -  Ak
	


 
 	B4|


 	B$|


 	B
|


 	 5
|B |
	
 	B|

 	B
|

 	B$|

 	B$|

 	B
|

 	 5
|B |

 	 5L|B |

 	 5
|B4|

 	B|
7 @ Aj (A AA (
! (AG@ A 6  ( 6  6
  A
j6 Aj!# Ak"$ @@@@@@@@@@@@@@@ -  Ak




 
 A 6 (  Aj"A  )7 (  A  )7 (  A Aj !



-- Chunk 29 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4201-4350
 A6 (  AjA Aj !


 A6 (  Aj"A  )7 (  A

 A6 (  AjA

 A6 ( " Aj"A  )7  A

 A6 (  AjA Aj !

 A6 (  AjA Aj !

 A6 (  Aj"A  )7 (  A

 A
6 (  AjA
A !

 A6 (  AjA Aj "
  ( (
"
  )07 (  Aj"A  )87 (  A A@k !

 A	6 (  AjA Aj "
  ( (
"
  )07 (  AjA A8j !

 A
6 (  AjA Aj "
  (H (L"
 A!j !

 A
6 (  Aj"A  )7 (  A  ( (
"
  Aj !
 Aj$  E@  )
7  Aj Aj( 6 

 Ax6   6 A
j

  ( A  
 A0j$  ( AxF@  (6
A A+ A
jA Aȸ  
   ) 7
  Aj Aj( 6   A0j Aj)  7    A(j Aj)  7    A j Aj)  7     )  7    ) 7   Aj Aj( 6  Aj$ 
# A@j"$   6<  68  64 Aj A4jA  (
! (!   (! Aj! ( !# A k"$   6  6
 A,j   (0!@ (,"AxG@  (4"	6
  6  6 A j   	A
lj A,j ($ (( PA!@ - ,E@  A-j")  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7  A !

  - -6
  :   A jAA Aj" AA


 A:    6
 A
j A j$   ( Ak6  - E@ AjAr!A !A 

A! (
!   6   6   6  A@k$ 
# Ak"$ @@@  -  "A O@   A n"A lkAqAtA j/  ; A ! 

A!  A
O

 A
j  j A0r:  

A!   AtA j/  ; 
 AAA  A
j  j  AsA Aj$ 
# A0k" $ @ ( "Aȭ ( K
   A6  A 6
  B7  A86(   A,j6,    A$j6    A,j6$    A
j"[  (  (
!     6
  AtA j(   AI
   
  A0j$ 
@ A N@ (@ ("@ (  A 


A E
 A -   A
"@   6   6  A 6 
   6  A6

  A 6
  A6 
# A0k"$   6,  6(  6$ Aj A$jA  (
! (! Aj  (!
 Aj!
 (!# A k"$   6
  6 A j   (L! (H"AxG@  (P"6  6  6 A
j"   A
lj ( ! ($!# A@j"$  Aj!# A@j"$  A:  Aj!
 At! A
j!	@@@@ A
j A AA ( ! (
AF
   ($"  C6  6  6  F# Ak"$  Aj Aj" ( AAAv ("AxG@  (
A  
 Aj$  ( 
 j"A6  Aj6   
6 A
j ( 
 P - 
E@  - : ! A:    	)  7  Aj 	Aj)  7   Aj 	Aj)  7   A	j 	Aj)  7   AjAA

 - 
 AjAAAG
  - Ak:  
Aj"
AqAG



  ($A  
 A :  
 A@k$  - E@ A 68 A6, A 6( B70 A(jA  
 A j AjA!C A@k$  A@k A j)  7  A8j A j)  7  A0j A j)  7   ) H7( - h! A&6l A j"A  A(j A 	 (l! AA Aj" AA
A 

A
! Aj 
 6 
 6  A j$  (
! (! 
 
( Ak6    Aq"6   A  6   6  A0j$ 
 ( "A j! ("Aj" /"M@  A
lj  A
lj  kA
l
  A
lj" ) 7  Aj Aj( 6   Aj"    ;   6   6    (6
# A@j"$  B 78 A8j  ( 3  (<" 64  (860   6, A 6( A6 A 6
 B7  A,j6$  A$j6 (
 (  A
jI (,"@ (0 A
 A@k$ 
# Ak"$ @@ AM@ 



-- Chunk 30 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4351-4500
 Aj!@@@@ AjA|q" F
   k"   K"E
 A!@  j-  A.F
  Aj"G
 
  Ak"K


 Ak!A !
Aܸ!@A  j"( Aܸs"	k 	rA Aj( Aܸs"k rqAxqAxG
 Aj" M
 

  G@A.!A!@  j-  A.F@ !

  Aj"G
 

A !
  6  6  (AF!

 Ak! !@ -  A.F"
 Aj! "Ak! 
 

     - r:   (    Aj$ 
|# A k"$  A
j!# Ak"$   68 A0j @@@@@@@@ (0"E@ Ax6<

 (4!  6L  6P  6H A(j A jA  A<j (( (, (<AxF
  Aj A j( "6   )<7 A j! (!# A0k"$ @@ A,M@ A 6,  6(  6$ Aj A$j ("AxF
 Aj" A j(  6    ( 
6   - 
:   6
  ( A F@  (")  7  A	j Aj)  7   Aj Aj)  7   Aj Aj)  7  A 

 A : A
:   A
j

 A;  

 A;  
 A0j$ A!@ - HE@  A j")  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7  A !

 - I!# A k"$   :  A 6( B7  A 6L A: D B 7< A 64 A 6,  A j6H A,j! Aj-  E@ A A%

 A A 
@AЦ A7 AjA A  
 Aj A(j( "6   ) 7 ( 
! Aj A j$   6
  :   Aj

@@ A8j@ A j A8j (PA G
 A :    (L")  7  A	j Aj)  7   Aj Aj)  7   Aj Aj)  7   A j

@ A8j@ A 6x B7p  A8j6 A j Aj (H!@@ - L"Ak 
A A  
 ("AO@  
  :   6| A j A j ( "AF
 ($!@@ E@  6 Aj  A j ( +@@ (HE
  +P"
D        f"E
  
D     o@e

 A6L A 6H B7T A6  Aj6P  Aj6 Aj" A j[ ( (
!  A:    6 ("AI
  

 
D      Ac 
D        fq@ 


A 
! (x" (pF@ A jA 
 (t jA A   
D     o@d:    Aj6x AO@  
 Aj A j (
! ("AG



 A:    6
 (|"AI
  

 (8
AG@A A
! A:    6

 Aj A :  

 (|"AO@  
 (xA G
 A :    (t")  7  A	j Aj)  7   Aj Aj)  7   Aj Aj)  7   A j
 (<AxF
 A<j



 (8"AK


 A:    6 ("AI
   
 A j (<AxG@ A<j
 (8"AI

  
 Aj$ 

A A+ AjA A  
 - 
E@ A j A%j)  7  A@k A
j)  7  A8j Aj)  7   ) 
70 A0j!A 

A!	 (
!   	6   6   6  A j$ 
# A k"$  Aj   (!  (! Aj  (
! (!   (! Aj"     ( d  ( Ak6   ( Ak6     ( Ak6   A j$ 
# A0k"$   7   - E@ BZ@ A6 A 6 B7
 A6,  A(j6  Aj6(A! Aj

A ! 	

A ! 

6   6  A0j$ 
# A k"$  Aj   (! (!  Aj  (
! (!   (!	 Aj!
 ( !# Ak"$ A -  AA"E@AA 
 A;   A jA )  7   A jA )  7   A jA )  7   A )  7 D   )  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A; B A ; d A:j Aj)  7   A2j Aj)  7   A*j Aj)  7    )  7 " AԹ )  7 f A jAܹ )  7   A jA )  7   A jA )  7   A ;  A;  Aj Aj)  7   Aj Aj)  7   Aj Aj)  7    )  7  A6
  6 A6 A(jB 7  A jB 7  AjB 7  B 7 A: 0  78 
 Aj A0j"  Aj   Aj$  	 	( Ak6   ( Ak6   ( Ak6  
 A j$ 
# A k"$  Aj   (! (!  Aj  (
! (!   (! Aj!	 ( !# Ak"$ A -  A A"E@AA  
 A;     )  7    )  7 " Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A*j Aj)  7   A2j Aj)  7   A:j Aj)  7   A; B A6  6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A j Aj)  7   A j Aj)  7   A9j Aj)  7   A: 0  )  7 1 	 Aj A0j"  Aj   Aj$   ( Ak6   ( Ak6   ( Ak6  	 A j$ 
# A k"$  Aj  kA
nA AA (! (AF@  (
A  
 Aj"A 6   (
6
  6  kA
n" Aj"(  ("kK@   A (!
   G  j Aj! ( Atj!@  Ak) 7  A

-- Chunk 31 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4501-4650
j! Aj! Ak"
 
 
6  Aj ( 6    )7  A j$ 
~  B? ) }"BB? )}"B3|7    BB? )}"B3|7   BB? )}"B3|7   BB? ) }"B3|7   B3B~ B|7 
# Ak"$ A!@ (
"A' ( "("  
  Aj  ( AB@ - AF@  (   E


  - "  Ajj -   k (
 

 A'   !
 Aj$  
# A k"$  Aj   (
!	 (! Aj  (!
 (! Aj  (
!
 (!# A k"$ # Ak" $ A -  @@A A"@  A jB 7   A jB 7   A jB 7   B 7@  Aj   B   A@kd  A jB 7   A jB 7   A jB 7   B 7`  Aj Aj)  7    Aj Aj)  7    Aj Aj)  7    A:    )  7 A -  A A"E
 A ; B A;   A:jA )  7   A2jA )  7   A*jA )  7   A )  7 "  )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A ; d A jA )  7   A jA )  7   A jAܹ )  7   AԹ )  7 D  A6   6  A6 A8j  A j  Aj"  Aj   AjA8C! A6  6 A6    Aj$ 

AA  
AA  
  ( 6  (" 6   6
    (A8lj6 6
 A
j!# A k"$  Aj A
j" Aj) 7    ) 7 (
" ("G@ A
j!@ " ( "AxG@   AjA4C  6  Aj"6 (  ( ) ("AO@  
  A8j" G


   A8j6

# Ak"$  Aj"(
" (" kA8n!   G@@  AA"  A
j  A8j!  Ak"
 

  ( 6
  (6 AjAA8 Aj$  A j$  (
 A j$  
 
( Ak6  
 
( Ak6  	 	( Ak6  A j$ 
# Ak"$ @@ ( @ "(" (OA   Aj6 ( (  !A
!  6  6  ( 

  A ; 

 (!A!  (
Aj6
 Aj @ - E@   - 	:   A: A !

   (
6
   :  
 Aj$ 
   (A F@ A 6   (")  7   A	j Aj)  7    Aj Aj)  7    Aj Aj)  7   A 

   ) 7  A
j Aj( 6 A
:  
@@ A H
 @ E@A!

A -  A! A"E

   C!A -  A
A"E
  6  6  6     A 
  A  
AA
 
w# Ak"$   -  !A ! @   jA j Aq"A0r A7j A
I:    Ak!  "Av! AK
 
 AA A   jAjA   kA Aj$ 
x# Ak"$   -  !A ! @   jA j Aq"A0r A j A
I:    Ak!  "Av! AK
 
 AA A   jAjA   kA Aj$ 
# A@j"$ @  @  ( 
  A6  Aj   (
"  (F@# Ak"$  Aj  Aj" ( AAA8v ("AxG@  (
A  
 Aj$ 
  ( A8lj AjA8C  A 6    Aj6
 A@k$ 
 
 
r# Ak"$   ( ! @  jA j  Aq"A0r A j A
I:   Ak!  AK  Av! 
 
 AA A  jAjA  kA Aj$ 
q# Ak"$   ( ! @  jA j  Aq"A0r A7j A
I:   Ak!  AK  Av! 
 
 AA A  jAjA  kA Aj$ 

~# Ak"$  Aj!# A k"$ @@@@  Atj"	 G@@@ E@ Ax6

 Aj  ("AxG

 Aj Aj" 	G
 

 A 6 B 7 

 )!
 AjAA AA
 (! (AF
 (
" 
7  6  Aj"
A6   6
  6 Aj!# A0k"$ @@ 	 Aj"F
 @@@ E@ Ax6$

 A$j  ($AxG

 A$j Aj" 	G


 Aj" A,j( 6   )$"
7 
AxF
 A j"
 ( 6   )7 (" ( F@  AA

 ( A
lj"
 )7  
Aj 
( 6   Aj6 Aj" 	G
 

 Ax6
 Aj A0j$  Aj 
( 6   )7 
 A j$ 

  (
A  
@  (
F@   )7   Aj A
j( 6 

-- Chunk 32 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4651-4800

A A

!  Ax6    6 Aj"   AA

 Aj$ 
# Ak"$    (!  @@@@ ( Ak 
  A : A 

   6

 Aj  - E@   - 	:   A: A 

   (
6
A
:   Aj$ 
z# A k"$   ( AxG@   (  (

 Aj  (
( " Aj) 7  Aj  Aj) 7    ) 7 (
 (  AjI
 A j$ 
y# Ak" $   AjA3A AA  (!  (AF@   (
Aĕ  
  (
A A3C!  A36
   6   6 A3  Aj  Aj$ 
b~   B" B"~"  B "~"  B "~|"B |"7     T  ~  TB  B ||7
|# A@j"$   6
   6  6  6 A6
 AԎ 6 B7$  AjB78  AjB70  A0j6  Aj  
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
lj"Aj Aj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
ljAj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
lj"Aj Aj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
"A
ljAj  A8ljA(jAA0  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
lj"Aj Aj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
ljA j  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
lj"Aj Aj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
"A
ljAj  AtjAj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
lj"Aj Aj  Aj   ("
 

  Aj$  A0j$ 
# A0k"$   ( "E@A ! A 

  6$ A 6   6 A 6   ("6(  6  (! A
!   6,  6
  6
# Ak" $   Aj A
j"  ("@@   (
A
ljAj  Aj   ("
 

-- Chunk 33 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4801-4950

  Aj$  A0j$ 
# A k"$  Aj"B 7  Aj"B 7  Aj"B 7  B 7  A  A A   Aj ) 7    Aj ) 7    Aj ) 7     ) 7   A j$ 
n# A k"$ @  @  ( AF
 Aj  A4j)  7  Aj  A,j)  7  Aj  A$j)  7    ) 
7   A j$ 
 
 
g# A@j"$    M A j MA!A ! @ A j  j-     j-  s"A  krA N q!  Aj" A G
 
  A@k$ 
# Ak"$    ("E@  A : A 

  Ak6 Aj! ( !# Ak"$  A : @ ("@ AjA ( "AA   Ak6  Aj6   - : 

 B 7  Aj6A!
  :   Aj$  - E@   - 	:   A: A 

   (
6A
:   Aj$ 
z# Ak"$  Aj ( ( "( ( (
! ("E@@ (E
  (
"AI
   
  6
 A6
   6    6 Aj$ 
~# A k"$  A 6 B7 Aj! !
A8!# A0k"$  Aj Aj"
Aj"( 6  A 6  
) ! 
B7   7# Ak"
$ @ Aj"
"("A8O@ A86

A8 k" (  ("kK@    (!
 (" j!@@ AO@ A  Ak"U   j"j!

 E

 A :   Aj!
  6
 
Aj! 
(! 
(! 
( !A !A ! 
Aj"A j! !@@@@@  M@ -  ! !	 ! E
@  -  At j" A:n"A:lk:   Aj! 	Ak"	
 


  A  
 @@  F
  j  A:n"A:lk:   Aj! A:I !E
 

 Aj" G
 
    K!@@ -  
  F
  G@ Aj!  jA :   Aj! Ak"



  A  
  M@ E
 Aj!A !@@  j"	-  "A:O
 	  j-  :    Aj"G
 
A!A ! AF
 Av!	  jAk!@ -  !  -  :    :   Ak! Aj! 	Ak"	
 
 !

 A:A  
  A  
A!

A !A !
  6  6  
("E@ 
 
(
"

 Aj" 
6  6  
Aj$ @@@ ("E@ (
! (! A
j (" ("D@ (
E@ ! !

 ) ! AxG
 !
 
 
 > 
  B 7 

 Aj
  6  6  A0j$ 

  7(  6
   B 7 A A+ A
jA AԲ  
 (Aq@A A+ AjA A  
   )7   Aj Aj( 6  A j$ 
# A k"$  Aj   (! (!  Aj  (
! Aj! (!# Ak"$ A -  A A"E@AA  
 A;     )  7    )  7 " Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A*j Aj)  7   A2j Aj)  7   A:j Aj)  7   A; B A6  6 A6
 A(jB 7  A jB 7  AjB 7  B 7 A: 0  78  Aj A0j"  Aj   Aj$   ( Ak6   ( Ak6   A j$ 
m# A k"$ @  @    ( 
   )  7 
  A4j Aj)  7    A,j Aj)  7    A$j Aj)  7   A j$ 
 
 
# A k"$  Aj   (! (!  Aj  (
! Aj! (!# Ak"$ A -  A"A"E@AA" 
 A;     )  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A6
  6 A6 A(jB 7  A jB 7  AjB 7  B 7 A j Aj)  7   A j Aj)  7   A9j Aj)  7   A: 0  )  7 1  Aj A0j"  Aj   Aj$   ( Ak6   ( Ak6   A j$ 
# A k"$  Aj   (! (!  Aj  (
! Aj! (!# A0k"$ A -  A A"E@AA  
 A ; B A;   A:jA )  7   A2jA )  7   A*jA )  7   A )  7 "   )  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A; d A j Aj)  7   A j Aj)  7   A j Aj)  7    )  7 D A6
  6 A6 A(jB 7  A jB 7  AjB 7  B 7  AjAظ  Aj A0j$   ( Ak6   ( Ak6   A j$ 
x@@ E
  ( "E
   l! (!@ E@    !

     l""E

  6   6
Ax!
   6   6 
# Ak"$ @ ( "E@A !

  Ak6  "@ Aj! (!@@@ (" ( "/I@ !

@ ( "E
 Aj! /!  "/O
 

 Aj!@ E@ !

  AtjAj!@ ( "Aj! Ak"
 
A !
  6 A 6  6    A

-- Chunk 34 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:4951-5100
lj"Aj6  Aj6 

Aą  
 (
! (!

Aȑ  
   6   6  Aj$ 
l# Ak"$ @   (" ( I Aj  AA ("AxG
 ( 
6   (6  Aj$ 
  (
  
l# Ak"$ @   (" ( I Aj  AA ("AxG
 ( 
6   (6  Aj$ 
  (
  
j~# A0k"$   6   6  A6
 A 6 B7 B
" 7(   Aj7   A j6 Aj  
m  - !  - @  A Aq
   ( "- AqE@ (
A A ( (
 

 (
A A ( (
 
": 
 Aq
g # A0k" $ A -  @  A6
  A 6  B7   6,    A,jB
7     A j6  AjA  
  A0j$ 
k@ ("A N@ (! E@A!

A -  A! A"

  A  
   C!   6   6   6 
h# A0k"$   6  6  A6
 A 6 B7 A6, A	6$   6   A j6  6( Aj A0j$ 
@ ( "1"A N@ E@A!

A -  A! A"

  A  
5"."/! AO@  
  (  0 AO@  
 AO@  
   16   6   6 
c# Ak"$  (! Aj (  -   (
! ("E@ Aj    Aj6
   6    6 Aj$ 
b@  ( "AG
   (
   (!  (
"@@ (! Ak"
 

  B 7   6A!  A6 
  AjA  
b@  ( "AG
   (
   (!  (
"@@ (! Ak"
 

  B 7   6A!  A6 
  AjA  
b@  ( "AG
   (
   (!  (
"@@ (! Ak"
 

  B 7   6A!  A6 
  AjA  
b@  ( "AG
   (
   (!  (
"@@ (! Ak"
 

  B 7   6A!  A6 
  AjA  
b@  ( "AG
   (
   (!  (
"@@ (! Ak"
 

  B 7   6A!  A6 
  AjA  
b@  ( "AG
   (
   (!  (
"@@ (! Ak"
 

  B 7   6A!  A6 
  AjA  
eA -  A$A"E@AA$ 
 A 6    )  7  A
j  Aj)  7   Aj  Aj)  7   A
j  Aj)  7   
] @ @ ( 
   ) 7    Aj A
j)  7    Aj Aj)  7    Aj A
j)  7   A$A
 
 
~|# A0k"$  A
j!# Ak"$   64 A(j @@@@@@ (("E@ Ax68

 (,!  6t  6x  6p A j A jA  A8j (  ($ (8AxF
  A j A@k( "6   )87P A j! (T!# A k"$ @@ A,M@ A 6P  6L  6H Aj A j ("AxF
 Aj" A j(  6    ( 
6   - 
:   6
 ( A F@ A@k ( 6   )
78 A j A8j  - HE@ A0j A j)  "
7  A(j A j)  "
7  A j A j)  "
7   ) I"
7 Aj 
7   Aj 
7   A	j 
7    
7 A 

 A#j A j( "6    )L"
7  A j 6   
7H A j A: A
:  

 A;   A
j

 A;  

 A;  
 A j$ A!@ - pE@  A j")  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7  A !

 - q!# A k"$   :  A 6( B7  A 6L A: D B 7< A 64 A 6,  A j6H A,j! Aj-  E@ A A

 A A
@AЦ A7 AjA A  
 Aj A(j( "6   ) 7 ( 

-- Chunk 35 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:5101-5250
! Aj A j$   6
  :   A j

@ A4j@ Aj" A4j A j   - pE@ A j Aj)  "
7  A j Aj)  "
7  A j A j)  "
7   ) q"
7P Aj 
7   Aj 
7   A	j 
7    
7 A 

 A j A j( "6    )t"
7 S Aj 6   
7 A6t A 6p B7| A%6H  A j6x  Aj"6D Aj" A j[ ( (
!    6A
:  

@ A4j@ A 6L B7D  A4j6P A j A j (p!@@ - t"Ak 
A A  
 (P"AO@  
  :   6 Aj Aj ("AF
 (
!@@ E@  6 Aj  A j ( +@@ (pE
  +x"D        f"E
  D     o@e

 A6t A 6p B7| A6  Aj6x  Aj6 A j" A j[ (T (X
!  A:    6 ("AI
  

 D      Ac D        fq@ 

A 
! (L" (DF@ A jA 
 (H jA A   D     o@d:    Aj6L AO@  
  Aj (! ( "AG



 A:    6
 ("AI
  

 (4
AG@A A
! A:    6

 Aj A :  

 ("AO@  
 Aj A j( 6   )D7 A j Aj  - pE@ A j Aj)  "
7  A j Aj)  "
7  A j A j)  "
7   ) q"
7P Aj 
7   Aj 
7   A	j 
7    
7 A 

 A j A j( "6    )t"
7 S Aj 6   
7 A6t A 6p B7| A%6  Aj6x  Aj"6 Aj" A j[ ( (
!    6A
:  
 (8AxF
  A8j
 (4"AK


 A:    6 (P"AI
   
 A j (8AxG@ A8j
 (4"AI

  
 Aj$  - 
E@ A
jAr!A 

A!	 (
!   	6   6   6  A0j$ 
]# Ak"$  Aj   (
!  (   (! ( A E  ( Ak6     ( Ak6  Aj$ 
c# A k"$  E@A A2 
 Aj"     (  Aj A  (
!   (6    6 A j$ 
[# A0k"$  A6
   6 A6 A 6 B7
  AjB7(  A(j6 Aj  
\# Ak"$  Aj (  ( ( (
! ("E@ Aj   
   6    6 Aj$ 
# Ak"$  Aj! ( !# A0k"$  A j @ ( @ Aj A(j( 6   ) 7A !@ A F@ A(j Aj( 6   )7   A j (! ( 

 Aj Aj  j Aj! (E
 
 (
! ("AI
  

 ($!
A
!  6  6  A0j$  (
! ("E@ Aj   
   6    6 Aj$ 
S   ("AO@  Ak6  ( "Aj6    )  7A 

  AjAA AA
6 
W# Ak"$  Aj (  )  (
! ("E@ Aj   
   6    6 Aj$ 
h# Ak"$  (  Aj"AA -  6 A 6  (
! ("E@ Aj   
   6    6 Aj$ 
# A k"$  Aj  (
! (!# A@j"$  A 6 B7
 A 68 A: 0 B 7( A 6  A 6  A
j64# A k"$  A j Aj)  7  A@k Aj)  7  A8j Aj)  7  A 6,  )  70 A j" A,j A6
 A6 A 6  B7
  6  Aj6 Aj"(
 (  I  A j$ @AЦ A7 A?jA A  
 Aj" )
7  Aj Aj( 6  A@k$   ( Ak6   A    ) 7  A j$ 
# A k"$  Aj  (
! (!# A@j"$  A 6 B7
 A 68 A: 0 B 7( A 6  A 6  A
j64# A k"$  A j Aj)  7  A@k Aj)  7  A8j Aj)  7  A 6,  )  70 A j" A,j A,6
 A6 A 6  B7
  6  Aj6 Aj"(
 (  I  A j$ @A A7 A?jA A  
 Aj" )
7  Aj Aj( 6  A@k$   ( Ak6   A    ) 7  A j$ 
O# Ak"$     (!  Aj" (  Aj F (    ( Ak6  Aj$ 
 # Ak"$  Aj! ( !
# A k"$  ( "E@A !A 

  64 A 60  6$ A 6   ("68  6( (!A
!  6<  6,  6
 A j 
@ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj A
j ("E
 (!  6l  6X A j!# Ak"$  Aj A@k"
 A j Aj" (@ (
!A

# A k"$  

-- Chunk 36 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:5251-5400
(! 
A 6@@ @  
(
"6 Aj! 
(! ( !# A k"$  ( "E@A !A 

  64 A 60  6$ A 6   ("68  6( (!A
!  6<  6,  6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj!
A !@@@ A
j"( "  Ak6  "
E
 
(!
@ 
("	 
( "/I@ !

@ ("E
 
Aj!
 /!	 	 "/O
 

 	Aj!@ 
E@ !

  AtjAj!@ ( "Aj! 
Ak"

 
A !
 
 6 
A 6 
 6   	A8lj!  	A
ljAjA 
! 
 6 
 6 

A  
A  
 ("E
 (!  6l  6X A j!# Ak"
$  
Aj A@k" A j Aj"  
(@ 
(
!A

# A k"
$  (! A 6@@ @ 
 (
"6 
Aj! ( ! (!	# A0k"$  A(j 	 (,!	@ (("
E
   	6$  
6  Aj A jAُ A
 @ (@ (
!	

 Aj A jA A A j (@ (!	

# Ak"$  Aj! A j"!( !# A0k"	$  A(j"(!
 (!! 	A j"A 6  6  6 @ 	( @ 	Aj"" 	A(j"#( 6  	 	) 7@ E
  A0l!
@@ 	 
6 # Ak"$  	Aj"(!
 Aj!
 	A j( ! ( !# A0k"$  A(j  (,!@ (("$E
   6$  $6  Aj A jA A A(j@ (@ (
!

 Aj A jA A  (@ (!

 Aj A jA A A j (@ (
!

  (  ($ (! ( 

 ($"AI
   
A
! 
 6 
 6  A0j$  (
! ("E@ Aj 
   
Aj6
 	Aj" 6   6 Aj$  	(
  
A0j!
 
A0k"




 	(
!
 	("AI
  

 # "( 6  	 	)7  	 	A j 	(!
 	( 

 	($!

A
!  
6  6  	A0j$  (
! ("	E@ !AjA A 
 Aj"
 	6  
 6 Aj$  (@ (
!	

  (  ($ (!	 ( 

 ($"AI
   
A
!  	6  6  A0j$  
(
!@@ 
(E@ 
 6 ( 
 Aj 
Aj 
Aj"AO@   
(!
 AO@  
 
("AI
  

 AI
  

 
 6
 
A
jE@! AO@  
 AI
  

 Aj  
A 

-- Chunk 37 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:5401-5550

A A 
 !
A
! 
 6 
 6  
A j$  
(! 
( 
6    6 
Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!
A
!  6  6  A j$  (
!@@ (E@  6 
( 
 
Aj Aj Aj"AO@   (!
 AO@  
 ("
AI
 
 

 AI
  

  6
 A
jE@!
 AO@  
 AI
  

 
Aj  
A 

A A 
 !

A
!  
6  6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!
A
!  6  6  A j$  (
! ("E@ Aj   
   6    6 Aj$ 
	# Ak"
$  
Aj!
 ( !# A k"$  ( "E@A !A 

  64 A 60  6$ A 6   ("68  6( (!A
!  6<  6,  6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj!
A !@@@ A
j"( "  Ak6  "E
 (!	@ ("
 ( "/I@ !

@ (X"E
 	Aj!	 /!
 
 "/O
 

 
Aj!@ 	E@ !

  AtjAj!@ ( "Aj! 	Ak"	
 
A !
  6 A 6  6   
Atj!  
A
ljA jA 
! 
 6 
 6 

A  
A  
 ("E
 (!  6l  6X A j!# Ak"$  Aj A@k" A j Aj"
 (@ (
!A

# A k"$  (!	 A 6@@ 	@  (
"	6 Aj ( ( )  (
!@@ (E@  6 ( 
 Aj Aj Aj"AO@   (!
 AO@  
 ("AI
  

 	AI
 	 

  	6
 A
jE@! 	AO@ 	 
 AI
  

 Aj 	 
A 

A A 
 !
A
!  6  6  A j$  (! ( 
6  
 6 Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!
A
! 
 6 
 6  A j$  
(
! 
("E@ Aj   
   6    6 
Aj$ 
P  -  AF@  (" ( !  ("( "@   
 ("@   (
  A
A


-- Chunk 38 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:5551-5700
L  ("@  ( "!  !@  ( "AO@  
  Aj!  Ak"
 
  AtA

R# Ak"$   ( " -  E@ A A

   Aj6
 A A A
jA l
 Aj$ 
K ! ! ( "@ /! Aj!
 AA A   6     B 7
L ! ! ("@ /! Aj!
 AA A   6     B 7
L ! ! ("@ /! Aj!
 AA A   6     B 7
K ! ! ( "@ /! Aj!
 AA A   6     B 7
K ! ! (X"@ /! Aj!
 AA A   6     B 7
L ! ! ("@ /! Aj!
 AA A   6     B 7
I@A  ( " ( Axs" AO"AkAI
  @  

  Aj
  A
A
I# Ak"$  ( !A !@    j-  :   AjA Aj"A G
 
 Aj$ A 
C@ E
 @  -  " -  "F@  Aj!  Aj! Ak"



  k!
 
<  Aj"K@   Atj   Atj As jAt
   Atj 7 
# A@j"$     (! Aj! ( !# Ak" $ A -  A"A"E@AA" 
 A;    )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7    A6
   6  A6  A(jB 7   A jB 7   AjB 7   B 7  A: 0   78   Aj  A0j"  Aj   Aj$   ( Ak6   A@k$ 
D   (   ("kK      ( 
  (j  C    ( j6A 
:# A k" $   A 6  A6
  A 6  B7  AjA  
>  -  Ak"Aq"AKA vAqErE@   AqAtA j( j

~# Ak"$  Aj  (
! (!A -  A A"E@AA  
  )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A 6  6  ) !  ( Ak6    7  Aj$ 
A   (   ("kK@    {  (!
  ( j  C    j6A 
O  (!  ( !@  (" -  E
  A A (
 E
 A
   A
F:     (  
N# Ak"$    ( " Aj6
 Aآ A	A A
  A A A	 A
jAȢ  Aj$ 
F# Ak"$  Aj    AAv (" AxG@   (
A  
 Aj$ 
F# Ak"$  Aj    A v (" AxG@   (
A  
 Aj$ 
F# Ak"$  Aj    AAv (" AxG@   (
A  
 Aj$ 
OA -   (! ( !AA"E@AA 
  6  6   A 6   6 
B   (   ("kK@      (!
  ( j  C    j6A 
I# Ak"$    A
j6
 A A
A A  A A A A
jAб  Aj$ 
JA -  A
A"E@AA
 
  ) 7  Aj Aj( 6     A 
EA -  A
A"E@AA
 
  :   6  6    B B7 
<@ @ ( "AF
  Aj6    6   Aj6 
 
 
B# A k"$  A 6 A6 B7  6
   6  Aj6    
8# Ak"$   7  ( "  AjA     Aj$ A 
1 @ E   Er
   @A -     "E

 
 
# Ak"$  Aj!# Ak"$ @ Aj"-  @A!

 ( ! Aj (E@  E@ !!A 

 A:  A
! AI
  

 (
!A! A:  
  6  6  Aj$  (
!   (6    6 Aj$ 
< - E@
!A 

%!A
!   6  A 6   6   6 
9  ( !  ("AqE@ A qE@   
   
   
9  ( !  ("AqE@ A qE@   
   
   
>A -  A
A"E@AA
 
   ) 7  Aj  Aj( 6  
v#~| (Aq!  + !?@ (AF@ ! (
!A !# Ak"$  ?!'A ?D      a
 A 'B "%B Q
  'B")B 'BB 'B4Aq" "&B!( %P@A )P
  Ak!B!% (P

B  &B &BQ"!&BB !%AwAw   j! (P
!   ;  %7 B7  &7   : @@@@@  Ak"@A! A A  'B S"A A  ! 'B? r!
A  AOAk
 A6 A 6 A;A!A!  Aj

 A6 A 6 A; Aj

A!  A; E
  6 A ; A6 A 6 Aj

AtA " A H  l" A I@ Aj!
 Aj!  AvAj"	!A~A  k AO!
@@@@@@ Aj" ) "%PE@ %B Z
 E

-- Chunk 39 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:5701-5850
A  /" A k   %BT" "Ak  %B  %  "%B T" "Ak  %B %  "%BT" "Ak  %B %  "%BT" "Ak  %B %  "%B T"  %B %  "%B Yk"kA lAjAm" A O
  At"A j) "&B"' % %BB?"%B "(~")B  &B "& (~| & %B"%~"&B | )B % '~B | &B|B|B |"&A@  A j/ jk"A?q"'!  A j/ ! &B '"(B}")"%P@ A
K
 AtA j(   K

  A O@  A=I
  A/O@AA	  AI"!A/A 

AA  AI"!A=A 

  A O@AA  AI"!A A 

A
A  A	K"

A A
AĈ  
AԈ A$A  
A A!A  
  A A  
AA  AI"!A A 
!@@@@  kAj" 
"J@ Aq!
  
k   k I"Ak!A !@   n!
  F
    
lk!   j 
A0j:    F
  F
 Aj! A
I A
n!E
 
A  
 
  A   
 &B
  ' (W

 Aj! 
AkA?q!*B!&@ & *PE@ 
A 6 

  M
  j %B
~"% 'A0j:   &B
~!& % )!%  Aj"G
 
 
     
 % ( &W

  AЉ  
 
     
   ' %|  ' (W

  A  
 
A 6 
 
!@ (E@ Aj! Aj!
A !
# Ak"$ @@@@@@@@@@@ Aj" ) "&PE@  )"%P
  )"'P
 & '| &T
 % &V
  .!   &>
 AA &BT"6 A  &B  6 AjA AU AjA AU A6 A6   &B}y}B~B͠|B "!@  A N@ A
j  R

 AjA   kR
@ A H@ A
jA  kAq9

 Aj Aq9
 (! Aj AjAC  6 	"A
O@ Aj!@ ("A)O
@ E
  At!  Aj"Aq"E@B !& Aj  j

   j! AjAq!B !&@ Aj"   5  &B "%B"&>   5  % &B~}B "&B"%>  & %B~}!& Ak! Ak"
 
 Aj
 Aq
 Ak"   5  &B B> 
 A	k"A	K
 

 AtA j( At"E
 ("A)O
  At!  !& Aj"Aq"E@B !% Aj  j

 AjAq!   jAj!B !%@ Aj"   5  %B "% &"'>   5  % & '~}B "% &"'>  % & '~}!% Ak! Ak"
 
 Aj
!  AqE@  Ak"   5  %B  &> 
 (A 
" ("    I"A(K
 E@A !

 Aq!
 AF@A !

 A>q!A ! Aj! A
j!@  ( "
 ( j" Aqj"6  Aj" ( " Aj( j"  
I  Krj"6   I  Ir! Aj! Aj!  
Aj"
G
 


A A
A  
A A
A  
A A
A  
A A6A  
A A7A  
A AA  
 
 
At" Ajj"  ( " A
j j( j"j"6   I  Kr 
AqE
  A(F
 Aj AtjA6  Aj!
  6    K"A)O
  At!@@ @A Ak" Ajj( "  Ajj( "G  K"E



AA  !
@@ AO@  E@A !  A 6

  AkAq"Aj"Aq! AI@ A
j!B !&

 Aq! A
j!B !&@  5 B
~ &|"%>  Aj" 5 B
~ %B |"%>  Aj" 5 B
~ %B |"%>  A
j" 5 B
~ %B |"%>  %B !& Aj! Ak"
 


-- Chunk 40 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:5851-6000

 Aj!

 @@  5 B
~ &|"%>  Aj! %B !& Ak"
 

 %BZ@  A(F
 A
j  Atj &>   Aj! 
   6
A !
@@@@ " "H"
E@  k 	  k 	I"

A !

 Aj" Aj" AC  6 AR!
 (! Aj"  AC  6 AR! (! Aj"  AC  6 Aj!  Aj!! Aj!" Aj!# AR!$ (!  (! (! (! (!A !@@ !
@@@  A)I@ 
Aj!  At!A !@@@@  F
 A
j j Aj!( E
 
      K"A)O
 At!@@ @A  #j( " Ak" A
jj( "G  K"E



AA  !
A ! AI@A!
A !
 AG@ A>q! A
j! Aj!@  ( " ( Asj"  
Aqj"
6  Aj" ( " Aj( Asj"   I   
Krj" 6   I   Ir!
 Aj! Aj!  
Aj"
G
 

 Aq 
At"  A
jj" ( "   $j( Asj"  
j"6    I   Kr 

AqE
  6A! ! 
      K"A)O
 At!@ E
A  "j( " Ak" A
jj( "G  K"E
 


  	K
  
F
	 
 
jA0  
kU
	
AA  !
@ AK@  !

 @A!
A !
 AG@ A>q! A
j! Aj!@  ( " ( Asj"  
Aqj"
6  Aj" ( " Aj( Asj"   I   
Krj" 6   I   Ir!
 Aj! Aj!  
Aj"
G
 

 Aq 
At"  A
jj" ( "   j( Asj"  
j"6    I   Kr 

AqE

  6 Ar!
    K"A)O
 At!@@ @A  !j( "  Ak" A
jj( "G   K"E



AA  !
@ AK@ !

 @A!
A !
 AG@ A>q! A
j! Aj!@  ( " ( Asj"  
Aqj"
6  Aj" ( " Aj( Asj"   I   
Krj" 6   I   Ir!
 Aj! Aj!  
Aj"
G
 

 Aq 
At"  A
jj" ( "   
j( Asj"  
j"6    I   Kr 

AqE

  6 Aj!
    K" A)O

  At!@@ @A   j( " Ak" A
jj( "G  K"E



AA  !
@ AK@ ! 

  @A!
A !
  AG@  A>q! A
j! Aj!@  ( " ( Asj" 
Aqj"
6  Aj" ( " Aj( Asj"  I  
Krj"6   I  Ir!
 Aj! Aj!  
Aj"
G
 

  Aq 
At" A
jj" ( " Aj j( Asj" 
j"6   I  Kr 

AqE

   6 Aj!
 	 
G@ 

-- Chunk 41 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6001-6150
 
j A0j:    A)O

  E@A ! 

  AkAq"Aj"Aq! AI@ A
j!B !&

 Aq! A
j!B !&@  5 B
~ &|"%>  Aj" 5 B
~ %B |"%>  Aj" 5 B
~ %B |"%>  A
j" 5 B
~ %B |"%>  %B !& Aj! Ak"
 


 	 	A  



  	A  
 @@  5 B
~ &|"%>  Aj! %B !& Ak"
 

 %BT
   A(F
 A
j  Atj &>   Aj! 
   6  G
 
A!




@@ A)I@ E@A !

 AkAq"Aj"Aq! AI@ Aj!B !&

 Aq! Aj!B !&@  5 B~ &|"%>  Aj" 5 B~ %B |"%>  Aj" 5 B~ %B |"%>  A
j" 5 B~ %B |"%>  %B !& Aj! Ak"
 


 A(A  
 @@  5 B~ &|"%>  Aj! %B !& Ak"
 

 %BT
  A(F
 Aj Atj &>  Aj!
  6      K"A)O
 At!@@@@@@ E
A Ak" Ajj( "   A
jj( "G   K" E
 
  AqAG


 
 EqE
 Ak"  	O
   
j-  AqE

  	K
A ! 
!@@  F
 Aj! Ak" j" -  A9F
 
    -  Aj:    kAj O
  AjA0 AkU

A1 E
  
A1:  A0 AF
  
AjA0 AkUA0
!  Aj! 
  	Or
  
j  :   Aj!

   	A  
  	A  
  	K

  ;  6  
6  Aj$ 

  	A  
 A(A  
A(A(A  
  A(A  
Ạ AA  
 Aj Aj( 6   )7
  ." H@ Aj ( (    Aja (
!  (

A!  A; E@A!  A6 AË 6 Aj

  6 A ; A6 A 6 Aj

Aċ A%A  
A!  A6 AË 6 Aj
!   6  6  
6  6  AjK Aj$ 

 A(A  

 ! ! A !# Ak"$  ?!'A ?D      a
 A 'B "%B Q
  'B")B 'BB 'B4Aq""&B!( %P@A )P
 Ak!B!% (P

B  &B &BQ"!&BB !%AwAw  j! (P
!  ;x  %7p B7h  &7`  : z@@@@ Ak"@A!A A  'B S"A A   !A 'B?  !A  AOAk
 A6( A 6$ A; A!A! A j

 A6( A 6$ A;  A j

 A j! Aj!
# A0k"$ @@@@@@@@@@ A j" ) "%PE@  )"'P
  )"&P
 % &|"& %T
 % 'T
 &B Z
   /" ;  % '}"'7     A k   &BT""Ak  &B  & "&B T""Ak  &B & "&BT""Ak  &B & "&BT""Ak  &B & "&B T" &B & "(B Y"k"k"
A H
 B 
")"& '7 & 'T
   ;  %7   % &7 % &V
A kA lAjAm" A O
  At" A j) "*B"& % )B?"%"+B "5~",B "1 *B ") 5~"2| ) +B"*~"+B "6|!3 ,B & *~B | +B|"7B|B !+BA    A j/ jkA?q","*B}!. & ' %"%B "'~"-B & %B"%~B | % )~"%B|">B|B !4 ' )~!8 %B !9 -B !:  A j/ ! ) ( "%B ";~"< & ;~"'B "/| ) %B"%~"(B "0| 'B % &~B | (B|"=B|B |B|"- ," A O@  A=I
	  A/O@AA	  AI"!
A/A 


AA  AI"!
A=A 


  A O@AA  AI"!
A A 


A

-- Chunk 42 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6151-6300
A  A	K"

	
A A
AІ  
A A
A  
A A
A  
A A6A  
A A7A  
A A-A  
A A
A  
  A A  
AA  AI"!
A A 
! + 3|!3 - .!& 
 kAj! - 8 :| 9| 4|}"4B|"( .!'A !@@@@@@@@@   n! AF
  
j"
 A0j"
:  @    lk"  ,"+ &|"% (Z@  
G
 Aj!B!%@ %!( '!) AO
  
j &B
~"& ,A0j":   Aj! (B
~!% )B
~"' & ."&X
 
 % - 3}~", %|!+ ' &} *T" 
 , %}", &V


 ( %}"'  ,"(T! - 3}",B|!* ' (T ,B}", %Xr
 =B|B "- / 0|| <|!'B 9 :| >B|B | 8| & (|"% +||}!.B  1 6| 7B|B |"1 2| & +||}!2 % 1| ) 5 ;}~| /} 0} -}!)@ % +|"/ ,T ' 2| ) +|ZrE@ & +|!%A !

 
 
Ak"
:   & (|!& ' .|!- , /V@ ( )|!) % (|!% ' (}!' ( -X


 ( -V! & +|!%

 Aj! A
I A
n!E
 
AЇ  
  
jAk!
 * 1 6| 7B|B | 2|B
~ / 0| =B|B | <|B
~} (~|!- )B
~ & *|}!. , &}!/B !)@ & *|"% ,T ) /| & -|ZrE@A ! 

 
 Ak":   ) .|"0 *T!  % ,Z
 ) *}!) %!& * 0X
 


AAA  
 AA  
@ % *Z r
  * % (|"&X * %} & *}Tq
  A 6 

 % 4B}X %BZqE@ A 6 

  ;  Aj6

 &!%
@ % +Z  r
  + % *|"&X + %} & +}Tq
  A 6 

 % (BX~ '|X % (B~ZqE@ A 6 

  ;  6
  
6 
 A0j$ 

 A 6# Ak"$   6
  Aj6# A k" $   A 6
   Aj6  A 6   A
j6  A 6  A6
@ Aj"( E@  A6\  A 6X  B7d    AjB7H    AjB7@

  A0j Aj) 7   A(j Aj) 7    ) 7   A6\  A 6X  B7d    AjB7P    AjB7H    A jB7@
    AjB78    A8j6`  A jA  
@ ( E@ A j! Aj!# A
k"$ @@@@ @@@@@@ A j" ) "%PE@  )"&P
  )"'P
 % '|"( %T
 % &T
  , !  .!   %>  AA %BT"6 A  %B  6 AjA AU  &> AA &BT"6 A  &B  6 AjA AU  '> AA 'BT"6 A  'B  6 AjA AU AjA AU A6 A6   (B}y}B~B͠|B "!
@  A N@   R Aj  R Aj  R

 AjA   kR
@ 
A H@ A  
kAq" 9 Aj  9 Aj  9

 Aj Aq9
 (! Aj AC  6
  ("
  
K"A(K
 E@A !

 Aq! AF
 A>q!
 Aj!  Aj!@     ( " ( j"j"6   Aj"
 
( " Aj( j"
  I  Irj"6   
I 
 Ir! Aj!  Aj!  
 	Aj"	G
 


A A
A  
A A
A  
A A
A  
A A6A  
A A7A  
  	At"  Ajj" ( " Aj  j( j"  j"	6    I   	Kr 
E
  A(F
 Aj AtjA6  Aj!
  6
 ("	   	I" A)O
  At! @@  @A  Ak"  Ajj( "   Ajj( "G  K"E



AA   !
  H@ 
Aj!


@ E@A !

-- Chunk 43 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6301-6450

 AkAq" Aj"Aq!@  AI@ ! B !%

 Aq! ! B !%@    5 B
~ %|"%>   Aj" 5 B
~ %B |"%>   Aj" 5 B
~ %B |"%>   A
j" 5 B
~ %B |"&>  &B !%  Aj!  Ak"
 

 @@    5 B
~ %|"&>   Aj!  &B !% Ak"
 

 &BT
  A(F
  Atj %>  Aj!
  6@ ("A)I@A !A  E
 AkAq" Aj"Aq!  AI@ Aj! B !%

 Aq! Aj! B !%@    5 B
~ %|"%>   Aj" 5 B
~ %B |"%>   Aj" 5 B
~ %B |"%>   A
j" 5 B
~ %B |"&>  &B !%  Aj!  Ak"
 





 @@    5 B
~ %|"&>   Aj!  &B !% Ak"
 

  &BT
  A(F
 Aj Atj %>  Aj
6@ 
E
  
AkAq" Aj"Aq!@  AI@ Aj! B !%

 Aq! Aj! B !%@    5 B
~ %|"%>   Aj" 5 B
~ %B |"%>   Aj" 5 B
~ %B |"%>   A
j" 5 B
~ %B |"&>  &B !%  Aj!  Ak"
 

 @@    5 B
~ %|"&>   Aj!  &B !% Ak"
 

 &BT@ 
!

 
A(F
 Aj 
Atj %>  
Aj!
  6
 Aj" Aj" AC  	6 AR!
 (! Aj"  AC  6 AR!
 (! Aj"  AC  6 AR!
@@ ("	 (" 	 K"A(M@ Aj! Aj!  Aj!! (! (! (!A !@ !
 At! @@  @A   !j( "  Ak"  j( "G  K"E



AA   !
A !  AM@ @A!A !	 AG@ A>q!
 " Aj!@     ( " ( Asj"j"6   Aj" ( "
 Aj( Asj"  I  Krj"6   I  
Ir! Aj!  Aj!  
 	Aj"	G
 

 Aq  	At" j" ( "   
j( Asj"  j"6    I   Kr 
E
	
  6A! !	
@@@@ 	  	 K"A)I@ At! @@  @A    j( "  Ak"  j( "G  K"E



AA   !
@ AK@ 	!

 @A!A !	 AG@ A>q!
 " Aj!@     ( "
 ( Asj"j"6   Aj" ( " Aj( Asj"  
I  Irj"6   I  Ir! Aj!  Aj!  
 	Aj"	G
 

 Aq  	At" j" ( "   
j( Asj"  j"6    I   Kr 
E

  6 Ar!
    K"A)O
 At! @@  @A   j( "  Ak"  j( "	G  	K"E



AA   !
@ AK@ !

 @A!A !	 AG@ A>q!
 " Aj!@     ( "
 ( Asj"j"6   Aj" ( " Aj( Asj"  
I  Krj"6   I  Ir! Aj!  Aj!  
 	Aj"	G
 

 Aq  	At" j" ( "   
j( Asj"  j"6    I   Kr 
E

  6 Aj!
    K"A)O
 At! @@  @A  Ak"  Ajj( "   j( "	G  	K"E



AA   !
@ AK@ !

 @A!A !	 AG@ A>q!
 " Aj!@     ( "
 ( Asj"j"6   Aj" ( " Aj( Asj"  
I  Krj"6   I  Ir! Aj!  Aj!  
 	Aj"	G
 

 Aq  	At" j" ( " Aj  j( Asj"  j"6    I   Kr 
E

  6 Aj!
 
AF
 
 j A0j:    ("
  

-- Chunk 44 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6451-6600
K" A)O

 
Aj!  At! @@  @A  Ak"  Ajj( "   j( "	G  	K"E



AA   !
 Aj AC  6
  ("
  
K"A(K
@ E@A !

A !A !	 AG@ A>q!" Aj!  Aj!@     ( "# ( j"j"$6   Aj" ( " Aj( j"  #I  $Krj"6   I  Kr! Aj!  Aj!  " 	Aj"	G
 

 Aq 	At"  Ajj"	 	( "	 Aj  j( j"  j"6    	I   Kr 
E
  A(F

 Aj AtjA6  Aj!
  6
    I" A)O

  At! @@  @A  Ak"  Ajj( "	   Ajj( "G  	I"E



AA   !
@  H" E  NqE@  N

  



A !A  E
 AkAq" Aj"	Aq!  AI@ ! B !&

 	Aq! ! B !&@    5 B
~ &|"%>   Aj"	 	5 B
~ %B |"%>   Aj"	 	5 B
~ %B |"%>   A
j"	 	5 B
~ %B |"%>  %B !&  Aj!  Ak"
 


 AR ("  ("   K" A)O

  At!  Ak! Aj!@@  @   j!	   j!
  Ak! A 
( "
 	( "	G 	 
I"E



AA   !
 AI

	


 A(A  
AAA  
 A(A  
 @@    5 B
~ &|"%>   Aj!  %B !& Ak"
 

  %BT
  A(F
  Atj &>  Aj
"	6@ 
E
  
AkAq" Aj"Aq!@  AI@ Aj! B !&

 Aq! Aj! B !&@    5 B
~ &|"%>   Aj" 5 B
~ %B |"%>   Aj" 5 B
~ %B |"%>   A
j" 5 B
~ %B |"%>  %B !&  Aj!  Ak"
 

 @@    5 B
~ &|"%>   Aj!  %B !& Ak"
 

 %BT@ 
!

 
A(F
 Aj 
Atj &>  
Aj!
  6@ 
E@A !


 
AkAq" Aj"Aq!@  AI@ Aj! B !&

 Aq! Aj! B !&@    5 B
~ &|"%>   Aj" 5 B
~ %B |"%>   Aj" 5 B
~ %B |"%>   A
j" 5 B
~ %B |"%>  %B !&  Aj!  Ak"
 

 @@    5 B
~ &|"%>   Aj!  %B !& Ak"
 

 %BT
  
A(F
 Aj 
Atj &>  
Aj!

  
6 	  	 K"A(M
 


	
 
! A!@@  AF
 Aj!   j  Ak! -  A9F
 
   j"Aj" -  Aj:    Aj 
K
 AjA0 U

 A1:   
@ AjA0 
U
 AI@  jA0:   
Aj!
 
Aj!

 AA  
 AM@  
;  6  6  A

-- Chunk 45 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6601-6750
j$ 

 AA  
A(A(A  
  A(A  
Ạ AA  
 A j A(j( 6   ) 7P
  (P (T /XA  A ja (! ( 

 A;  A6( AË 6$ A j
!   6\   6X  6T  6P  A jK Aj$ 

 A(A  

 A(A  
6# Ak"$   6
  6   Aj6  A 6  Aj$ 
8 @ A F
     (  E
 A
 E@A 
     (
 
~|# Ak"$   6
# A0k"$  Aj!# A k"$   A
j"(  Aj (  +@ (AG
  +!	 ( -E
  	D      f! B ~ 	D      Cc@ 	

B
B  	DCdB  	 	a7B!
  7  A j$ @@ (AF@ )"B Y

  A/jA J!  A:     6

   BZ@ A:   7   # A0k" $   A 6   A/j6   A6
  A 6  B7  A6,  A	6$   Aj6     A j6    6(  Aj  A0j$ 6A

   < A 
:  
 A0j$  AO@  
 Aj$ 
7A -  A<A"E@AA< 
 A 6  Aj  A8C 
/ @ @ ( 
   AjA8C A<A
 
 
# Ak"$  Aj!@@  @  ( 
   )7  Aj  A
j( 6   AA

 
 
 ("@ (! @  AA"  A
j  A8j!  Ak"
 

 AA8 Aj$ 
2 ("AqE@ A qE@   
   
   
-  ("@  (! @    A
j!  Ak"
 


2 ("AqE@ A qE@   
   
   
I ("AqE@ A qE@  ( "   Au"s k  AsAv j
   
   
7# A k"$  A 6 A6
 A 6 B7 Aj   
2  ("AO@  
@  (E
   (
" AI
    

0# Ak"$    6
 A A A
jA l Aj$ 
5 (!@ (E
  (
"AI
   
   6  A 6 
*# Ak"$   6
   6 Aj Aj$ 
0# Ak"$    6
 Aܪ A A
jA̪ l Aj$ 
0# Ak"$    6
 A A A
jA l Aj$ 
1# Ak"$  Ax6   ) 7 Aj Aj$ 
' @ E  ErE@     " 

 
  
,# Ak" $   Aj" A A
   Aj$ 
6"A ; A 6     p  A 6$   6    ) 7
7"A ; A 6    z  A 6T   6P   ) 7H
7"A ; A 6       A 6
   6   ) 7
7"A ; A 6X      A 6$   6    ) 7
7"A ; A 6    ^  A 6<   68   ) 70
7"A ; A 6    }  A 6L   6H   ) 7@
o# Ak" $   A 6
  B 7  Aj!A -  AA"E@AA 
 A 6   ) 7 A
j Aj( 6   Aj$  
*      (  (j  C    ( j6A 
~# Ak"$  A;
  6   6# Ak"$  Aj" ) !   6
  7# Ak" $  Aj"( "(
!@@@@ ( 
 
A!A !

 
  ( "(! ( !

  Ax6    6
  A  ( (" -   - 	 
   6   6   A  ( (" -   - 	 
# A@j"$  Aj!@@  @  ( 
   AjA<C  A A

 
 
 AA  A
j"" ("@  (! @    A
j  A
j!  Ak"
 

 AA
 A@k$ 
1# A@j"$  Aj"   AA" A
j A@k$ 
'   B 7    AjB 7    AjB 7    AjB 7  
:A̭ -  !A̭ A :  AЭ ( !AЭ A 6    6   6 
-  (
   ( (
 !  A :    :    6 
&A -  AA" @  

-- Chunk 46 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6751-6900
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
&A -  AA" @  
AA 
Y   (   ("kK@# Ak"$  Aj    AAv (" AxG@   (
A  
 Aj$ 

%@ E
   ( "E
   (  l 


~   Aq~   9B 
7 
z   G@# A0k" $    6   6   A6
  A 6  B7    AjB
7(    B
7     A j6  Aj  
    C
%   E@A A2 
       (	 
Ax k  O  iAF
~  ) " B?" } B Y f
#   E@A A2 
      ( 
#   E@A A2 
      (
 
#   E@A A2 
      (# 
#   E@A A2 
      (% 
#   E@A A2 
      (' 
(  ( "AxrAxG@  ( A

%    -  At" A j(   A j( 
!   E@A A2 
     ( 
"   -  E@ A A@
 A A@
# A k"$     A j$ 
   E@A A2 
    (  
)     -  A.Fr:   ( " (
   ( (  
~A ( E@# A0k"$   E@Aȝ !A 

  ( !  A 6   AjAȝ  Aq"!  (A  
! Aj Aj) "7   ) "7 A(jA ) 7  A j" A ) 7 A ) !A  6 A A6 A  7 A  7   7 @@  ("E
   (
"@  ( "Aj! ) BB!@ P@@ A k! )  Aj!B"BQ
 
 B!
  zAvAtljAk( "	AO@ 	 
 B} ! Ak"
 

  A
lAjAxq"jA	j"E
   (  k A

 A0j$ 
A 

!  A 6   6   6 
  ( "@  ( A


   ( " (    Aj( (
  
   ( AxG@  

    Aq	6  A 6 
C   E@# A k" $   A 6  A6
  A 6  B7  Aj  
    
   ( " AO@   

    (M@   6

    6   6   6 
@@@@@  Ak"( "Axq"AA Aq" jO@ A  A'j"	 I
@@ A	O@  Y"
A 
	
 A{K
A A
jAxq A
I!@ E@ AI  ArIr  kAOr

	
  Ak" j!@@@@  K@ A ( F
 A ( F
 ("Aq
 Axq" j" I
  `  k"AI
   ( AqrAr6   j" Ar6  j" (Ar6  T


  k"AK



   ( AqrAr6   j" (Ar6


A (  j" I
@  k"AM@  Aq rAr6   j" (Ar6A !A !

   AqrAr6   j" Ar6  j" 6   (A~q6
A  6 A  6 


   AqrAr6   j" Ar6  (Ar6  T
	
A (  j" K

 7"E
   A|Ax ( "Aq Axqj"   IC  E

       IC ( "Axq" AA Aq"jI
 A   	K
  E
 

A A.A  
A A.A  
A A.A  
A A.A  

-- Chunk 47 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:6901-7050
   AqrAr6   j"  k"Ar6A  6 A  6   

  

     
6  A 6 
# Ak"  :  - 
   ( " (  ( =
  @    

  (
A A ( (
 
   (
    ( (
 
    (6  A 6 
J  j k"  (   ("kK      ( 
  (j  C    ( j6
   (  (  ( ,
   (    ((
  
# A k"$   6
  6@@@@@@   @ AO@A  , AJ
  , AL
A

  6   6A!A 

  , AJ
Aj"j,  AL
  6   6A !A
6
  6  I"  IrE@  K
 E  MrE@ A
j Aj   j,  AJ( !
  6   "I@ Aj" Ak"A   M"I
@  F
   k!   j,  AJ@ Ak!

  F
    j"Ak"	,  AJ@ Ak!

 	   j"F
  Ak"	,  AJ@ Ak!

  	F
  Ak",  AJ@ Ak!

  F
  Ak!
  j!
@ E
   M@  F


   j,  AL

  F
@@   j",  " A H@ - A?q!  Aq!  A_K
 At r! 

   Aq6$A

 - A?q Atr!  ApI@  A
tr! 

 AtA q - A?q Atrr" A F

   6$A  AI
 A  AI
 AA  AI
!   6(    j6, A64 A 60 B7<  AjB7h  AjB7`  A(jB7X  A$jB7P  A jB
7H

    6( A64 A 60 B7<  AjB7X  AjB7P  A(jB
7H

   A    
 A64 A 60 B7<  AjB7`  AjB7X  A
jB
7P  AjB
7H

  AЖ  
  
       
  A j68 A0j  
  A	O@   Y

  7

    6  A 6 
   %6   6 
   (  ( 
~  (!  (!# Ak"$  (
A A ( (
 ! Aj" A :    :    6  @@  6
 A
j!# A@j" $ A!@ Aj"- 
  - !@ ( "- AqE@ AqE
 (
A A ( (
 E


 AqE@ (
A A ( (
 

  A:   A j Aj) 7   A(j Aj) 7   A0j Aj( 6    )
7 ) !	  A 68   	7    Aj6    Aj64   AjA (   
  (4A A  (8(
 !

  A (   !
 A:   :   A@k$  Aj! Ak"
 

A! Aj" - E@  ( "(
A A ( (
 !
   :  Aj$  
    Bд矲7  B؅색b7 
   (   ( =
 AЭ   6 A̭ A:  
    B@7  BǤ쬘 7 
"   Bͅ 7  BŹ7 
   (   ( 
   (  ( =
   A 6   6 
    (   (
    (   (@
  (
 (   I
a@@  Ak( "Axq"AA Aq" jO@ A   A'jK
  E

A A.A  
A A.A  


   (   

  ( Aȭ ( M

   A A U

   (   '


-- Chunk 48 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7051-7200
   ( (A G

   ( 2A G

   ( AF
k# A0k"$   6   6  A6
 A 6 B7  AjB
7(  B
7   A j6 Aj  

   ( A j
k# A0k"$   6   6  A6
 A 6 B7  AjB
7(  B
7   A j6 Aj  
 A A+   

   ) A f

   # j$ # 
   
  A A
  A A


   (  
  A A
  A A

   (  
  A A

   (  

   A  I
  A A

  A A@

   A  I
	    4 

 A A 
 A A  

   A  I

    ) 7 

   A  I
  A A
    A ( " A     

    )7 

   A  I

     @
	@@ "  " kK@  j!   j! AI
A  Aq"k!@ A|q" O
  Ak@ E@  !

 !  !@ Ak" Ak"-  :   Ak"
 

AI
  Ak!@ Ak Aj-  :   Ak Aj-  :   Ak Aj-  :   Ak" -  :   Ak!  K
 

   k"A|q"k!A  k!@   j" AqE@  O
  jAk!@ Ak" ( 6  Ak!  I
 


  O
   At"Aq!  A|q"Ak!A  kAq!	 ( !@ Ak"  	t ( " vr6  Ak!  I
 

 Aq!   j! 

 AO@@ A  kAq"j" M
  ! @ ! @  -  :   Aj! Aj!  Ak" 
 

 AkAI
 @  -  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj! Aj" G
 

   k"A|q"j!@  j" AqE@  O
  !@  ( 6  Aj! Aj" I
 


  O
   At"Aq!  A|q"Aj!A  kAq!	 ( !@   v ( " 	tr6  Aj! Aj" I
 

 Aq!   j!
   j" O
 Aq"@@  -  :   Aj! Aj! Ak"
 

 AkAI
@  -  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj! Aj"  G
 


  k" O
  Aq"@@ Ak"  Ak" -  :   Ak"
 

 AkAI
   Ak!@ Ak Aj-  :   Ak Aj-  :   Ak Aj-  :   Ak" -  :   Ak!  I
 


  A A
	   ( 
	   ( 
	   ( 
	   ( 
	   ( 
	   A 6 
	   ( +
~# A k"$ @@@@@@  -  Ak 
   (6 Aj"  A A  A A AjA \ A): A A AjA \A -  AA" E
  AjA (  6    AjA )  7    A )  7   A6
   6 A6A A AjA \!  ("E
 ( A

   - :  Aj"  (
A A ( (
 :    6  A : 	  A 6  Aj!# A@j"$   ( !  A  - 
   ("- AqE@A (
A A  AA  ( (
 
  A (   

 E@A (
A A ( (
 

 A:  A j Aj) 7  A(j Aj) 7  A0j Aj( 6   )
7 ) ! A 68  7  Aj6  Aj64A  AjA (   
  (4A A (8(
 
:    Aj6  A@k$   "- !@ ( "E@ ! 

A! @ AqE@ AG
 - 	E

-- Chunk 49 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7201-7350
 ("- Aq
 (
A A ( (
 E

 A: 

  (" (
A A  ( (
 " : 
  Aq! 

  (!  Aj" A A A A  AjA \A A  A \! 

   (" 6 A AA A  AjA A A AjA ! 
 A j$   

AAA  

 ~# Ak"$  A j  @ (|AxG@ A8j Aj( 6   )|70  )47X A j!
# A k"$  B 7@@@ A j"(" AM@ B 7@ A@k!

 A@kA ( "AA    Ak6  Aj6  Aj )@ (
! (
  A 6 A 6 @ A j!@ A@k  (D! @ (@"AxG@  (H"6<   68  64 A@k!
# A k"$  B 7@@@ ("AM@ B 7@ A@k!

 A@kA ( "AA   Ak6  Aj6  Aj )@ (
! (
  A 6 A 6 @@ A@k  (D!@ (@"AxG@  (H"6<  68  64 A@k!
# Ak"	$ @@A "

  	B 7 ("AM@ 	B 7 	Aj!


 	AjA ( "
AA   Ak6  
Aj6  	 	) 	(!
 	( 
 # A k"$   6   
6 AjA  
 
A OA AA (!
@ (AG@ A 6  (
6
  
6 Aj @@ - E@@ - E
 - ! ("
 (F@ AjA 
 (
 
j :    
Aj6 Aj  - E
 

 
 (6 
Ax6  Aj

 
 )7  
Aj Aj( 6 
 A j$ 

 
 (
Aԓ  


 
Ax6  
 
6
 	Aj$  (D! (@"	AxG
 A4j !
 
A6  
 6 Aj

  6$  6   6
  (H60  6,  	6( A@k Aj A
j A(j (@AxG@ A@k
 Ak"
 

 
 )7 
A 6  
A
j Aj( 6 

 
A6  
 6
 A j$  (D! (@AG
 A4j ! 
 
A6  
  6 Aj

  6$   6   6
  )H7,  6( A@k Aj A
j A(j (@@ 
 Ak"
 

 
 )7 
A 6  
A
j Aj( 6 

 
A6  
 6
 A j$  (!  (|AG@  )"7D   6@ A 6T A 6L  B A   6x  "6t   6p A 6l   A G"6h  6d   6` A 6\  6X A(j A j (("	E
 (,! @  ( "E@A !A 

  (!  (! !A
!   6  6  6 A 6   6  6  6 A 6   6| A j A j ( "
@ ($! @A !  ("@ Ak!  (!@@@ -  E
 Aj! Ak"AG
 


A! E
  Aj!@@ -  "E@ Aj!

  k :  
 Aj! Ak"
 

    k6
 Aj!  (!  (!A !# A0k" $    6   6  A j  AjQ@@  ( "E@A !A!

  ($!  (,E
 @ A H
 @ E@A!

A -  A! A"E

A !  A 6   6   6
  I@  A
jA    (!  (!  (
!
  j  C    j"6  kAM@  A
j A  (!  (!
  j"A /  ";   AjA -  "
:     Aj"6    )7  A j  AjQ  ( "@@  (,  ($"  (
 kK@  A

-- Chunk 50 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7351-7500
j    (!
  (" j  C    j"6@  (
 kAM@  A
j A  (!  (!
  j" ;   Aj 
:     Aj"6
  A j  AjQ  ( "
 

   )
7  Aj  Aj( 6 

  A  
  6  6 Ax6 
  A0j$  Aj 	 Aj 
 (! Aj (" A AA (!@ (AG@ (   C!   6  6  6 Aj! Aj! Aj!# Ak" $   A
j A j Aj@  (
AxG@  A@k  A$j( 6   A8j  A
j) 7   A0j  Aj) 7     )
7(  A j"A 6   A 6H  A j" Aj( 6    ) 7`  A j Aj( 6    ) 7p  A j"  A j  A j"  A j"   ( 6     )H7`   A(j u

  (  (A
ljAj!# Ak"$ A  ( "E
    ( A  ( 
  ( (
A
ljAj
 Aj$ @  A 

  A j Aj( 6    ) 7`  A j Aj( 6    ) 7p  A j"   A j  A j 
A 
! A*6  6   Aj$  (" E
   (


  (Aĕ  
 Aj Aj A j (!  ("

 

 Aj A j (
!  ("	
 


   6|A A+ A jA A  
  (6XA A+ A jA A  
 A : ~ A ;| A j!# A k"$  A j" ( "E@A !A 

  64 A 60  6$ A 6    ("68  6(  (!A
!   6<   6,   6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj A
j (" E
 (!   6l  6X A j!# Ak"$  Aj A@k"  A j Aj" (@ (
!A

# A k"$   (!  A 6@@ @   (
"6 Aj  ( ( X (
!@@ (E@  6  ( 
  Aj Aj Aj" AO@    (!
 AO@  
 (" AI
   

 AI
  

  6
 A
jE@!  AO@  
 AI
  

  Aj  
A 

A A 
 ! 
A
!   6  6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!
A
!   6   6  A j$  (!  ( AqE@ A j A@k A0j Aj$   

   6|A A+ A jA A  

&~# Ak"$  Aj  @@ (AxG@ Aj Aj( " 6   )7 Aj! (!# Ak"
$  
  6
 
 6 
Aj!# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
Aj"	(" E@ A jAA A

 	  Ak6 	 	( " Aj6    -  "
:  
AI
 A6 A 6 B7 A6  Aj6  Aj6 Aj"  Aj[ A jA  
 - XAF@ - Y!


 )X"'BBR
 'B!

@@ 	(" E@ A jAA A

 	  Ak6 	 	( " Aj6    -  "#:  #AI
 A6 A 6 B7 A6  Aj6  Aj6 Aj"  Aj[ A jA  
 - XAF@ - Y!#

 )X"'BBR
 'B!#
 Aj 	; )!' (" AxF
  '7   6  Aj 	; )!' (" AxF
  '7   6
 Aj 	S - 
 A%j"  Aj)  7   A j" Aj) 7  A j - :   A8j ) 7  A=j  )  7    / ;H  )"'7  '70 )!) Aj 	; )!' (" AxF
  '7P   6L Aj 	S - 
 A j"  Aj)  7   A j" Aj) 7  Aj - :   A j ) 7  A j  )  7    / ;  )"'7X  '7p )!* AjB 7  AjB 7  AjB 7  B 7@ 	("A O@ AjA  	( " A A  	 A k6 	  A j6 

 AjAA A@ - AF@ - AqE


 )"'BBR
	 'BB R

 	( ! @@ @ 	 Ak"6 	  Aj"6   -  ! ! 

 AjAA A - AF@A ! - !

 )"'BBR
 'B!A !
 Aj 
j :   
Aj"
A G
 

 Aj"  Aj)  7   Aj" Aj)  7  Aj - :   Aj ) 7  Aj  )  7    /;  ) "'7  '7 ) !+ Aj! @ 	("E@  AA A

  A:   	 Ak6 	 	( "Aj6    -  : 
 - AF@ - 


-- Chunk 51 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7501-7650
 )"'BBR
	 'B
!$ Aj!A !
# Ak"$ @@ 	(" AO@ 	  Ak6 	 	( " Aj6   (  

 A jAA A - `AF@ (d

 )`"'BBR
 'B 
!
 A 6 A 6 @@@@ 
@ A j!! A j!
 A j! A j! @ A j 	; )d!' (`" AxF@ A6   '7

  '7   6
 	(" AO@ 	  Ak6 	 	( " Aj6   (  

 A jAA A - `AF@ (d

 )`"'BBR
 'B 
! A 60 A 6(  @ A j 	; )d!' (`" AxF
  '78   64 A j!# A k" $   Aj 	;  )!'@@  ("AxG@   '7   6 	("AI
 	 Ak"6 	 	( "Aj6  AO@ )  !' 	 Ak6 	 Aj6  ) !( Aj  A
j( 6    )7  (7  '7 

  AjArAA A  )!' Ax6  '7   Aj

 Ax6  '7 

  AjArAA A  )!' Ax6  '7   Aj
  A j$  )`!' (p" AxF
   ) 7  Aj  Aj( 6    6P  )h7H  '7@ Aj A<j( 6   )47 A j! Aj! A@k!A !# A k"
$  
Aj! # Ak"
$ @ A(j"( "E@  A 6   6
   ) 7   Aj Aj( 6 

 (!# A k"$   6
  6 Aj Aj  (!@@ ("E
  @ Ak!@  AtjAj( !  6
  6 Aj Aj  (
! ("E
 Ak"AG
 

A !

A !
 
 6
 
 6 
 6 
 6  A j$  
Aj! 
( E@   6  Ax6    ) 7  A
j Aj( 6  

   6
   ) 7   ) 7   Aj Aj( 6   Aj Aj( 6 
 
Aj$ @ 
(AxG@ 
A8j 
A
j( 6  
A0j 
Aj) 7  
A(j 
A
j) 7  
 
)7  
A@k!# A0k"$  
A j"(E@ (
!" A 6 A 6   6   A;   ) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7    ) 7  Aj Aj( 6 A 

 Aj Aj" Aj( 6    ) 7 A(j Aj( 6   ) 7  Aj! A j! A
j!"# Ak"$  Aj!# A k" $ @@@@@@ Aj"
( "/"A
O@ 
("AI
  A j!  A j! Ak
 Aj" 
("A
lj! 
(!@  Aj"
I@  ) 7  Aj Aj( 6 

  
A
lj   k"A
l Aj Aj( 6   ) 7   
Atj  Atj At
  Atj"Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   6H  6D  6@ Ax6   ) 7   Aj;

  A6
   6   
(6 Ak!

   6   
(6  A6
  Aj  Aj  (@"Aj!  (D!@ /"
AM@  ) 7  Aj Aj( 6 

 Aj  
Ak"A
l Aj Aj( 6   ) 7  Aj Aj At
  ) 7  
Aj; Aj Aj) 7  Aj Aj) 7  Aj Aj) 7    AjA C"A6H  6D  6@

  A j!  A@k!  A6
   6   
(6

  A6
   6   
(6A !
  Aj  Aj ( "Aj" A
lj!
 ( !@  /"O@ 
 ) 7  
Aj Aj( 6 

  Aj"A
lj 
  k"A
l 
Aj Aj( 6  
 ) 7   Atj  Atj At
  Atj"Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7   Aj;   AjA C" 6H  6D  6@
  A j$ @@@ (AxF@  (P6  )H7 

 (<! (8! A j AjA0C (P! (H!% (L!& (@! (D!@ (" @ A j!@   6\  /6d  Aj6` Aj! A j!# A k" $ @  A j"("
AkF@@@ ( "/A
O@ ("AI
  A j!  A j!@@@ Ak 
  A6
   
6   6 Ak!  Aj  Aj

  A6
   
6   6  Aj"  Aj  A6\    )@7T  A j   Z  A C

  A6
   
6   6  Aj  AjA !


-- Chunk 52 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7651-7800
    Z Ax6 

  A@k!  A j!  A6
   
6   6  Aj  Aj
   6\   ( 6X   ( 6T  A j   Z   AjA C


5
  A j$  (AxF
 (<! (8! A j AjA0C (@! (D! (" 
 

 Aj A jA0C  6D  6@  6<  68 "( "( "E
 (!
"  6  A ;  A 6 A ;   6  
Aj"6   6   6   6 Aj!
 Aj!@  Aj" (AkF@  ( " /"A
O
6   Aj";   A
lj"Aj 
Aj( 6  Aj 
) 7    Atj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7    AtjAj 6   ;   6


4

  6  &6  %6 
 Aj$ 

A  
 (
! (
! (!  (
!  (Aj6  6  6   6   (
6
 A0j$  Ax6

 
( 
(Atj" ) !'   ) 7   '7   Aj") !'  Aj) 7  Aj '7   Aj") !'  Aj) 7  Aj '7   Aj" ) !'   Aj) 7  Aj '7 
 
A j$  (pAxG@ 

 Ak"
 
 (0A 
6   )(7 A j Aj( 6   )
7@ A j  A@k Aj (`@ !
 
Aj"
 
G
 

  ) 7 A 6  A
j Aj( 6 

 A4j
 A(j
 A6   '7 A
j
 

 A6   '7
 Aj$  )!' (
	  (6  '7 Aj 	> )!' (
  (6  '7 Aj 	 (

 )!( Aj 	 (

 )!, Aj 	S - 

 Aj"  Aj)  7   Aj" Aj) 7  Aj - :   Aj ) 7  Aj  )  7    / ;  )"'7  '7 )!- Aj 	 (
 )!. Aj 	 (
 )!/ Aj 	V )!' (
  (6  '7 Aj 	V )!' (
  (6  '7 Aj!# A@j" $ @@@@@ 	("AO@ 	 Ak6 	 	( "Aj6  (  

  A0jAA A  - 0AF@  (4

  )0"'BBR
 'B 
!  A 6  A 6  @@  A0j 	;  )4!'  (0"AxF
   '7   6
  A0j 	;  )4!'  (0"AxF
   '7
   6  A8j  Aj( 6     )
70  A$j    A0j  Aj  ($AxG@  A$j
 Ak"
 

   ) 7 A 6  A
j  Aj( 6 

 A6   '7

 A6   '7

 A6   '7  A
j
  
  A@k$  )!' (
  (6  '7 Aj 	 (
 )!0 Aj 	 (
 )!1 Aj 	 (
 )!2 Aj 	 (
 )!3 Aj 	; )!' (" AxF
  '7   6 Aj!A !
# Ak"$ @@ 	(" AO@ 	  Ak6 	 	( " Aj6   (  

 A jAA A - xAF@ (|

 )x"'BBR
 'B 
! A 6 A 6@@@@ @ A j!
 A jAr! Aj! @ A j 	; )|!' (x" AxF@ A6   '7

  '7   6 	(" AO@ 	  Ak6 	 	( " Aj6   (  

 A jAA A - xAF@ (|

 )x"'BBR
 'B 
! A 68 A 60  @ A j 	; )|!' (x" AxF
  '7@   6< A j!# A@j" $   Aj 	S@@  - 
   A>j  - :    Aj  A,j) 7   A
j  A1j)  7      / ;<    )$7  	("AO@  )
!' 	 Ak"6 	 	( "Aj6  AO@ )  !4 	 Ak6 	 Aj6  ) !5 A
j  A>j-  :     /<;    ) 7  Aj  Aj) 7   A j  A
j)  7    570  47(  '7 
 A 6 

  AjArAA A

  AjArAA A
  )
!' A6   '7
  A@k$  (x
 (!    A,C   6H Aj A j( 6   )<7 A j!A !
# A k"
$  
Aj!  Aj!# Ak"$ @ A0j"( "E@  A 6   6
   ) 7   Aj Aj( 6 

 (!# A k"$   6
  6 Aj Aj  (!@@ ("E
  @ Ak!@  AtjAj( !  6
  6 Aj Aj  (
! ("E

-- Chunk 53 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7801-7950
 Ak"AG
 

A !

A !
  6
  6  6  6  A j$  Aj! ( E@   6  Ax6    ) 7  A
j Aj( 6  

   6
   ) 7   ) 7   Aj Aj( 6   Aj Aj( 6 
 Aj$  A j" ~ 
(AxG@ 
A8j 
A
j( 6  
A0j 
Aj) 7  
A(j 
A
j) 7  
 
)7  
A@k!# A0k"$  
A j"(E@ (
!"A 6 A 6  6  A;  ) 7 Aj Aj( 6   A0CA 

 Aj Aj" Aj( 6    ) 7 A(j Aj( 6   ) 7  Aj! A j! A
j!!# Ak"$  Aj!
# A k" $ @@@@@@ Aj"( "/"A
O@ ("AI
  A j!  A j! Ak
 Aj" ("A
lj! (!
@  Aj"I@  ) 7  Aj Aj( 6 

  A
lj   k"A
l Aj Aj( 6   ) 7   A0lj  A0lj A0l
  A0lj A0C 
 6X 
 
6T 
 6P 
Ax6   Aj;

  A6
   6   (6 Ak!

   6   (6  A6
  Aj  Aj  (P"Aj!  (T!@ /"AM@  ) 7  Aj Aj( 6 

 Aj  Ak"A
l Aj Aj( 6   ) 7  Aj Aj A0l
 Aj A0C  Aj; 
  AjA C"A6X  6T  6P

  A j!  A j!  A6
   6   (6

  A6
   6   (6A !
  Aj  Aj ( "Aj A
lj! ( !@  /"O@  ) 7  Aj Aj( 6 

 A
j   k"A
l Aj Aj( 6   ) 7   A0lj"A0j  A0l
  A0lj A0C  Aj; 
  AjA C" 6X  6T  6P
  A j$ @@@ (AxF@  (`6  )X7 

 (L!  (H! A j AjA C (`!
 (X!" (\! (P! (T!@ ("@ Aj!@  6l  /6t   Aj6p Aj! A j!# A k" $ @  A j"("
AkF@@@ ( "/A
O@ ("AI
  A j!  A j!@@@ Ak 
  A6
   
6   6 Ak!  Aj  Aj

  A6
   
6   6  Aj"  Aj  A6l    )P7d  A j   c  A C

  A6
   
6   6  Aj  AjA !

    c Ax6 

  A j!  A j!  A6
   
6   6  Aj  Aj
   6l   ( 6h   ( 6d  A j   c   AjA C


5
  A j$  (AxF
 (L!  (H! A j AjA C (P! (T! ("
 

 Aj A jA C  6T  6P   6L  6H !( "( "E
 (!
"  6  A ;  A 6 A ;   6  
Aj"6   6   6   6 Aj! Aj!
@  Aj" (AkF@  ( " /"A
O
6   Aj";   A
lj"Aj Aj( 6  Aj ) 7    A0lj 
A0C   AtjAj 6   ;   6


4

  
6  6  "6 
 Aj$ 

A  
 (
! (
!
 (! (
!   (Aj6  
6   6  6   (
6
 A0j$ B 

  Aj 
( 
(A0lj" A0C   A0CB
7  
A j$  Ak"
 
 (8A 
6(  )07  A j A
j( 6   )7H A j Aj A j A j (x@ 

 
Aj"
 G
 

  )7 A 6  A
j Aj( 6 

 )|!' A<j
 A0j

-- Chunk 54 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:7951-8100
 A6   '7 Aj
 Aj

 A6   '7
 Aj$  )!' (
  (6  '7 Aj 	> )!' (
  (6  '7 Aj!# A0k"$ @@ 	(" AO@ 	  Ak6 	 	( " Aj6   (  

 A jAA A -  AF@ ($

 ) "'BBR
 'B 
! A 6 A 6@@ @@ A j 	; )$!' ( " AxF@ A6   '7

  '7   6 A j!# A0k" $ @@   	("@ 	 Ak6 	 	( "Aj6  -  

  AjAA A  - AF@  - 

  )"'BBR
 'B
":  AqAO@  A6  A 6  B7
  A6,    A(j6    Aj6(  Aj"  Aj[ A 

 A:    : 

  '7 
  A0j$  -  AF@ - !

 ) "'BBR
 'B
! A(j A
j( 6   )7 A !# A k"$  Aj!  A j!# Ak"
$ @ Aj"
( "E@  A 6   
6
   ) 7   Aj Aj( 6 

 
(!
# A k"$   
6
  6 Aj Aj  (!@@ ("E
  
@ 
Ak!
@  AtjAj( !  
6
  6 Aj Aj  (
! ("E
 
Ak"
AG
 

A !


A !
 
 6
 
 
6 
 6 
 6  A j$  
Aj! 
( E@   
6  Ax6    ) 7  A
j Aj( 6  

   
6
   ) 7   ) 7   Aj Aj( 6   Aj Aj( 6 
 
Aj$ @ (AxG@ A8j A
j( 6  A0j Aj) 7  A(j A
j) 7   )7  A@k!# A0k"$  A j"(E@ (
!
"A 6  
A 6 
 6  A;  :   ) 7 A
j Aj( 6 A 

 Aj Aj" Aj( 6    ) 7 A(j Aj( 6   ) 7  Aj! A j! A
j! # A k"$  Aj!# A0k" $ @@@@@@ Aj"
( "/"A
O@ 
("
AI
  A,j!  A(j!
 
Ak
 Aj" 
("
A
lj!
 
(!@  
Aj"
I@ 
 ) 7  
Aj Aj( 6 

  
A
lj 
  
k"A
l 
Aj Aj( 6  
 ) 7  
 Aj"j  
j 
  
jAj :    
6(  6$  6  Ax6   Aj;

  A6
   6   
(6 
Ak!


   6   
(6  A6
  Aj  Aj  ( "A@k!
  ($!
@ /"
AM@ 
 ) 7  
Aj Aj( 6 

 A j 
 
Ak"A
l 
Aj Aj( 6  
 ) 7  Aj Aj 
  :    )7  A6(  
6$  6   
Aj; Aj  Aj) 7  Aj  A j) 7  Aj  A(j) 7 

  A$j!  A j!
  A6
   6   
(6

  A6
   6   
(6A !

-- Chunk 55 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:8101-8250

  Aj  Aj 
( "Aj" 
A
lj!
 ( !@ 
 /"
O@ 
 ) 7  
Aj Aj( 6 

  
Aj"A
lj 
 
 
k"A
l 
Aj Aj( 6  
 ) 7  Aj" j  
j 
  
jAj :     )7   
6(  6$  6  Aj  Aj) 7  Aj  A j) 7  Aj  A(j) 7   
Aj;
  A0j$ @@@ (AxF@  (06  )(7 

 A j" Aj"( 6   )7H (
!
 - ! (!  A j" Aj"!-  :    / ;D ($! ( ! (,!
 ((!" (0!@  ( "
@ Aj!
@  
68   /6@  
Aj6< Aj!
 A j!# A@j" $ @  A8j"
("
AkF@@@ 
( "/A
O@ 
("AI
  A,j!
  A0j!@@@ Ak 
  A6   
6
   6 Ak!  Aj  Aj~

  A6   
6
   6  Aj  Aj~  A6<    A$j") 74  A4j   h 
Aj  A,j) 7  
Aj ) 7  
Aj  A
j) 7  
  )7 

  A6   
6
   6  Aj  Aj~A !

 
   h 
Ax6 

  A$j!
  A(j!  A6   
6
   6  Aj  Aj~
   6<   ( 68   
( 64  A4j   h 
Aj  A,j) 7  
Aj  A$j) 7  
Aj  A
j) 7  
  )7 


1
  A@k$  (AxF
  ( 6   
Aj-  :    )7H  
/  ;D (
!
 - ! ($! ( ! (" ( "

 

  ( 6  ! -  :    )H7  /D;   6$  6   
6
   6  :   ( "
( "
E
 
(!
"  
6  A ;  A 6  
A ; 
  6  
 
Aj"
6 
  6   
6\   6X Aj!
@  A j" (AkF@  ( " /"A
O
2   Aj"
;   A
lj"
A
j 
Aj( 6  
Aj 
) 7    jAj :     
AtjAj 6   
;   6 


0

  6  
6  "6 
 A j$ 

A  
 (
!
 (
! (! (
!  
 
(Aj6  6   6  6   (
6
 A0j$ 

 ( (jAj" -     :  
 A j$  Ak"
 

  )7 A 6  A
j Aj( 6 

 A6   '7 Aj
 Aj

 A6   '7
 A0j$  )!' (
  (6  '7 Aj 	; )!' (" AxF
  '7   6 Aj 	; )!' (" AxF

  '7   6 Aj!# A0k" $ @ 	("E@ AA A

-- Chunk 56 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:8251-8400

 	 Ak6 	 	( "Aj6    -  ": @@@  
 A; 

 A; 

  A6  A 6  B7
  A6,    A(j6    Aj6(  Aj"  Aj[ A 
  A0j$  - AF@ - 

 )"'BBR

 'B
!  Aj 	; )!' ("AxF

  '7  6 Aj 	 (E@ )!'  ) 7  )
7  /H;    )07 
 Aj Aj( 6  Aj Aj( 6  Aj A j-  :   Aj A8j) 7   Aj A=j)  7   Aj A j( 6   )L7 A"j Aj-  :    /;   A8j A j)  7   A3j A j) 7    )p7 + A j Aj-  :    /; @ A j Aj)  7   A j Aj) 7    )7 K Aj Aj( 6   )7 Aj Aj( 6   )7 A j Aj-  :    /; ` A j Aj)  7   A j Aj) 7    )7 k Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7 Aj Aj( 6   )7   :   #:   
:   $:   '7  37  27  17  07  /7  .7  ,7  (7  -7 c  +7 C  *7 #  )7 
!
 )!' Ax6  '7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7 

 Ax6  '7 


 Ax6  '7 


 Ax6  '7 

 )!' Ax6  '7  A
j

 Ax6  '7  A
j

 )!' Ax6  '7  A j A
j

 Ax6  '7  A j A
j

 Ax6  '7  A j A
j

 Ax6  '7  A j A
j

 Ax6  '7  Aj A j A
j

 )!' Ax6  '7  Aj Aj A j A
j

 )!' Ax6  '7  Aj Aj A j A
j

 )!' Ax6  '7  Aj Aj A j A
j

 )!' Ax6  '7  Aj Aj A j A
j

 )!' Ax6  '7  Aj Aj A j A
j

 Ax6  '7  Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj A j A
j


 Ax6  '7  Aj Aj Aj Aj A j A
j


 )!' Ax6  '7  Aj Aj Aj Aj Aj A j A
j


 )!' Ax6  '7  Aj Aj Aj Aj Aj A j A
j


 )!' Ax6  '7  Aj Aj Aj Aj Aj A j A
j
	
 )!' Ax6  '7  Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j A
j

 Ax6  '7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j A
j
 
 Aj$ 

A A5A  
A A0A  
A A A  
 
)!'@ 
(" AxG@ 
Aj 
AjAC 
Aj 
Aj( 6  
 
)7 
  6 
 '7 
(
@ AA A Ax6 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 
Aj 

-- Chunk 57 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:8401-8550
Aj

  
AjAC

 Ax6  '7 
 
Aj$  (AxF
 A j"	 Aj" AC A :  A ; Aj!# Ak"$  Aj   (!@@@ (" E
   6   6 Aj AjA A 	Aj@ (@ (!

 Aj AjAˋ A	 	Aj (@ (!

 Aj AjAԋ A	 	Aj (@ (!

 Aj AjA݋ A 	Aj (@ (!

 Aj AjA A
 	 (@ (!

 Aj AjA A 	Aj (@ (!

 Aj AjA A 	A j (@ (!

 Aj! 	A@k!A ! # A0k"$  A j Aj"( @@ ( @ Aj A(j( 6   ) 7@@  A F
 Aj Aj   j  Aj!  (E
 
 (
!  ("AI
  

 A(j Aj( 6   )7   A j (!  ( "
 AjA A  

 ($! 
A!
   6  6  A0j$  (@ (!

# Ak" $   Aj Aj"(  	Aj-    (
!  ("E@ AjA A 
 Aj" 6   6  Aj$  (@ (!

# Ak"$  Aj!
 Aj"( !# A k"$  	Aj" ( "E@A ! A 

  64 A 60  6$ A 6    ("68  6(  (! A
!   6<  6,  6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj A
j (" E
 (!   6l  6X A j! # Ak"
$  
Aj A@k" A j Aj" 
(@ 
(
! A

# A k"
$  (! A 6@@ @ 
 (
"6 
Aj! (!  ( ! # A k"$   ( "E@A !A 

  64 A 60  6$ A 6    ("68  6(  (!A
!   6<   6,   6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj!A !@@@ A
j" ( "   Ak6   "
E
 
(!@ 
(" 
( "/I@ ! 

@ (" E
 Aj! /!   "/O
 

 Aj!@ E@  !

   AtjAj!@ ( "Aj! Ak"
 
A !
 
 6 
A 6 
 6    Atj!   A
ljAjA 
!   6   6 

A  
A  
 (" E
 (!   6l  6X A j!# Ak"$  Aj A@k"  A j Aj" (@ (
!A

# A k"$   (!  A 6@@ @   (
"
6 Aj! ( !  (!# A0k"$  A(j  (,!@ (("
E
   6$  
6  Aj A jA A Aj@ (@ (
!

 Aj A jA A  (@ (!

 Aj A jA A Aj (@ (
!

  (  ($ (! ( 

 ($"AI
   
A
!  6  6  A0j$  (
!@@ (E@  6  ( 
  Aj Aj Aj" AO@    (!
 AO@  
 (" AI
   

 
AI
 
 

  
6
 A
jE@!  
AO@ 
 
 AI
  

  Aj 
 
A 



 ! 
A
!   6  6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!

-- Chunk 58 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:8551-8700
A
!   6   6  A j$  
(
! @@ 
(E@ 
  6 ( 
 Aj 
Aj 
Aj"AO@   
(! 
  AO@   
 
("AI
  

 AI
  

 
 6
 
A
jE@! AO@  
  AI
   

 Aj   
A 




  !
A
!  
 6 
  6  
A j$  
(!  
( 
6    6 
Aj$  (E
 
 (
!  A@k

 A j A j( 6  A j A j) 7   )@7X  A j (!  ( 

 (\! 
A
! 
  6 
 6  A j$  (
!  ("E@ AjA A
  
 Aj" 6    6 Aj$  (@ (!

 Aj AjAÌ A 	Aj (@ (!

 Aj AjA܌ A 	Aj (@ (!

 Aj AjA A 	Aj (@ (!

 Aj AjA A
 	A j (@ (!

 Aj AjA A 	Aj (@ (!

 Aj AjA A 	Aj (@ (!

 Aj AjA A 	Aj (@ (!

 Aj AjAȍ A
 	Aj (@ (!

# Ak" $   Aj Aj"(  	AjX  (
!  ("E@ AjAҍ A 
 A j" 6   6  Aj$  (x@ (|!

 A j AjA A
 	Aj (p@ (t!

 A j AjA A
 	Aj (h@ (l!

 A j AjA A
 	Aj (`@ (d!

 A j AjA A 	Aj (X@ (\!

 A j AjA A 	Aj (P@ (T!

# Ak"$  Aj!
 Aj"( !# A k"$  	Aj" ( "E@A ! A 

  64 A 60  6$ A 6    ("68  6(  (! A
!   6<  6,  6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj A
j (" E
 (!   6l  6X A j! # Ak"
$  
Aj A@k" A j Aj" 
(@ 
(
! A

# A k"
$  (! A 6@@ @ 
 (
"6 
Aj! (!  ( ! # A k"$   ( "E@A !A 

  64 A 60  6$ A 6    ("68  6(  (!A
!   6<   6,   6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj!A !@@@ A
j" ( "   Ak6   "
E
 
(!@ 
(" 
( "/I@ ! 

@ (" E
 Aj! /!   "/O
 

 Aj!@ E@  !

   AtjAj!@ ( "Aj! Ak"
 
A !
 
 6 
A 6 
 6    A0lj!   A
ljAjA 
!   6   6 

A  
A  
 (" E
 (!   6l  6X A j!# Ak"$  Aj A@k"  A j Aj" (@ (
!A

# A k"$   (!  A 6@@ @   (
"
6 Aj! ( !  (!# A0k"$  A(j  (,!@ (("
E
   6$  
6  Aj A jA A @ (@ (

-- Chunk 59 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:8701-8850
!

 Aj A jA A A j (@ (!

 Aj A jA A A(j (@ (
!

  (  ($ (! ( 

 ($"AI
   
A
!  6  6  A0j$  (
!@@ (E@  6  ( 
  Aj Aj Aj" AO@    (!
 AO@  
 (" AI
   

 
AI
 
 

  
6
 A
jE@!  
AO@ 
 
 AI
  

  Aj 
 
A 



 ! 
A
!   6  6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 

 (\!
A
!   6   6  A j$  
(
! @@ 
(E@ 
  6 ( 
 Aj 
Aj 
Aj"AO@   
(! 
  AO@   
 
("AI
  

 AI
  

 
 6
 
A
jE@! AO@  
  AI
   

 Aj   
A 




  !
A
!  
 6 
  6  
A j$  
(!  
( 
6    6 
Aj$  (E
 
 (
!  A@k

 A j A j( 6  A j A j) 7   )@7X  A j (!  ( 

 (\! 
A
! 
  6 
 6  A j$  (
!  ("E@ AjA A  
 A j" 6    6 Aj$  (H@ (L!

 A@k AjAˎ A 	Aj (@@ (D!

# Ak"
$  
Aj! Aj"( !# A k"$  	Aj" ( "E@A ! A 

  64 A 60  6$ A 6    ("68  6(  (! A
!   6<  6,  6
 A j @ (XAG@ A j A j( 6  A j A j) 7   )X7@@@ Aj!
A ! @@@ A
j"( "  Ak6  "E
 (!@ (" ( " /I@  !

@  ( "E
 Aj!  /!  " /O
 

 Aj! @ E@ !

   AtjAj! @  ( "Aj!  Ak"
 
A ! 
   6 A 6  6   jAj!   A
ljAjA 
! 
  6 
 6 

A  
A  
 (" E
 (!   6l  6X A j! # Ak"$  Aj A@k" A j Aj"
 (@ (
! A

# A k"$  (! A 6@@ @  (
"6 Aj!
  ( ! (# A k" $ @@@ -  Ak 
  AjA A
  (!  (


  AjA A  (!  (


-- Chunk 60 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:8851-9000
  AjA A
  (!  (

! 
 6  
 6  A j$  (
! @@ (E@   6 ( 
 Aj Aj Aj"AO@   (! 
  AO@   
 ("AI
  

 AI
  

  6
 A
jE@! AO@  
  AI
   

 Aj   
A 




  !
A
!   6   6  A j$  (!  ( 
6  
  6 Aj$  (E
 
 (
!  A@k

 A j A j( 6  A j A j) 7   )@7X  A j (!  ( 

 (\! 
A
!   6  6  A j$  
(
!  
("E@ AjA A  
 A8j" 6    6 
Aj$  (8@ (<!

 A0j AjA A
 	Aj (0@ (4!

 A(j AjA A	 	Aj ((@ (,!

 A j AjA A
 	Aj ( @ ($!

 Aj AjA A
 	Aj (@ (
!

 Aj AjA A
 	Aj (@ (!

 Aj ( ( (
! (

 (" AI
    
A
!   6   6  Aj$ 

A A 
 (
!  (Aq
 Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj$   

  (6 A A+ A jA AЖ  
  )7 A A+ A jA A  
   6A A+ AjA A  

~@# A k" $   A 64  B7,  A 6X  A: P  B 7H  A 6@  A 68    A,j6T# A0k"$ A!@  A8j"A A

  ( ! (
 (! A6 A 6  B7
  B
7  A
jB
7(  AjB
7   Aj6  I
  Aj ( " (A
j"(   )BŹQ@A!  ) Bͅ Q

 Aj  (  A ! )BǤ쬘 R
 ) B@R
A! Aj
  j( !( ! A AE@A !   E

A!
 A0j$  E@  A(j  A4j( "6     ),"7   kA	M  A j A
  (( 
  ($j"A )  7   AjA /  ;      ((A
j6(  Aj"  (!    (
"6@   6<   68  Aj  A8jA     ("64    ("60   6,   (   (("kK  A j    (( 
  ($j  C    (( j"6(  (  kAM  A j A  (( 
  ($jA;    A(j" ( Aj"6   A@k 6     ) 78  Aj  A8jA   (  (
  A,j AO@  
  A j$ 

A A7  A jA A  

# Ak"$ A -  AG@ A: 
  A
j6
 A
j! # A k"$ @@@@@@@@A -  Ak 
A A:    ( " -    A :  E
# A k" $ @@@A ( Aq@Aı ( 

A ( 
A ( !A A 6 A ( !A A6 @ E
  ( "@   
 ("E
    (
  A j$ 

  A 6  A6
  A 6  B7  AjA 
 
Aĭ Aĭ ( " A  6   E@  @  AG
Aĭ ( AF! @  
 


A A 6 A A 6 Aĭ A6 
E
Aȭ A6 A A:  
 A j$ 

 A 6 A6
 Aľ 6

A  
A A+ AjA A  
 A 6 A6
 A 6
 B7 AjA  

 Aj$ 
 A 
 
 

-- Chunk 61 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:9001-9150
 

 A 
/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/map/entry.rs        .   assertion failed: idx < CAPACITY/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rsassertion failed: edge.height == self.height - 1        	          	   assertion failed: src.len() == dst.len()     =            #          $   assertion failed: edge.height == self.node.height - 1          	   /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/navigate.rs ,    X  0   ,    0  /   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs     
             AԆ 
      a Display implementation returned an error unexpectedly/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs   s   
     Unexpected length of input   ^   e   
   /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs  D r         Invalid bool representation:     
   Error    s         s         s   g     Not all bytes read   ^   @  
    ^   B     Unexpected variant index:   \    PayoutStateUninitializedPayoutSuccessfulPayoutFailedTaskStateis_allowlistedis_activetask_nametask_descriptiontask_managertask_audit_programstake_pot_accountstake_pot_seedstake_pot_bumpsubmissionssubmissions_audit_triggertotal_bounty_amountbounty_amount_per_roundtoken_typetotal_stake_amountminimum_stake_amountavailable_balancesstake_listip_address_listround_timestarting_slotaudit_windowsubmission_windowtask_executable_networkdistribution_rewards_submissiondistributions_audit_triggerdistributions_audit_recordtask_metadatatask_varsis_migratedmigrated_toallowed_failed_distributionsAuditTriggerStatetrigger_byslotvotesTaskVoteStateis_validvoterTaskSubmissionsubmission_valueroundDistributionSubmission/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/navigate.rs  ?       $   ?       '   ?      /   ?       $   Error on Parsing Data: Duplicate key existMap key is not a string and cannot be an object keya sequence/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.204/src/de/impls.rs   o	 b     "   o	 b     
   
         
   called `Result::unwrap()` on an `Err` value 
         
               /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs  P
 r         invalid value: , expected   
    
 
                Errorsrc/lib.rs 
 
   +   =   
 
   ,   [   
 
   9   /   
 
   >   =   
 
   ?   B   
 
   A   6   `unwrap_throw` failed A 
    A 
      /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs  
 r         /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/de/read.rs   <
 a   N   
   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wasm-bindgen-0.2.87/src/convert/slices.rs  
 n       A 
      cannot access a Thread Local Storage value during or after destruction/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs   
 w        /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs   r         invalid type: , expected         
    A؝ 
        can't be represented as a JavaScript number        ,      /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-wasm-bindgen-0.4.5/src/lib.rs  h   5      /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rsassertion failed: src.len() == dst.len()     =     /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/de/read.rs   T a   N   
   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.4.0/src/encode.rs    ]   @                                Utf8Errorvalid_up_toerror_len/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/core_api/ct_variable.rs u n   |   $   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs  c           c          c      %    c   8  
    c   5     /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wasm-bindgen-0.2.87/src/convert/slices.rs   n            
      
   
    AȦ 
   
   a Display implementation returned an error unexpectedly/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs   s   
     /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.4.0/src/encode.rs   
 ]   l     
 ]   m     
 ]   h  	   
 ]   U      
 ]          called `Result::unwrap()` on an `Err` value A 
    A 
       ErrorBufferTooSmall  s         s         s   g               !   TryFromSliceError/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.8/src/core_api.rs   m `   B      g	jgrn<:ORQhك[       /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/hash.rs  g   }   7   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/wasm/mod.rsstring decoded to wrong size for hashfailed to decoded string to hasharray to be iterable/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/wasm/hash.rsD l      ?   D l   
      Invalid array argument:     Unsupported argument k      
   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.4.0/src/decode.rs    ]         called `Result::unwrap()` on an `Err` value "         #   $   
      %             &   FromUtf8Errorbyteserror/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.4.0/src/encode.rs ]   Q   +   /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/io/impls.rs d s        /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wasm-bindgen-0.2.87/src/convert/slices.rs   n          n   J  0    n         /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs      	   '            called `Result::unwrap()` on an `Err` value/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs   S r         /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/instruction.rs   n     $    A 
Invalid Array of Uint8Arrays,\Q!L=JXDي    /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/wasm/instructions.rs
 t                              D                (   Io            &   InvalidUtf8Encoding           )   InvalidBoolEncodingInvalidCharEncoding            *   InvalidTagEncodingDeserializeAnyNotSupportedSizeLimitSequenceMustHaveLength           +   Custom A 
   -   .   /   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wasm-bindgen-0.2.87/src/convert/slices.rs  
 n         Once instance has previously been poisoned   *   one-time initialization may not be performed recursivelyL 8   /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sync/poison/once.rs  {      2   0   
      1   2    A 
   3   a Display implementation returned an error unexpectedly/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs  w  s   
     /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs       	 A 
   4   called `Result::unwrap()` on an `Err` value/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rsUnexpected length of input ! ^   e   
   /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs  P" r         Error             !   SetLoggerError  w  s        w  s        w  s   g         g	jgrn<:ORQhك[/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/pubkey.rsProgramDerivedAddressUnable to find a viable program address bump seed # 1   P# i         P# i     %          Length of the seed is too long for address generationProvided seeds do not result in a valid addressProvided owner is not allowedString is the wrong sizeInvalid Base58 stringarray to be iterable/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/wasm/pubkey.rs$ n   )   ?   $ n   /      Invalid array argument: %    Unsupported argumentInvalid Uint8Array pubkey:  %    Invalid Array pubkey:   %  A 
   5   6   7   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.17.34/src/wasm/mod.rs & k      8   ,V_sҗ\1ED.@   	






 !"#$%&'()*+,-./0123456789123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz/home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/internal.rsf' b       	          9   :   ;   <   =   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wasm-bindgen-0.2.87/src/convert/slices.rs  ' n         ' n         >   
      ?   @    A 

   A   a Display implementation returned an error unexpectedly/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/string.rs  ( s   
     Error   ( s        /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs) t   (     

Stack:

()/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs* t   (     None          )   Some/home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/slice/iter.rs  * v   %     /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs4+ t   (     xYM n;( )` <c9 6  /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-3.2.1/src/edwards.rs  + j   e  
       J'   `
^ L 
H2           B   C   
      D   C   
      E   D   , F   G   H   F   I   /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bs58-0.4.0/src/decode.rs   , ]      
   , ]          /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/slice.rs  T- r         J   
      D   J   
      E   D   - K   L   H   K   M A 
   N   O   P   /home/ghazanfer/.rustup/toolchains/1.85.0-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/raw_vec.rs,. t   (     /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/js-sys-0.3.64/src/lib.rs   . ]   
     /home/ghazanfer/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/wasm-bindgen-0.2.87/src/convert/slices.rs   / n         closure invoked recursively or after being dropped  Invalid size : sizes must fit in a usize (0 to )/ 
   / "   0              d   e   f   byte arrayboolean ``B0 	   K0    integer `   \0 	   K0    floating point `x0    K0    character ` 0 
   K0    string  0    unit valueOption valuenewtype structsequencemapenumunit variantnewtype varianttuple variantstruct variant          .0u8JsValue()   <1    D1    null pointer passed to rustrecursive use of an object detected which would lead to unsafe aliasing in rustlibrary/std/src/panicking.rs/rustc/4d91de4e48198da2e33413efdcd9cd2cc0c46688/library/alloc/src/slice.rs1 J         /rustc/4d91de4e48198da2e33413efdcd9cd2cc0c46688/library/alloc/src/string.rs 82 K        /rustc/4d91de4e48198da2e33413efdcd9cd2cc0c46688/library/alloc/src/raw_vec.rs2 L   (     :          2    2    j   
      k   l   m   /rust/deps/dlmalloc-0.2.7/src/dlmalloc.rsassertion failed: psize >= size + min_overhead $3 )     	   assertion failed: psize <= size + max_overhead  $3 )     
   AccessErrorOs             n   code          o   kindj   
      p   messageKindError          q             r   Customerrorpanicked at :
memory allocation of  bytes failed ]4    r4 
   library/std/src/alloc.rs4    c  	   cannot modify the panic hook from a panicking thread4 4   1 
      	   j   
      s             t             u   v   w   x   y         z   {   |   }   NotFoundPermissionDeniedConnectionRefusedConnectionResetHostUnreachableNetworkUnreachableConnectionAbortedNotConnectedAddrInUseAddrNotAvailableNetworkDownBrokenPipeAlreadyExistsWouldBlockNotADirectoryIsADirectoryDirectoryNotEmptyReadOnlyFilesystemFilesystemLoopStaleNetworkFileHandleInvalidInputInvalidDataTimedOutWriteZeroStorageFullNotSeekableQuotaExceededFileTooLargeResourceBusyExecutableFileBusyDeadlockCrossesDevicesTooManyLinksInvalidFilenameArgumentListTooLongInterruptedUnsupportedUnexpectedEofOutOfMemoryInProgressOtherUncategorizedoperation successful                       
   	      
   
   
   
   
   
               
   
      	   
   
   
   
   
            
         
   
   
   
   
      
   \5 d5 t5 5 5 5 5 5 5 5 5 5  6 
6 6 $6 06 A6 S6 a6 w6 6 6 6 6 6 6 6 6 6 6 6 7 7 
7 07 ;7 F7 S7 ^7 h7 m7 Hash table capacity overflow8 
   /rust/deps/hashbrown-0.15.2/src/raw/mod.rs  9 *   #   (   Error   ~   
               capacity overflow   `9    library/alloc/src/raw_vec.rs|9 
   (     library/alloc/src/string.rs 9       A 

      a formatting trait implementation returned an error when the underlying stream did notlibrary/alloc/src/fmt.rs  ::         library/alloc/src/slice.rs  d:          � 9         assertion failed: edelta >= 0library/core/src/num/diy_float.rs  : !   L   	   : !   N   	   o#   ﬅ[Am-  jd8n헧?O >.	8/t#ڰͼ3&N  |.[Ӿr؇/PkpnJؕnq&fƭ$6
ZB<TcsUe(U܀n_S library/core/src/num/flt2dec/strategy/dragon.rsassertion failed: d.mant > 0 ; /   v      assertion failed: d.minus > 0   ; /   w      assertion failed: d.plus > 0; /   x      assertion failed: buf.len() >= MAX_SIG_DIGITS   ; /   {      ; /      	   ; /      
   ; /     6   assertion failed: d.mant.checked_sub(d.minus).is_some() ; /   z      assertion failed: d.mant.checked_add(d.plus).is_some()  ; /   y      ; /   
     ; /   
     ; /   
         ; /   r  $   ; /   w  W   ; /     6   ; /   f  
   ; /   L  "   ; /        ; /            E=    ƚp    Oܼw    
kAV    <Ѝ,    U1(\QF    ɦqa    ˋ#w"{    mSx@I̮
    Wζ]y<    7VM6
    OH8oꖐ$    :%˅t ,    φ4    *
45<    5*g8PD    ;?ȄkL    'DŅT    %Οk\    b}$lۺd    _
Xfl    &ޓt    
|    J|l_b%    S04`?    U&NZ    ~)p$wt    帟ߦ    }t_    ϛpD    k    11eU%    {?    ;+*\.    Ӓsi$$I     c    d~    ̈Po	̼    ,eXѳ A 
@ A 

       bx      	x9?
 
     {Η8 $     p\{2~S ,     h髤8m 4     E"&'O <     '1c D     Ȍ8eް L     eǃ T     
qB
] \     X,iM

-- Chunk 62 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:9151-9300
d     pd'l     JwmBt     k}{x	\|     wyTw     ś[[     =]S5Ȭ     \*     _F     %94     \r     ξTSܷ1     A"L     x\ӛ f     S!{Z     :0ܵ     \S٨     <D|     DLLv     @     ,W     )1;
    
U    );b (p
    ϧz^KD$    -ݬ@!,    D^/g4    A3<    㴒D    wߺnL    library/core/src/num/flt2dec/strategy/grisu.rs  C .   }      C .         C .         C .         C .         assertion failed: d.mant + d.plus < (1 << 61)   C .         C .   
     C .   
  	   C .   @  	   C .         C .         assertion failed: !buf.is_empty()   C .        assertion failed: d.mant < (1 << 61)C .        C .           
   d     '   @B    ʚ;C .   3     C .   6  	   C .   l  	   C .     N   C .     J   C .     J   library/core/src/num/flt2dec/mod.rs  E #         assertion failed: buf[0] > b'0'  E #         assertion failed: parts.len() >= 4   E #         .0.-+NaNinf0assertion failed: buf.len() >= maxlen    E #   ~  
   )..0123456789abcdefBorrowMutErroralready borrowed:  
F           [called `Option::unwrap()` on a `None` valueindex out of bounds: the len is  but the index is   lF     F                 ==!=matchesassertion `left  right` failed
  left: 
 right:  F    F    F 	    right` failed: 
  left:    F    G    $G 	   F 	   :          PG        
                    { ,  {
,
} }((
,
]0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899library/core/src/fmt/mod.rs0000000000000000000000000000000000000000000000000000000000000000falsetrue   ]H    
  &   ]H    
     invalid utf-8 sequence of  bytes from index H    H    incomplete utf-8 byte sequence from index    I *   library/core/src/str/mod.rs A 
3 A 
[...]begin <= end ( <= ) when slicing `` tJ    J    J    J    byte index  is not a char boundary; it is inside  (bytes ) of ` J 
   J &   J    J    J     is out of bounds of `  J 
    K    J    TI       ,   library/core/src/unicode/printable.rs   `K %      6   `K %   
   +    	





$jk
	 
';>NO{	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_ZbST./'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юnoޓ^"{-f/.
1
$	
+D*$$(4
N4
7	
;E9c	0!@8K/
	@ '
	6:
PI73
3.
&
R7,*&
	N$	D

H'	u
B>*;
Q
Y
b
H
^"E


:

,<dS
H	
FEHS
I
"
F

GI7
9
6;
U2
fu
ĊLc
0
G:Ƃ9*\&
F
(:[eK9@
)
3
k
	`LG	t<
spFz

W	GBP+>!p-@:*+)L
DL=<U4,d
V
8

,	
w_

8
(,>T


8
	 	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~M
FGNOXZ\^~rstu&./ߚ @0NOZ['/no7=?BESgu  _"D
/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1<>8+/-!!
/;	"t
	7	\;
8F
t

ZY	

	L
1&
 *L
library/core/src/unicode/unicode_data.rs   QQ (   M   (   QQ (   Y      library/core/src/num/bignum.rs  Q 
        assertion failed: noborrowassertion failed: digits < 40assertion failed: other > 0attempt to divide by zero 
R     out of range for slice of length range end index   bR    @R "   slice index starts at  but ends at  R    R 
   copy_from_slice: source slice length () does not match destination slice length (   R &   R +   E         ` ]  
 `, +*0+o`,,
-  6`66

-- Chunk 63 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm:9301-9354
!7$
7a9/90
J
N@4R
aSjaTOoTaU aVeѡV !W X!Z[a\  \] p  -H
0e#
[
:			+;	* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
I7
$	f
  


@
	-u"v	:
010
&	
 88
@ ! `  i 
 P 
&
,0$C
/3*     ( A OF
1{6)
1=$>
4	_9
	CUQUje 	
 
(	.
 RzH 
4  
 ; ?Q
  . 
 72 d =  m ` A 
   . {	producerslanguageRust 
processed-byrustc
1.85.0 (4d91de4e4 2025-02-17)walrus0.19.0
wasm-bindgen0.2.87 (f0a8ae3b9) Itarget_features+mutable-globals+sign-ext+reference-types+
multivalue

=== File: middle-server/src/utils/webasm_bincode_deserializer/bincode_js.js ===

-- Chunk 1 --
// bincode_js.js:12-17
function getUint8Memory0() {
  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {
    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);
  }
  return cachedUint8Memory0;
}

-- Chunk 2 --
// bincode_js.js:19-22
function getStringFromWasm0(ptr, len) {
  ptr = ptr >>> 0;
  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
}

-- Chunk 3 --
// bincode_js.js:30-37
function addHeapObject(obj) {
  if (heap_next === heap.length) heap.push(heap.length + 1);
  const idx = heap_next;
  heap_next = heap[idx];

  heap[idx] = obj;
  return idx;
}

-- Chunk 4 --
// bincode_js.js:39-41
function getObject(idx) {
  return heap[idx];
}

-- Chunk 5 --
// bincode_js.js:43-47
function dropObject(idx) {
  if (idx < 132) return;
  heap[idx] = heap_next;
  heap_next = idx;
}

-- Chunk 6 --
// bincode_js.js:49-53
function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

-- Chunk 7 --
// bincode_js.js:55-57
function isLikeNone(x) {
  return x === undefined || x === null;
}

-- Chunk 8 --
// bincode_js.js:61-66
function getFloat64Memory0() {
  if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {
    cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);
  }
  return cachedFloat64Memory0;
}

-- Chunk 9 --
// bincode_js.js:70-75
function getInt32Memory0() {
  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {
    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);
  }
  return cachedInt32Memory0;
}

-- Chunk 10 --
// bincode_js.js:95-132
function passStringToWasm0(arg, malloc, realloc) {
  if (realloc === undefined) {
    const buf = cachedTextEncoder.encode(arg);
    const ptr = malloc(buf.length, 1) >>> 0;
    getUint8Memory0()
      .subarray(ptr, ptr + buf.length)
      .set(buf);
    WASM_VECTOR_LEN = buf.length;
    return ptr;
  }

  let len = arg.length;
  let ptr = malloc(len, 1) >>> 0;

  const mem = getUint8Memory0();

  let offset = 0;

  for (; offset < len; offset++) {
    const code = arg.charCodeAt(offset);
    if (code > 0x7f) break;
    mem[ptr + offset] = code;
  }

  if (offset !== len) {
    if (offset !== 0) {
      arg = arg.slice(offset);
    }
    ptr = realloc(ptr, len, (len = offset + arg.length * 3), 1) >>> 0;
    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
    const ret = encodeString(arg, view);

    offset += ret.written;
  }

  WASM_VECTOR_LEN = offset;
  return ptr;
}

-- Chunk 11 --
// bincode_js.js:134-197
function debugString(val) {
  // primitive types
  const type = typeof val;
  if (type == "number" || type == "boolean" || val == null) {
    return `${val}`;
  }
  if (type == "string") {
    return `"${val}"`;
  }
  if (type == "symbol") {
    const description = val.description;
    if (description == null) {
      return "Symbol";
    } else {
      return `Symbol(${description})`;
    }
  }
  if (type == "function") {
    const name = val.name;
    if (typeof name == "string" && name.length > 0) {
      return `Function(${name})`;
    } else {
      return "Function";
    }
  }
  // objects
  if (Array.isArray(val)) {
    const length = val.length;
    let debug = "[";
    if (length > 0) {
      debug += debugString(val[0]);
    }
    for (let i = 1; i < length; i++) {
      debug += ", " + debugString(val[i]);
    }
    debug += "]";
    return debug;
  }
  // Test for built-in
  const builtInMatches = /\[object ([^\]]+)\]/.exec(toString.call(val));
  let className;
  if (builtInMatches.length > 1) {
    className = builtInMatches[1];
  } else {
    // Failed to match the standard '[object ClassName]'
    return toString.call(val);
  }
  if (className == "Object") {
    // we're a user defined class or Object
    // JSON.stringify avoids problems with cycles, and is generally much
    // easier than looping through ownProperties of `val`.
    try {
      return "Object(" + JSON.stringify(val) + ")";
    } catch (_) {
      return "Object";
    }
  }
  // errors
  if (val instanceof Error) {
    return `${val.name}: ${val.message}\n${val.stack}`;
  }
  // TODO we could test for more things here, like `Set`s and `Map`s.
  return className;
}

-- Chunk 12 --
// bincode_js.js:223-228
function _assertClass(instance, klass) {
  if (!(instance instanceof klass)) {
    throw new Error(`expected instance of ${klass.name}`);
  }
  return instance.ptr;
}

-- Chunk 13 --
// bincode_js.js:230-233
function getArrayU8FromWasm0(ptr, len) {
  ptr = ptr >>> 0;
  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
}

-- Chunk 14 --
// bincode_js.js:237-242
function getUint32Memory0() {
  if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {
    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);
  }
  return cachedUint32Memory0;
}

-- Chunk 15 --
// bincode_js.js:244-252
function passArrayJsValueToWasm0(array, malloc) {
  const ptr = malloc(array.length * 4, 4) >>> 0;
  const mem = getUint32Memory0();
  for (let i = 0; i < array.length; i++) {
    mem[ptr / 4 + i] = addHeapObject(array[i]);
  }
  WASM_VECTOR_LEN = array.length;
  return ptr;
}

-- Chunk 16 --
// bincode_js.js:254-260
function handleError(f, args) {
  try {
    return f.apply(this, args);
  } catch (e) {
    wasm.__wbindgen_exn_store(addHeapObject(e));
  }
}

-- Chunk 17 --
// bincode_js.js:273-361
class Hash {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Hash.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_hash_free(ptr);
  }
  /**
   * Create a new Hash object
   *
   * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.hash_constructor(retptr, addHeapObject(value));
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Hash.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Return the base58 string representation of the hash
   * @returns {string}
   */
  toString() {
    let deferred1_0;
    let deferred1_1;
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.hash_toString(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      deferred1_0 = r0;
      deferred1_1 = r1;
      return getStringFromWasm0(r0, r1);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
      wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);
    }
  }
  /**
   * Checks if two `Hash`s are equal
   * @param {Hash} other
   * @returns {boolean}
   */
  equals(other) {
    _assertClass(other, Hash);
    const ret = wasm.hash_equals(this.__wbg_ptr, other.__wbg_ptr);
    return ret !== 0;
  }
  /**
   * Return the `Uint8Array` representation of the hash
   * @returns {Uint8Array}
   */
  toBytes() {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.hash_toBytes(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var v1 = getArrayU8FromWasm0(r0, r1).slice();
      wasm.__wbindgen_free(r0, r1 * 1);
      return v1;
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
}

-- Chunk 18 --
// bincode_js.js:424-444
class Instruction {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Instruction.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_instruction_free(ptr);
  }
}

-- Chunk 19 --
// bincode_js.js:448-482
class Instructions {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Instructions.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_instructions_free(ptr);
  }
  /**
   */
  constructor() {
    const ret = wasm.instructions_constructor();
    return Instructions.__wrap(ret);
  }
  /**
   * @param {Instruction} instruction
   */
  push(instruction) {
    _assertClass(instruction, Instruction);
    var ptr0 = instruction.__destroy_into_raw();
    wasm.instructions_push(this.__wbg_ptr, ptr0);
  }
}

-- Chunk 20 --
// bincode_js.js:500-529
class Message {
  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_message_free(ptr);
  }
  /**
   * The id of a recent ledger entry.
   * @returns {Hash}
   */
  get recent_blockhash() {
    const ret = wasm.__wbg_get_message_recent_blockhash(this.__wbg_ptr);
    return Hash.__wrap(ret);
  }
  /**
   * The id of a recent ledger entry.
   * @param {Hash} arg0
   */
  set recent_blockhash(arg0) {
    _assertClass(arg0, Hash);
    var ptr0 = arg0.__destroy_into_raw();
    wasm.__wbg_set_message_recent_blockhash(this.__wbg_ptr, ptr0);
  }
}

-- Chunk 21 --
// bincode_js.js:547-696
class Pubkey {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Pubkey.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_pubkey_free(ptr);
  }
  /**
   * Create a new Pubkey object
   *
   * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.pubkey_constructor(retptr, addHeapObject(value));
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Pubkey.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Return the base58 string representation of the public key
   * @returns {string}
   */
  toString() {
    let deferred1_0;
    let deferred1_1;
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.pubkey_toString(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      deferred1_0 = r0;
      deferred1_1 = r1;
      return getStringFromWasm0(r0, r1);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
      wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);
    }
  }
  /**
   * Check if a `Pubkey` is on the ed25519 curve.
   * @returns {boolean}
   */
  isOnCurve() {
    const ret = wasm.pubkey_isOnCurve(this.__wbg_ptr);
    return ret !== 0;
  }
  /**
   * Checks if two `Pubkey`s are equal
   * @param {Pubkey} other
   * @returns {boolean}
   */
  equals(other) {
    _assertClass(other, Pubkey);
    const ret = wasm.pubkey_equals(this.__wbg_ptr, other.__wbg_ptr);
    return ret !== 0;
  }
  /**
   * Return the `Uint8Array` representation of the public key
   * @returns {Uint8Array}
   */
  toBytes() {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.pubkey_toBytes(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var v1 = getArrayU8FromWasm0(r0, r1).slice();
      wasm.__wbindgen_free(r0, r1 * 1);
      return v1;
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Derive a Pubkey from another Pubkey, string seed, and a program id
   * @param {Pubkey} base
   * @param {string} seed
   * @param {Pubkey} owner
   * @returns {Pubkey}
   */
  static createWithSeed(base, seed, owner) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      _assertClass(base, Pubkey);
      const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
      const len0 = WASM_VECTOR_LEN;
      _assertClass(owner, Pubkey);
      wasm.pubkey_createWithSeed(retptr, base.__wbg_ptr, ptr0, len0, owner.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Pubkey.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Derive a program address from seeds and a program id
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {Pubkey}
   */
  static createProgramAddress(seeds, program_id) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      const ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);
      const len0 = WASM_VECTOR_LEN;
      _assertClass(program_id, Pubkey);
      wasm.pubkey_createProgramAddress(retptr, ptr0, len0, program_id.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Pubkey.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Find a valid program address
   *
   * Returns:

-- Chunk 22 --
// bincode_js.js:697-720
   * * `[PubKey, number]` - the program address and bump seed
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {any}
   */
  static findProgramAddress(seeds, program_id) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      const ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);
      const len0 = WASM_VECTOR_LEN;
      _assertClass(program_id, Pubkey);
      wasm.pubkey_findProgramAddress(retptr, ptr0, len0, program_id.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return takeObject(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
}

-- Chunk 23 --
// bincode_js.js:723-872
class SystemInstruction {
  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_systeminstruction_free(ptr);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @param {bigint} space
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static createAccount(from_pubkey, to_pubkey, lamports, space, owner) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_createAccount(
      from_pubkey.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      lamports,
      space,
      owner.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} to_pubkey
   * @param {Pubkey} base
   * @param {string} seed
   * @param {bigint} lamports
   * @param {bigint} space
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static createAccountWithSeed(from_pubkey, to_pubkey, base, seed, lamports, space, owner) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    _assertClass(base, Pubkey);
    const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    const len0 = WASM_VECTOR_LEN;
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_createAccountWithSeed(
      from_pubkey.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      base.__wbg_ptr,
      ptr0,
      len0,
      lamports,
      space,
      owner.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} pubkey
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static assign(pubkey, owner) {
    _assertClass(pubkey, Pubkey);
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_assign(pubkey.__wbg_ptr, owner.__wbg_ptr);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} pubkey
   * @param {Pubkey} base
   * @param {string} seed
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static assignWithSeed(pubkey, base, seed, owner) {
    _assertClass(pubkey, Pubkey);
    _assertClass(base, Pubkey);
    const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    const len0 = WASM_VECTOR_LEN;
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_assignWithSeed(pubkey.__wbg_ptr, base.__wbg_ptr, ptr0, len0, owner.__wbg_ptr);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @returns {Instruction}
   */
  static transfer(from_pubkey, to_pubkey, lamports) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    const ret = wasm.systeminstruction_transfer(from_pubkey.__wbg_ptr, to_pubkey.__wbg_ptr, lamports);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} from_base
   * @param {string} from_seed
   * @param {Pubkey} from_owner
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @returns {Instruction}
   */
  static transferWithSeed(from_pubkey, from_base, from_seed, from_owner, to_pubkey, lamports) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(from_base, Pubkey);
    const ptr0 = passStringToWasm0(from_seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    const len0 = WASM_VECTOR_LEN;
    _assertClass(from_owner, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    const ret = wasm.systeminstruction_transferWithSeed(
      from_pubkey.__wbg_ptr,
      from_base.__wbg_ptr,
      ptr0,
      len0,
      from_owner.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      lamports,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} pubkey
   * @param {bigint} space
   * @returns {Instruction}
   */
  static allocate(pubkey, space) {
    _assertClass(pubkey, Pubkey);
    const ret = wasm.systeminstruction_allocate(pubkey.__wbg_ptr, space);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} address
   * @param {Pubkey} base
   * @param {string} seed
   * @param {bigint} space
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static allocateWithSeed(address, base, seed, space, owner) {
    _assertClass(address, Pubkey);
    _assertClass(base, Pubkey);
    const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);

-- Chunk 24 --
// bincode_js.js:873-951
    const len0 = WASM_VECTOR_LEN;
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_allocateWithSeed(
      address.__wbg_ptr,
      base.__wbg_ptr,
      ptr0,
      len0,
      space,
      owner.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authority
   * @param {bigint} lamports
   * @returns {Array<any>}
   */
  static createNonceAccount(from_pubkey, nonce_pubkey, authority, lamports) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authority, Pubkey);
    const ret = wasm.systeminstruction_createNonceAccount(
      from_pubkey.__wbg_ptr,
      nonce_pubkey.__wbg_ptr,
      authority.__wbg_ptr,
      lamports,
    );
    return takeObject(ret);
  }
  /**
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authorized_pubkey
   * @returns {Instruction}
   */
  static advanceNonceAccount(nonce_pubkey, authorized_pubkey) {
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authorized_pubkey, Pubkey);
    const ret = wasm.systeminstruction_advanceNonceAccount(nonce_pubkey.__wbg_ptr, authorized_pubkey.__wbg_ptr);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authorized_pubkey
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @returns {Instruction}
   */
  static withdrawNonceAccount(nonce_pubkey, authorized_pubkey, to_pubkey, lamports) {
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authorized_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    const ret = wasm.systeminstruction_withdrawNonceAccount(
      nonce_pubkey.__wbg_ptr,
      authorized_pubkey.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      lamports,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authorized_pubkey
   * @param {Pubkey} new_authority
   * @returns {Instruction}
   */
  static authorizeNonceAccount(nonce_pubkey, authorized_pubkey, new_authority) {
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authorized_pubkey, Pubkey);
    _assertClass(new_authority, Pubkey);
    const ret = wasm.systeminstruction_authorizeNonceAccount(
      nonce_pubkey.__wbg_ptr,
      authorized_pubkey.__wbg_ptr,
      new_authority.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
}

=== File: middle-server/src/utils/webasm_bincode_deserializer/bincode_js_bg.wasm.d.ts ===

-- Chunk 1 --
// bincode_js_bg.wasm.d.ts:4-4
function bincode_js_deserialize(a: number): number;

-- Chunk 2 --
// bincode_js_bg.wasm.d.ts:5-5
function borsh_bpf_js_deserialize(a: number): number;

-- Chunk 3 --
// bincode_js_bg.wasm.d.ts:6-6
function __wbg_message_free(a: number): void;

-- Chunk 4 --
// bincode_js_bg.wasm.d.ts:7-7
function __wbg_get_message_recent_blockhash(a: number): number;

-- Chunk 5 --
// bincode_js_bg.wasm.d.ts:8-8
function __wbg_set_message_recent_blockhash(a: number, b: number): void;

-- Chunk 6 --
// bincode_js_bg.wasm.d.ts:9-9
function solana_program_init(): void;

-- Chunk 7 --
// bincode_js_bg.wasm.d.ts:10-10
function systeminstruction_createAccount(a: number, b: number, c: number, d: number, e: number): number;

-- Chunk 8 --
// bincode_js_bg.wasm.d.ts:11-20
function systeminstruction_createAccountWithSeed(
  a: number,
  b: number,
  c: number,
  d: number,
  e: number,
  f: number,
  g: number,
  h: number,
): number;

-- Chunk 9 --
// bincode_js_bg.wasm.d.ts:21-21
function systeminstruction_assign(a: number, b: number): number;

-- Chunk 10 --
// bincode_js_bg.wasm.d.ts:22-22
function systeminstruction_assignWithSeed(a: number, b: number, c: number, d: number, e: number): number;

-- Chunk 11 --
// bincode_js_bg.wasm.d.ts:23-23
function systeminstruction_transfer(a: number, b: number, c: number): number;

-- Chunk 12 --
// bincode_js_bg.wasm.d.ts:24-32
function systeminstruction_transferWithSeed(
  a: number,
  b: number,
  c: number,
  d: number,
  e: number,
  f: number,
  g: number,
): number;

-- Chunk 13 --
// bincode_js_bg.wasm.d.ts:33-33
function systeminstruction_allocate(a: number, b: number): number;

-- Chunk 14 --
// bincode_js_bg.wasm.d.ts:34-41
function systeminstruction_allocateWithSeed(
  a: number,
  b: number,
  c: number,
  d: number,
  e: number,
  f: number,
): number;

-- Chunk 15 --
// bincode_js_bg.wasm.d.ts:42-42
function systeminstruction_createNonceAccount(a: number, b: number, c: number, d: number): number;

-- Chunk 16 --
// bincode_js_bg.wasm.d.ts:43-43
function systeminstruction_advanceNonceAccount(a: number, b: number): number;

-- Chunk 17 --
// bincode_js_bg.wasm.d.ts:44-44
function systeminstruction_withdrawNonceAccount(a: number, b: number, c: number, d: number): number;

-- Chunk 18 --
// bincode_js_bg.wasm.d.ts:45-45
function systeminstruction_authorizeNonceAccount(a: number, b: number, c: number): number;

-- Chunk 19 --
// bincode_js_bg.wasm.d.ts:46-46
function __wbg_instruction_free(a: number): void;

-- Chunk 20 --
// bincode_js_bg.wasm.d.ts:47-47
function pubkey_constructor(a: number, b: number): void;

-- Chunk 21 --
// bincode_js_bg.wasm.d.ts:48-48
function pubkey_toString(a: number, b: number): void;

-- Chunk 22 --
// bincode_js_bg.wasm.d.ts:49-49
function pubkey_isOnCurve(a: number): number;

-- Chunk 23 --
// bincode_js_bg.wasm.d.ts:50-50
function pubkey_equals(a: number, b: number): number;

-- Chunk 24 --
// bincode_js_bg.wasm.d.ts:51-51
function pubkey_toBytes(a: number, b: number): void;

-- Chunk 25 --
// bincode_js_bg.wasm.d.ts:52-52
function pubkey_createWithSeed(a: number, b: number, c: number, d: number, e: number): void;

-- Chunk 26 --
// bincode_js_bg.wasm.d.ts:53-53
function pubkey_createProgramAddress(a: number, b: number, c: number, d: number): void;

-- Chunk 27 --
// bincode_js_bg.wasm.d.ts:54-54
function pubkey_findProgramAddress(a: number, b: number, c: number, d: number): void;

-- Chunk 28 --
// bincode_js_bg.wasm.d.ts:55-55
function __wbg_instructions_free(a: number): void;

-- Chunk 29 --
// bincode_js_bg.wasm.d.ts:56-56
function instructions_constructor(): number;

-- Chunk 30 --
// bincode_js_bg.wasm.d.ts:57-57
function instructions_push(a: number, b: number): void;

-- Chunk 31 --
// bincode_js_bg.wasm.d.ts:58-58
function hash_constructor(a: number, b: number): void;

-- Chunk 32 --
// bincode_js_bg.wasm.d.ts:59-59
function hash_toString(a: number, b: number): void;

-- Chunk 33 --
// bincode_js_bg.wasm.d.ts:60-60
function hash_equals(a: number, b: number): number;

-- Chunk 34 --
// bincode_js_bg.wasm.d.ts:61-61
function hash_toBytes(a: number, b: number): void;

-- Chunk 35 --
// bincode_js_bg.wasm.d.ts:62-62
function __wbg_pubkey_free(a: number): void;

-- Chunk 36 --
// bincode_js_bg.wasm.d.ts:63-63
function __wbg_hash_free(a: number): void;

-- Chunk 37 --
// bincode_js_bg.wasm.d.ts:64-64
function __wbindgen_malloc(a: number, b: number): number;

-- Chunk 38 --
// bincode_js_bg.wasm.d.ts:65-65
function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;

-- Chunk 39 --
// bincode_js_bg.wasm.d.ts:66-66
function __wbindgen_add_to_stack_pointer(a: number): number;

-- Chunk 40 --
// bincode_js_bg.wasm.d.ts:67-67
function __wbindgen_free(a: number, b: number, c: number): void;

-- Chunk 41 --
// bincode_js_bg.wasm.d.ts:68-68
function __wbindgen_exn_store(a: number): void;

=== File: middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1-150
 asm   #`````` ` `` `` ` `
``
` `~`~~~`~` `~~`~` `	`~`~~`~ `~```  `
 `
`~~`~aa 
ab ac 
 	
	
                                    	             
 			




  	



 	      
	   
	
 
 	 		 
  


 
!"  



 
p77	A
Od e f g h i j k l m n o p q r s 	r A
6

~ )  !   ) 7    7  
*  Ak"q@A A AA   
   qE
8         kj"   K"jF   j   j 

   AK
@   Ak"O@  !

 (    (  s"E@  !@ Aj! Aj" O
 (   (  s"E
 
  j  k
 
@  AkO
  /   /  G
  Aj! Aj!
  K  -   -  Fj 
  k
 A  gk
@  K@  M@   kAkAaO
    k"j!    AN@  Aj! @   Aj  Aj A j"  A j"  I
 

 ! ! 
@  OE@   -  :    Aj!  Aj!



AA AA
  
A A A A
  
   )    
   )    
   (    
A  ("  (I@A
    ("Aq6    Avk"6   (  6 A 
   (   A 

    A t"k     k K 
   )   B 
   )   B 

    tA  kv
   )  Bȕ˛O~A  k
   )   B 
  "E@  B hA j
 h
   Aq
   (  " At   AF
"  ( !    ("  j6    
3 @  !@  -  :   Aj! Aj! Ak"
 

  
J   I@    
 @   j!  j!@ Ak" Ak"-  :   Ak"
 

  
) @  !@  :   Aj! Ak"
 

  
   )    

    )  7  

    sAqE
    %
    
@ AO@   rAq
@  (  ( G
 Aj!  Aj!  Ak"AK
 

A 

A
!@@ E@ 
A 
@  -  " -  "F@ Aj!  Aj!  Ak!

  k
A !

A!
 
 
    x
   A  kAqt   AqvrAq
 E@  B 7   A 6  B 7A
   6
   Aj6@ AO@    j"Ak"6   (  6  Ak-  "E@  A 6A
  A k6

   6   -  "6 @@@ Ak 
   - At r"6 
   - At j6 
  jAk-  "E@  A 6Al
  A(  Atjk6
 
    1
S  (!  (
  (     (Aq6    (  Axqv6     ("  (
 Avj"    K6

!  BӾǫB~  |BBޛ~
	    7  
# Ak"
$ @@@@@@  ("A!I@  (\!@@@@@ Ak 
  

  

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:151-300

  

  

  
!  (!  (d!  (
!
  (!  Atj"	( !  (  (   (!   ("k" K
 Ak I
  (!  	 6  E
A  A AktAs"k"  K!   qAtj"
Aj!	  
j! 
 j! A	j! Aj!A  t!A!
@@ E  Ir
  O
 A      K" j" 
IE@  
I
	   j  j  j   j"  j! 

     j  j  j     j"  j" 
I
!      kK    
K"!   
 !
   j" F
   qAtj!@@@  j  j-   -  I@ 
 6   K
 
A
j!


 	 6   M
  ! !	

  ! Aj"
!
 Ak! ( !


 
A
j!	
 	A 6  
A 6   M
 
Aj$  
Ak" A  AIA  
AK"   k"   K
A A AA  
AA AA   
A A AA   
A A AA   
A A AA   
AA AA   
A A AǂA   

   AjAt
8  Aj"" AjAO@A A AA  
  At At  vj
1    (" j6    (  AtAj(  q tr6 
   A~q

    (  6  
   @ @     
  

	    ;  
	    6  

   F  A Fq

   A 
.    A A" A?q@A A AلA   
  
@@  AO
 (8AF@ @  +

  *

  AF@ Aj!A! 


  " Aj-  At (,j! (  Atj( !   @  +

  *
k
 j
A A AɀA   
# Ak"$  B 7  A 6@@@@@@@@@  A k 
 B7

 B7

 B7

 B7

 B 7

 A6

 B7

 AX6 
 ( ! (! (!  Aj$  E   Lq  Lq
  (" (j"6   AtAj(  ( A  kvq6 @ A K
  (" (O@ 


  (
"F
     k Av"  k I"k"6   Atk6  (  6 
   Aj6
@@@@@@@  ( "  ("M@   (
"K
   ("K
   ("K
  I
   ("K
  ("  K
   I

A A AA
  
A A AA
  
A A AA
  
AA AA
  
AA AA
  
A A AA
  
AA AA
  
AA AA
  
+~# Ak"$  Aj  A )! Aj$  
%# Ak"
$ @@@@@@  ("A!I@  (\!	@@@ Ak 
  

  

  

-- Chunk 3 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:301-450
!  (  (   ("k"  (!
 Ak I
A !A  A  (AktAs"k"  K"
 
 
 
I!
  (d!A  (t"! 	 Atj"!!@@ ( "	 
M
  	 qAtj"("
AG AIrE@  6 Ak! 	!


 
AG
  B 7 
 Aj!#@ @ #  qAtj( !	 !A !A !# Ak"$ @@@@ 
 "M@  ("  ("  (
" K"" j"  j"$  "" O
  (d"%A  (AktAs"& qAtj"( !
 A  (t"k  ("
  
k K!'  j!( Aj!
 AF!)@@ E 
 'Mr
  
M
@ )    I" 
j"
 Iq"  OqE@A  
 I "
  j    
j" j   j!

 
 j"
 
 j  j  
j   $ ( j" 
j I!
  j"*  F
 % 
 &qAtj!
@@@  j-   *-  I@  
6  
 
K
 A
j!

 
 
6  
 
M
 
!
 !

 
Aj"
! !
 Ak! 
( !



 A
j!

 
A 6  A 6  Aj$ 

AA AA   
A A AA   
A A AA   
A A AA   
 Aj! 	!


  (!
  (
!
 !( ! ! 6  A	j! Aj! 
 j! 
 
j!   qAtj"Aj!
 AG!A !
A !A !	@@@ A G E  
Mr
 E 
  
 I" j 
IqE@  j  j j  j! 

 
   j  
j j    j" j 
I
!@  	M
   k"Aj ( k  	kAtH@ E
  Aj6  !	
  j    kK!  j G
 A AG
 
A 6  A 6 

   qAtj!@@@  j j-    j-  I@  6   
K
 
A
j!

 
 6   
M
 ! !


 !
 Aj"!
 Ak! ( !


 
A
j!

A
! 
A 6  A 6  AO
 AF qE
  ! !@@  ("("A!I@ (\!@@@ Ak 
  

  

  
! ( "
 ("k"
A (AktAs"
k (" 
 k 
K!  Atj!  ("  (
j!  ( 
k j! (d!A !A !@@ E
  ( " M
   j!
 	     K"j  j" j  
  j"I@  

-- Chunk 4 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:451-600
k"Aj ( Ajk  	kAtH@ E
  Aj6  !	
  j F

   
qAtj!@  
  j 
I j-    j-  I@  M
 Aj! ! !

  M

 Ak! !


 	AO@ ( AM

 	




A A AA0  
AA AA0  
!	
  M
   Ak6
 	AO@ ( AM

 
Aj$  	


A A AA0  
A A AA0  
AA AA0  
A A AA0  
A݂A AA0  
A A AA  
	@@  AjO@  (
"  (
I
A  (AktAs!  (d!  (\!    ("	k"  K!
  ("A!I!
 Ak!@  
G@ 
E
  	j! @@@  
  

  

  
Atj"( !
  6    qAtj"A6  
6  Aj!


   6

A A AA   
AA AA   
A A AA  
# B  '  Bޛ~Bꃱ }
       
    Aq0   Av: 
Y  Aj! A A NAj!A ! A !@  FE@    At" j(    j( lj!  Aj!


  Av
A!
@@@  j"
   kK
 Al!
  ( "
k I
  
A L
  
N
   j" k!
   A k"  
 A    
j6 @@   kM@ 
!

  k I
 	 	 
 k"j" jO@   

  j!  A  k k!
     A
 
!

 

A/A AA   
A0A AA   

    A
G        (  ( Atj" ("Aj"A|q k Avu  ( jAtj/ 6 
W  (  ( Atj"- ! / !  - " (j"6    AtAj(  ( A  kvqj6  
/  (  ( Atj"- !   /   - j6  

   AO@  A$j
  Aj-  
@@@ AO@    ) 7 Ak!

 E
@@  jAk" 
  ( "Ak

  ( !   Atj( 
!  AA AKj( !   6   6
   6 

AA AÍA$  
#	# A k"$ @@@@@@@@@@@@A  AI
  ( ! B 7    6   6 B 7    jAk6A A 
  Aj!@ A
I   lAvAjOqE@ AxqAF@A ! (! ( ! @@ Aq
   Ak"j-  Atj( ""A
O
   j"6  -   vr" 6 A! AqA!I
 


  Aq6 Aq"E
 A!O
 (" ("K
   A  kv    Avj"    K6
 Aq
 Aq@  jAk!A ! (! ( ! @@ Aq
  -  Atj( ""	A
O
   j"6    	v r" 6 A! AqA!I
 


   Ak"j-  Atj( ""A
O

  -   vr"6   j"Aq" A!O

  Aq6  E
 (" ("K
  A   kv     Avj"    K6
 Aq
 (! (! ( !  (!	@ A J@  j"Ak!

-- Chunk 5 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:601-750
A !@@ Aq
  
-  Atj( ""
A
O
   j"6    
v r" 6 A! AqA!I
 


  Ak-  Atj( ""
A
O

 -!
  j"
Aq"A!O
 E
  	K
  
   
vr"
A  kv 	  Avj"    	K! Ak!A !A ! A !@@ Aq
  -  Atj( ""
A
O
   j"6
    
v r" 6A! AqA!I
 


   Ak"j-  Atj( ""A
O

   j"6
  -   vr"6 Aq" A!O
  A F

   
  vr" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv  	  Avj"  	K"6


 E


@@@ Ak 
 AxqAF@A ! (! ( ! @@ Aq
   Ak"j-  Atj( ""A
O
   j"6  -   vr" 6 A! AqA!I
 


  Aq6 Aq"E
 A!O
 (" ("K
   A  kv   Avj" 6   K

 Aq
 Aq@  jAk!A ! (! ( ! @@ Aq
  -  Atj( ""	A
O
   j"6    	v r" 6 A! AqA!I
 


   Ak"j-  Atj( ""A
O

  -   vr"6   j"Aq" A!O
  Aq6  E
 (" ("K
  A   kv    Avj" 6   K

 Aq
	 (! (! ( !  (!	@@ A L
  j"Ak!
A !@@ Aq
  
-  Atj( ""
A
O
   j"6    
v r" 6 A! AqA!I
 


  Ak-  Atj( ""
A
O
 -!
  j"
Aq"A!O
 E
  	K
  
   
vr"
A  kv  Avj" 	K
 Ak!A !A ! A !@@ Aq
  -  Atj( ""
A
O
   j"6
    
v r" 6A! AqA!I
 


   Ak"j-  Atj( ""A
O
   j"6
  -   vr"6 Aq" A!O
  A F

   
  vr" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv   Avj"6  	M
 


 E


 AxqAF@A ! (! ( ! @@ Aq
   Ak"j-  Atj( ""A
O
   j"6  -   vr" 6 A! AqA!I
 


  Aq6 Aq"E
 A!O
 (" ("K
   A  kv   Avj" 6   K

 Aq
 Aq@  jAk!A ! (! ( ! @@ Aq
  -  Atj( ""	A
O
   j"6    	v r" 6 A! AqA!I
 

-- Chunk 6 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:751-900


   Ak"j-  Atj( ""A
O

    v r"6   j"Aq" A!O

  Aq6  E
 (" ("K
  A   kv    Avj" 6   K

 Aq
 (! (! ( !  (!	@@ A L
  j"Ak!
A !@@ Aq
  
-  Atj( ""
A
O
   j"6    
v r" 6 A! AqA!I
 


  Ak-  Atj( ""
A
O

  j"
Aq"A!O
 E
  	K
    
v r"
A  kv  Avj" 	K
 Ak!A !A ! A !@@ Aq
  -  Atj( ""
A
O
   j"6
    
v r" 6A! AqA!I
 


   Ak"j-  Atj( ""A
O

   j"6
    v r"6 Aq" A!O
  A F

  
  v r" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv   Avj"6  	M
 


 E


 Ao"A J@ (! ( ! @@ A L
   Ak"j-  Atj( ""	A
O

   j"6  -   	vr" 6  Ak! AqA!I
 



  Aq6 Aq"E

 A!O
 (" ("K
   A  kv   Avj" 6   K

 Ao
 Ao@ (! ( ! A!@@ AF
    kj-  Atj( ""	A
O

   j"6    	v r" 6  Aj! AqA!I
 



   Ak"j-  Atj( ""A
O

    v r"6   j"Aq" A!O

  Aq6  E

 (" ("K
  A   kv    Avj" 6   K

 Ao
 (! (! ( !  (!	@@A! A L
@@ AF
    kj-  Atj( ""
A
O
   j"6    
v r" 6  Aj! AqA!I
 


   Ak"
j-  Atj( ""
A
O

  j"
Aq"A!O

 E
  	K
    
v r"
A  kv  Avj" 	K
A!A !A ! @@ AF
   
 kj-  Atj( ""
A
O
   j"6
    
v r" 6 Aj! AqA!I
 


   Ak"j-  Atj( ""A
O

   j"6
    v r"6 Aq" A!O

  A F
  
  v r" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv   Avj"6  	M
 



-- Chunk 7 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:901-1050
 

  	K
# Ak" $   A
j"A A  (
!  Aj$  " "A
I@   - (  vr"6   (  j"6 Aq" A!O

  Aq6  E

 (" (K
  A   kv  (" (  Avj"    K"6   I  (k - A GjA 






!  A j$   
A A A A
  
A A A A#  
AA A A  
A A A A  
A A A A#  
A A A A#  
A A A A   
A A A A   
A A A A  
A A A A  
A A A A  
AA A A  
6 A
M@     ~
A! AqA     A  

N ( Atj"( ! (!   ( "    (jAv" ,    (   ujAtj/ 6 
~# Ak"$ @@@@@@@@@@@@@  (AI@  ("AO
  ("(Ak"A!O
  (!   ("
k!  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !@  (E@@   (
"kAI
  A j"   I! 
Aj!
 Aj"A!I!@  G@ E
   
j   (P
"
AvA q"AtjA E
  	jAE
   AqAtj"
(,! 
 
6, 	 AvA q"j"
A A 
-  AkAq"
 
j"
:    
j   (P
 G
 
 
j :    Atj 
Atj 6  Aj!


 A k" A  Aj"  
j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  
j   (P
"AvA q"AtjA E
 
 jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 6,  AvA q"j"A A -  AkAq"
 
j"
:    j 
  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

   
jAj  

"AvA q"AtjA E

  	jAE
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
A t! 
 j!
 At!    (X j6X AqAl! 	 AvA q"
j"	-  !B !
A!@  	 Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
AsAq Aq#!
  
Atj!A !@@ E 
Pr
  
 jAq"@ AO
  Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



-- Chunk 8 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1051-1200

A ! 	A A AkAq" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 
j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 (\! ( !
 (!	 (
!
A !@ AG@ Aj!


 A AI!
  	 jk 
j!  AtA
rj( "Av!  (d!A !@@@@@@  
G@   jAtj( "E
  
I
  	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq"  
k"  K!A !A !@@@  F@@@  F
	   Atj( " 
I
   	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AM
  ("(Ak"A!O
  (!   ("k!
  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !
  (!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"

-- Chunk 9 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1201-1350
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

  
 jAj  

"AvAq"AtjA E

  	jA E
   
AqAtj"(,!  6,

 Aj"A!O

   

!   
6

  
A t"k  
 k K !
  j!A AktA  AK!
 
At!    (X j6X AqAl! 	 AvAq"j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
  Atj!A ! 
B 	A?q !
A !@@ E 
Pr
  
 	jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 
B} 
!



A ! A A? 	AkA?q"	 	j"	:   	 j :      (
" Aj6
  	Atj  6  Ak!	 Aj!A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     	j(  G
    "  M
  
 k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\! ( ! (! (
!	A !@ AG@ Aj!


  
j"A AI!
 
  jk j!  AtA
rj( "
Av!  (d!A !@@@@  
G@   jAtj( "
E
 	 
K
 
 j"Aj"
 K
@ (   (  G
   
   Aj" M
   
k"E
  Aj6  " j F

 Aj!


 
Aq"  
k"  K!
A !A !@@@  
F@@@  
F
   Atj( " 	I
   j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AG

-- Chunk 10 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1351-1500
  ("(Ak"A!O
  (!   ("k!
  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !
  (!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

  
 jAj  

"AvAq"AtjA E

  	jA E
   
AqAtj"(,!  6,

 Aj"A!O

   

!   
6

  
A t"k  
 k K !
  j!A AktA  AK!
 
At!    (X j6X AqAl! 	 AvAq"j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
As 	Aq"!
  Atj!A !A !@@ E 
Pr
  
 	jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 
B} 
!



A ! A A 	AkAq"	 	j"	:   	 j :      (
" Aj6
  	Atj  6  Ak!	 Aj!A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     	j(  G
    "  M
  
 k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\! ( ! (! (
!	A !@ AG@ Aj!



-- Chunk 11 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1501-1650
  
j"A AI!
 
  jk j!  AtA
rj( "
Av!  (d!A !@@@@  
G@   jAtj( "
E
 	 
K
 
 j"Aj"
 K
@ (   (  G
   
   Aj" M
   
k"E
  Aj6  " j F

 Aj!


 
Aq"  
k"  K!
A !A !@@@  
F@@@  
F
   Atj( " 	I
   j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  ("AO
  ("(Ak"A!O
  (!   ("k!
  (!  (!
  (
!  )P!  ($!  ((!
  (\!  !
  (!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"	AvA q"AtjA E
  
jAE
   AqAtj"(,!  	6, 
 AvA q"
j"	A A 	-  AkAq" j":    j 
  )P
 G
 	 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"	A!I! !@  
F
 E
 
  j 	  )P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvA q"AtjA E
  jAE
   AqAtj"	(,! 	 
6,  AvA q"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :   
 Atj 	Atj 6  Aj!


   6
 Aj"A!O

  
 jAj  
"AvA q"AtjA E

  
jAE
   
AqAtj"(,!  6,

 Aj"A!O

   
!   
6

  
A t"k  
 k K 
!
A t!  j!A AktA  AK!
 
At!    (X j6X AqAl! 
 AvA q"j"-  !
B !A!@   Ak"j(  s"	AxrAk 	rAxqAlA
v B! 
 
 AsAq 
Aq#!  Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 

-- Chunk 12 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1651-1800
I
  Atj 6  Aj! Ak!
 B} !


A ! A A 
AkAq"
 
j"
:   
 j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 (\! ( ! (! (
!
A !@ AG@ Aj!


  
j"A AI!
 
  jk j!  AtA
rj( "
Av!  (d!A !@@@@@@  
G@   jAtj( "
E
 
 
K
 
 j"Aj"	 K
@ (   (  G
   	   Aj" M
   
k"E
  Aj6  " j F

 Aj!


 
Aq"  
k"  K!
A !A !@@@  
F@@@  
F
	   Atj( " 
I
   j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  ("	AM
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!
  ($!  ((!  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"
A!I!@  G@ E
 
  
j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"A!I!
 !@  
F
 
E
 
  j   )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!

-- Chunk 13 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1801-1950
 
 
  K
  ("Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"AvAq"AtjA E
  
jA E
   AqAtj"
(,! 
 6, 
 AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  )P
 G
 
 j :    Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  

"AvAq"AtjA E

  jA E
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
  j!A 	AktA  	AK! At!
    (X j6X AqAl!  AvAq"
j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
 
Atj!
A ! 
B 	A?q !
A !@@ E 
Pr
  
 	jA?q"@ A O
 
 Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



A ! A A? 	AkA?q"	 	j"	:   	 j :      (
" Aj6
 
 	Atj  6  Ak!	 Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     	j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\!	 ( ! (!
 (
!
A !@ AG@ Aj!


  j"A AI!  
 jk j! 	 
AtA
rj( "
Av!  (d!A !@@@@  G@ 	  
jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F

 Aj!


 
Aq"  k"  K!A !A !@@@  F@@@  F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  

-- Chunk 14 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:1951-2100
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  (AG
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!  ($!  ((!	  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
 
  
j   )P
"
AvAq"AtjA E
  	jA E
   AqAtj"
(,! 
 
6, 	 AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 
  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  
"AvAq"AtjA E

  	jA E
   AqAtj"(,!  6,

 Aj"A!O

   
!   6

  A t"k   k K !
  j!
 At!    (X j6X AqAl! 	 AvAq"
j"-  !B !A !@   Ak"j(  s"	AxrAk 	rAxqAlA
v B! 
 
 As Aq"! 
 
Atj!
A !A !	@@ 	E Pr
   jAq"@ A O
 
 Atj( " 
I
  Atj 6  	Ak!	 Aj!
 B} !


A ! A A AkAq" j":    j :      (
" Aj6
 
 Atj  6  Ak! Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ 	AI@ (\! ( ! (!
 (

-- Chunk 15 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:2101-2250
!
A !@ AG@ Aj!


 	A 	AI!
  
 jk j!  AtA
rj( "Av!  (d!A !@@@@  
G@   jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq" 	 
k"  K!	A !A !@@@  	F@@@  	F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  ("AO
  ("(Ak"A!O
  (!   ("
k!  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !@  (E@@   (
"kAI
  A j"   I! 
Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvA q"AtjA E
  	jAE
   AqAtj"
(,! 
 
6, 	 AvA q"j"
A A 
-  AkAq"
 
j"
:    
j   )P
 G
 
 
j :    Atj 
Atj 6  Aj!


 A k" A  Aj"  
j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  
j   )P
"AvA q"AtjA E
 
 jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 6,  AvA q"j"A A -  AkAq"
 
j"
:    j 
  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

   
jAj  

"AvA q"AtjA E

  	jAE
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
A t! 
 j!
 At!    (X j6X AqAl! 	 AvA q"
j"	-  !B !
A!@  	 Ak"j(  s"AxrAk rAxqAlA

-- Chunk 16 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:2251-2400
v 
B!
 
 
 
AsAq Aq#!
  
Atj!A !@@ E 
Pr
  
 jAq"@ AO
  Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



A ! 	A A AkAq" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 
j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 (\! ( !
 (!	 (
!
A !@ AG@ Aj!


 A AI!
  	 jk 
j!  AtA
rj( "Av!  (d!A !@@@@@@  
G@   jAtj( "E
  
I
  	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq"  
k"  K!A !A !@@@  F@@@  F
	   Atj( " 
I
   	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  ("	AM
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!
  ($!  ((!  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"
A!I!@  G@ E
 
  
j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"A!I!
 !@  
F
 
E
 
  j   (P

-- Chunk 17 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:2401-2550
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"AvAq"AtjA E
  
jA E
   AqAtj"
(,! 
 6, 
 AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  (P
 G
 
 j :    Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  

"AvAq"AtjA E

  jA E
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
  j!A 	AktA  	AK! At!
    (X j6X AqAl!  AvAq"
j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
 
Atj!
A ! 
B 	A?q !
A !@@ E 
Pr
  
 	jA?q"@ A O
 
 Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



A ! A A? 	AkA?q"	 	j"	:   	 j :      (
" Aj6
 
 	Atj  6  Ak!	 Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     	j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\!	 ( ! (!
 (
!
A !@ AG@ Aj!


  j"A AI!  
 jk j! 	 
AtA
rj( "
Av!  (d!A !@@@@  G@ 	  
jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F

 Aj!


 
Aq"  k"  K!A !A !@@@  F@@@  F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!



-- Chunk 18 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:2551-2700
A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  (AG
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!  ($!  ((!	  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
 
  
j   (P
"
AvAq"AtjA E
  	jA E
   AqAtj"
(,! 
 
6, 	 AvAq"j"
A A 
-  AkAq"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  j   (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 
  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  
"AvAq"AtjA E

  	jA E
   AqAtj"(,!  6,

 Aj"A!O

   
!   6

  A t"k   k K !
  j!
 At!    (X j6X AqAl! 	 AvAq"
j"-  !B !A !@   Ak"j(  s"	AxrAk 	rAxqAlA
v B! 
 
 As Aq"! 
 
Atj!
A !A !	@@ 	E Pr
   jAq"@ A O
 
 Atj( " 
I
  Atj 6  	Ak!	 Aj!
 B} !


A ! A A AkAq" j":    j :      (
" Aj6
 
 Atj  6  Ak! Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  

-- Chunk 19 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:2701-2850
A A AA0  
@@ 	AI@ (\! ( ! (!
 (
!
A !@ AG@ Aj!


 	A 	AI!
  
 jk j!  AtA
rj( "Av!  (d!A !@@@@  
G@   jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq" 	 
k"  K!	A !A !@@@  	F@@@  	F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@@  (AI@  ("AO
  ("($Aj"A!O
  (!  (!  (!	  (!
  (
!  )P!   ($!
  ((!  (\! ((! (\  "
AvA q"Atj"
A E
  j"AE

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"
AvA q"AtjA E
  
jAE
   AqAtj"(,!  
6, 
 AvA q"j"
A A 
-  AkAq" j":    j 
  (P
 G
 
 j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   (P
"
AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 
6,  AvA q"j"
A A 
-  AkAq"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj   
"AvA q"AtjA E

  jAE

   AqAtj"(,!  6,

 
Aj"A!O

    
!   6

 	 A t"k 	  	k K 

-- Chunk 20 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:2851-3000
!
A t!  j! 
AqAl!
    (X j6X AqAl!  AvA q"
j"	-  !
B ! A!@  	 Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq 
Aq#!   
Atj!A !@@ E  Pr
    
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
  B}  ! 


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 -  ! ( !  (! (
!	B ! A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq Aq"#! A !@@ E  Pr
    jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
  B}  ! 


  j  k!A !@@@@@@  F@ !

 	  Atj( "M@  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!


A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AM
  ("
($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!  ((!  (\! 
((! 
(\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P

-- Chunk 21 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3001-3150
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A? AkA?q" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! 
( !  
(! 
(
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
A ! B A?q" !@@ E Pr
   jA?q"
@ 
 
Atj( "
 	I
  Atj 
6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( "
 	I
 
 O
 
 j"Aj"  K
@ (   (  G
       Aj" M
   
 j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AG
  ("($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!
  ((!  (\! ((! (\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"

-- Chunk 22 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3151-3300
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 
Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !
B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As 
Aq"!  Atj!A !A !@@ E Pr
   
jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! ( !  (! (
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq""!A !@@ E Pr
   jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( " 	I
  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A

-- Chunk 23 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3301-3450
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  

~# Ak"$ @@@@@@@@@@@@@  (AK@  ("AO
  ("($Aj"A!O
  (!  (!  (!	  (!
  (
!  )P!   ($!
  ((!  (\! ((! (\  "
AvA q"Atj"
A E
  j"AE

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj"(,!  
6, 
 AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 
6,  AvA q"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj   
"AvA q"AtjA E

  jAE

   AqAtj"(,!  6,

 
Aj"A!O

    
!   6

 	 A t"k 	  	k K 
!
A t!  j! 
AqAl!
    (X j6X AqAl!  AvA q"
j"	-  !
B ! A!@  	 Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq 
Aq#!   
Atj!A !@@ E  Pr
    
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
  B}  ! 


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A

-- Chunk 24 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3451-3600
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 -  ! ( !  (! (
!	B ! A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq Aq"#! A !@@ E  Pr
    jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
  B}  ! 


  j  k!A !@@@@@@  F@ !

 	  Atj( "M@  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!


A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  (AM
  ("
($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!  ((!  (\! 
((! 
(\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A? AkA?q" j":    	j :      (

-- Chunk 25 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3601-3750
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! 
( !  
(! 
(
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
A ! B A?q" !@@ E Pr
   jA?q"
@ 
 
Atj( "
 	I
  Atj 
6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( "
 	I
 
 O
 
 j"Aj"  K
@ (   (  G
       Aj" M
   
 j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  (AG
  ("($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!
  ((!  (\! ((! (\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


-- Chunk 26 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3751-3900

   6
 
Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 
Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !
B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As 
Aq"!  Atj!A !A !@@ E Pr
   
jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! ( !  (! (
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq""!A !@@ E Pr
   jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( " 	I
  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  

~# Ak"$ @@@@@@@@@@@@@  (AF@  ("AO
  ("($Aj"A!O
  (!  (!  (!	  (!
  (
!  )P!   ($!
  ((!  (\! ((! (\  "
AvA q"Atj"
A E
  j"AE

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj"(,!  
6, 
 AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  

-- Chunk 27 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:3901-4050
F
 E
 
  j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 
6,  AvA q"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj   
"AvA q"AtjA E

  jAE

   AqAtj"(,!  6,

 
Aj"A!O

    
!   6

 	 A t"k 	  	k K 
!
A t!  j! 
AqAl!
    (X j6X AqAl!  AvA q"
j"	-  !
B ! A!@  	 Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq 
Aq#!   
Atj!A !@@ E  Pr
    
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
  B}  ! 


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 -  ! ( !  (! (
!	B ! A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq Aq"#! A !@@ E  Pr
    jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
  B}  ! 


  j  k!A !@@@@@@  F@ !

 	  Atj( "M@  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!


A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  (AM
  ("
($Aj"A!O
  (!  (!  (!	  (!  (

-- Chunk 28 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4051-4200
!  )P!  ($!  ((!  (\! 
((! 
(\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  (P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A? AkA?q" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! 
( !  
(! 
(
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
A ! B A?q" !@@ E Pr
   jA?q"
@ 
 
Atj( "
 	I
  Atj 
6  Aj! Ak!
 B} !


  j  k!A !@  F@ !


-- Chunk 29 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4201-4350
  Atj( "
 	I
 
 O
 
 j"Aj"  K
@ (   (  G
       Aj" M
   
 j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  (AG
  ("($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!
  ((!  (\! ((! (\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A 
-  AkAq" j":    j 
  (P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 
Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !
B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As 
Aq"!  Atj!A !A !@@ E Pr
   
jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I

-- Chunk 30 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4351-4500
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! ( !  (! (
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq""!A !@@ E Pr
   jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( " 	I
  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  ("AO
  (!   ("k!  (!  (!  (
!  (!  )P!  ($!  ((!  (\!@  (E@@   (
"kAI
  A j"   K! Aj!
 Aj"	A!I!
@  G@ 
E
   
j 	  (P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 	  (P
 G
  
j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!	  (\!
  ($Aj"A!I!
 !@  F
 
E

 
  j   (P
"
AvA q"AtjA E
  	jAE
   AqAtj 
6, Aj!
 
 
  K
  ("Aj!
  ((!
  (\!  ($Aj"	A!I!
@  G@ 
E

   
j 	  (P
"AvA q"AtjA E
  
jAE
   AqAtj"(,!  6, 
 AvA q"j"
A A 
-  AkAq" j":    j 	  (P
 G
  
j :    Atj Atj 6  Aj!


   6
 Aj"A!O

   jAj  
"AvA q"AtjA E

  jAE

   AqAtj"(,!
  6,

 Aj"A!O
   
!
   6

  A t"k   k K !	A t!  j!
  j!    (X 
j6X 
AqAl!
  
AvA q"
j"-  !B !A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq Aq#!  
Atj!A !@@ E Pr
   jAq"@ AO
  Atj( " 	I
  Atj 6  Aj! Ak!

-- Chunk 31 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4501-4650
 B} !


A ! A A AkAq" j":    j 
:      (
" Aj6
  Atj  6  Ak!
 Aj!
A! @  F@  !


   Atj( "M
  	I
@  O@  j"  jAk(     
j(  G
   

  j"Aj" 
K
	 (   (  G
 
   
 Aj
"  M
   k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AK@  (AM
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A? 
-  AkA?q" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
  Atj!A !
 B A?q !A !@@ E Pr
   jA?q"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A? AkA?q" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  

-- Chunk 32 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4651-4800
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AK@  (AG
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
 As Aq"!  Atj!A !
A !@@ E Pr
   jAq"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A AkAq" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I

-- Chunk 33 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4801-4950
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  ("AO
  (!   ("k!  (!  (!  (
!  (!  )P!  ($!  ((!  (\!@  (E@@   (
"kAI
  A j"   K! Aj!
 Aj"	A!I!
@  G@ 
E
   
j 	  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!	  (\!
  ($Aj"A!I!
 !@  F
 
E

 
  j   )P
"
AvA q"AtjA E
  	jAE
   AqAtj 
6, Aj!
 
 
  K
  ("Aj!
  ((!
  (\!  ($Aj"	A!I!
@  G@ 
E

   
j 	  )P
"AvA q"AtjA E
  
jAE
   AqAtj"(,!  6, 
 AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


   6
 Aj"A!O

   jAj  
"AvA q"AtjA E

  jAE

   AqAtj"(,!
  6,

 Aj"A!O
   
!
   6

  A t"k   k K !	A t!  j!
  j!    (X 
j6X 
AqAl!
  
AvA q"
j"-  !B !A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq Aq#!  
Atj!A !@@ E Pr
   jAq"@ AO
  Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


A ! A A AkAq" j":    j 
:      (
" Aj6
  Atj  6  Ak!
 Aj!
A! @  F@  !


   Atj( "M
  	I
@  O@  j"  jAk(     
j(  G
   

  j"Aj" 
K
	 (   (  G
 
   
 Aj
"  M
   k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   

-- Chunk 34 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:4951-5100
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AF@  (AM
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A? 
-  AkA?q" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
  Atj!A !
 B A?q !A !@@ E Pr
   jA?q"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A? AkA?q" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  

-- Chunk 35 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:5101-5250
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AF@  (AG
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
 As Aq"!  Atj!A !
A !@@ E Pr
   jAq"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A AkAq" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

-- Chunk 36 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:5251-5400

~# Ak"$ @@@@@@@@@@@@  (AF@  ("AO
  (!   ("k!  (!  (!  (
!  (!  )P!  ($!  ((!  (\!@  (E@@   (
"kAI
  A j"   K! Aj!
 Aj"	A!I!
@  G@ 
E
   
j 	  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!	  (\!
  ($Aj"A!I!
 !@  F
 
E

 
  j   )P
"
AvA q"AtjA E
  	jAE
   AqAtj 
6, Aj!
 
 
  K
  ("Aj!
  ((!
  (\!  ($Aj"	A!I!
@  G@ 
E

   
j 	  )P
"AvA q"AtjA E
  
jAE
   AqAtj"(,!  6, 
 AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


   6
 Aj"A!O

   jAj  
"AvA q"AtjA E

  jAE

   AqAtj"(,!
  6,

 Aj"A!O
   
!
   6

  A t"k   k K !	A t!  j!
  j!    (X 
j6X 
AqAl!
  
AvA q"
j"-  !B !A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq Aq#!  
Atj!A !@@ E Pr
   jAq"@ AO
  Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


A ! A A AkAq" j":    j 
:      (
" Aj6
  Atj  6  Ak!
 Aj!
A! @  F@  !


   Atj( "M
  	I
@  O@  j"  jAk(     
j(  G
   

  j"Aj" 
K
	 (   (  G
 
   
 Aj
"  M
   k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AI@  (AM
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   (P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 

-- Chunk 37 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:5401-5550
 AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A? 
-  AkA?q" j":    j 	  (P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
  Atj!A !
 B A?q !A !@@ E Pr
   jA?q"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A? AkA?q" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AI@  (AG
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   (P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A 
-  AkAq"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


-- Chunk 38 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:5551-5700

 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A 
-  AkAq" j":    j 	  (P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
 As Aq"!  Atj!A !
A !@@ E Pr
   jAq"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A AkAq" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  ("AO
  (!   ("k!	  (!  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 	  (
"kAI
  A j"   K!
 Aj! Aj"
A!I!
@  
G@ 
E
   j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 
  (P
 G
  
j :    Atj Atj 6  Aj!


 	A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!
  (\!
  ($Aj"
A!I! !@  F
 E

 

-- Chunk 39 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:5701-5850
  j 
  (P
"
AvA q"AtjA E
  
jAE
   AqAtj 
6, Aj!
 
 
  	K
  ("
Aj!  ((!  (\!  ($Aj"
A!I!
@  	G@ 
E

   j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    
j 
  (P
 G
  
j :    Atj Atj 6  Aj!


   	6
 Aj"A!O

  	 jAj  
"AvA q"AtjA E

  jAE

   	AqAtj"(,!  6,

 Aj"A!O
   
!   	6

  	A t"k  	 k K !
A t!    (X j6X AqAl!  AvA q"
j"
-  !
B !A!@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq 
Aq#!  
Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 
A A 
AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!A! @  F@  !


 	  Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
  	 
k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  (AM
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P

-- Chunk 40 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:5851-6000
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  	Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A? AkA?q" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  (AG
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!

-- Chunk 41 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6001-6150


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq"!  	Atj!A !A !@@ E Pr
   jAq"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  ("AO
  (!   ("k!	  (!  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 	  (
"kAI
  A j"   K!
 Aj! Aj"
A!I!
@  
G@ 
E
   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
  
j :    Atj Atj 6  Aj!


 	A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!
  (\!
  ($Aj"
A!I! !@  F
 E

 
  j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj 
6, Aj!
 
 
  	K
  ("
Aj!  ((!  (\!  ($Aj"
A!I!
@  	G@ 
E

   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    
j 
  )P
 G
  
j :    Atj Atj 6  Aj!


   	6
 Aj"A!O

  	 jAj  
"AvA q"AtjA E

  jAE

   	AqAtj"(,!  6,


-- Chunk 42 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6151-6300
 Aj"A!O
   
!   	6

  	A t"k  	 k K !
A t!    (X j6X AqAl!  AvA q"
j"
-  !
B !A!@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq 
Aq#!  
Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 
A A 
AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!A! @  F@  !


 	  Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
  	 
k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AF@  (AM
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  

-- Chunk 43 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6301-6450
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  	Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A? AkA?q" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AF@  (AG
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq"!  	Atj!A !A !@@ E Pr
   jAq"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A AkAq" j":    

-- Chunk 44 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6451-6600
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AF@  ("AO
  (!   ("k!	  (!  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 	  (
"kAI
  A j"   K!
 Aj! Aj"
A!I!
@  
G@ 
E
   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
  
j :    Atj Atj 6  Aj!


 	A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!
  (\!
  ($Aj"
A!I! !@  F
 E

 
  j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj 
6, Aj!
 
 
  	K
  ("
Aj!  ((!  (\!  ($Aj"
A!I!
@  	G@ 
E

   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    
j 
  )P
 G
  
j :    Atj Atj 6  Aj!


   	6
 Aj"A!O

  	 jAj  
"AvA q"AtjA E

  jAE

   	AqAtj"(,!  6,

 Aj"A!O
   
!   	6

  	A t"k  	 k K !
A t!    (X j6X AqAl!  AvA q"
j"
-  !
B !A!@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq 
Aq#!  
Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 
A A 
AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!A! @  F@  !


 	  Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M

-- Chunk 45 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6601-6750
  	 
k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  (AM
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 	  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  	Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A? AkA?q" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  

-- Chunk 46 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6751-6900
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  (AG
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A 
-  AkAq"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 	  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq"!  	Atj!A !A !@@ E Pr
   jAq"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~@@ AqE@AT!  Aj"B |BB|B|T
   ;   Aj"Ak ;  AI@A t"Av Av" jAj!
   A Atj! Aj!

-- Chunk 47 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:6901-7050
  Atj!
 A ; A! Ak"
! @@@  
M@@  Ak"	At"j. "AF@  Atj  j/ Aj;    
j 	:    Ak! 

 A H
  Atj  j/  Aqj";  Aq G

 Aj!


  
Atj Aj; @@@   
G@A !A !

  
j!	A !A ! @  
G@  Atj. !   	j" (A!@  NE@  j ( Aj!


 A H
 B|! Aj!   j! 


 E
 
At!A !A ! @A !   OE@@ AFE@ 
  
l j 
qj 	   jj-  :   Aj!


  Aj!   j 
q!


A !  E
A A A A#  
@@  
G@A !  Atj. "	A  	A JAq!	@  	F
  
j :  @  
j 
q"  K
 
 Aj!
 
 
A !  E
A A A A#  
 Aj!
 
 
A A A A#  
A A A A#  
A A A A#  
A A A A#  
A A A A#  
A A A A#  
@@   F@@ At k"Aj!
A !A ! A !@  I
@@@@  Atj. "Aj 
  Atj 
6

  Atj" 6  A H
   Ak6   Aj! 

 AL
  Atj"   k6    Akk"At  tk6   j! 
 Aj!
 
 
    
j-  Atj" / "Aj;   Atj   j;   Aj! 


A A A A#  
A A A A#  
 
@@  ( j"E
   ("  (
"  K!@@  F
  (  A
lj"( (j" K@   6

   Aj"6  K!  k! 
 
 E

  G

  A 6

	@@@@@  (AI@  ("(Ak"
A!O
A    ("	k"A  ("
t"k"  K!  (" A  (t"k   k K  (! 	  (
"
j!A  (t! Ak!  (d!
  (
"   K!A 
tAs!  
At!
  (\!
  (! (\!  ("A!I!@@@  F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak! Aj! 
  Atj!A!@ E
 ( " I
  
I
@  	j"  jAk(    j(  G
     "  M
   k"E
  Aj6   !   j F

  M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
 ! 
@@ AI@ ( !	 (!
 (
!
A !@ AG@ Aj!


 A AI!  
 
jk 	j!
  
AtA
rj( "Av! (d!A !@@@@  G@   
jAtj( "E

-- Chunk 48 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7051-7200
  
I
  
j"Aj" 	K
@ (   (  G
     	 Aj"  M
  
 k" E
   Aj6  "  j F

 Aj!


 Aq"  k"  K!A !A !@@@  F@@@  F
  Atj( " 
I
   
j"Aj"
 	K
@ (   (  G
   
  	 Aj"  M
  
 k" E
   Aj6  "  j F


 Aj! Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
  !
 
A A AA  
	@@@@@  (AK@  ("(Ak"A!O
A    ("
k"	A  (t"k"  	K!  (" 	A  (t"k  	 k K  (! 
  (
"
j!A  (t! Ak!  (d!  !  (
"   ("k"  K!
 At!A  (tAs!  (\!
  (!  (d!  ("A!I!@@@  
F
 E
   qAtj 
  j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A!@ E
 ( " I
  
I
@  
j"  jAk(    
j(  G
     "  M
  	 k"E
  Aj6   !   j F

  M
 Ak!   qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
 ! 
@@ AI@ (\!
 ( ! (!
 (
!A !@ AG@ Aj!


 A AI! 	 
 
jk j!
 
 AtA
rj( "Av!	 (d!A !@@@@  G@ 
  jAtj( "E
  I
  
j"Aj"
 K
@ (   (  G
   
   Aj"  M
  
 k" E
   Aj6  "  j F

 Aj!


 Aq"  k"  K!A !A !@@@  F@@@  F
  	Atj( " I
   
j"Aj" K
@ (   (  G
      Aj"  M
  
 k" E
   Aj6  "  j F


 	Aj!	 Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
  !
 
A A AA  
	@@@@@  (AF@  ("(Ak"
A!O
A    ("	k"A  ("
t"k"  K!  (" A  (t"k   k K  (! 	  (
"
j!A  (t! Ak!  (d!
  (
"   K!A 

-- Chunk 49 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7201-7350
tAs!  
At!
  (\!
  (! (\!  ("A!I!@@@  F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak! Aj! 
  Atj!A!@ E
 ( " I
  
I
@  	j"  jAk(    j(  G
     "  M
   k"E
  Aj6   !   j F

  M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
 ! 
@@ AI@ ( !	 (!
 (
!
A !@ AG@ Aj!


 A AI!  
 
jk 	j!
  
AtA
rj( "Av! (d!A !@@@@  G@   
jAtj( "E
  
I
  
j"Aj" 	K
@ (   (  G
     	 Aj"  M
  
 k" E
   Aj6  "  j F

 Aj!


 Aq"  k"  K!A !A !@@@  F@@@  F
  Atj( " 
I
   
j"Aj"
 	K
@ (   (  G
   
  	 Aj"  M
  
 k" E
   Aj6  "  j F


 Aj! Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
  !
 
A A AA  
@@@@@  (AI@A    ("	k"A  ("t"
k"  K!
  (" A  (t"k   k K  (!  (
"   K!
 	  (
"j!A  (t!A tAs! 
Ak!  (\!
  (!  (!  (d!
  ("A!I!@@@  
F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A! @ E
 ( " I
  I
@  	j"  jAk(     
j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
@@@@@ AI@ ("A!O
A  ( "	 ("
k" A (t"
k"
   
I!
   k! 
Ak!
 (
! (d!
 (\  Atj!@ E
 ( " I
  
j" Aj" 	K
@  (   (  G
     	 Aj"  M

-- Chunk 50 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7351-7500
    j"M
  k"E
  Aj6   !   j F

  
M
 Ak! 
  
qAtj!
 
 
A݈A AA0  
A A AA0  
A A AA0  
A A AA0  
 ! 
  
A A AA  
@@@@@  (AK@A    ("	k"A  ("t"
k"  K!
  (" A  (t"k   k K  (!  (
"   K!
 	  (
"j!A  (t!A tAs! 
Ak!  (\!
  (!  (!  (d!
  ("A!I!@@@  
F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A! @ E
 ( " I
  I
@  	j"  jAk(     
j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
@@@@@ AI@ ("A!O
A  ( "	 ("
k" A (t"
k"
   
I!
   k! 
Ak!
 (
! (d!
 (\  Atj!@ E
 ( " I
  
j" Aj" 	K
@  (   (  G
     	 Aj"  M
    j"M
  k"E
  Aj6   !   j F

  
M
 Ak! 
  
qAtj!
 
 
A݈A AA0  
A A AA0  
A A AA0  
A A AA0  
 ! 
  
A A AA  
@@@@@  (AF@A    ("	k"A  ("t"
k"  K!
  (" A  (t"k   k K  (!  (
"   K!
 	  (
"j!A  (t!A tAs! 
Ak!  (\!
  (!  (!  (d!
  ("A!I!@@@  
F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A! @ E
 ( " I
  I
@  	j"  jAk(     
j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
@@@@@ AI@ ("A!O
A  ( "	 ("
k" A (t"
k"
   
I!
   k! 
Ak!
 (
! (d!
 (\  Atj!@ E
 ( " I
  
j" Aj" 	K

-- Chunk 51 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7501-7650
@  (   (  G
     	 Aj"  M
    j"M
  k"E
  Aj6   !   j F

  
M
 Ak! 
  
qAtj!
 
 
A݈A AA0  
A A AA0  
A A AA0  
A A AA0  
 ! 
  
A A AA  
@@@@@  (AI@A    ("	k"A  ("t"k"  K!  (" A  (t"k   k K  (!  (
"   K!
  ("  (
"
j!
 	 
j!A  (t!A tAs!
 Ak!  (\!  (!  (d!  ("A!I!@@@  
F
 E
   
qAtj   	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj!
   Atj!A! @ E
 ( " I
@  
O@  	j"  jAk(     
j(  G
   

  j"Aj" 
K
 (   (  G
 
   
 Aj
"  M
   k" E
   Aj6  "  j F

  M
 Ak!   qAtj!
 
 
A A AA   
A A AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AK@A    ("	k"A  ("t"k"  K!  (" A  (t"k   k K  (!  (
"   K!
  ("  (
"
j!
 	 
j!A  (t!A tAs!
 Ak!  (\!  (!  (d!  ("A!I!@@@  
F
 E
   
qAtj   	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj!
   Atj!A! @ E
 ( " I
@  
O@  	j"  jAk(     
j(  G
   

  j"Aj" 
K
 (   (  G
 
   
 Aj
"  M
   k" E
   Aj6  "  j F

  M
 Ak!   qAtj!
 
 
A A AA   
A A AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AF@A    ("	k"A  ("t"k"  K!  (" A  (t"k   k K  (!  (
"   K!
  ("  (
"
j!
 	 
j!A  (t!A tAs!
 Ak!  (\!  (!  (d!  ("A!I!@@@  
F
 E
   
qAtj   	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj!
   Atj!A! @ E
 ( " I
@  
O@  	j"  jAk(     
j(  G
   

  j"Aj" 
K
 (   (  G
 

-- Chunk 52 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7651-7800
   
 Aj
"  M
   k" E
   Aj6  "  j F

  M
 Ak!   qAtj!
 
 
A A AA   
A A AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AI@A    ("
k"A  ("t"k"  K!
  (" A  (t"k   k K  (!
  (
"   K!	A  (t!A tAs! Ak!  (\!  (!  (
!  (d!
  ("A!I!@@@  	F
 E
 
  qAtj   
j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!	   Atj!A! @ E
 ( " 
I
  I
@  
j"  jAk(     	j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AK@A    ("
k"A  ("t"k"  K!
  (" A  (t"k   k K  (!
  (
"   K!	A  (t!A tAs! Ak!  (\!  (!  (
!  (d!
  ("A!I!@@@  	F
 E
 
  qAtj   
j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!	   Atj!A! @ E
 ( " 
I
  I
@  
j"  jAk(     	j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AF@A    ("
k"A  ("t"k"  K!
  (" A  (t"k   k K  (!
  (
"   K!	A  (t!A tAs! Ak!  (\!  (!  (
!  (d!
  ("A!I!@@@  	F
 E
 
  qAtj   
j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!	   Atj!A! @ E
 ( " 
I
  I
@  
j"  jAk(     	j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
(  E@A&A AA   
 AF  A Gq
4A!  Aj"O   At j>  Aj   A

  A  ( " AtAj!@@ @  j!@  O@@  "Ak!   Atj( E
 
  6 A !A !@  K
  Atj( "     K! Aj!
 
 

-- Chunk 53 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7801-7950
   -  "I
  Atj" ( Aj6  Aj!
 
 
 A 6 
 
A:A A A>  
PA( "  AjA|q"j! @ A    M
   I@  E

A  6  
AA06 A
>   /  "6
   Aj"6  A t6    A AktA Atj6
     ,  &
   A,!  @   (  Atj6    (  j6
@ ($E
   (("M  OqE@  A 6$

    (( k6(
   (  Atj6    ( " Atj6@  ( kAuF@  (
 (
F
AA AпA,  
    (  j6

    ( j6    ( j6    ( j6
     ) B 7 

     
  AF@  9
  ) 
 E@A
@  ("@  ("E
   ( " GrE@  (
!A!  (

   6    (
"6    k"6
    k6 !  kAM   6  

!    j"6    jM  j MrE@     k"    J6
 
A A AؑA;  
A A AّA;  
# Ak"$   (
!  (!
  ("
 !  (!   (
6|  (!  (!
 A 6x B 7p AI! 
AF!
  A j!  
j!  j!@  ("@  (6`  )7X  ) 7P

 A 6` B 7X B 7P
 A !AA 
! Ak! B 7d A 6l A jA     A A k!   Fj! !
@@@@@@@@@@@@@@  I@     A j     
k"
E   6@ A j  A@k  k  k (@"
@A !@ AFE@ 
 At"j  j( 6 Aj!


 
 
6
 
A 6 
 
 A5"6    
AkAtj"("I@ ( !A !

 A N@A!A  A5!@@@@@@  F@@  j!A ! !@  
G@  Atj"(! ( !	@  M@ 	! AM
 Ak!  (AF@ + AtjA j

  (  (| Atj( +k  (j  E"Aj-  jAtj  (x Atj( +kA3j
! 
 A
lj" 
6
  	6  6   j6  Aj!


 Aj!


 Ak!A!	@@  	I
  	A F
A! 
 	AkA
lj"(E@ (
Aj!
 (  	 j"
Ak Aj  A5j Ak A5k"
AN
@@ 
 	A
lj"(  
H@ 	 ("I
 E
 A@k 
 	 kA
ljAj ( (
E  (H6  )@7

 A 6  6
 A 6  
6 
  )7  (6
@ 
 K
   	F
 ( "A H
	A !
 ("A G! E@ (
!

A  A5!     A j 
  Aj    6@ A j  A@k 
 k  
k (@"E
   AkAtj"
(" K  	jA Or
  j!
A !@  F
  Atj"(! !
 @ Ak( Aj!

 ( !
  	j!@  
O@ 
! AM

 Ak!  	j!  (AF@ + AtjA j

  (  (| Atj( +k  (j  E"Aj-  jAtj  (x Atj( +kA3j
 
j!@  O@  
 A
lj( N

    K!@  FE@ 
 Aj"A
ljA6 


 

-- Chunk 54 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:7951-8100
 A
lj" 
6
  
6  6  6  !
 Ak! Ak!


 Aj!
 
 
 	Aj!	


 
 A
lj"(
!
 (! ( ! (!  (6x  )7p  )7(  )70  (68  ) 7 A !  A j"
M

  
k"A O



 
 A
ljA6  Aj!




A A AA   
A A AA   
A'A AՇA   
A A AA   
A A AA   
A A AA   
 Aj!

 Aj$   
k
A ! 
( !A  	 (A  (

k" A K!
 
(E@@ @ A@k 
 A
ljAj  
E  (H6  )@7 

  
 A
lj")7   (6
 AO
 
 Aj"
A
lj" 
6
  6  6  6   )p7  (x6 
!@ @  
 A
lj"Aj( 6  )7  )7  ) 7  !	 
 Ak"A
lj" (6  )7  )7  ) 7 A   	k"  K!


@  
M@ 
 A
lj"(
! ("	E@  
G
  
j

  
j" K
   
 (" 	 (
 ( ( kAuM
 ( "
AO
	 (
" j ( 
jK
@  M@  
 AI
 (
"Aj"
 
Aj"kAkAaO

 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


  
  	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	AM

 	Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 
  	jj"

! Aj!


 A


A A AA   
A A AA   
A A A׈A   
A A A܈A   
A"A AA"  
A A AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
A A AA   
lAV!@A   ( 6E
 A   (6E
 A   (6E
 A   (
6E
 A   (6E
 A   (6E
 A AVA   (6!
 
K@  ( "A   kAq"O   j"Aq
  kA 

-- Chunk 55 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:8101-8250
6  
A A A A   
CA! AqA ( AM@     A 
 A6       H


~@@@@@@ A5I@ A j! Aj!  Aj!
A AktAu!A !A!A t"
Ak"
!	@  G@@  At"j/ "
AF@ 
 	Atj 6 	Ak!	A!

 
AtAu"A H
 A  
 H!
  j ;  Aj!


   6   6  
Av 
AvjAj!
A !@ 	 
F@A !@  G@  Atj. !   j"	 (A!@   J@  	j ( Aj!


  A H
 B|! Aj!   j!


 E
 
At!A !A ! @A !   
I@@ AG@ 
  
l j 
qAtj    jj-  6 Aj!


  Aj!   j 
q!


A ! E
A A AA
  
A ! @  G@A !  Atj. "A  A JAq!@  G@ 
  Atj 6@   
j 
q"  	K
 
 Aj!


 Aj!


A !  

@  
G@  
 Atj" ("Atj" / "Aj;     k":     t 
k;   j-  "AF
   :     Atj( 6 Aj!




A!A AA
  
A A AA
  
A A AA
  
A A AA
  
A A AA
  
A A AA
  

   j!@@ AN@   k"AyH

@   O
   -  :    Aj!  Aj!
 
 
@ A k"  I AoKrE@      k"AN@  Aj!  !@   Aj  Aj A j"  A j"  I
 

  j!

  !
@  O
  -  :   Aj! Aj!
 
 

#   AO@A܁A A٭A.  
AA  
      B~
-   Akq@A A AA&  
   jAkA  kq
   A@q
"  (!  (!
  (\!
  (!  (  (   ("
k" j  ("  (
"	O@      
   	 	 I"j!
 
 j!  j! 
 
EjAj!   j"Ak! ( " A     k"I"	!
A    	!
 (" A    I"!	A    !! 
Aj!# A k! A!I!$ Ak! ! @@@@@@@@@@@     j"Aj"K@ $E
  Aj!@@@@  
   !
  

   !
  

   !
  

   !
  
!
  Aj!  
 
 
Atj( " I! 
 
j!%  !  !@  
  " %k"K"&!" 
E  kAIrE@  "j(  

 (  As
!' 
 
Atj  
k"6  ' (  F@  "j" F  Fr
AA Ak-   Ak-  F"
!  
k!  
k! 
  &!A!

-- Chunk 56 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:8251-8400

  O@  j(  

 (  As
 (  F@ !

 
 
Atj"( " I!@@@@  
  

  

  

  
!
  
 !   
k"6   O@  j(  

 (  As
 (  F@ 
!
 !

 ! 
 
Atj( !@@@@  
  

  

  

  
!
  j!   j"M@ Aj! Aj!
  
  I! !  I
 

  
 
 
6   	 
 ! 
 ! 
 	6   k
A A AA  
A A AA   
@  k"
@ 
   I"!   ! 
Aj!  j!A!@  M   Or
 Ak"-   Ak"	-  G
 Aj! 	! !
 
 
A A AA   
 ! 
!	 
!

@@@@ @  j  j   ! (
 ( ( kAuM
 ( "
AO
 (
"   k"j ( 
jK
  K
	@  M@    AI
 (
"
Aj"  Aj"kAkAaO
   A!H
  
j! 
A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   6    ;  j"AM
 Ak"AO@ ($

 A6$    ( kAu6(
   ;   Aj6  j"  K@ 
 
Atj  
k6 
   K
  #j" M
 Aj! 
@@@@  
 
  Atj 6   Ak" 

 
  Atj 6   Ak" 

 
  Atj 6   Ak" 

 
  Atj 6   Ak" 
Atj  
k6 @ 
! 	!
   K
  
   
k" 
k" I" j!	 
E  AsjAIr
 	(    (  G
  Aj 	Aj  
   !	 (
 ( ( kAuM
 ( "AO
 (
" ( jK
	   K
 	Aj!@   M@   

      	
 ("A6  A ; AM

 	Aj"	AO@ ($

 A6$   ( kAu6(
  	;  Aj6 
@@@@  
   

   

   

   
Atj 6    j!  !	
 
 

-- Chunk 57 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:8401-8550
A A AA   
A A A A
  
A=A AA"  
AA AA   
 
!	 !



A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
  (!
  (!  (d!  (\!@@@@@@@@@  (
"	  (  (  j"
  ("
k  ("K@  (" 	  	 K"j! 
 j!  j! 
Ak! 
A k! Ak!
 ( !	 (! 
A!I! Ak!@ ! @@@@@@@@   I@ E

@@@@  
   


   


   


   

! A!O

  Atj"( !    Atj"( !
    
k"6   6 @ 	 Aj" kK
  
  	k"kAI
   
  I" j"(    Aj"(  G
   Aj Aj 
  
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E



@ 
 M
   
 
 I" 
j")    )  R
   Aj Aj 
  
  Aj!   !  
k!  !@@  M  Or
  Ak" -   Ak"-  G
  Aj!  !


 E
 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ 	! !	

 	! !	 ($E



@  M
   
  I"
 j"
(    (  G
    Aj" Atj"( !  6 @  M
   
  I"
 j")   )  R
   A	j Aj 
  
 
 Aj!   
!  k!@  M  Or
 Ak" -   Ak"-  G
 Aj!  !
 
 
  Aj 
Aj 
  
 
 Aj!   
!  k!@   M  
Or
  Ak"-   
Ak"
-  G

-- Chunk 58 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:8551-8700
 Aj! ! 
 
 
   kAu  jAj! 


  6  	6  
 k
A A AA   
  !
 E
 (
 ( ( kAuM
 ( "AO
	 (
"   k"j ( jK
  
K

@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ 	! !	

 	! !	 ($E
 

 A6$    ( kAu6(
   ;   Aj6  j" K
  
 Aj" j" Atj  6   Ak" Atj  
k6  @@@@  
   
Atj  6  Ak"  


   
Atj  6  Ak"  


   
Atj  6  Ak"  


   
Atj  6  Ak"  

Atj   
k6 @ 	!  !	  K
  
  
k" 	k" I" j! 
 kAI 	  kKr
 (   (  G
 Aj Aj 
  
  ! (
 ( ( kAuM
 ( "AO
 (
" ( jK
	  
K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 @@@@  
  


  


  


  

Atj 6    Atj 6   j!  !
 
 
A A AA   
 	!  !	
 
 
      
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
+   Aj" v"AO    A 

   AG

   (  (
j

    ) 7    (6    F
@  (
"E
   ( O
    ("O@  K@    ko
    
@  ( K
   (" M
   k"AI
  ( "@  At jAk( M AKr

  (
" @  Atj 6  ( Atj  Aj6   ( Aj6 

A A AA1  


  / " (j"6   AtAj(  ( A  kvq6 @ A K
  (" (O@ 


  (
"F
     k Av"  k I"k"6   Atk6  (  6 
   Aj6
 @@A   6@   |@ E
 A
l  AtjAj

 A(l  AtjAj

-- Chunk 59 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:8701-8850
( " E
  
AրA AA   
A%A AA   
A A AA   

  ( !  A A,    /
  @     
  

   A O@  Aj
  Aj-  
# Ak"
$  
 6
 	 
A
j   	HA !@@@@@   
 
(
"  K
   	  !

  A~qAG
   	 
(
!
 
  j! @   K@ !	 @  -  j!	
 Aj!  	-  j!


 Av

AA AҜA<  
 A
l
!  
Aj$   
a   /"6    /"Aj6@ ((  ( kAuG
 @@ ($Ak 
   Ar6 
   Aj6

 @@@@@@@@@  
 A 6 A ;   Aq";  AtjB 7A !A 
 
A
  
 
A 
  	 
 
 A n" A   
   !   Ak"j-  Atj"( "	AO@  	Ak6  !
 AM
      "
 A H
      "
     A jAn"    
A A AA?  
   -  :  A!
 
A A AA?  
A$A AA?  
  F@  A 6  	E AKr
@@@@@@@@ 
AM@ 	E
 
E
A  ( AF AIq
A
 
k tAv K
	  Akv M

	
A!
A! 	@    !
  ( @   !

# Ak"$     "    "E@ A jA   !
 Aj$  !A !A !@ @@  O@  Atj( " O
 A At"
 n"
  
K 
 AtAj(  lj! Aj!


 Av

A A AA  
A(A AA  
!@ 	E
  
  ( AG
  


 
 At j"AO
  I  
KrE@ 	
	A A AA=  
  
O@A 
E
A A AA=  
  O

  A6 A

A A A՗A=  
A A AA=  
AA AA=  
A A AA=  
AA AA=  
AA AA=  
  A 6 A 
A k!A !@@@  M@A   Atj/ " AFAtAu t"E
 AO
 AtAj(   Atj( l j! Aj!


 Av
A A AA  
A A AA  
# Ak"$    A!@   / K
  (
"AtAj!	A !  (!
@   M@ 
  Atj("AvAj"AtA t k AtjAt vk!   Atj( "@  	O
  l j!
  Aj! 


 Av!
 Aj$  
2 A  6E@AA AƌA&  
   AkA AKvAj
A!  AKAA AKj" j"O@@@@@ Ak 
   AtArAq0

   AtA
r%

A A AA
  
   At:  

-- Chunk 60 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:8851-9000
   j   A

@  k"AJ@@  N
  "  J! Ak!   Atj"( !@  G@    Atj"( I@   Aj"Atj 
 Aj!


   Aj"Atj   k  kH@    Ak Aj!   Aj  Ak!

 
 
   Atj! A  A JAj!A!@  F
  Atj" (!  ( ! !@@ A L@A !

  Ak" Atj"(  O
   Atj ) 7   !


  Atj"  6   6  Aj!
 
 


# Ak"
$  
 6
  
A
j!A 
(
A&I
 AR AK
  Aj"! A A A jA A!	 Aj!@@@  G@  Atj( "AO
 	 Atj" / Aj;  Aj!


 	/E@A!A !@@@ @ 	 Ak"Atj"
 
/  j"; 
 ; 
@A !@  G@  Atj( "
At 	j" /"Aj;  O
  Atj" :   
6  Aj!


AAj!@ AM@ 	 Atj"/ / "k"AN@  O
  AtjA  Ak
 Aj!


A! A AK!A!@@  F
 At! Aj!  j"(  Ak( M
 
A !
 E




A A A A  
A A A A  
AA A A  
A A A A  
A A A A  
 !@ "Ak!  Atj( "E
 
   Atj"(  j6 A;  AtjA; Aj"A AJAj!	A!@  	G@  AtjA6  Aj!


 AkAx6  Ak!A!A!@  	G@  Atj    Atj( "
  Atj( "
I"k"
  
 
Oj"
  
Atj( "
  
Atj( "I"Atj"(     Atj"( j6   ;  ; 
 k! 
 
 Oj! Aj!


  AtjA :  Aj! AL A A NAj!A !@  G@  Atj"  /Atj- Aj:  Aj!


   Atj"  /Atj- Aj:  Ak!


"
!A !# A@j"
$ @ A
 "  Atj- "O
 A  k"	t! !@  Aq"
O@@  AqF@  Ak"Atj- !


  AkqE@  	u"	A J@ 
AA8!
 ! !@ A H@@@@@ 	A L@ 
(!

 	Aj"A G! !@@ "AO@ Ak! 
 Atj( "AÇF
 
 Atj( "AÇF
  Atj(   Atj( AtK



 
 Atr( AÇG@ !

 ! E

 A
 A
K!@@  G@ 
 Atj( "AÇG@ !
 Aj!

 

 
 Atj( "AÇF

  Atj" - Aj:  
 Ak"Atj"  ( " AÇF6 A t 	j!	 
 Atj  Ak"AÇ  Atj-   kFAÇ
6 


@@ 	E
 AÇG@  Aj"Atj" - Ak:  	Aj!	

 !@ "Ak!  Atj-  F
 
  Aj"Atj" - Ak:  	Aj!	 A N
 
A A A A  
 !

A A A A  
A(A A A    Atj- " I@ 
  kAtj 6  !
 Ak!

 

-- Chunk 61 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9001-9150
 
A A A A  
A A A A    Atj :   jA  
ktj!  Ak"Atj- !

 
 
 
A@k$ A A
K
 A !# A@j"$  A ;8 B 70 B 7( B 7  A ; B 7 B 7 B 7  
A 
A NAj!A !@  F@ !@ A L@A ! Aj"A  A J!  Aj!A !@  F@@  G@   Atj"( Atj" / "Aj;    Aj!


   6  A@k$    Atj"- Atj -  Aj!


  At"j ;  Ak!  A jj/  jAqAv!


 A j  Atj- Atj" / Aj;  Aj!


 
!  
Aj$   
?@  ( ""@  v
   A  kt r6 

A A A A:  
#  A
O@A A A A  
   6 
# Ak"
$  
 6
  
A
j!A!@ 
(
AI
 AR! AK
  Aj! A :  Aj"A AK!
 Aj!A!@  
F@ Aj!A !@  G@  j  Atj(  j-  :   Aj!


  Aj!
 Ak!
# Ak"$  A6
 A
6  A
j!A!@ (
AI
 A ! AI
 A! Aj" Aj  ~" F
 A ! AF
  Aj"	A  (""
   A "
  
 
 	  
""@ !

  	  
 AjAn"
  
A   j!A ! 
 
j k"	  AvjAjO!
# A@j"$ @ AI
  A(j  	
   jAk"-  !	@ Aq@ Aj"
  	B Aj  Ak-  B A(j 
 Ak"-  I 
@ A(j

 A(j&

 Aj  	B Aj  Ak"-  B
@  I@ A(j" Aj Ak-  I  Aj Ak"-  I 
@ A(j A(j&



 A(j" ( (  ( ($ !
 A@k$  "
  E@A !

  j 
k!
 Aj$  
 AI  AvOrE@   :   Aj!

A! AK
A!  AjAv"M
 Aj!   A j:  A !  jA :  @  M
 Av  j  Arj-    j-  Atj:  Aj!
 
   j  k:   Aj!

 
 
 
Aj$  
 ? At
A!
@@@  j"
   kK
    ( "
kK@Al
 
A L
  
N
   
K  
j"  Kq
    j" k!   
   6 @@   kM@ !

Al!
  	k I
 
 
  k" j" jO@   

   j!  A   k  k!
    A
 
!

 

A/A AA!  
A0A AA!  
   j!   k!@@@@@@@@@ E@   I AjAMq
 AL


 A H
 AN

@   O
   -  :    Aj!  Aj!
 
 
   I
@ AM@   -  :     - :    - :    - :   Aj  At"Aj( j".  Aj( k!

-- Chunk 62 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9151-9300

   

  Aj"  Aj"kAL
 Ak!
 A G!  O@   j!    k"AHq@@   
 Aj!  Aj"  I
 

 
 AkAaO
    AI
  Aj! @   Aj  Aj A j"  A j"  I
 


@   K@  !

   k!@   k"AH q@ !@   
 Aj!  Aj"  I
 


 AkAaO
    AH
   Aj!  !@   Aj  Aj A j"  A j"  I
 

  j!
@  O
  -  :   Aj! Aj!
 
 
AߊA AA
  
A$A AA   
A A AA   
 

A A A A
  
# Ak"$   6|@@@@@@  
 E@A!	

Al!	 -  " K
  Atj( !  j-  !  B 7   A ;  A : 
 AF@A A AA=  
   6
   : 
   6 A!	

 
E@Al!	

A !	 
E 
AHr
A tAj! A !@   M
 A@k!
 
 
Al!	  A j A j  ="
 (x" K
    (|    
   6  !	

A A AA?  
  	6 A !	
 Aj$  	
     AjK@   Aj"6  j!A

 AO@    j" k"Aj"  6  jAk  !A

    Aj"6  j!A 
6   6
   /    - Atr
W  ("@ (  Aj( " Aj( " Aj( "/    /
  A 6  B 7
    BB ~
h    ErA   (
!  (!  8   k"M@  ( K@   6
   6 

A'A AσA   


@@@@@  ($E@  A

 Aq
  (
!  (!  8   j"I
   6
 A?q
 A?q

 
A A AA>  
A#A AA>  
A A AA>  
A A AA>  
 A!@  ("AqE@ Aq
  8@  ($E@  j"  (M

  A: 
A 
   6   6
   6 
A A AA  
A A AA  
4  @A 
 A   AF
    |E

A%A AA?  
 Am!@ AqE@ A H
 Aj!A !@  FE@ Aj!@  FE@   Atj"A  ( " k  I6  Aj!


 Aj! !



A A AA+  
AϊA AA+  
~  AqA G!Bٲ'! A O~   jAk!Bɡ !BӾǫB!B !@    '!   Aj '!   Aj '!   Aj '!   A j" K
 
 B B| B
| B| < < < <Bٲ'
 |    
s# A k"$   j"-  !  )7  )7  ) 7    Aj Atj  B 7   AjA (tAsq:   A j$ 
9@@   M  Mr
   Ak" -   Ak"-  G
  Aj!


 
# Ak"
$  
 6
 	 
A
j   	HA !@@@@@   
 
(
"  K
   	  !

  A~qAG
   	 
(

-- Chunk 63 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9301-9450
!
 
  j! @   K@ !	 @  -  j!	
 Aj!  	-  j!


 Av

AA AA<  
 A
l
!  
Aj$   

   ( Aj(  Aj Aj" ("   (!  (!	  (!
  (  ( kAu!  ("!
  (
 k! (! (! (AF!# Ak"$  A6
@@@@ " (   
  A
j 
  
   (
?! @  ( j!
 A KAA AKj  Aj AIj!

A A AA(  
A!
 Aj$   (  A Aj"A AAA
  AKAA A Kjj  ( 	 A# AjAAAA# j  ( 
 A4 AjAAAA4 j  (j jAj

\  (  ( "kAu!@  FE@   Atj/j!  (( F@ Aj   ($AF!
 Aj!


 
@ AF
   -  Al!@ Aq"@  Aj     j AkG

@  F
   j!A !@@ AK
  j! Aj!  (  F
 


 Aj!
 
 
A 
A
!4~# A k"$ @@@@ AI@ A@k  (6    )78   )70   )7(   Aj) 7   Aj) 7   Aj( 6    Aj) 7 A(j Aj@ AM@  Aj!  (AO@  oA!

    (A!

  Aj"  Aj  ("6   Aj  (6   Aj( @  Aj(   Aj( G

   Aj( k"  Aj( "AjK@     kAk"A AIk6
  Aj"!  Aj( !A !@ AG@  At"jA#j  jA#j( 6  Aj!


@  Aj(   Aj( I@  (AG
AW!  (
  Aj   A#j  (  !  (  (M
A6A AA<  
  Aj"
( AF@ A 6T B 7LAW!  (
   (6H   (6X A j!	A !# A k"$ @@@@  j"'  Aj"( M@ 	(
" 	(I
  	(K
 A?qA G!/A 
(t!( A
j!0@@@  /F
   	(O
  At" N
 '  j"A@k ' kA I" k!  )7  )7  ) 7 Aj @ 
(!
 A  ( ! (!A 
t!A !
@ 
 G@  
Atj"A  ( " k"
 
 K6  
Aj!



 A 6

   ( 0A  !A !# Ak"
$  
 )7` 
 )7X 
 ) 7P 
(
! (
"
! 
A j" @ (! (!
@  I
  
(!
 
(!  
jA   !)  jA   !! A$j!1  j"
Ak!* ("" 
j!# 
A j  
(A  k!2  j!A  
ktAs!3A 
tAt!4@  *I@A ! 
A 6l  2j! 
A j  * k 1 
A j!$ 
(l!+@  +F@  $j!5A !
@@@ 
 +G  
Atj"(" "k!% (!, (!&  K
 (" 4j!6A !A !
A !A !@  6I@@ ( &G
  ( " M
   @   "  
I"
 j" 
 ) 
 
 #" I
 ! ! # 
"-F -     -"
kGr 
  
k  ) ! 
j


   "j"
 
" I
   
 #
!
 
 j" M
  ! !
 
! !
 Aj!



-- Chunk 64 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9451-9600
 
E
 	(
" 	(F@A!
	
 
( ! 	(  A
lj"
  j6 
  k k6 
 % k6  	 Aj6
 ( ! (! 
 
)70 
 
)7( 
 
) 7    , % & 
A j  j" 5M
  $k 
 $j!

 ( ! (!
 
 
)7 
 
)7 
 
) 7 
  , % & 
Aj
 
Aj!

 
    Atj($j" !7  Atj"
 6 
 7B > 
 7 3q"6 (! 
 
)7H 
A@k 
)7  
 
) 78 
   
A8j6 Aj!

 
 

 
 k!
 
Aj$  "E
 !
 A j$  

 	(
" K@ 	(  A
lj" ( .j6 

  G
  .j
!. Aj! !
 
 
A9A AA  
A5A AA  
AA AA  
A A AA  
A9A AA  
"
 A j    (A#j  (  ! (L (TF
A6A AٺA<  
  (@  A
j( " I
  A
j( "E
  (
  A
j"(    A A   (A  (t  ! ( !A!@  (
" Ak"	M
    	Atj"	(  	(rE
  F
   Atj"B 7  B 7 Aj!
 
"E@ A 6P B 7HA!  (
!
A !A !A !@  G@ 
 Atj"	( j! 	( j! Aj!


   jI
 !  (!
# Ak"$   "j! (H!  "(" @  Aj

A  (E
 Aj
( 
!  (" A#j( 6   )#7     K! A k! 
AG! ! @@@@@@@@@@@@@@@@@   G@ 
  Atj"("
 ( 
  !
 
E
  K
  F 
AGr
 Ak"  AjI
  At 
j"A0k( 6  A k( 6  
  Atj( 6 

 (!	@ E@ ( "E
 Aj!

  	E"! ( "@ E@A (  F

A k  (F
A k  (F
 Aj"
 E
 A 
 ( Ak F


A A AA;  
" F
 (@  (P  	jj"6P (! (!
A (t"  j  K"E@A A AA   
AAA AAA 
 AF K Aj I"

 ("   (HkM@A!

 ( (kAu O
 ("AO
 (" 	j ( jK
  	j" K
@  M@   	AI
 ("Aj"
 Aj"kAkAaO

 
  	A!H
  	j!
 A j!@  Aj Aj A j" A j" 

-- Chunk 65 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9601-9750
I
 


    	
  ( 	j6@ 	AM@ (!

 (

 A6  (" (kAu6
  6   	; AM

 Ak"AO@ (

 A6   (kAu6
  ;  Aj6  Aj!    	jj!


 Aj  F@  ( 6  At 
jA k( 6  
  Atj( 6 

   G

  ) 7  
 Atj( 6 
 Aj( "  ) 7#  A#j (6 A! 
 Atj" (" Aj     ("  (Pj6P   j 
 G
   Aj6HA !
 Aj$  


A A AA'  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
A%A AA'  
A
A AA'  
A
A AA'  
"
A ! AjA 6 

 !  (E
  (  ( !  AjA 6     (A#j    !

  (  ( !  AjA 6     (A#j    !
   j k A !
 A j$  
A A AA<  
AA AA<  
A>A AA<  
AA AݺA<  
A A A޺A<  
8  O@A !@  K@A
 At! Aj!   j/ 
 

A

   AnAj
~A!@@ A
 "AI
 AT! A
K
 A!   K
 AA !	  v!
A t!B  !A> k"
B}!A !@@  M@   Atj( "F@A !
@ E@   AtjA ; 

  
M@   Atj 	;  Ak!

  ~" 
""Aq"
AM@  B 
} 
AtAj5  V j!
   Atj ;    Aq" AqK"
!  
 
!
  k!
 Aj!

 

A  k   
Atj". "AuH
A !A ! Al "Ajv!  v!
@  M@@  Atj( "E@   AtjA ; 

@@  
M@   Atj 	; 

   Atj!
  K
 
A; 
  k! Aj!

 
A; 
 Aj!


@A t"	 k"E
    nI@ Al Atn!A !@  M@@   Atj"/ AG
   Atj( "
 K
  A;   
k! Aj!
 Aj!


 	 k!
  Aj"F@A !A !A !@  M@  Atj( "	   	I"	!   	! Aj!


   Atj"   /  j; 

 E@A !@ E
   Atj". "A J@  Aj;  Ak!
 Aj p!
 
 
 A> k"
B 
B}B"| !A !@@  K
    Atj"/ AF@  
!   Atj5 ~ |" 
 k"E
  ; 
 Aj!


AA   M

A 
"E


-- Chunk 66 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9751-9900
 !
 
   j;  

     A

AT A
K
 A AI
  !  Aj" lAjAvAjA O!
 Aj!
 Ak!   "jAk!
A t"Aj!	A!A !  !@@@ 	AH   Or
@@ E@ !  !

      K!  !@@  G@  Atj/ E
 !
  F@ ! 

A t!
@  Aj" M@ 
E  
Kq
   
j" ;    Av! Aj! ! 


@  Aj" M@A t j! Aj! ! 


   k t j! AH@ Aj!

 
E  
Kq
  ;   Ak! Av! Aj!

 Aj!
 
 
A 	  Atj. "   Au"j sk"
A L
  
jA  	As Atj"  Aj"  H  j"  Hk!  AF!   t j! Aj! @  
J@ Au! 
Ak!



 
!	 AH
 
E  
Kq
   ;   Ak! Av! Aj!


A

A 	AG
    K
 
E@A  
K

  ;    AjAmj k


A7A A A   


z ( !  ! @    k"  I!@  FE@    j Atj 6  Aj!


  6   Atj( 
A A AÁA   
+@  FE@   Atj(  j! Aj!


 
    Atj(AjAv
~  A@k( @  (!   @ +

 *
6(
  (
!   @   +6,    ( +60  ($+

   *6,    ( *60  ($*
64
@  (
"@  (" I

  B7
  ("  (  A
lj"(" ("jM@ A   k"  I"M@  B7   o
   ( 6
    j"6    A   k"  Kk"j"6  j" I@   6   o
    jo
A/A AՅA<  
P  (AI@   (  (
jO    A;     AA:A 

A A AA   
P  (AK@   (  (
jO    A;     AA:A 

A A AA   
P  (AF@   (  (
jO    A;     AA:A 

A A AA   
P  (AI@   (  (
jO    A;     AA:A 

A A AA   
P  (AK@   (  (
jO    A;     AA:A 

A A AA   
P  (AF@   (  (
jO    A;     AA:A 

A A AA   
~  !
 ! !A! @ E
  ,  "Aq!@ A H@ A kAv" O
Al!  A k"AK
 Aj!A ! @   O@ !  !
   
j   Avj"-  Av:   
  Arj -  Aq:    Aj! 

 
 
  O
# A0k"$  A6 @   Aj Aj" "@ ! 

AT!  ("AK
  ( "AtAjB A t"AjB||B|B|BV
  Aj! At"  jAj!AR AKA  k Aj"AtB |B|Tr
  Aj!  AtjAj!
A AktAu!A!
A t"Ak"!
@ 	 G@@  	At" j/ "AF@  
Atj 	:  
Ak!
A!

 

-- Chunk 67 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:9901-10050
A   AtAuJ!

   j ;  	Aj!	


  
;  ; @ 
 F@ Av!A !
@  F@  AvjAj"At! A !
A !A !
@A !	 
 O
@ 	AG@   	l j qAtj 
 	 
jj-  :  	Aj!	


 
Aj!
   j q!
 
   Atj. ! 
 
j"  (A!	@  	J@   	j ( 	Aj!	


 B|! Aj!  
j!


 
 
 Av AvjAj!A !	@  G@A !
  Atj. " A   A JAq! @   
G@  	Atj : @  	j q"	 
K
 
 
Aj!



 Aj!


A 	
A !

 
 FA    
Atj"- Atj"   / "Aj;    k" :     t k;  
Aj!




" 
   k!  j!  /@ Aj   $" 
 Aj Aj"   Aj   A !@@@ (
"A K
 @ ( " ((O@ Aj
! 

  ($"F
    k Av"    k I" "k"6    Atk6
  (  6
 AK  r
   
j" Aj Aj" D:    Aj  D: @ (
"A K
 @ ( " ((O@ Aj
!

  ($"F
    k Av"    k I""k" 6    Atk6
   (  6
 E

 Ar!
@@@A!  AK
  
j" Aj AjD:   Aj!A! Aj! (
"A K
@ ( "
 ((I@ 
 ($"F
  
 
 k Av" 
 k I"k"6    Atk6
  (  6

 Aj
AF

 AK
  Aj AjD:  Aj! (
"A K
@ ( " ((O@ Aj
!

 ($" F@AA A I!

    k Av"    k I""k" 6    Atk6
   (  6
A! AG
 
  
j! Aj!

  
j!A! Aj!
   AjD:    j 
k! 

  Aj Aj" D:   Aj  D:  Aj!
 
 
 Aj   $" 
  Aj Aj"   Aj   A !@@@ (
"A K
 @ ( " ((O@ Aj
! 

  ($"F
    k Av"    k I" "k"6    Atk6
  (  6
 AK  r
   
j" Aj Aj" C:    Aj  C: @ (
"A K
 @ ( " ((O@ Aj
!

  ($"F
    k Av"    k I""k" 6    Atk6
   (  6
 E

 Ar!
@@@A!  AK
  
j" Aj AjC:   Aj!A! Aj! (
"A K
@ ( "
 ((I@ 
 ($"F
  
 
 k Av" 

-- Chunk 68 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10051-10200
 k I"k"6    Atk6
  (  6

 Aj
AF

 AK
  Aj AjC:  Aj! (
"A K
@ ( " ((O@ Aj
!

 ($" F@AA A I!

    k Av"    k I""k" 6    Atk6
   (  6
A! AG
 
  
j! Aj!

  
j!A! Aj!
   AjC:    j 
k! 

  Aj Aj" C:   Aj  C:  Aj!
 
 
 A0j$   

  !A !  A A4!A !@   G@   
j"-  "A
K@Al
  Atj" ( Aj6   Aj! A -  tAu j!

 

Al!  E
  Aj"A
K
   6 AA t k""t G
   
j Aj":    Atj" ( Aj6  ("AI Aqr
   Aj6  Aj! 
  

# Ak"$   (
!  (!
  (" !  (!   (
6|  (!  (!
 A 6x B 7p AI!
 AF!  A j!  
j!  j!@  ("@  (6`  )7X  ) 7P

 A 6` B 7X B 7P
 A 
!AA ! Ak! B 7d A 6l A jA     A  A k!   Fj! !@@@@@@@@@@@@@@@  I@     A j     k"E   6@ A j  A@k  k  k (@"
@A !@ AFE@ 
 At"j  j( 6 Aj!


 
 6
 
A 6 
  A 5"6    
AkAtj"("I@ ( !A !	

 A N@A!A  A 5!@  F@  j!	A ! !@@  
G@  Atj"(! ( !
@  M@ 
! AM
 Ak!
  (AF@ 
* AtjA j

  ( A	tA kA3 AKj  (| Atj( *k  (j  
E"
Aj-  jAtj  (x 
Atj( *k
! 
 A
lj" 6
  
6  6  	 j6  Aj!


 Aj!


 Ak!A!
@@@@ 
"
 K
 
A F
A! 
 
AkA
lj"
(E@ 
(
Aj!
 
(  
 j"
Ak A j  A 5j Ak A 5k"	AN
@@ 
 
A
lj"(  	H@ 
 ("I
 E
 A@k 
 
 kA
ljAj ( (
E  (H6  )@7

 A 6  6
 A 6  	6 
  
)7  
(6
 
 K@ 
Aj!


  
F
 
 
Aj"
A
lj(  ( "AjL
  A N@A ! ("	A G! 	E@ (
!
A  A 5!	     A j 
  Aj    6@ A j  A@k 
 k  
k (@"
E
  
AkAtj"
(" K 
 jA Or

  	j!

-- Chunk 69 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10201-10350
A !@  
F
  Atj"(! !
 @ Ak( Aj!

 ( !
  
j!@@  
I
 
! AK@ Ak!	  
j!  (AF@ 	* AtjA j

  ( A	tA kA3 AKj  (| Atj( *k  (j  	E"	Aj-  jAtj  (x 	Atj( *k
 
j!	  O@ 	 
 A
lj( N

    K!@  FE@ 
 Aj"A
ljA6 


 
 A
lj" 6
  
6  6  	6  Ak! Ak! !




 Aj!
 
 

A A AA   
A'A AՇA   
A A AA   
A A AA   

 
 A
ljA6  Aj!

 
 
A A AA   
 Aj!

 Aj$   k
 
 A
lj"(
! (! ( ! (!  (6x  )7p  )7(  )70  (68  ) 7 A !	  A j"M
  k"	A I
A A AA   
A ! 
( !A  
 (A  (

k" A K!	
 
(E@@ @ A@k 
 	A
ljAj  E  (H6  )@7 

  
 	A
lj")7   (6
 	AO
 
 	Aj"A
lj" 6
  6  6  6   )p7  (x6 !@ 	@  
 	A
lj"Aj( 6  )7  )7  ) 7  !
 
 Ak"A
lj"
 (6 
 )7 
 )7 
 ) 7 A  	 
k"  	K!	


@  O@ 
 A
lj"(
!
 ("
E@  G
 
 j

 
 j"
 K
  
  (" 
 (
 ( ( kAuM
 ( "	AO
	 (
" 
j ( 	jK
@ 
 M@   
AI
 (
"Aj"
 Aj"	kAkAaO

 
 	 
A!H
  
j!
 A j!@  	Aj Aj 	A j"	 A j" 
I
 


   
 	
  (
 
j6
@ 
AM@ (!

 ($

 A6$  (" ( kAu6(
  6   
; 
AM

 
Ak"
AO@ ($
 A6$   ( kAu6(
  
;  Aj6  
 
jj"
! Aj!


-- Chunk 70 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10351-10500

 A 


A A AA   
A A AA   
A A A׈A   
A A A܈A   
A"A AA"  
A A AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
A A AA   
P  (AI@   (  (
jO    A;     AA :A 

A A AA   
P  (AK@   (  (
jO    A;     AA :A 

A A AA   
P  (AF@   (  (
jO    A;     AA :A 

A A AA   
 

   AkAI
R@ AFE@   At"jA#j Aj( 6  Aj!


  A 6  A#jA 6   A#jB 7 

    AKk
W @  @  (
    Aj  (  (  (
A A AA  
A A AA  
"@ E
   (  K
   ( K!
 

# Ak"
$  AM@ 
B 7 
Aj"       A=" Al     K  

  A  ( Aj"At!AT (  "Aq" A
K
    Aj6   j"Ak! Ak!
  Aj!
A! Av!A   t"	Ar!A ! ! @@ @@ AsAxrh"AO@ A$j!   
M  Aj   
kAt jAq! 
" (   v!


  A~q"
jAj! AvAl j  
vAqj" O
 Au"  j K   
KqE@ Aq!   j

   kAt jAq! 
" (   v!
  	Akq" 	AtAk"
 k"I 
Ak  
q"A    	Hk! 

!
  Atj Ak";  Aj!  
j! 	A k  A J j"J@ AH
A "t!	 Aj!

  O
  E! Au"  j K   
KqE@ Aq!   j

    kAtjAq! 
" (   v!


Al AG
 AP  K
 Al A J
   Ak6    AjAuj k
!  
Aj$   
~  (  (  (  (/@  Aj( "E
  Aj" !  A&j( " A&j( " A&j( " 
     /
  AjA A$
@  @  A A
"A 6 A 6 A 6# A0k" $   B 7   B 7(    )(7    ) 7  (AvAq    )(7    ) 7   (AvAqA 
!  A0j$   6 (AD  A
jB 7  B 7
 A
j"   A A" A6   A6,A A



A A AA
  
AA AA
  
# Ak"
$  (! (!
 (!  A 6   ( ( "kAu" (
M@ (! (! (!@ 
 G@  
Atj"( ! /! 
 j /:   
 j :   
 j E:  A 
 AK!
 
Aj!



 ($"
AF  ((jA#:   ($ 

AF@  ((jA4:  
 


A"A AA
  
6@@@@  M@ E
 
A#6
  
A
j 
  	H!  (6   Aj"
  
(
"
  A	 Aj"AAA "6  AM@ 
( 

@@   k AjA	   
 

-- Chunk 71 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10501-10650
 AAA# A
 	"
E@ AF@   
6
  
j" M
A A AA  
   
6


 
A6  
Aj   	H!
 
(!
  (6   Aj"
  
 
 A AA 
A
I "
6 
AM@ 
( 

@   k A 
  
  AAA
 A 	"
E@ 
AF@   
6
  
j" M
A A AA  
   
6


 
A46  
Aj   	H!
  (6   Aj"
  
("
 
 A	 Aj"
AAA "6 AM@ 
( 

@   k AjA	   
  AAA4 
A
 	"E@ AF@   6
  j" M
A A AA  
   6


    k6

 
Aj$ 
A A AA  
A A AA  
A܅A AA  
AA AA  
AA AA  
G@@@@  (@ 
A
A A AҌA   
  (
AG
   (A G!
 
	 (
!  ("!  (
 k! !	 AKAt!
# Ak"
$  
A6
 (!
  A!@@ 	
 AA? (AF O
   
A
j   "
  F@ A6 A !

  AvAjM
  Aj!
@ 
AG@ 
(
!

   
(
"A G!

A
   
A= A A"	  
"A
I@ 	    
A="
 	  ?!
 AjA 	   
A=!@ 
E
    ?" O  
j I A
j Iqr
  	 A A6 A !

   
jM@ 	 A

 A6  	A6

A4A AA
  
A ! A 6 
 
Aj$   6    Aj! Aj! Aj!# A k"$ @  (  ( k"@ Aj   Au   A
j Aj (
  Aj

 B 7 B 7 B 7 B 7 A 6
 (! (! (
! (! (" E@  6  6  6  6 
 A j$   
6  A   

# A k"
$ A!
 
A8j   E@ 
A(j   	Ak" j"
-  B 
Aj    j"-  B 
Aj    j"-  B 
A8j"   Atj" / -  Aj-  , &   / 
-  Aj-  , &@ 
@ -  " A AI"k"@ 
A8j"  (  , &
 
A8j  (  v ,


-- Chunk 72 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10651-10800
 
A8j  (  -  ,
 	Ak!
 
A8j&@ 	 
K@  
j-  !  
j-  ! 
A8j"  
Aj  
j-  "I   
A(j I  &   
Aj I  &    
Atj" / Aj-  ",  Aj-  "jAO@ 
A8j&
 
A8j"  / , &@ 
@  A AI"k"@ 
A8j"  (  , &
 
A8j  (  v ,

 
A8j  (  ,
 
Ak!
 
A8j&


 
A8j"  
(( 
(4   
( 
($   
( 
(  " A  !

 
A j$  

   AK
V  @A!  -  !A!@@  F
   j! Aj! -   F
 
A !
 
A A AA,  
 @ AK@  E
@@@@@ AKAA AKj"Ak 
   AtArAq0

   AtA
r%

A A AܔA-  
   AtAr:  
   j -  :   Aj
A A A͔A-  
AA AΔA-  
s   k!@ E@     G

     
"  E@A 
  j"  I
   k" A    AkI

AA A A+  
# Ak"
$  
 6 
 6
  
Aj!A!@ 
(A6I
 A ! E Er
 A! AK
 AT! A
K
 AR! AK
  E@ 
A6
A!
   j!@ 
Av 
A Gq"
@ 
( AF

 
AqE AIrE@ 
 6  
Aj A ~"
 
 6  
Aj  jA kA ~"@ !

  j!A ! A I

  
A
j   Aj""
  F@   -  :  A!

  AvAjM!A ! 
@ 
E
  
( AG
  	  
(

  
A 6 
 
@ 
( 

 Aj"  
(
"
 A
   
 A&   
 A&"
 
At" jAjA A k     
  A"@ !

@ 
@@ 
( E@ A
j!

 	  
?   
? jM
 A
j" O

A !  M
 
A 6 

A ! A
j O

 	@ 	 A
     j     !

-- Chunk 73 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10801-10950

         	!
 
Aj$  
@ AK@ AqE@    A!

 Ak!
 Aj!
A~!	  ! Aj!
A !@  
G@   Atj( A Gj! Aj!


 Aj"
!@   I
@      "
   K  
Kq
 
 
     "
    ? j" 	AjK
    	I"
!  	 
!	
 Aj!
 
 
A A A A4  
 
@@@@@@ AI A
Ir
  AL
  Aj" Ak  AjAv" G"@ 
 AkA|I
    Aq0  j"   j"K
   k  j"  G"@ 
 AkA|I
   Aj Aq0  j" K
   k  j"  G"@ 
 AkA|I
   Aj Aq0  j" K
  j"  j"K
   k   k G"@ 
 AkA|I
   j  k!	
 	
A A A A,  
A A A A,  
A A A A,  
A A A A,  
A A A A,  
[  Aj! A A NAj!A ! A !@  FE@    At"j( A G  j( Eqr!  Aj!


  E

~  ) !   ) 7   7 

   AAjO  Aj  

 ( "AI@ AtAj!
 E@  A  
 A 6 A 
 Aj! Aj!	 Aj!
 A A !  j"
Ak!
 (  !@ 
 Aj"M@@  
O@A !A !@ AF@A!@ "Ak!  Atj( E
 
 @AP  ( K

  6     
 
  At"j"
 
(   j(   	j(   
j( jjj"6     I! Aj!

 
   -  Atj" ( Aj6  Aj!

 
  (  !  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6  ( !  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6  ( 
!  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6  Aj"(  !  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6 

 
 
A A A A#  

@  E
   Ak"  Ak( "Axq" j!@ Aq
  AqE
  ( "k"A( I
   j!  A( G@ AM@ (" Av"AtAjF  (
"F@AA( A~ wq6 

  6
  6

 (!@  (
"G@ (" 6
  6

@ Aj"( "
  Aj"( "
 A !

@ ! "Aj"( "
  Aj! ("
 
 A 6 
 E
@  (
"AtAj"( F@  6  
AA( A~ wq6 

 AA ( Fj 6  E

  6 ("@  6  6
 ("E
  6  6

 ("AqAG
 A  6   A~q6   Ar6   j  6 
  O
  ("AqE
 @ AqE@ A( F@A 6 AA(   j" 6    Ar6 A( G
AA 6 AA 6 
 A( F@A 6 AA(   j" 6    Ar6   j  6 
 Axq  j! @ AM@ (" Av"AtAjF  (
"F@AA( A~ wq6 

  6
  6

 (!@  (
"G@ ("A( I  6
  6

@ Aj"( "
  Aj"( "
 A !

@ ! "Aj"( "

-- Chunk 74 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:10951-11100
  Aj! ("
 
 A 6 
 E
 @  (
"AtAj"( F@  6  
AA( A~ wq6 

 AA ( Fj 6  E

  6 ("@  6  6
 ("E
   6  6
   Ar6   j  6  A( G
A  6 
  A~q6   Ar6   j  6 
  AM@  Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6
A! B 7  AM@  Av" A?jAvAq"t" AjAvAq"t" AjAvAq"tAv  r rk"At   AjvAqrA
j!
  6
 AtAj!@@@A( "A t"qE@A  r6   6   6

  A A Avk AFt! ( !@ "(Axq  F
 A
v! At!  Aqj"Aj( "
 
  6  6
  6
  6

 ("  6
  6 A 6  6
   6
AA( Ak" A  6 

.
# Ak"
$ @@@@@@@@@@@  AM@A( "A  A
jAxq  A
I"Av" v"Aq@ AsAq  j"At"Aj( "Aj! @ (" Aj"F@A A~ wq6 

  6
  6
  At"Ar6  j" (Ar6


 A( "M
 @@A  t"A  kr   tq" A   kqAk"   A
vAq" v"AvAq"  r  v" AvAq"r   v" AvAq"r   v" AvAq"r   vj"At"Aj( "("  Aj"F@A A~ wq"6 

   6
   6
 Aj!   Ar6  j" At" k"Ar6  j 6  @ Av"AtAj!A( ! A t"qE@A  r6  

 (
!  6  6
  6
  6
A 6 A 6 


A( "
E
 
A  
kqAk"   A
vAq" v"AvAq"  r  v" AvAq"r   v" AvAq"r   v" AvAq"r   vjAtAj( "(Axq k! !@@ (" E@ (" E

  (Axq k"   I"!    !  !


 (!	  (
"G@ (" A( I   6
   6


 Aj"( " E@ (" E
 Aj!
@ !  "Aj"( " 
  Aj! (" 
 
 A 6 


A!  AK
   A
j" Axq!A( "E
 A  k!@@@A  AI
 A AK
   Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j
"AtAj( "E@A ! 

A !  A A Avk AFt!@@ (Axq k" O
  ! "
 A ! ! 

   ("   A
vAqj("F   !  At! 
 

   rE@A !A t" A   kr q" E
  A   kqAk"   A
vAq" v"AvAq"  r  v" AvAq"r   v" AvAq"r   v" AvAq"r   vjAtAj( ! 
  E

@  (Axq k" I!   !    !  ("   (
" 
 

 E
  A(  kO
  (!  (
"G@ (" A( I   6
   6
	
 Aj"( " E@ (" E
 Aj!
@ !  "Aj"( " 
  Aj! (" 
 
 A 6 

 A( "M@A( ! @  k"AO@A 6 A   j"6   Ar6   j 6    Ar6

AA 6 AA 6    Ar6   j" (Ar6
  Aj! 


 A( "I@A  k"6 AA( "  j"6   Ar6   Ar6  Aj! 


A !  A/j"A( @A( 

AB7 AB7 A 
A
jApqAتժs6 AA 6 AA 6 A 
"j"A  k"q" M
	A( "@A( " j"	 M  	Ir

A-  Aq
@@A( "@A! @   ( "O@   (j K

  (" 
 

-- Chunk 75 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:11101-11250

A "AF
 !A( " Ak" q@  k  jA   kqj!
  M AKr
A( " @A( " j" M   Ir

 "  G


  k q"AK
 "  (   (jF
 ! 
  AF A0j MrE@A( "  kjA  kq"AK@  !

 AG@  j!  !

A  k

  "AG


A !

A !

 AG

AA( Ar6 
 AK
A( " AjA|q"j! @@ E   Kr  O
  
A(  
! AA06 A!

A  6 
  I@  E

A  6  AF  AFr   Mr
   k" A(jM

AA(  j" 6 A(   I@A  6 
@@@A( "@A! @   ( "  ("jF
  (" 
 


A( " A    ME@A 6 
A ! A 6 A 6 AA6 AA( 6 AA 6 @  At"Aj Aj"6  Aj 6   Aj" A G
 
A A(k" Ax kAqA  AjAq"k"6 A  j"6   Ar6   jA(6AA( 6 

  - 
Aq  Kr  Mr
     j6A Ax kAqA  AjAq" j"6 AA(  j"  k" 6    Ar6  jA(6AA( 6 

A(  K@A 6 
  j!A!@@  ( G@A!  ("



A!  - 
Aq
   6   ( j6 Ax kAqA  AjAqj" Ar6 Ax kAqA  AjAqj"  j"k!@  F@A 6 AA(  j" 6    Ar6

 A( F@A 6 AA(  j" 6    Ar6   j  6 

 (" AqAF@  Axq!	@  AM@ ("  Av"AtAjF  (
" F@AA( A~ wq6 

   6
   6

 (!@  (
"G@ ("  6
   6

@ Aj" ( "
  Aj" ( "
 A !

@  ! "Aj" ( "
  Aj!  ("
 
 A 6 
 E
 @  (
" AtAj"( F@  6  
AA( A~  wq6 

 AA ( Fj 6  E

  6 (" @   6   6
 (" E
    6   6
  	j!  	j!
  (A~q6  Ar6  j 6  AM@ Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6

A!  AM@ Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j! 
   6
 B 7  AtAj!@@A( "A  t"qE@A  r6   6   6

 A A  Avk  AFt!  ( !@ "(Axq F
  A
v!  At!   Aqj"Aj( "
 
  6  6
  6
  6

 ("  6
  6 A 6  6
   6
 Aj! 

@@   ( "O@   (j" K

  (! 


A A(k" Ax kAqA  AjAq"k"6 A  j"6   Ar6   jA(6AA( 6   A' kAqA  A'kAqjA/k"    AjI"A6 A) 7 A) 7A Aj6 A 6 A 6 AA 6  Aj! @  A6  Aj!  Aj!   I
 
  F
   (A~q6   k"Ar6  6  AM@ Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6

A!  B 7 AM@ Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j! 
   6
  AtAj!@@A( "A  t"qE@A  r6   6   6

 A A  Avk  AFt!  ( !@ "(Axq F
  A
v!  At!   Aqj"Aj( "
 
  6  6
  6
  6

 ("  6
  6 A 6  6

-- Chunk 76 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:11251-11400
   6
A( "  M
 A   k"6 AA( "  j"6   Ar6   Ar6  Aj! 

A ! AA06 

@ E
 @ (
" AtAj"(  F@  6  
A A~  wq"6 

 AA ( Fj 6  E

  6 (" @   6   6
 (" E
    6   6
@ AM@   j" Ar6   j"   (Ar6

  Ar6  j" Ar6  j 6  AM@ Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6

A!  AM@ Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j! 
   6
 B 7  AtAj!@@ A  t"qE@A  r6   6 

 A A  Avk  AFt!  ( !@ "(Axq F
  A
v!  At!   Aqj"Aj( "
 
  6
  6  6
  6

 ("  6
  6 A 6  6
   6
 Aj! 

@ 	E
 @ (
" AtAj"(  F@  6  
A 
A~  wq6 

 	AA 	( Fj 6  E

  	6 (" @   6   6
 (" E
    6   6
@ AM@   j" Ar6   j"   (Ar6

  Ar6  j" Ar6  j 6  @ Av"AtAj! A( !A t" qE@A  r6   

  (
!   6  6
   6
  6
A 6 A 6 
 Aj! 
 
Aj$   
A    ("6  (!   6    j6     kj6
  E@A A AA&  
    (6  B 7  AjB 7   B 7  AjB 7   A j"A 6   A 6  B 7  B7  AjA) 7   AjA( 6    6
    A j6    A0j6    Aj6 
'~# Ak"#$ @@@@@@@@@@@@@@@@@@@@@@@@@@ A  E@ @ ! !
 !$@@@  ( M@@ AI
  (  ApqAԴG
 A AI
 Ar ( "
AwK
 A 
Aj"
  
I
"

  
I
  
k!  
j!

 # 6 # 6
@ @@  @ @ ! !    (  jG6
  A  ErE@@@  @ E
   (6   ("6   6    (j"6   6 (@  B7   A j6
   A j6   A0j6   A
j6   Aj Aj( 6   Aj Aj( 6   Aj Aj( 6 

  B 7

A A AA  
A A AA  



A A AA  
A !
A E


  A A 
  E ErE@Ab@@ AM
  (  A~G
    ( 6Ab  Aj!# Ak"$ Ab!
@@ A	I
  (  A~G
 A j Aj"
 Ak "	"
  A6|  A j A j 
A  	 j"	  j"
 	k="

  (|"AK
  (x"A	O
  A j  AA  Aj" A46|  A j A j 	 
j"	 
 	k="

  (|"A4K
  (x"
A
O
  A0j  AA 
  A#6|  A j A j 	 
j"	 
 	k="

  (|"A#K
  (x"
A
O
    AA 
  	 
j"A
j"	 
K
  
 	k!
A !
@ 
AG@ (  "	E 	 
Kr
  

-- Chunk 77 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:11401-11550
AtjAj 	6  
Aj!
 Aj!


  k!

 Aj$  


A A AA
  
"
  B7    j  k

    
A 


A 
"


 E  (" $FrE@   6   $6  (!   $6   $  kj6
 !*# Ak"'$ A!@ #("
AA	  ("I
  #(
"
AA  "@ !

 
 AjI
   Aj 
   ("@ 

A 
 @  (AG
   (E
 @@  (E
   ("E
 @  (E
   Aj( !	# Ak"$   	6
 A
jA!/ (! Aj$  / Akq! (Ak! ( !
@ 	 
 Atj( " (A 
"G@  qAj! 


 E
     A6   6    (6


AA AԮA  

  Aj( "@A`  ( G

@  Aj( E@  A 6

    ("E6 
   Aj
    ) |7A 

"
  $ *j!(  Aj!, 
 k!
  
j!
 $!@A!@ 
AI
  ' 
"Av"6 ' Aq6 ' AvAq"6 @@ Ak 
Al

 !
 
"!@ !!

 ! 
Ak"-K@A!

 
Aj"  (   (I (   M!Al!@@@ '(  
  k!A !# Ak"%$ A!
@ !AK
 @ !AI
 @@@@@@@  -  "
Aq"Ak 
  (
 Ab

 !AI
A!
  (  !  (!
A!	A @@@ 
AvAq"
Ak 
 AvAq! 
E! AvAq

 Av!A!
 AvA q

  - A
t Avr!A!
 AvAq
" 
 AK
 E@Ah!	 AI

  
j" !K
A!	 A AI"
 I
 
A G!	      
A @  (E AIr
 A !
@ 
AK
 
A@k!

 
 
 	At!	 AF@ @  (!	 
  j!
  (
!
# Ak"$  Aj 
( 1 - 	@# A k"
$  
Aj 
 $"E@ 
 
( 1 
Aj!
  	j!
 
- !
@@@ AO@ 
Ak! 
(
!@ A K
@ 
(" 
(O@ 
Aj
!


-- Chunk 78 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:11551-11700
  
("F
 
   k Av"  k I""k"6 
  Atk6
 
 (  6
 	 O r
 	 
 
(" 
(
" 
Atj"/ ;   	 - j" 
   - j" 
Atj"	/ ;   
  	- j"6
  	- j!	
 
 
 
(
"A K
 
(" 
(O@ 
Aj


  
("F
 
   k Av"  k I"k"6 
  Atk6
 
 (  6

 
 	k

 
AI
  
Ak! 
(
!@@ A K
 @ 
(" 
(O@ 
Aj
!

  
("F
 
   k Av"  k I""k"6 
  Atk6
 
 (  6
  	I r
  	 
 
( 
(
 
Atj"/ ;   
 
(
 - j"6
 	 - j!	


@  	I
 	 
 
( 
(
 
Atj"/ ;   
 
(
 - j6
 	 - j!	
 
 
@ 	 
O@ 
(
!	

 	 
 
( 
(
 
"
Atj"-  :   - AF@ 
(
 - j!	

 
(
"	AK
  	 
 
Atj- j"A  A I!	
 Al 	 
( 
(2!
 
A j$  

 	  
  

! Aj$  

 AM
  (!
 
  j!  (
!
# Ak"
$  
Aj 
( 1 
- 	@ 
    
 	

 
    
 	
! 
Aj$  

  Aj!
 
  j!
  A j!
  (! @ 
 
  
"	@ 	

  	K   	 
j  	k 
A



-- Chunk 79 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:11701-11850

A E
 Al E
  Av"  I At nA
At"
Aj( l 
Aj( j"Av j 
Aj(  
Aj(  ljI@ 
 
  
"
@ 


  
K   
 
j  
k 
 	A



 
 
  
"
@ 


  
K   
 
j  
k 
 	A



!  (AF@  Aj  (AkA  ("
Aj 
 Ak    (Aj6    (A k6
Al!	 
   6  A6    (6 AG
    A j6


A!@@@ 
AvAqAk  
A! 
Av

  /  Av

A! !AI
  Av
!A!	 E A Gq
 A AI"
 I
      
A !  j"
A jI@Al!	 
 !K
   j!  (!
@  (AF@ 
  Ak  Aj  jAkA

 
  
   6    (6 


  A 6   6     j"6    j6 


@@@ 
AvAqAk  
 
Av!
A

 !AI
  /  Av!
A

 !AI
  Av!
A
!A!	A  
 
 Al!	 
AK
 A!	 A AI" 
I
      
 A   j"	-  !  (!
@  (AF@ 
  
Ak  Aj 	-  A

 
  

   
6    (6 Aj!	
 	

A A AA-  
 

Al
"
"
     Aj( "  Kj  (k!
AAG@A A AA  
  (!  A  
 "j!
A!	@ ! k""E
  
-  "E@ %A 6
AA AF

 
Aj AtAu"
A N
  
AF@ AH
 
/ Aj! 
Aj

 AH
 
-  AtrAk! 
Aj
!
 % 6
 
Aj"
  
j"K
 Al!	  Aj   
-  "
AvA#A	 
  
kAAA  (  (   Aj"""
   A j  Aj 
AvAqAA 
A   j"

-- Chunk 80 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:11851-12000
  
kAAA  (  (  ""
   A0j  Aj 
AvAqA4A	 
A   j"
  
kAAA  (  (  "
   
j 
k!	
 	
"
@ 
!


 %(
! E Er@A!
 A J

 
AK"E@A   
AIr A	Hr

  (!A !	 %B 7 @@ @ ("
AK
 Aj!A !A !
@ 
 
vE@ %   
Atj- "  K"6 AO@ % 	Aj"	6 
 
Aj!



 % 	A 
kt6 


AA AA&  
  %( AK !  %(AKq
!  
k!
 
 
j!
  A 6 @ ! !# Ak"$   ("AF@  (

  j
!   ("	6  (!
@@@@@ E@ !


  (!  (!  (!  A6A !	@ 	AG@  	At"j   jAj( 64 	Aj!	


@@ @ 
A H
Al!
 Aj 
 
$
 A AH!  k!" A
j Aj"  ( 7 A$j   (7 A,j   (7 A4j! (
!A !@ A!O@ !
  N


@ (" (O@ Aj
!

 ("
 F@AA A I!

    
k Av"	  	k 
I""
k"	6   
Atk6
  	(  6
 AK  NrE@ (  (
Atj"
- "
AO
 (0 (,Atj"- "AO
 (( ($Atj"	- "A O

 	- ! - ! 
- ! 	/ !
 / !
 
/ !
 	(! 
(!	 (!
@@ AO@@ E AIrE@ Aj AkAt j!@ (
"A K
  (" (O@ Aj


  ("F
     k Av"&  &k I"k"6   Atk6
  (  6
 AjA j!

 Aj  j! (
"A K
  (" (O@ Aj


  ("F
     k Av"&  &k I"k"6   Atk6
  (  6
  (86<

 	E! E@ A4j" 	A GAtj!  Atj( !

 AjA  jj"AF@ (4Ak

 At j(4
"E j! AF
   (86<
 !
 ( !  64  68 @ Aj  
j!

@ 
 jAI
  (
"A K
  (" (O@ Aj


  ("F
     k Av"  k I"k"6   Atk6
  (  6
 
@ Aj 
 	j!	
@ (
"A K
  (" (O@ Aj
 (
!

  ("
F
     
k Av"  k 
I"k"

-- Chunk 81 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12001-12150
6  
(  6  Atk!
   j" j"6
  AtAj(  ("A  kvq 
j6
  AtAj(  A  kvq 
j6,@ A K
  (" (O@ Aj
 (
! (!

  ("
F
     
k Av"  k 
I"k"
6  
(  "6  Atk!
   j"6
  AtAj(  A  kvq 
j6$ A@k A
lj" 6  
6  	6  Aj! 	 "j 
j!"


 !
  H
A 

A A AA
  
A$A AA
  
A
!	@@ 	E@ (
!A!	

@@@ A!O@  L


@ (" (O@ Aj
!

 ("	 F@AA A I!

    	k Av"
  
k 	I""	k"
6   	Atk6
  
(  6
  L AKrE@ (  (
Atj"	- "
AO
 (0 (,Atj"- "AO
 (( ($Atj"- "A O

 - ! - !
 	- !
 / !
 / !& 	/ !) (! 	(! (!@@ AO@@ E AIrE@ Aj AkAt j!@ (
"	A K
  (" (O@ Aj


  ("F
     k 	Av"+  +k I"k"6  	 Atk6
  (  6
 AjA j!

 Aj  j! (
"	A K
  (" (O@ Aj


  ("F
     k 	Av"+  +k I"k"6  	 Atk6
  (  6
  (86<

 E! E@ A4j" A GAtj!	  Atj( !

 AjA  jj"AF@ (4Ak

 At j(4
"	E 	j! AF
   (86<
 !	
 	( !  64  68 @ Aj  j!
@ 
 jAI
  (
"	A K
  (" (O@ Aj


  ("F
     k 	Av"  k I"k"6  	 Atk6
  (  6
 
@ Aj 
 j!
@ (
"	A K
  (" (O@ Aj
 (
!	

  ("
F
     
k 	Av"  k 
I"k"
6  
(  6 	 Atk!	
  	 
j"
 
j"	6
  
AtAj(  ("A  
kvq )j6
  
AtAj(  A  	kvq &j6,@ 	A K
  ("
 (O@ Aj
 (
!	 (!

 
 ("F
   
 
 k 	Av" 
 k I"
k"6  (  "6 	 
Atk!	
  	 j"	6
  AtAj(  A  	kvq 
j6$@@@  (AF@ (" A@k Aq"
A
lj"
( "	j"
  ("K@  k"
@ 
  
kK
 
  

-- Chunk 82 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12151-12300
 
 	 
k"	6  
 
j!

   Aj")6  A 6 
E
$ A@k 
A
lj"
(!  Aj!
 
(!@@@ 	AJ
  
 	 j"
j"& A k"K
  
A j  
kM

 
  	   Aj 
   @!


 	A H
& 	 
N
'  &I
( 	 
j" K
) 
 )@ 	AI
  
Aj"  Aj"
kAkAaO
+  
 	AkAI
  
A j!@  
Aj Aj 
A j"
 A j" I
 

  k!  	 )j6  k I@  k I@Al!


    k"j"	 jO@  	 

  j!  	A  k k! !
  &K
+  I
, E
- AO@  kAkAaO
+   AH
  j! Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 


  K
.@ AM@  -  :    - :   - :   - :  Aj  At"	Aj( j".  	Aj( k!

  

 Aj"	 Aj"k"
AL
/ A	I
  	 &O
0  j! 
AM@@ 	 
 Aj! 	Aj"	 I
 

 
 	  AH
  Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 

 
@ 
!


 
 6  
 6 
 6 
 
j

 
E
 
A k"
 O
/ 
(! 
(!@@ 
 
I
  
 	 j"j"
 
K
  A j  
kM

 
  
 	   Aj 
   !

 	A H
0 	 N
1  
I
2 
 	 
j"
I
3 
 @ 	AI
  
Aj"
 Aj"kAkAaO
) 
  	AkAI
  
A j!	@ 	 Aj 	Aj A j" 	A j"	 
I
 

 
 k!  
6 
 k I@  
 kK
    k"j"	 jO@ 
 	 

  j! 
 	A  k k!
 !
 
 
K
4  I
5 E

-- Chunk 83 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12301-12450
6 AO@ 
 kAkAaO
) 
  AH
 
 j! 
Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 


  
K
,@ AM@ 
 -  :   
 - :  
 - :  
 - :  
Aj  At"	Aj( j".  	Aj( k!

 
 

 
Aj"	 Aj"k"
AL
- A	I
 	 
O
 
 j! 
AM@@ 	 
 Aj! 	Aj"	 I
 

 
 	  AH
 
Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 


 
E
" A@k AqA
lj"(! (!@@ ("
 ( "j"
 
K
  
  j"j"
 A k"
K
  A j  
kM

 
     Aj 
   @!

 A H
#  N
$  
I
% 
  
j"	I
& 
 
@ AI
  
Aj"
 
Aj"
kAkAaO
( 
 
 AkAI
  
A j!@  
Aj Aj 
A j"
 A j" 	I
 

  
6 	 k"  	 kM
  	 kM

Al!

    k"j"
 jO@ 	 
 

  j! 	 
A  k k!	 
! 	 
K
%  I
& E
' AO@ 	 kAkAaO
% 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
(@ AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  At"
Aj( j".  
Aj( k!

 	 

 	Aj"
 Aj"k"
AL
) A	I
  
 
O
 	 j! 
AM@@ 
 
 Aj! 
Aj"
 I
 

 
 
  AH
  	Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 

 @ !



 A@k AqA
lj" 6  6  6  
 j
!
 Aj!  "j j!"

  J

A~  k!
  Aj!  Aj!  Aj!" A k!  k!A !@@@@  L@@ AF

-- Chunk 84 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12451-12600
   At"jAj  j(46  Aj!
 
 
 A@k AqA
lj!  (AF@ (" ( "j"  ("
K@ 
 k"
@ 
  
kK

 
  
   
k"6  
 
j!

  "6  A 6 
E
" (!
 (!@@@ AJ
  
  j"
j"
 K
  
A j  
kM

 
    
 Aj    @!


 A H
$ 
 L
% 
 K
& 
 j"	 K
' 
 "@ AI
  
 
Aj"jAaO
)   AkAI
  
A j! !@  Aj Aj A j" A j" 	I
 

 	 
k!    jAj6 	 k 
I@ 	 k 
I@Al!


    k"j" jO@ 	  

  j! 	 A  k k!	 !
 	 
K
)  I
* E
+ 
AO@ 	 kAkAaO
) 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
,@ 
AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  
At"
Aj( j".  
Aj( k!

 	 

 	Aj" Aj"k"AL
- A	I
  
 M
. 	 j!
 AM@@  
 Aj! Aj" 
I
 

 
   AH
  	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 

 


 !
 
 
j

 
E

 A k" O
- (!
 (!@@ 
 I
  
  j"
j" K
  
A j  
kM

 
     
 Aj 
   !


 A H
. 
 L
/  I
0  
 j"	I
1 
 @ AI
  
Aj" Aj"kAkAaO
'   AkAI
  
A j!@  Aj Aj A j" A j" 	I
 

 	 
k!  6 	 k 
I@ 
 	 kK
    k"j" jO@ 	  

  j! 	 A  k k!	 !
 	 K

-- Chunk 85 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12601-12750
2  I
3 E
4 
AO@ 	 kAkAaO
' 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
*@ 
AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  
At"
Aj( j".  
Aj( k!

 	 

 	Aj" Aj"k"AL
+ A	I
  O
 	 j!
 AM@@  
 Aj! Aj" 
I
 

 
   AH
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


 
E
  (! (!@@ ("
 ( "j" 
K
  
  j"
j" K
  
A j  
kM

 
     Aj 
   @!


 A H
!  
N
"  I
#  
j"	 K
$ 
 
@ AI
  
Aj" 
Aj"
kAkAaO
&  
 AkAI
  
A j!@  
Aj Aj 
A j"
 A j" 	I
 

 	 k!  6 	 k I@  	 kK
    k"j"
 jO@ 	 
 

 	 
A  k k!	  j! !
 	 K
&  I
' E
( AO@ 	 kAkAaO
& 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
)@ AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  At"
Aj( j".  
Aj( k!

 	 

 	Aj" Aj"k"AL
* A	I
  O
+ 	 j!
 AM@@  
 Aj! Aj" 
I
 

 
   AH
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  (! (!	

Al!

 

 
 
j
!
 Aj!
 
 
A !	



#


 AF@A!
 
 	k"  
kK
 
 
 	  jA 
!
  Aj!
  Aj!	
A!
 
 	k"  
kK

-- Chunk 86 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12751-12900
 
 
 	  jA 
 k!


A!

 Aj$  


A A AA!  

&
!


  (AF@ 
!
 !	# A@j"$    ("6<  j!  (!@@@@@ "E@ !

  (!  (!  (!
  A6A !
@ 
AG@  
At"j   jAj( 6, 
Aj!



  
 
$
 Aj   ( 7 A
j   (7 A$j   (7 E
 ( (Atj"- "AO
 (( ($Atj"
- "
AO
 (  (
Atj"
- "A O
 
- ! 
- ! - ! 
/ ! 
/ ! / ! 
(! (!
 
(!@ AO@@ 	E AIrE@  AkAt j!@ ("A K
  (" (O@ 


  (
"
F
     
k Av""  "k 
I"k"
6   Atk6  
(  6 
 A j!


   j!
 ("A K
  (" (O@ 


  (
"F
     k Av""  "k I"k"6   Atk6  (  6 
  ),70

 
E! E@ A,j" Atj( !
   
A GAtj( 60

 A  jj"AF@ (,Ak

  Atj(,
"E j!
 AG@  (064
  (,60
  
6, 
@  
 j!
@ 
 jAI
  ("A K
  (" (O@ 


  (
"
F
     
k Av"  k 
I"k"
6   Atk6  
(  6 
 @   
j!

@ ("A K
  (" (O@ 
 (!

  (
"F
     k Av"
  
k I"k"6  (  6   Atk!
   j" j"6  AtAj(  ( "A  kvq j6  AtAj(  A  kvq j6$@ A K
  (" (O@ 
 (! ( !

  (
"
F
     
k Av"  k 
I"k"6  (  "6   Atk!
   j"6 AtAj(  A  kvq j! A,j! !@@@  6
 
 j"  ("K
  A k" O
&@@@  I
   
 j"
j" K
  
A j  kM

    
  
 A<j  
  !


 
A H
( 
 
L
)  I
*  
j" K

-- Chunk 87 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:12901-13050
+  @ 
AI
  Aj" Aj"kAkAaO
!   
AkAI
  A j!
@ 
 Aj 
Aj A j" 
A j"
 I
 

  
k!  6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K
,  
I
- E
. 
AO@  kAkAaO
!   AH
  j!
 Aj!
@ 
 Aj 
Aj A j" 
A j"
 
I
 


  K
$@ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
% A	I
  
 O
/  j! AM@@ 
 

 
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 

  
j! Ak"E
@ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"  k 
I"k"
6  
 Atk6  
(  6 
 ( (Atj"
- "AO
 (( ($Atj"
- "
AO
 (  (
Atj"- "A O
 - ! 
- ! 
- ! / ! 
/ ! 
/ !" (! 
(!
 
(!@@ AO@@ 	E AIrE@  AkAt j!@ ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
 A j!


   j!
 ("A K
  (" (O@ 


  (
"F
     k Av"
  
k I"k"6   Atk6  (  6 
  (064

 
E!
 E@ A,j" 
A GAtj!  
Atj( !


 A 
 jj"AF@ (,Ak

-- Chunk 88 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13051-13200

  Atj(,
"
E 
j!
 AF
   (064
 !
 ( !  
6,  60 
@  
 j!
@ 
 jAI
  ("
A K
  (" (O@ 


  (
"F
     k 
Av"  k I"k"6  
 Atk6  (  6 
 @   
j!

@ ("A K
  (" (O@ 
 (!

  (
"
F
     
k Av"  k 
I"k"
6  
(  6   Atk!
   j"
 j"6  AtAj(  ( "A  
kvq "j6  AtAj(  A  kvq j6$@ A K
  ("
 (O@ 
 (! ( !

 
 (
"F
   
 
 k Av" 
 k I"
k"6  (  "6   
Atk!
   j"6 AtAj(  A  kvq j! (<!


 A L
  k"@A!
   kK
    
 k!
  j!
   Aj"6<  A 6 E
 A k!  Aj!@@@ 
AJ
   
 j"
j" K
  
A j  kM

   
  
 A<j  
  @!


 
A H
 
 
L
  I

  
j" K

  @ 
AI
  Aj"  Aj"kAkAaO
   
AkAI
  A j!@  Aj Aj A j" A j" I
 

  
k!  
 j6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K
  
I
  E
! 
AO@  kAkAaO
   AH
  j!
 Aj!
@ 
 Aj 
Aj A j" 
A j"
 
I
 


  K
"@ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
# A	I
  
 O
  j! AM@@ 
 

 

-- Chunk 89 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13201-13350
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 

  
j! Ak"E
 @ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"  k 
I"k"
6  
 Atk6  
(  6 
 AH
 A,j!@ ( (Atj"
- "AO
 (( ($Atj"
- "AO
 (  (
Atj"
- "A O
 
- ! 
- ! 
- ! 
/ !" 
/ !
 
/ !
 
(!
 
(!
 
(!@ AO@@ 	E AIrE@  AkAt 
j!@ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"
  
k 
I"k"
6  
 Atk6  
(  6 
 A j!


   
j!
 ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
  (064

 
E!
 E@  
Atj( !
  
A GAtj

 A 
 
jj"AF@ (,Ak

  Atj(,
"
E 
j!
 AF
   (064
 
( !  
6,  60 @   j!
@  jAI
  ("A K
  (" (O@ 


  (
"
F
     
k Av"  k 
I"k"
6   Atk6  
(  6 
 @   
j!

@ ("A K
  (" (O@ 
 (!

  (
"F
     k Av"
  
k I"k"6  (  6   Atk!
   j" j"6  AtAj(  ( "A  kvq 
j6  AtAj(  A  kvq 
j6$@ A K
  (" (O@ 
 (! ( !

  (
"
F
     
k Av"  k 
I"k"6  (  "6   Atk!

-- Chunk 90 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13351-13500
   j"6  AtAj(  A  kvq "j6
@@@ (<" 
j" K
   
 j"
j" K
  
A j  kM

   
  
 A<j  
  @!


 
A H
 
 
L

  I

  
j" K

  @ 
AI
  Aj" Aj"kAkAaO
    
AkAI
  A j!
@ 
 Aj 
Aj A j" 
A j"
 I
 

  
k!  6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K
   
I
! E
" 
AO@  kAkAaO
    AH
  j! Aj!
@ 
 Aj 
Aj A j" 
A j"
 I
 


  K
#@ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
$ A	I
  
 O
  j! AM@@ 
 

 
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 

  
j! Ak"E
 ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
 
 
A !
@ ("A K
  ("
 (O@Al!
 
AO


 
 (
G
Al!
 A I

@ 
AG@   
At"jAj  j(,6  
Aj!



 (<!
@  (AG@ !


A!
  k"  kK

-- Chunk 91 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13501-13650
A !
 @    j!

  A 6  Aj!  Aj!
A!
  k"  
kK
 
 
   jA 
 k!


A A AA   
Al!

 A@k$  





!


 !	 !# A@j"$   (  (  j
!   ("
6< 
  (j!@@@@ 	E@ !

  (!  (!  (!
  A6A !
@ 
AG@  
At"j   jAj( 6, 
Aj!



Al!  
 
$
 Aj   ( 7 A
j   (7 A$j   (7 E
 A k! A,j! !@ ( (Atj"
- "AO
 (( ($Atj"
- "AO
 (  (
Atj"
- "A O
 
- ! 
- ! 
- ! 
/ !" 
/ !
 
/ !
 
(! 
(!
 
(!@@ AO@@ E AIrE@  AkAt j!@ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"
  
k 
I"k"
6  
 Atk6  
(  6 
 A j!


   j!
 ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
  (064

 
E!
 E@ A,j"
 
A GAtj! 
 
Atj( !


 A 
 jj"AF@ (,Ak

  Atj(,
"
E 
j!
 AF
   (064
 !
 ( !  
6,  60 @   j!
@  jAI
  ("
A K
  (" (O@ 


  (
"F
     k 
Av"  k I"k"6  
 Atk6  (  6 
 @   
j!

@ ("A K
  ("
 (O@ 
 (!

 
 (
"F
   
 
 k Av" 
 k I"
k"6  (  6   
Atk!
   j"
 j"6  AtAj(  ( "A  
kvq 

-- Chunk 92 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13651-13800
j6  AtAj(  A  kvq 
j6$@ A K
  ("
 (O@ 
 (! ( !

 
 (
"F
   
 
 k Av" 
 k I"
k"6  (  "6   
Atk!
   j"6  AtAj(  A  kvq "j6
@@@ (<" 
j" K
   
 j"
j" K
  
A j  kM

   
  
 A<j  
  @!


 
A H
 
 
L
  I
  
j" K
  @ 
AI
  Aj" Aj"kAkAaO
   
AkAI
  A j!
@ 
 Aj 
Aj A j" 
A j"
 I
 

  
k!  6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K

  
I

 E
 
AO@  kAkAaO
   AH
  j!
 Aj!
@ 
 Aj 
Aj A j" 
A j"
 
I
 


  K
 @ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
! A	I
  
 O
"  j! AM@@ 
 

 
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 
@ 
!

  
j! (!
 	Ak"	@ 
A K
 (" (O@ 


  (
"
F
    
k 
Av"
  
k 
I"k"
6  
 Atk6  
(  6 


A !@ 
A K
  ("
 (O@ 

-- Chunk 93 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13801-13950
AO


 
 (
G 
A Ir

@ AG@   At"
jAj  
j(,6  Aj!


 (<!

A!  
k"  kK
    
  jA 
 k!
 A@k$  

A A AA
  


!

 %Aj$  


 ! ( kM     ! !AA  !
A


  -  !
 '("  kMAA   E
  
  A


"
  (@ ,  
 - !k!
   !j!
  j! '(E
 
  )"/BR@Al! /  $kR

 #  Aj( Aj! 
AI
  (E@ ,!/ 
(   /G

 
Ak!
 
Aj 

6
 # 
6  $k!
 'Aj$  .A  "
kA  A
Fq@A!


 

 
 *K
 * 
k! 
 $j!$A!. #(
! #(!


 # 6 # 6
A!
 
 $ k!


 # 6 # 6

 #Aj$  

A A AA=  
A9A AA=  
A	A A۴A=  
AA AA   
AA AA   
A5A AA   
A A AA   
A A AA   
A A AA   
A A AA   
AA AA   
A A A A
  
A A AA   
AA AA   
A A AA   
A$A AA   
A A AA   
A A AA   
A A AA!  
A A AA!  
A A AA!  
A A AA!  
AA AA!  
A A AA!  
AA AA!  
A A AA!  
A A AA!  
_A!  "O   jAk-  " AqAtAj(  j  AvA
qAj( j  A q"Ej Av  A IqjA

~# Ak"$  !@@ @A! E

  I@@ E AFr
  A
jAi% E
 A
j"     (  AiF
  A
j" AԴ%      (  ApqAԴF
 Av!

 !

  A A0! A!@ AF
  ! (  "AiF
 Av! ApqAԴG
A! AI
 ( !  A6   7 A !

   " K
    6Ar!  j"Ak-  "Aq
  A q"E@Ap! -  "AK
 AqB AvA
j"B~ |!	 Aj!
 Av! Av!@@@@ Aq"Ak 
  j-  ! Aj!

  j/  ! Aj!

  j(  ! Aj!
 Aq!~@@@@ Ak 
B E

-- Chunk 94 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:13951-14100
  j1  

  j3  B|

  j5  

  j)  
!   6    6
   7 A !  A 6    	 "7   B BT>
 Aj$  
A A AA   
  E@A 
A@!  (E@  Aj( !  Aj( !  (!    (   /A !  A 6  ("@ @ ( "@    /
    /
  A 6
     /
 
AA A "   A 6  A 6  A 6  A 6  B 7  A 6  A 6  B 7  A 6  A 6  A 6  B 7  A 6  (@AA A߭A  
  A 6  A 6  B 7  B 7  A 

   E@A A AA7  
  (
   E@A A AީA  
  (

# Ak"$  Aj  1 Aj$ 
 A qE@ ( 
  ! ! !# A k"$ Al!@ A
I
  /  !
 / ! / !	 Aj ( 1@  	 
 jjAj"
I
  AI  AjAv" j"  j"  j"   j"Kr
  - 
!
 A j Aj" 
$"
 A@k  
j" $"
 A(j  j" 	$"
 Aj  	j  
k$"
 Aj!
 Ak!@   kAI@  ! ! !

A!  ! ! !@   IqE
 
 (X"	 (\"
 
Atj"
-  !  
- :   
 (@"
 (D" 
Atj"-  !  - :   
 ((" (," 
Atj"-  !  - :   
 (" (" 
Atj"-  !  - :   
 	 
 j"	 
Atj"
- !  	 
-  j6\  :  
 
  j"	 
Atj"
- !
  	 
-  j6D  
:  
   j"	 
Atj"
- !
  	 
-  j6,  
:  
   j"	 
Atj"
- !
  	 
-  j6  
:  Aj! Aj! Aj! Aj!  A j
Eq A@k
Eq A(j
Eq Aj
Eq!
 
 
  I  Ir
 Al!   I
@  kAN@ Ak!
@ (\"	A K
@ (`" (hO@ A j
!

  (d"
F
    
k 	Av"  k 
I""
k"6`  	 
Atk6\  (  6X
  
O r
 
 (X (\" 
Atj"	- !
   	-  j6\  
:   
 (X (\" 
Atj"	- !
   	-  j6\  
:  Aj!
 
 
 (\"	A K
  (`" (hO@ A j


  (d"
F
     
k 	Av"
  
k 
I"k"
6`  	 Atk6\  
(  6X
@@ (\"	A K
 @ (`" (hO@ A j
!

  (d"
F
    
k 	Av"
  
k 
I""
k"
6`  	 
Atk6\  
(  6X
  M r
  
 (X (\" 
Atj"	- !
   	-  j6\  

-- Chunk 95 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:14101-14250
:   Aj!


@  K@ 
 (X (\" 
Atj"	- !
   	-  j6\  
:   Aj!


@  kAN@ Ak!	@ (D"A K
@ (H" (PO@ A@k
!

  (L"F
    k Av"
  
k I""k"
6H   Atk6D  
(  6@
  	O r
 
 (@ (D" 
Atj"- !   -  j6D  :   
 (@ (D" 
Atj"- !   -  j6D  :  Aj!
 
 
 (D"A K
  (H" (PO@ A@k


  (L"F
     k Av"	  	k I"k"6H   Atk6D  (  6@
@@ (D"A K
 @ (H" (PO@ A@k
!

  (L"F
    k Av"	  	k I""k"	6H   Atk6D  	(  6@
  M r
  
 (@ (D" 
Atj"- !   -  j6D  :   Aj!


@  K@ 
 (@ (D" 
Atj"- !   -  j6D  :   Aj!


@   kAN@  Ak!@ (,"A K
@ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
  O r
 
 (( (," 
Atj"- !   -  j6,  :   
 (( (," 
Atj"- !   -  j6,  :  Aj!
 
 
 (,"A K
  (0" (8O@ A(j


  (4"F
     k Av"  k I"k"60   Atk6,  (  6(
@@ (,"A K
 @ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
   M r
  
 (( (," 
Atj"- !   -  j6,  :   Aj!


@   K@ 
 (( (," 
Atj"- !   -  j6,  :   Aj!


@  kAN@@ ("A K
@ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  O r
 
 ( ("  
Atj"- !    -  j6  :   
 ( ("  
Atj"- !    -  j6  :  Aj!
 
 
 ("A K
  ("  ( O@ Aj


   (
"F
       k Av"   k I" k"6    Atk6  (  6
@@ ("A K
 @ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  O r
  
 ( ("  
Atj"- !    -  j6  :   Aj!


@  I@ 
 ( ("  
Atj"- !    -  j6  :   Aj!


 Al (\ (` (d2 (D (H (L2q (, (0 (42q ( ( (
2q!

Al!
 A j$  
 A qE@ ( 
  ! ! !# A k"$ Al!@ A
I
  /  !
 / !	 / ! Aj ( 1@   	 
jjAj"
I
  AI  AjAv" j"  j"  j"   j"Kr
  - 
!
 A j Aj" 
$"
 A@k  
j" 	$"
 A(j  	j" $"
 Aj  j  
k$"

-- Chunk 96 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:14251-14400
 Aj!
 Ak!@   kAI@  ! ! !

A!  ! ! !@   IqE
  
 (X"	 (\"
 
Atj"/ ;   - !
 - !  
 (@" (D" 
Atj"/ ;   - ! - !  
 ((" (," 
Atj"/ ;   - ! - !  
 (" (" 
Atj"/ ;   - !
 - !  j" 
 	 
 
j"	 
Atj"/ ;    	 - j6\ - !  j"	 
   j"
 
Atj"/ ;    
 - j6D - !  j"
 
   j"
 
Atj"/ ;    
 - j6, - !  j" 
   
j"
 
Atj"/ ;    
 - j6  j!  	j!  
j!  - j! A j
 A@k
r A(j
r Aj
rE!
 
 
  I  Ir
 Al!   I
@@  k"AO@ Ak!
 (\!@ A K
@ (`"	 (hO@ A j
!	

 	 (d"
F
  	 	 
k Av" 	 k 
I"	"
k"6`   
Atk6\  (  6X
  
O 	r
  
 (X (\ 
Atj"/ ;    (\ - j"	6\  - j"
 
 (X 	 
Atj"/ ;    (\ - j"6\ 
 - j!
 
 
 (\"
A K
 (`"	 (hO@ A j


 	 (d"
F
  	 	 
k 
Av" 	 k 
I"	k"
6`  
 	Atk6\  
(  6X

  k!
@ AI
  Ak!
 (\!@@ A K
 @ (`"	 (hO@ A j
!	

 	 (d"
F
  	 	 
k Av" 	 k 
I"	"
k"6`   
Atk6\  (  6X
  
K 	r
   
 (X (\ 
Atj"	/ ;    (\ 	- j"6\  	- j!


@  
K
  
 (X (\ 
Atj"/ ;    (\ - j6\  - j!
 
 
@  M
   
 (X (\ 
"Atj"-  :    - AF@ (\ - j

 (\"AK
  
 Atj- j"A  A I
6\
@@  k"AO@ Ak!	 (D!@ A K
@ (H" (PO@ A@k
!

  (L"F
    k Av"
  
k I""k"
6H   Atk6D  
(  6@
  	O r
  
 (@ (D 
Atj"/ ;    (D - j"6D  - j" 
 (@  
Atj"/ ;    (D - j"6D  - j!
 
 
 (D"A K
 (H" (PO@ A@k


  (L"	F
    	k Av"
  
k 	I"k"	6H   Atk6D  	(  6@

  k!
@ AI
  Ak! (D!@@ A K
 @ (H" (PO@ A@k
!	

-- Chunk 97 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:14401-14550

  (L"	F
    	k Av"
  
k 	I"	"k"
6H   Atk6D  
(  6@
  K 	r
   
 (@ (D 
Atj"/ ;    (D - j"6D  - j!


@  K
  
 (@ (D 
Atj"/ ;    (D - j6D  - j!
 
 
@  M
   
 (@ (D 
"Atj"-  :    - AF@ (D - j

 (D"AK
  
 Atj- j"A  A I
6D
@@   k"AO@  Ak! (,!@ A K
@ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
  O r
  
 (( (, 
Atj"/ ;    (, - j"6,  - j" 
 ((  
Atj"/ ;    (, - j"6,  - j!
 
 
 (,"A K
 (0" (8O@ A(j


  (4"F
    k Av"  k I"k"60   Atk6,  (  6(

   k!
@ AI
   Ak! (,!@@ A K
 @ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
  I r
   
 (( (, 
Atj"/ ;    (, - j"6,  - j!


@  I
  
 (( (, 
Atj"/ ;    (, - j6,  - j!
 
 
@   M
   
 (( (, 
"Atj" -  :     - AF@ (,  - j

 (," AK
   
 Atj- j" A   A I
6,
@@  k"AO@ (!@ A K
@ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  O r
  
 ( ( 
Atj" / ;    (  - j"6   - j" 
 (  
Atj" / ;    (  - j"6   - j!
 
 
 ("A K
 ("  ( O@ Aj


   (
"F
      k Av"   k I" k"6    Atk6  (  6

  k!
@ AI
  Ak! (!@@ A K
 @ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  I r
   
 ( ( 
Atj" / ;    (  - j"6   - j!


@  I
  
 ( ( 
Atj" / ;    (  - j6   - j!
 
 
@  O@ (!

  
 ( ( 
"Atj" -  :    - AF@ (  - j!

 ("AK
   
 Atj- j" A   A I!
 Al (\ (` (d2 (D (H (L2q (, (0 (42q  ( (
2q!

Al!
 A j$  
# A k"$   ( 1 - !	 Aj  $"E@ Aj!   j!
@ AN@ 
Ak! (
!@ A K
@ (" (O@ Aj
!

  ("F
    k Av"  k I""k"6   Atk6
  (  6
   O r
  (" (
" 	Atj"-  !   - :      j" 	Atj"- !   -  j"6
   :   Aj! 

-- Chunk 98 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:14551-14700
 
 
 (
"A K
  (" (O@ Aj


  ("F
     k Av"  k I"k"6   Atk6
  (  6
@@ (
"A K
 @ (" (O@ Aj
!

  ("F
    k Av"  k I""k"6   Atk6
  (  6
   
O r
   ( (
" 	Atj"- !   -  j6
   :    Aj! 


@   
I@  ( (
" 	Atj"- !   -  j6
   :    Aj! 


 Al (
 ( (2!
 A j$  

  At Atj    At j AFj
       6 
~# Ak"$ @@@@@@A  kt"	Ak 
@  F
 A
j -        (
6  Aj!  Aj! 
 
 
@  F
 Aj -        ("6   6  Aj!  Aj! 
 
 
@  F
   -     "7   7  Aj!  Aj! 
 
 
@  F
   -     "7   7   7   7  Aj!  A j! 
 
 
@  F
   	Atj! -     !@   FE@   7   7   7   7   A j! 


 Aj! ! 
 
 
 Aj$ 
	~# Ak"$  Aj  ( 1 - ! AjA A !	AT!@ A
K
  Aj"
 	 Aj A
j   A	j"E@ (
"
 K
 Aj! Aj!  Aj! 
!@ "Ak! 	 Atj( E
 
 Aj"
A 
AK!
A !A!@  
G@ 	 At"j( !  j 6  Aj!  j!


  6  
Atj 6  Aj!
A ! (!@  G@   
j-  Atj" ( "Aj6   
j :   Aj!


A ! A 6A
  A
K  
A
I" 
Asj!A!@  
G@ 	 At"
j( !  
j 6    jt j! Aj!


  
Aj"
 k"kAj!	@A!  	I@@  
G@ At"  A4ljj  j(  v6  Aj!


 Aj!


 Aj!	 
 k! 
 "k! A  A JAj!A!
@ 
 G@ 
 
k!  
At"j( !  j( !
  
Aj"
Atj( !   k"M@  j"A AJ!A t!  A4lj!@ 
 F
  Atj! 
 
j-  !@ "AH
   A A!
@@  k"Aq@  Atj( "A t"O
A !@@@ Ak 
  AF
A A AA   
 AN
  
7  Aj
 
7 

@  N
  Atj" 
7  
7  
7  
7  Aj!
 
 
A A AA   
A.A AA   
A A AŠA   
 	   	H!  
j!@  G@  k!   At"j( Atj 
  j( j 
  Aj"Atj( j   A


-- Chunk 99 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:14701-14850

 
Aj!
  j!
 
   Atj 
 
j 
 j  A A

 

 A:   :    (6 
 !
 Aj$  
	~# Ak"
$  
A 6
 
A 6@ A	j"  
Aj 
A
j   A j"
  
Aj  ( 1 
("!A ! 
- "	A
 	A
IAj" 
(
"O@  M
   k!@  F@ !@  M@@ E
  AtjA 6  Ak!
 
   Atj   kAtj( 6  Ak!

 
   j"
 A  
-  "
 
j:   Aj!

 
 
  
" 	AjM@  Aj!
A ! 
A :  
 :    
(6  A4j!  A A NAj!A !@  F@@ Aj! Ak!	A !@@A !  	N@    J!@  F
    j-  Atj" ( "Aj6   j :   Aj!
 
 @ AG@     j"
j-  Atj" ( "Aj6   j 
:   Aj!


 Aj!

 

 Aj"A AK! ( !A ! A!@  F
  k!	  Atj( !@@@@@@A tAu"
Ak 
A ! A  A J!  !@  F
 
 Atj"
   jj-  :  
 	:   Aj! Aj!
 
 
A ! A  A J!
  !@  
F
 
 Atj"   jj-  ":   :   	:    	:  Aj! Aj!
 
 
A ! A  A J!  !@  F
 
 Atj   jj-   	Aq( Aj! Aj!
 
 
A ! A  A J!  !@  F
 
 Atj"
   jj-   	Aq"( 
Aj ( Aj! Aj!
 
 
A ! A  A J!  !@  F
 
 Atj!A !   jj-   	Aq!@  
H@  Atj"
 ( 
Aj ( 
Aj ( 
Aj ( Aj!


  
G
 Aj!  
j!
 
 
 Aj!  j!  
l  j! 
 
 
  At"	j( !
   	j 6  Aj!  
j!


A-A AA#  
AT!
 
Aj$  
P1~# A0k"$ # A@j"	$  	 "; A  "|"9BT 9BTj 9BTjAlA "E
 A  A H
  A AI
A
lj"Aj( 68 	 Aj) 70 	 Aj) 7( 	 Aj) 7  A H@ 	A  Ax AxKk64
 	 	(86 	 	)07 	 	)(7 	 	) 7 # A k"$   	(6  	)7  	)7  	) 7 @@ E@ !:@ AK ;BVrE@A! ; j"A O@ AkAj!
 	( " M
 	 6  !

 	( !
 !@@ :P
  AO
B "9 : ;|Z
 A
! 9 :|"9BV
  9AkAj!
 

A A AҬA2  
! 	("
 	("
!! 	(" Aj"
K@ 	 
6 
!
  !I@ 	 
 j !k6
 A	M@ 	A
6 
@ 

-- Chunk 100 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:14851-15000
A|E
   	(
"A AI"A AK"I
  Ar"M
  	 6
  	) 7  	(6   	)7  	)7 A j$ 

A A AA)  
A2A AĭA)  
 	A@k$  A6$ B 7( ($AG@A A AA  
# A k"$   ( 6  )7  )7  )7  @AA AA)  
  Aj"
A A"
 ( 6
 
 )7 
 )7
 
 )7 
 )$7  
 (,6( 
 A "6, 
 ( AA (AKA
6 
 ( AOAA (AKA
6 
 ( AOAA (AKA
6T 
A 6 
AA A
H6 A j$   ! !:# A k"%$  % 
(
6 % 
)7 % 
)
7 % 
)7  %E@# A k"
$  
 
(
6H 
A@k 
)7  
 
)
78 
 
)70@@@@@@@@@@ 
A0jE@ A6 Aj 
A (E
 (E
 (" E
 ("
E
A!  AF@  ("
6 ("
E@ A6A!

 (E@ A 6
@@ ("E@  
Ak" A  AK"6 AO

 (E@ A  
 k"    
K6
  
   
K6

A A AA  
 ( (I
 (AK
 (!

 
B 5"9 : 9 :T" A  "    
K"& ( ("! 
 )7( 
 )7  
 )7 
Aj &! 
 Aj) 7 
 Aj) 7 
 Aj"
) 7  
(  
(kAyK AKrE@ (E!
 (A G! (!.# A0k""$  
"AB 5"9 : 9 :T :P"    K" ( "	At3! ( .A A (tAjA
! (! (AF@ (" A  AI!
A t!A3!!A3!
A3!
A3!A3!
A3! ( .| 3A 
!  .E@A%A AA:  
  AtjA tA  j  j 
 !j 
j j 
j jA  (AKj! " )7( " )7  " )7A "(
"
tAA  
 "( k"    
KtjA  "(AF! A !
A !
 (AF@ " )7 " )7 " )7  " A
l3!

 @ At3!

 "A0j$   j  j 
jA
A  j 
j j 	AljAj" @  !


 Aj!
 (E@ 
 
(
 
(A  
( AjA 
6 
A  ( (  O 
(
 
(   
( AJA 
E@ (
 
 ( ( ( (A@   ( ("E
  Aq@A A AA  
 
 6 
 6 
 6  
   j"6 
B 7$ 
 6 
 
A 6  
8A 
"

 ( (A E
  
A#"6 E
 Aj 
A#"6  E
  

-- Chunk 101 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15001-15150
A "
6A!A@! 
E


 
 Aj (6  Aj )7  Aj )7  Aj )7  B 7  :B|7 B 7  &6 Aj (AF6  Aj B 7 A6  (A !
A !
 ( ("A @A (t!

 (AF@ ("A AI!

@@ @ (!
 @ 
 

 
A 6 
 
6  
 
(  
(k"6 
 6
 
A 6 
A 6 
A 6 
 
(
6
 
- 

 
 
(6
 
8 
 
A 
t"
At6\ 
 
 
6d 
 
A 
tA  
6` 
- 
A@@@ 
("
 
(O@ 
 
(K
 
(
" 
K@ 
A   
k
 


A A AA
  
AA AA
  
 ( |@ 
 
 
A "
A"A?qE@@ E
   
("O
  
 A   k" 
  
I6
 

A A AA?  
6( 
 
)PB 
5XB7P ("
 ("A AI"A AK"I
 
 
 k6$
 (AO@ 
 
A46p 
 
A46t 
 
A46x 
 
A46| 
 
A46 
 
A46
 
 )7 
 (6 
 )7 
 )7A@A  
- 



A%A A԰A:  
AA A߰A:  
A2A AA:  
"
  
 At46 (AF@  
A (t"
4"6 A  
 
 A
l4!  6  6 Aj A 6
 (@ A
j &"6  A
j 
 At46 
 
 &A jA! A 6 A 6  &6  6 
A A! A 6  6  
A A6 (AF@  
A ( (kt"
A"6 A  

@ ( AG
  (AF
  B 7 AjA 6  AjB 7 
  6  
 A6  
 A6  
 A6 
(
 
(j 
(  
(jk"  AkO   OqE
 A6A !


-- Chunk 102 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15151-15300

AA AA)  
A%A AɱA)  
A$A AʱA)  
A%A A˱A)  
A A A̱A)  
A4A AбA)  
A A AѱA)  
AA AA)  
AA AA)  
A@!
 
A j$ @ 
  (! Aj!! Aj!  Aj!
 Aj! (! E AIrA   (  A~G@ !   
   A 

A !
 (  A~F@ ((E@ ( !

A !# Ak"$  A6| A6 A6 A6# Ak"$  A 6L A 6H# Ak" $  Aj A j A j A j Aj"
 Ak  !  Aj$  E@  (PA G6AT (L"A
K
AP (H"	 (AjK
 Aj!
  6 A!@  K@ Aj!A !@ 	 G@ 
 Atj  Aj j-  " kA   Aq Aj!


A ! A 68 B 70 B 7( B 7  A 6 B 7 B 7 B 7 @ 	 G@ A j 
 Atj( Atj"   / Aj;  Aj!


A ! At jA ;A !@ @  At" j ;  Ak!   A jj/  jAqAv!
@ 	 G@  
 Atj"( Atj"   / " Aj;     Aj!


  	Ak6

 A j Atj"( !   6    Akt j! Aj!



 
! Aj$  (E@ A6
Ab! @ A G (AIr"
  Aj A j Aj 
A   j"  j"	 k="

  ("A	O
  Aj AjA  A n"
  A46
 Aj A
j Aj A  
 j"
 	 
k="
  ("A	K
  Aj Aj (
"
  A n
  A#j Aj" 
A46  A#6
  A
j Aj 
 j"
 	 
k="
  ("
A	K
  Aj Aj (
" 
 A n
  A#j Aj A#6  
 j"A
j" 	K
   (  6# A#j ( 6  A#j ( 6 A! 	 k"
AwM@ 
Aj"A AI!
 A#j Aj (| 6 A !
@ 
AG@  
AtjA#j( "E
 
Aj!
  
M



  k! 
 Aj$      !A  
    j"   j  kA  
A 


A A AA	  


"
   6  6A !
 %A j$  

AA AA*  
" E@ ! "
!! "! AD!@@@@@@ "	(  
 !   	Aj 	)B} 	("*
   *I
 	A6  ! *j!!   *k! 
 E
 	Aj   	Aj( E@ 	A 6 	Aj 	Aj( 6 
 	(AF@ 	Aj  A 
  ! !@@ 	("AI@ 	(!  	(@ 	Aj  
 	Aj!.A t!
 	Aj!5 	Aj!0 	Aj! 	Aj!1 !!@@ @A AI
 1  .        K"
j"@@@ 0@ 5E
  1(k" 0( "I
@  
j O@  1(
F

 0A 6  5A 6 


A A AA  
A A AA  
A A AA  
 1  
 0 5 	(" 	(K@ 	 6
   O!@ 	(@@ 	  
" 
 @@  
 @ 	(
  	( 	(kAuAI 	( 	(kA
IqE
   
E
    -   
 

A !# Ak"6$  	Aj"# 	( 	Aj(  	Aj 6Aj 	("E@ 	(!7 	(!' 	(!+A !# A k"
$   j!
 
 "j!8 #(""Ak! 6Aj" ( AF!( 	(! #(!2 #(!3 #(!4 #(
!% #(!$A!, ! #( "-!
@@@@@@@@ " -G@ 
Aj # 
 Atj"  Aj! 

-- Chunk 103 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15301-15450
( j!A !/   G

 $ %K
  % $k" M!A!/  ! E

 ! # Ak"$  A6
@@@@  (   
 + A
j $   +
 ' + (
?!  (  (  j  
Aj! 

A A AA)  
A! 
 Aj$  /E    ( 2A  'Aj"A AAA
 +  ( 4A#  AjAAAA# +j  ( 3A4  AjAAAA4 +j! ,  ( j 
AjA
  jAjOq
 
A 6 
A 6A !# Ak"$  
"  Atj!A !
@   kA J@ Aj #    Aj!  (
 j! ( 
j!



@  
O@ /E  
Gq
 Aj$   j

A7A AA9  
A7A AA9  
!& 
 k!A !  Aj!A! (@  ( !
 Ak! 
A 6 E@   $A 

@@@@@@@  ( " 
   $ 

AA AA(  
 AAAAA  ("k KA k Mj"j!
 (E AGrE@ 
  Aj  (  (" j!

  j 
k!A ! AF@ 
  $  'G

 
  $  '
"E
 
 (A G   j"  IrE
    A KAA  AKjO
   M

   $ 

@@@@@ Ak 
   Atj  AtjAj%

   Atj  AtjA
j%   A
v: 

A A AA(  
  AGAt Atr j  Atj>
 
A6 
 j k!
 

A6A A֚A(  
"@ 

 A G /q!A !@ E
  'Aj!
  Aj!) 	(! 
A 6A! @  j  j"k"AH
  A O@ AM@  :   AvAs:   Aj

 A:   Aj AkAq0 Aj

  :  A!  E
 Aj
!  j! AK!  Aj!@ ,@  )(At )( Atj )(Atj:    )A
j )( )(j!

 A:  
   k 
Aj 3 
 2 
Aj 4 
   " 
 @ ,E
  )("E
    j"AK
 A !  AF
A A AߛA
  
   j!A !   kAH
  
A6  k! 
    
  E
      j k"AtjAk>
 
" 
  E   &Or
  &j" 8K
A  , 
(!,A  ( 
(!(  2j!2  3j!3  4j!4   j!  $j!$ 
 Atj!
A !A 

A A AӝA-  
AA AԝA-  
A A AA-  
 
! /E
 
 (@ ' 7A
 ,@A ! A!@  (AkAI
   (AkAI
   (AkAI!
 

@  8O
   
 k  8 k }" 
  E
   j! 
 "O
  
 7A#j( 6 
 7)#7@ 
 -K@ -( !  
 # - 
Aj   
( EF -Aj!-


 ' 
)7# 'A#j 

-- Chunk 104 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15451-15600
(6 
  k! 
 
A j$   

A A AA-  
!
 6Aj$  " AF
  
 	(!  
  E   
 kAjOr
  	Aj  

    
 }! 
  
" 
  	("A#j( AG
  A6#
  
  E
   
AjM
A8A AA,  
 	(" E@A$A AA   
  AF@ 	(AF@ 	  
"     AF@ 	(" A#j( AF@  A6#
    
 }

 ! ! ! 	( 	(kAu! A !A !A !
# A k"$ # Ak"
$  
A 6
 
 	Aj6  AO@ 
AjA    	 	Aj 
( 
(
"Atj  6 
 
Aj$   	("
A#j" ( 6  
)#7   ( 6  
)#7  	AjA A,! 	Aj!@@@ "
E@ 	  Aj     
 A " 
 	("AO
   AjM
A8A AA*  
 	Aj" A  	(A ! @ 
 O@ 
 A !A ! ( ( "kAu!@  G@   Atj/jAj! (( F@ Aj  ($AF!
 Aj!


 
j"j!
 
 F@ 
 j 
k! 

   	 Atj"Aj(  Aj( A 
! 	  Aj      A"@ ! 

  A,  	(AjK
 Aj!  j!  j!  k!   j! 


 	(" )7# A#j (6 
 A j$   

A A AA*  
A7A AA*  



A>A AA-  
" 
  
A !  	(AF
A A AA,  
 Aj! Ak!A ! @@@A 	 " 
"AFAt  
 	(@ 	 	AjA 

 	Aj 	( 	Aj(  	Aj   
 	( 	(!  	(  AKr
   
E
   -  :  A! 
    AIrE@ 	Aj
 	("A#j( AF@ A6#
  !
 
" 
 @@@   
    
 }" E


 
At!A

 !  At!A
  rr>  Aj! 
   K
 	A 6   k!  
k!   j! ! 
! 


  !K@ 	A6 
  !k! 
  

A A AA,  
A A AA,  
A:A AA,  
"
  	 	) |"97 	 	)  *j" |7 	(A  	)":P
A   9B| :V   :B R!
 

A	A AA*  
AA AA*  
 *
"@ 

  k!AD!  
j" !@@@@ 	(  
    	AjB A "
 	A6    j!  k!
A! AI
 A% Ak! Aj!
 	(@A! 	Aj!9 AI
  9% Aj!
 	A 6    k!
  
  	)!9@@ 	(@ 9B R
AA AA   
 9P

A 9 	)B|R

  j

! 

-- Chunk 105 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15601-15750
 A0j$   
=   A1     A Bьٟ~" B# |  Bьٟ~" B
  
   ($"O@A   M
 @ 
     ("6    ("6A@  A  kA?q"j"I
   6
   6 E
    6
   6$  8A 

A;A AA;  
K    ("Aj6    ( A tr6   &  (
"  (I   (k  (A GjA 

     Al

   A  
-@  (
AG
   (AG
   (   (kAF!
 
~# A k"	$  (T!
 	 (
6h 	 )7` 	 )
7X 	 )7P 	  )78 	A@k  )7  	  (6H 	  )70  j"Aj  AyK"! 
AF A Gq!
 	A j 	A0j@@@@@@Ay  "AO@ 	  )7( 	  )7  	  ) 7 	AjE
 
E
 	 )7 	 )7 	 ) 7  	E

    A  
E
   A   (0A   (k
6
# A0k"$  (! (\! (X!
 A j (`" (d A$j!
A  k!
  "j!A 
 ktAs!
@  I@A ! A 6
 A j   k 
 A
j! (
!@  G@    Atj($j"
M@ 
 
j" ! ( ! (!
  )d7  )\7  )T7  
   
q  k B  
 Aj!


  j!


 A0j$ 

    A 
 (
AM@A (
" ("  I"A
 A
It"   K"!  k  !
     ("k6
  A   k (06   (6h A	O@      @@@@@@ (
Ak	 
   

  (l@  (dE
 Ak!A !@  ("AI@   ("I@  (
"@   ("k"
A Ak"t"k   
I" 
A t"
k  
 
 kI"M@A  (tAk"A AI!  (\"
A t"Atj!  (d!  
  
K! A!I!@  F@A !
@@  G@A !A ! 
 Atj"!@ ( " I AKrE@ Aj!   Ij!   kAtj!


A ! AG
@  F@ !

  I@ E
 Aj"AK

  
Atj 6  Aj! 
Aj!
  I
   kAtj( !
 
 
@ 
 
M@@ @ 
 Ak"At"j( !A !@ AG@ 
  jAtjA 6  Aj!


 
 AtA
rj 6 


  (
" 
 
 I! A!I!@  G@ E
  j!A!@@@@@  (Ak 
  

  

  

  

  
At!@ @ 
  jAtj" Ak( 6  Ak!


 
 Atj 6  Aj!


   
6



A8A AA	  


  
 kAt jA  6  Aj!
 
 
 @  j!@@@@@  (Ak 
  


-- Chunk 106 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15751-15900
  

  

  

  
!  O@   kAtj 
 Atj( 6 
 
 Atj 6  Aj!




A&A AA	  
A A AA	  
A2A AA	  
A A AA	  


@@@ ( 
A%A AA  
  ((A A (
t@@@ Ak  ("
k"
  (
"O@A  ("A AI"A AK"tAs!  ((!  (\!  ($Aj"
A!I!  ("A AIAk!@  
G@ E
  
j!
  )P! @@@@  
 
 
 


 
 
 


 
 
 


 
 
 

"Av t"j"A   -  A j q" j":    )P!@@@@  
 
 
 


 
 
 


 
 
 


 
 
 

 G
  j :    Atj Atj 6  Aj!


   
6


A
A AA+  
A A AA   
A A AA'  


  (
" Ak"  ("k"  K!A  (tAs!
  (d!  (\!  ("
A!I!  ("Ak!@@  G@ E

  j!   
qAtj @@@@@  
  


  


  


  


  

Atj"( 6   6  Aj!


   6
 
A!O
	 AF@  


 


 Ak  ("k!  (!  (
!@@  O
     j   A ) j"I! ! 
 
AA AڂA,  
   6


A A AA  
   
     (k6

 	A j$ 
A A AA  
A A AA  
A A AA  
A A AA  
/   B 7
  A6  A6  A 6  A6 
:   A A " Bɡ 7   BӾǫB7  B 7
<    (6
  (!  A : 
   6  ($AO@  A6$
  8

     O
    k
  ( AF   (
nA 

   AAA  AFn

-- Chunk 107 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:15901-16050
@ Ak!  ("  (
j!  (\!  ("A!I!  (Ak!@@  " Aj"K@ E
   k! @@@@@  
   

   

   

   

   
Atj 6 




A A AA  

	@ Ak!  ("  (
j!  (!  (d!  (\!  ("A!I!	  (Ak! @@ Aj K
 	E
 @@@@@   
  

  

  

  

  
! A!I@  !
  Atj  k"6   
Atj 6  Aj!



A A AA  

     (tAtj
~  )!
  ) !	@@  Ar"M@    I!@  F@ !

  j! Aj! -  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
 


 Ar!@  j-  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
  !

 Ar!@  j-  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
  !

@  j-  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
  !

 Aj!  j-  AtAj)  	B|"	 
B R
  ( "Atj 6   Aj"6  A G


   	7  
;   B7   B BB  A  A I"  k   IB  7
D @@@@  (Ak	 
   
A A AA
  
   

:   (k"  (
"AjK@     kAk" A  AIk6



   (  (
I
D  (!  (
  (     (
 Avj6
    (Aq6    (  Axqv6 
A @  jAk"AF@ E
  ( Ak
   Atj( 
A A AA  
-A! AO    AtjAj>   : AA

 Aj! Aj! Aj!@@  K
@  kAI
   (AK
          jAv"      !	  !
  !
 	
  

  
 
 
j 	Or
         (   ("Atj 6    Aj6 !



A
A AA   
# Ak"
$  
 (6 
 ) 7  	@@ ( ( kAu"! ($AF@ ((!
@@@ 
 G@ (  
Atj"( "
E
 /E 
 Gq!
@ 
"	AK
   
 
  
 
"	F@ ( !	

 	E
  	Aj"	6 
  	 
F  
 
F 
Aj!





A A AA
  
A A AA
  

A!	@ AI
    (  Aj(   Aj Aj Ak   (  ("	

-- Chunk 108 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16051-16200
   ( 	AKrE@A 	  !	
  Aj!  (@   A !	

@@@@ 	 
     }"	
  
) 7   
(6

   -    "	
  
) 7   
(6

    	AtjAj> 	Aj!	
 ( " A#j( AG
   A6#
 
Aj$  	
   (
      (
 j6


~# Ak"$  (!
 (  !
@@@@@@@@@@@@ (AO@   6      
 !   o

  ("  (
"K
   (K
  j"
A k!@@  M  
OrE@ 
 k!   (   ("A
lj") "7   (6@ @  (" (jO@   Aj6

@  K@   k"6  
O

 A 6 
    


A A AA   
 ( "E
  ("j"	 ("j" 
K
    A!      
 !@ @  Atj  Ak"Atj( 6 


  6  (
 ( ( kAuM
 ( "AO
 (
" j ( jK
	 	 
K
 	 k!@ 	 M@   AI
 (
"	Aj"
 Aj"kAkAaO

 
  A!H
  	j!
 	A j!@  Aj Aj A j" A j" 
I
 


   	 	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  (
!  (! !


 
 k!
          
 !
 Aj$  
A5A AA  
AA AA  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
^# A k"$    )7   )7   ) 7A Aj
 A   (" E
 AA  (l
!  A j$   
@ E
   ("  (
"  K!@  F
  ( " A
lj"(" O@   k6
 A 6  k" ("I@   k"6  O
  Aj"K@  A
lj"Aj ( j6 
   6
 A 6   Aj"6  k"
 


 @@@@@@  (  ( F@  ( (G
  ( (G
  (
 (
G
  ( (G
  ( (G
  ( (G

A2A AA  
A3A AA  
A3A AA  
A3A AA  
A1A AA  
A.A AA  
A
A AA  
m   (k!@   ( A 
 jM
   ("  k"I@   6 !
   (
K@   6

 @ A 6 
 E
  A 6 


-- Chunk 109 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16201-16350
@ E
     )  |7 @  (H" jAM@   jA(j    (H j!

  j! @  A(j" j A  k    ) 9'7    )  A0j9'7    )  A8j9'7    )   A@k9'7   (H!  A 6H  kA j!
  A jO@ A k!@    ) 9'7    ) Aj9'7    ) Aj9'7    )  Aj9'7  A j" M
 

  O
  A(j   k"
   6H

	@# A k"
$  Aj!  (
  ("
k!	  (  ( "k"Au!
 (
!  (!  (!  (!  	 
nAKA
! !
 ! 	! ! !	# Ak"$   A!@ 	
  (!	@ A N@ A
O
AAA	 k"A AIt 	AF

A A AA  
A A AA  
 K
 A A KAA AKj"	 O
  ("6
 	 
j  	k 
 AA
 A   A
j AKAt AIAtA  AIr A GAtr A GrAA AF 	AFq AIr"
 ! (
!@ E    kOrE@ E

  A

@ AG
  AM@ 
 E

  A 
  
 

 E@ A6
AA !
@@@@@ 	Ak 
 
 At Atj 
rAr%

 
 At Atj 
rA
r% 
 A
v: 

A A AޕA
  
 
AA   
r AtrAs Atj>
  	j

 
  
 
! Aj$ @@@@ "
   K
  
j!A! 
 j"
 kAH
  
 
A M@  
:   Aj

 
AM@  
:   
AvAs:   Aj

 A:   Aj 
AkAq0 Aj
"I
 Aj!	 E@ 	 AjA  
k!

 
Aj   
 Aj 	 Aj" 
    
("
   
(
At 
(Atj 
(Atj:   
(!   j" 
 k Aj  	  Aj   
 
(
"
   j" 
K
@  E
    j" AK
 A !  AF
A A AA+  
  
k!
 
A j$  

A	A AA+  
A A AA+  
A A AA+  
" E  AF  Mqr
   @  !

     (
kO
   "AI
 A A AA;  
 
# Ak"$   Aj!@@  ("  ("AjK@  ( ( "
kAu"	Aj"I
  ( Atj!
 (
 (k!
   ("A#j( 6  )#7 @  	G@ 
 Atj"( ! 
 Atj" /"6 /!
 A 6
  
Aj6 Ak!@@@@@  ((G
 @ ($Ak 
  
Aj6
 AO
  6
 
 AG
 ( Ak!


-- Chunk 110 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16351-16500
  Ar6 AK
  6

 At jAk( !

  Atj( !
  6    EF Aj! ( j!


  
K
 
 	Atj" 
 k6 B 7 A 6     ( j6 Aj$ 
A
A AA  
A A AA  
A A AܻA  
]@  ("  (O@   (K
   (
"I@   6
  8
A A AՅA'  
AA AօA'  
R@  ("  ("O@   (K
   6  8
A A AͅA  
AA A΅A  
@@@@@@@  AkqE@   ("k"A t"Ak"q"     Ij A AKA  AIj" qG
  O
  k"AM
    j6    ( j6  A  (" k  Aj"I"6  A  (
" k  K"6
  I
  kAM
  I
  I
    (Aj6 
A A AA  
AA AA  
AA AA  
A A AA  
AA AʐA  
A A AːA  
AA A͐A  
AA AΐA  
    (kAzK
# A k"$    )7   )7   ) 7 Aj @   ( (
A (t !   (\A (
t @ (
 (  (lE
 A (t!  (d! (
AF@ Am!	@ AqE@ A H
 Aj!
A !@  	G@ Aj!@  G@  Atj"AA  ( " k  
I AF6  Aj!


 Aj! !




A A AA+  
AϊA AA+  
   
  ( "@  (`A t 
   A 6  A 6  A   (
"  k"   I6

 A j$ 
 Aq"!@ AO@ Ak!B   '  BBޛ~Bꃱ }!  Aj!


  Aqk"AI  Ak! AF@# Ak"$  A
j A (
! Aj$  

 ( 
Bޛ~  BBӾǫB~B|!  Aj
!@ @ Ak! 1  Bٲ'~  B
Bޛ~!  Aj!


  B!  BӾǫB~" B
  B~" B   
/    6
   6  B 7     jAk6AA  AI
u~~  ) "B Z@  )"B  )"B|  )"B
|  ) "B| < < < <

  )Bٲ'|
!  |  A(j A 
 BV BVj BVjA  ( "! (!	 ((! ($!
 A  BQE@A!@ AI
 A  A G AKj AKj " 
A JAtjA A  A GA 	t Zq"r Atr!A ! ( E@  Ai%A!
   j :   Ar! E@   j 	AtA k:   Ar!
@@@@@  
A A AA!  
   j :   Aj!

   j Aq0 Aj!

   j % Aj!
@@@@@  
A A AA!  
 E
   j <   Aj
   j AkAq0 Aj
   j % Aj
   j ( Aj!
 
AA AA!  
>  ! !  AM@A A A A4  
 Aj"  Aj"   I
d Ak!  ! AM@A A A A*  
   k"  A
  "    K"    I" A  AK" A
  A
I

   A 6$    (6
    ( 6
3   (  !  A!O@A A AA   
  AlA  kv
   Bƕ˛O~ A  k
j A
M@ Aj!A !@  FE@   Atj" ( " v  rA Gj"6   j! Aj!


 
A A AA  
  A@k( @@  FE@  (   j-  Atj" ( Aj6  Aj!


    ( Atj6
  ( Atj" ( Aj6     (
Aj6
 "A O@A5A AA  
  (
 Atj" ( Aj6     ($Aj6$  ( AkEAtj" ( Aj6     ( Aj6 
@ A@k( E@A!

A
! (8AF
  (("AO@ Ak!A!@ AqE
 (   -  Atj( !  @ +

 *

-- Chunk 111 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16501-16650
" K  
k!A !
 
 
A A AA  
 
# Ak"$   A@k( !  A 68@@@@@@@@  (
E@ AM@  A68
  (<"E
 (AF@A !  A 68@ E
   ( E
A !  A 6@ AF
 AO@A A A A?  
  Atj("A
O
  (  AtjAA
 ktA "6     ( j6 Aj!  (<!
 
 
  Aj  A 6
 (!@ A$G@  "A
O
  ( AtjAA
 ktA "6     (
 j6
 Aj!


   (<AjA !  A 6  (!@ A5G@  "A
O
	  ( AtjAA
 ktA "6     (  j6  Aj!


   (<AjA !  A 6$ (!@ A F
  "A
O
	  (
 AtjAA
 ktA "6     ($ j6$ Aj!
 
 
  ( "E
 @ A6     ~    ( AAA 6
  (AA  AA$6
  (!A !@ A5G@  AtjA6  Aj!


  A56   (
AA  AA 6$

 @    ( AA
6
    (A#A
6
    (A4A
6     (
AA
6$
    Aj$ 
A A AA  
A A AA  
A5A AA  
A5A AA  
A5A AA  
A5A AA  
A A AA  
(  AtA   AkA  AI  AIAtjAj( 
   Ayl sA  kv
   B˛O~ A  k
   hAv
7  A O@A A AA   
  B˛O~ A  k
>@@@@@@@@@@@@@@  (Ak 
 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k! 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E
  !
 

A   k! Aj! 
 
 
Atj( "j!	A!@   Atj"( !   
k"6  
 
Atj 6  Aj" j(  !
  E 
 (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !
@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 
 
 
Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M

-- Chunk 112 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16651-16800
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 
Atj  
k6 
 E
	 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj"
6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 
 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  ! ! 


 !








 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k! 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E
  !
 

A   k! Aj! 
 
 
Atj( "j!	A!@   Atj"( !   
k"6  
 
Atj 6  Aj" j(  !
  E 
 (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !
@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 

-- Chunk 113 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16801-16950
 
 
 
 
Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 
Atj  
k6 
 E
 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  
K
@  M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj"
6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 
 ( kAuM

 ( "AO

 (
" ( jK

  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  ! ! 


 !








 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k!
 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E

  ! 


A   k! Aj! 
 
 Atj( "j!	A!@   Atj"( !   
k"6  
 Atj 6  Aj" j(  !  E  (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (

-- Chunk 114 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:16951-17100
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 
 
 Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 Atj  
k6 
 E
 (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  
K

@  
M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 ( ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  
M@  

    
	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  ! ! 


 !








 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k! 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E

  !
 


A   k! Aj! 
 
 
Atj( "j!	A!@   Atj"( !   
k"6  
 
Atj 6  Aj" j(  !
  E 

-- Chunk 115 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:17101-17250
 (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !
@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 
 
 
Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 
Atj  
k6 
 E
 (
 ( ( kAuM
	 ( "AO
 (
"  k"j ( jK

  
K

@  M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj"
6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 
 ( kAuM
	 ( "AO
 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  ! ! 


 !








A A AA   
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A

-- Chunk 116 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:17251-17400
  
A=A AA"  
A A AA"  
b
@@@@@@@@@@@  (E@  (!  (AO@@@@@ Ak 
 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E

A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E
 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M
 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E

-- Chunk 117 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:17401-17550

A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E
 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M
 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E

A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 

-- Chunk 118 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:17551-17700
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E
A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E

 Aj!A!

-- Chunk 119 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:17701-17850
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !



	




@@@@ Ak 
 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E

 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E
 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 

-- Chunk 120 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:17851-18000
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M
 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k 
! 
  Atj  k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E

 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	

-- Chunk 121 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18001-18150
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k 
! 
  Atj  k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E
 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G

-- Chunk 122 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18151-18300
 Aj"   k 
! 
  Atj  k6  (
 ( ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj6  ! ! 
 
 


  !	 !



	




 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E
	 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO

 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k 
! 
  Atj  k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


-- Chunk 123 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18301-18450

  !	 !








A A AA  
A A AA   
A A AA  
A A A A
  
A=A AA"  
AA AA   
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
H@  E
 A@  (
  Aj  !   
     (  (  (/
A 


A
A A "     A 

8 @  AxM@  Av  jA  kA
vA   AIj" 

A! 
  
   

        A    	 


        A     	 

H~# A0k"$ ~B~    A 
 B  (AF
  ) 
! A0j$  B  
u"E@A@
      A A @@@@ (Aj 
A A AA  
 A 

 A 6
 (
!    
         A 
 
T# A
k"$  Aj" E@A A AA
  
      A A  !   A
j$   
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("  (
"j"kj"M@  ("
O@  (!
  (!	  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  j"k  K"A AIj"  I!A 
A 
AI"A AK"
t!  ((!
  (\!  ($Aj"A!I! 	A 	AI"A AK"
Ak!	 
Ak!@@  G@ E
  j!  )P!@@@@ 	 
   


   


   


   

!@    
  Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A  j"k!	@@@@@@  I@ Aj!A !@   	j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ 
Ak 
     
A
jR

     
A
jQ



@@@@ 
Ak 
     
A
jP

     
A
jO

     
A
jN



@@@@ 
Ak 
     
A
jM

     
A
jL

     
A
jK


-- Chunk 124 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18451-18600


     
A
jJ
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "	A{K
  Al 
kAj 	Aj"	AlN
 A!
 ! 	!
 
A6@@@@@  
@@@ 
Ak 
     
AjR

     
AjQ



@@@@ 
Ak 
     
AjP

     
AjO

     
AjN



@@@@ 
Ak 
     
AjM

     
AjL

     
AjK



     
AjJ
"	AI
  At 
kAj 	At 
("kN
  !
 	! "!

  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 
A6@@@@  
@@@ 
Ak 
     
AjR

     
AjQ



@@@@ 
Ak 
     
AjP

     
AjO

     
AjN



@@@@ 
Ak 
     
AjM

     
AjL

     
AjK



     
AjJ
"AI
  At 
kAj At 
("	kN
  	!
 ! "!


 
AI@ ! 


    
 jkAj" I"
 j! 
  
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 
Ak! 
! (
 ( ( kAuM
 ( "	AO
 (
"  k"
j ( 	jK
  K
@  M@   
AI
 (

-- Chunk 125 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18601-18750
"Aj"	 Aj"kAkAaO
 	  
A!H
  
j!	 A j!@  Aj Aj A j" A j" 	I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  j"k  K"A AIj"  I!
  ($Aj!  ((!
  (\!	@  
G@ A!O
  j!  )P!@@@@ 
Ak 
   


   


   


   

!@ 
Ak   
 	 Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ !
  K
    
 jk" I"
 j!  AsjAI
 (   (  G
 Aj Aj    
 ! (
 ( ( kAuM
 ( "
AO
 (
" ( 
jK
  K
 Aj!
@  M@  

    	
 ("A6  A ; 
AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  
j! ! 
!
 
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("	O@  (!
  (!
  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  
j"k  K"A AIj"  I!A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"
Ak!
 Ak!@@  G@ E
  
j!  )P!@@@@ 
 
   


   


   


   

!@    
  Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A 

-- Chunk 126 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18751-18900
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  
j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ Ak 
     
A
jR

     
A
jQ



@@@@ Ak 
     
A
jP

     
A
jO

     
A
jN



@@@@ Ak 
     
A
jM

     
A
jL

     
A
jK



     
A
jJ
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 
j 
 I"
"(   (  G
  Aj Aj    
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@@  
@@@ Ak 
     
AjR

     
AjQ



@@@@ Ak 
     
AjP

     
AjO

     
AjN



@@@@ Ak 
     
AjM

     
AjL

     
AjK



     
AjJ
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ 	! 

  
  
 
jkAj" I"	 j! 
  	!	@@  	M  Or
  Ak"-   Ak"-  G
  Aj! !


 ! 
Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"	j ( 
jK
  K
@  M@   	AI
 (
"Aj"
 Aj"kAkAaO

-- Chunk 127 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:18901-19050
 
  	A!H
  	j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   	; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  I!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!	  )P!@@@@ 
Ak 
 	  


 	  


 	  


 	  

!	@ Ak   
 
 	Av t"AtjA E
 
 j E
   AqAtj 	6, Aj!


  A 6
@ !	  K
  
  	 
jk" I" j!  AsjAI
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 	!
 
 
  	6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("O@  (!  (!  Ej!  j k!  A 6  (
"	 	A   j"
Ak"Aj"
 	 
j"k  K"A AIj"  	I!A A AI"A AK"t!  ((!  (\!  ($Aj"A!I! A AI"A AK"
Ak! Ak!
@@ 	 G@ E
 	 
j!  )P!@@@@  
   


   


   


   

!@ 
   
  Av t"AtjA E
  j E
   	AqAtj 6, 	Aj!	


  k! 
A k! 
Ak! Ak!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@ 
Ak 
@@@  
    
 
A
jR


-- Chunk 128 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19051-19200
    
 
A
jQ



@@@@  
    
 
A
jP

    
 
A
jO

    
 
A
jN



@@@@  
    
 
A
jM

    
 
A
jL

    
 
A
jK




    
 
A
jJ
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j! 
  !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO

 (
"  k"j ( 
jK

  
K

@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM
 	Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  	j!  (@  (
" A  
  
j"k  K"A AIj"  K!	  ($Aj!  ((!  (\!
@  	G@ A!O
  
j!  )P!@@@@  
   


   


   


   

!@    

 
 Av t"AtjA E
  j E
   AqAtj 6, Aj!


  A 6
@ !  K
  
   
jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(

-- Chunk 129 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19201-19350
  ;  Aj6  j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("  (
"j"kj"M@  ("
O@  (!
  (!	  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  j"k  K"A AIj"  I!A 
A 
AI"A AK"
t!  ((!
  (\!  ($Aj"A!I! 	A 	AI"A AK"
Ak!	 
Ak!@@  G@ E
  j!  )P!@@@@ 	 
   


   


   


   

!@    
  Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A  j"k!	@@@@@@  I@ Aj!A !@   	j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ 
Ak 
     
A
j[

     
A
jZ



@@@@ 
Ak 
     
A
jY

     
A
jX

     
A
jW



@@@@ 
Ak 
     
A
jV

     
A
jU

     
A
jT



     
A
jS
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "	A{K
  Al 
kAj 	Aj"	AlN
 A!
 ! 	!
 
A6@@@@@  
@@@ 
Ak 
     
Aj[

     
AjZ



@@@@ 
Ak 
     
AjY

-- Chunk 130 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19351-19500

     
AjX

     
AjW



@@@@ 
Ak 
     
AjV

     
AjU

     
AjT



     
AjS
"	AI
  At 
kAj 	At 
("kN
  !
 	! "!

  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 
A6@@@@  
@@@ 
Ak 
     
Aj[

     
AjZ



@@@@ 
Ak 
     
AjY

     
AjX

     
AjW



@@@@ 
Ak 
     
AjV

     
AjU

     
AjT



     
AjS
"AI
  At 
kAj At 
("	kN
  	!
 ! "!


 
AI@ ! 


    
 jkAj" I"
 j! 
  
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 
Ak! 
! (
 ( ( kAuM
 ( "	AO
 (
"  k"
j ( 	jK
  K
@  M@   
AI
 (
"Aj"	 Aj"kAkAaO
 	  
A!H
  
j!	 A j!@  Aj Aj A j" A j" 	I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  j"k  K"A AIj"  I!
  ($Aj!  ((!
  (\!	@  
G@ A!O
  j!  )P!@@@@ 
Ak 
   


   



-- Chunk 131 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19501-19650
   


   

!@ 
Ak   
 	 Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ !
  K
    
 jk" I"
 j!  AsjAI
 (   (  G
 Aj Aj    
 ! (
 ( ( kAuM
 ( "
AO
 (
" ( 
jK
  K
 Aj!
@  M@  

    	
 ("A6  A ; 
AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  
j! ! 
!
 
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("	O@  (!
  (!
  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  
j"k  K"A AIj"  I!A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"
Ak!
 Ak!@@  G@ E
  
j!  )P!@@@@ 
 
   


   


   


   

!@    
  Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A 
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  
j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ Ak 
     
A
j[

     
A
jZ



@@@@ Ak 
     
A
jY

     
A
jX

     
A
jW



-- Chunk 132 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19651-19800

@@@@ Ak 
     
A
jV

     
A
jU

     
A
jT



     
A
jS
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 
j 
 I"
"(   (  G
  Aj Aj    
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@@  
@@@ Ak 
     
Aj[

     
AjZ



@@@@ Ak 
     
AjY

     
AjX

     
AjW



@@@@ Ak 
     
AjV

     
AjU

     
AjT



     
AjS
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ 	! 

  
  
 
jkAj" I"	 j! 
  	!	@@  	M  Or
  Ak"-   Ak"-  G
  Aj! !


 ! 
Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"	j ( 
jK
  K
@  M@   	AI
 (
"Aj"
 Aj"kAkAaO
 
  	A!H
  	j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   	; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  I!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!	  )P!@@@@ 
Ak 
 	  


 	  


 	  


-- Chunk 133 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19801-19950

 	  

!	@ Ak   
 
 	Av t"AtjA E
 
 j E
   AqAtj 	6, Aj!


  A 6
@ !	  K
  
  	 
jk" I" j!  AsjAI
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 	!
 
 
  	6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("O@  (!  (!  Ej!  j k!  A 6  (
"	 	A   j"
Ak"Aj"
 	 
j"k  K"A AIj"  	I!A A AI"A AK"t!  ((!  (\!  ($Aj"A!I! A AI"A AK"
Ak! Ak!
@@ 	 G@ E
 	 
j!  )P!@@@@  
   


   


   


   

!@ 
   
  Av t"AtjA E
  j E
   	AqAtj 6, 	Aj!	


  k! 
A k! 
Ak! Ak!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@ 
Ak 
@@@  
    
 
A
j[

    
 
A
jZ



@@@@  
    
 
A
jY

    
 
A
jX

    
 
A
jW



@@@@  
    
 
A
jV

    
 
A
jU


-- Chunk 134 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:19951-20100
    
 
A
jT




    
 
A
jS
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j! 
  !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO

 (
"  k"j ( 
jK

  
K

@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM
 	Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  	j!  (@  (
" A  
  
j"k  K"A AIj"  K!	  ($Aj!  ((!  (\!
@  	G@ A!O
  
j!  )P!@@@@  
   


   


   


   

!@    

 
 Av t"AtjA E
  j E
   AqAtj 6, Aj!


  A 6
@ !  K
  
   
jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"	$  (!
 ( !  A 6  (
" A   j"Ak"
   ("j"k  Ak"K"A AIj"  I!
A  ("A AI"A AK"t!
  ("  (
"j!   (j!   j" Fj!  ((!
  (\!

-- Chunk 135 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:20101-20250
  (!  ($Aj"A!I!  ("A AI"A AK"
Ak! Ak!@@@@@@@@@@@@  
G@ E
  j!  )P! @@@@  
    


    


    


    

!@    
 
 Av t"AtjA E

 
 j 
E

   AqAtj 6, Aj!


 A k! Ak! 
Ak!@@@@  I@  (  (  k"
Aj" !
 Aj!A !@   k"
kAI   
kKr
  (     
 I" 
j"
(  G
  Aj 
Aj     Aj!
 	A6
@@@@  

@@@ Ak 
     	A
jd

     	A
jc




@@@@ Ak 
     	A
jb

     	A
ja

     	A
j`


	
@@@@ Ak 
     	A
j_

     	A
j^

     	A
j]



     	A
j\
"   K"
"AI
   
! 	(
A 
!
@@  O
  
Aj!
 Aj!@ 
E@A !


  
 k"kAI  
  (  ( 
 kKr
  (       I"j"(  G
  Aj Aj     "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 	A6@@@@@  
@@@ Ak 
     	Ajd

     	Ajc




@@@@ Ak 
     	Ajb

     	Aja

     	Aj`




@@@@ Ak 
     	Aj_

     	Aj^

     	Aj]




     	Aj\
"AI
  At 
kAj At 	("kN
  
!
 !
 ! "!

  O
  
Aj!
 Aj!@ 
E@A !


  
 k"
kAI  
  (  ( 
 kKr

-- Chunk 136 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:20251-20400
  (   
   
 I"j"
(  G
  Aj 
Aj     "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 	A6@@@@  

@@@ Ak 
     	Ajd

     	Ajc




@@@@ Ak 
     	Ajb

     	Aja

     	Aj`




@@@@ Ak 
     	Aj_

     	Aj^

     	Aj]




     	Aj\
"AI
  At 
kAj At 	("
kN
  
!
 ! "!


 
AI@ 
!

    
 jkAj" I" j!   !
 
Ak!
@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  
6  6  	Aj$   k
    k"AK6 Av jAj!

 ! 
!
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
	  K
@  M@   
AI
 (
"Aj"
 Aj"kAkAaO
 
  
A!H
  
j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  j"k  K"A AIj"  K!
  ($Aj!  ((!
  (\!
@  
G@ A!O
  j!  )P! @@@@ 
Ak 
    


    


    


    

!@ Ak   	
 
 Av t"
AtjA E
 
 
j 
E
   AqAtj 6, Aj!


  A 6
@ !
  K
    k" 
k" I" j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO

-- Chunk 137 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:20401-20550
	 (
" ( jK
  K

 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"	$  (!
 ( !  A 6  (
" A   j"Ak"
   ("
j"k  Ak"K"A AIj"  I!
A  ("A AI"A AK"t!  ("  (
"j!   (j!
  
 j" Fj!  ((!
  (\!  (!  ($Aj"A!I!  ("A AI"A AK"
Ak! Ak!@@@@@@@@@@@@  
G@ E
  
j!  )P!@@@@  
   


   


   


   

!@    
  Av t"AtjA E

 
 j E

   AqAtj 6, Aj!


 A k! Ak! 
Ak!@@@@  I@  (  (  
k"Aj" !
 Aj!A !@   k"
kAI   
kKr
  (    
 
 I" 
j"
(  G
  Aj 
Aj     Aj!
 	A6
@@@@  

@@@ Ak 
     	A
jd

     	A
jc




@@@@ Ak 
     	A
jb

     	A
ja

     	A
j`


	
@@@@ Ak 
     	A
j_

     	A
j^

     	A
j]



     	A
j\
"   K""AI
   ! 	(
A !
@@  O
  Aj! Aj!@ 
E@A !


   k"
kAI    (  (  kKr
  (   
  
 
 I"j"
(  G
  Aj 
Aj     "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 	A6@@@@  

@@@ Ak 
     	Ajd

     	Ajc




-- Chunk 138 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:20551-20700

@@@@ Ak 
     	Ajb

     	Aja

     	Aj`




@@@@ Ak 
     	Aj_

     	Aj^

     	Aj]




     	Aj\
"AI
  At 
kAj At 	("
kN
  
!
 ! "!


 
AI@ 
!

  
  
 
jkAj" I" j! 
  !
 
Ak!
@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  
6  6  	Aj$   k
    k"AK6 Av jAj!

 ! 
!
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
	  K
@  M@   
AI
 (
"Aj"
 Aj"kAkAaO
 
  
A!H
  
j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  K!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!
  )P!@@@@ 
Ak 
 
  


 
  


 
  


 
  

!
@ Ak   	
 
 
Av t"AtjA E
 
 j E
   AqAtj 
6, Aj!


  A 6
@ !
  K
  
  
k" 
k" I" j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO
	 (
" ( jK
  K

 Aj!@  M@  

    	
 ("A6  A ; AM


-- Chunk 139 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:20701-20850
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$  (! ( !  A 6  (
" A   j"	Ak"
   ("
j"k  	Ak"K"A AIj"  I!A  ("A AI"A AK"t!  ("  (
"j!   (j!
  
 j" Fj!  ((!  (\!
  (!  ($Aj"A!I!  ("A AI"A AK"
Ak! Ak!
@@@@@@@@@@@@  G@ E
  
j!  )P!@@@@  
   


   


   


   

!@ 
   
 
 Av t"AtjA E

  j E

   AqAtj 6, Aj!


 	A k! Ak! 
Ak! Ak!@@@  I@  (  (  
k"
Aj" !@   k"kAI   kKr
  Aj"(     
  I"j"(  G
  Aj Aj 	  	  Aj!A!


 
A6
@@@@ 
Ak 

@@@  
    	 
A
jd

    	 
A
jc


	
@@@@  
    	 
A
jb

    	 
A
ja

    	 
A
j`



@@@@  
    	 
A
j_

    	 
A
j^

    	 
A
j]



    	 
A
j\
"AM@    k"AK6 Av jAj!

 
(
"
AI@ !

  
 
 
kAj" I" j! 
  !
 
Ak!@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  6  6  
Aj$  	 k
 ! ! !
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"j ( 
jK
	  	K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO

-- Chunk 140 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:20851-21000
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  K!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!  )P!@@@@  
   


   


   


   

!@    	
 
 Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ !  K
  
  
k" k" I" j!  kAI   (  (  k Ir
 (   (  G
 Aj Aj 	  	  ! (
 ( ( kAuM
 ( "AO
	 (
" ( jK
  	K

 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! !
 
 


A A A A
  
A=A AA"  
 ! !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"	$   (!
  (!
   ("  (
"
j" Fj" k!
  (! (! ( !  (!  A 6  (
" A   j"Ak"  j"k  Ak"K"A AIj"  I!A    
 
  
 k"K"
!
 A  
!A    I"!
A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"Ak!
 Ak!@@@@@@@@@@@@  G@ E
  j!  )P!
@@@@ 
 
   



   



   



   


!@    
  Av t"
AtjA E

 
 
j E

   AqAtj 6, Aj!


 A k! Ak!@A  
k!@@@@@@  I@A ! 
E Aj" j(   (  GrE@ Aj"  j Aj!
 	A6
@@@@  
@@@ Ak 
     	A
jm

     	A
jl

-- Chunk 141 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21001-21150




@@@@ Ak 
     	A
jk

     	A
jj

     	A
ji




@@@@ Ak 
     	A
jh

     	A
jg

     	A
jf




     	A
je
"   K""AI
   ! 	(
A !
@@  O
  Aj!@ 
E@A !


 
E (    j(  Gr
  Aj"
 
 j "
A{K
  Al 
kAj 
Aj"
AlN
 A!
 ! 
!
 	A6@@@@@  
@@@ Ak 
     	Ajm

     	Ajl



@@@@ Ak 
     	Ajk

     	Ajj

     	Aji



@@@@ Ak 
     	Ajh

     	Ajg

     	Ajf



     	Aje
"
AI
  At 
kAj 
At 	("kN
  !
 
! "!

  O
  Aj!@ 
E@A !


 
E (    j(  Gr
  Aj"  j "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 	A6@@@@  
@@@ Ak 
     	Ajm

     	Ajl



@@@@ Ak 
     	Ajk

     	Ajj

     	Aji



@@@@ Ak 
     	Ajh

     	Ajg

     	Ajf




     	Aje
"AI
  At 
kAj At 	("
kN
  
!
 ! "!


 
AI@ 
! 


A 
k!
@@  O
   
j" M
  Ak"-   Ak-  G
  Aj! !

-- Chunk 142 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21151-21300


 
! 
Ak
!
 (
 ( ( kAuM
 ( "
AO

 (
"  k"
j ( 
jK

  K

@  M@   
AI
 (
"Aj"
 Aj"kAkAaO
 
  
A!H
  
j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A    j"k  K"A AIj"  I!
  ($Aj!  ((!
  (\!
@  
G@ A!O
  j!  )P!
@@@@ Ak 
   



   



   



   


!@ Ak   

 
 Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ "
E  Kr
 (    
k(  G
 Aj"  
k ! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! 
! 
!

 
 
  
  
6   
  A  "  
    
6 	Aj$   k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$   (!
  (!
   ("  (
"j" Fj" k!
  (! (! ( !  (!  A 6  (
" A   j"	Ak"  j"k  	Ak"K"A AIj"  I!A    
   
 k"K"!
 A  !A    I"!A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"Ak!
 Ak!@@@@@@@@@@@@  G@ E

-- Chunk 143 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21301-21450
  j!  )P!
@@@@ 
 
   



   



   



   


!@    
  Av t"
AtjA E

 
 
j E

   AqAtj 6, Aj!


 	A k! Ak!@A  
k!@@@@@@  I@A ! 
E Aj" j(   (  GrE@ Aj"  j 	Aj!
 
A6
@@@@  
@@@ Ak 
    	 
A
jm

    	 
A
jl




@@@@ Ak 
    	 
A
jk

    	 
A
jj

    	 
A
ji




@@@@ Ak 
    	 
A
jh

    	 
A
jg

    	 
A
jf




    	 
A
je
"   K""AI
   ! 
(
A !
@@  O
  Aj!@ 
E@A !


 
E (    j(  Gr
  Aj"  j 	"A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@@  
@@@ Ak 
    	 
Ajm

    	 
Ajl



@@@@ Ak 
    	 
Ajk

    	 
Ajj

    	 
Aji



@@@@ Ak 
    	 
Ajh

    	 
Ajg

    	 
Ajf




    	 
Aje
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ ! 



-- Chunk 144 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21451-21600
A 
k!@@  O
   j" M
  Ak"-   Ak-  G
  Aj! !


 
! 
Ak
!
 (
 ( ( kAuM
 ( "
AO

 (
"  k"j ( 
jK

  	K

@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A    j"k  K"A AIj"  I!  ($Aj!  ((!
  (\!
@  G@ A!O
  j!  )P!
@@@@ Ak 
   



   



   



   


!@ Ak   

 
 Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ "E  Kr
 (    k(  G
 Aj"  k 	! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  	K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! 
! !

 
 
  
  
6     A  "  
    6 
Aj$  	 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$   (!  (!   ("  (
"
j" Fj" k!  (! (! ( !	  (!
  A 6  (
" A   j"
Ak"  j"k  
Ak"K"A AIj"  I!A  	 	  
   
k"K"
! 	A  
!A    I"!	A A AI"A AK"t!  ((!
  (\!  ($Aj"A!I!
 A AI"A AK"Ak! Ak!@@@@@@@@@@@@  G@ 
E
  j!  )P!
@@@@  
   



   




-- Chunk 145 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21601-21750
   



   


!@    
  Av t"
AtjA E

 
 
j E

   AqAtj 6, Aj!


 
A k!
 Ak! Ak!@A  k!@@@@@  O
 E Aj" j(   (  GrE@ Aj"  j 
Aj!A!
 

 
A6
@@@@ Ak 

@@@  
    
 
A
jm

    
 
A
jl




@@@@  
    
 
A
jk

    
 
A
jj

    
 
A
ji




@@@@  
    
 
A
jh

    
 
A
jg

    
 
A
jf




    
 
A
je
"AM@    k"AK6 Av jAj!


 
(
"
AI@ ! 

A 
k!	 !@@  O
   	j" M
  Ak"-   Ak-  G
  Aj! !


 !	 
Ak
! (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
	  
K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A    j"k  K"A AIj"  K!  ($Aj!  ((!
  (\!@  G@ A!O
  j!  )P!
@@@@  
   



   



   



   

-- Chunk 146 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21751-21900


!@    	
  Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ 	"E  Kr
 (    k(  G
 Aj"  k 
!	 (
 ( ( kAuM
 ( "AO
	 (
" ( jK
  
K

 	Aj!@  
M@  

    
	
 ("A6  A ; AM

 	Aj"	AO@ ($
 A6$   ( kAu6(
  	;  Aj6  j! !	 !
 
 
    6   	  A  "      	6 
Aj$  
 k
A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  

$# Ak"$ @@@@@@@@@@@@@ (AK@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA ) j"I!
 ! 

 
AA AڂA,  
  
6
 ("A!O
 (! (! (\  Atj"#( !	 (! (d! (
! ( (  k"
 (!
 AO
 A AI!$ ("( "
 ("
k"A (AktAs"
k ("  k 
K!%A  
A AktAs"k"  
K!  
A 
!& 
A	j! 
Aj!'  j!!A (t!  
 qAtj"Aj!
 (!" 
 
 k"k!( Aj! 
 k!) Aj!* Ak! 
  jk!+ !@  *G@ AF@ ( Ak

  Atj( 
! 
 I
 
 k!@ ) Ak"K@ A!  kA G 
 Kr
   k 

 
 
I
  AsjAI  +Or
 A  (j"AG
  Aj  
 !
Aj" M
   k"AO
   
Atj" 6  Aj6  
Aj!
  $K
 " j F

 Aj!


 # 
6 A !A !@@@@ A G E 	 &Ir
 	 
O

    K" 	j I

 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr
 !
  	 qAtj!@@@  
j-    j-  I@  	6  	  K
 A
j!

 
 	6  	  M
 !
 !

 ! Aj"!
 Ak! ( !	



-- Chunk 147 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:21901-22050
 A
j!

A
! 
A 6  A 6  AO

 E
 "A!O
  j!	  "! (\ Atj! (d!A !A !@ E
 ( " M
      I"j  
j"
 j  
 ! j"I@ 
  j"k"E
  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  %M
   
  	j  j I j-    j-  I"
!   
!   
qAtj 
Atj! Ak!
 
 
 
A 6  A 6 
  'M

  Ak6

 Aj$  

A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  

$# Ak"$ @@@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA ) j"I!
 ! 

 
AA AڂA,  
  
6
 ("A!O
 (! (\  Atj"#( !	 (! (d! (
! ( (  ("k"
 (!
 AO
 A AI!$ ("( "
 ("
k"A (AktAs"
k ("  k 
K!%A  
A AktAs"k"  
K!  
A 
!& 
A	j! 
Aj!'  j!!A (t!  
 qAtj"Aj!
 (!" 
 
 k"k!( Aj! 
 k!) Aj!* Ak! 
  jk!+ !@  *G@ AF@ ( Ak

  Atj( 
! 
 I
 
 k!@ ) Ak"K@ A!  kA G 
 Kr
   k 

 
 
I
  AsjAI  +Or
 A  (j"AG
  Aj  
 !
Aj" M
   k"AO
   
Atj" 6  Aj6  
Aj!
  $K
 " j F

 Aj!


 # 
6 A !A !@@@@ A G E 	 &Ir
 	 
O

    K" 	j I

 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr

-- Chunk 148 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22051-22200
 !
  	 qAtj!@@@  
j-    j-  I@  	6  	  K
 A
j!

 
 	6  	  M
 !
 !

 ! Aj"!
 Ak! ( !	


 A
j!

A
! 
A 6  A 6  AO

 E
 "A!O
  j!	 (\  "Atj! (d!A !A !@ E
 ( " M
      I"j  
j"
 j  
 ! j"I@ 
  j"k"E
  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  %M
   
  	j  j I j-    j-  I"
!   
!   
qAtj 
Atj! Ak!
 
 
 
A 6  A 6 
  'M

  Ak6

 Aj$  

A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  

$# Ak"$ @@@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA ) j"I!
 ! 

 
AA AڂA,  
  
6
 ("A!O
 (! (\  Atj"#( !	 (! (d! (
! ( (  ("k"
 (!
 AO
 A AI!$ ("( "
 ("
k"A (AktAs"
k ("  k 
K!%A  
A AktAs"k"  
K!  
A 
!& 
A	j! 
Aj!'  j!!A (t!  
 qAtj"Aj!
 (!" 
 
 k"k!( Aj! 
 k!) Aj!* Ak! 
  jk!+ !@  *G@ AF@ ( Ak

  Atj( 
! 
 I
 
 k!@ ) Ak"K@ A!  kA G 
 Kr
   k 

 
 
I
  AsjAI  +Or
 A  (j"AG
  Aj  
 !
Aj" M
   k"AO
   
Atj" 6  Aj6  
Aj!
  $K
 " j F

 Aj!


 # 
6 A !A !@@@@ A G E 	 &Ir
 	 
O

-- Chunk 149 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22201-22350

    K" 	j I

 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr
 !
  	 qAtj!@@@  
j-    j-  I@  	6  	  K
 A
j!

 
 	6  	  M
 !
 !

 ! Aj"!
 Ak! ( !	


 A
j!

A
! 
A 6  A 6  AO

 E
 "A!O
  j!	 (\  "Atj! (d!A !A !@ E
 ( " M
      I"j  
j"
 j  
 ! j"I@ 
  j"k"E
  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  %M
   
  	j  j I j-    j-  I"
!   
!   
qAtj 
Atj! Ak!
 
 
 
A 6  A 6 
  'M

  Ak6

 Aj$  

A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  
%# Ak"$ @@@@@@@@@@ @@@@@@@@@ (AI@ ("
 (
"j K

  
k!	@@  	O
    
j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!O
 (! (\  
Atj"&( !
 (!
 (d!
 (
! ( (  ("k"
 (! AO
 A AI!
 ("( "
 ("k"A (AktAs" k ("  k  K!'A  
A 
AktAs"!k"  
K!" A !# 
A	j! 
Aj!(  j!$A (t! 
 
 !qAtj"Aj!
 (!%   k"k!) Aj! 
 k!* Aj!+ Ak! 
  jk!, !@  +G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	k!@ * 	Ak"K@ A!  	kA G  Kr
   	k 

 
 I
  AsjAI  ,Or
 A  )j"	AG
  	Aj  
 $
Aj"	 M

-- Chunk 150 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22351-22500
   k"AO
   
Atj" 	6  Aj6  
Aj!
 	 
K
 	" j F

 Aj!


 AK
  (  (`  " #I
 
 k"AK
   j "AI
  
O
 

 E
   6   Aj6   
M@A!
  j G

A!
 
Aj


A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A A AރA
  
A A A߃A
  
A A AA
  
 !
 & 
6 A !A !	@@@@ A G E 
 #Ir
 
 
M
 	   	K" 
j I
 
 j! 
 O@   !

   j  j  j"I@ 
 O

 
 
k"E

  
j    
kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr
 !
 
 
 !qAtj!@@@  j-    j-  I@  
6  
 "K
 A
j!

 
 
6  
 "M
 !
 !

 !	 Aj"!
 Ak! ( !



 A
j!

A
! 
A 6  A 6  AO
	 E
 %A!O

  j!
 (\  %Atj! (d!
A !	A !@ E
 ( " M
    	  	I"j  j" j  
 $ j"I@ 
  j"k"E

  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  'M
     
j  j I j-    j-  I"! 	  !	 
   qAtj Atj! Ak!
 
 
 
A 6  A 6 
  (M
	 Ak
6

 Aj$  

A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  


-- Chunk 151 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22501-22650
# Ak"$ @@@@@@@@@@@@ (AK@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA) j"I! ! 
 
AA AڂA,  
  
6
 ("
A!O
 (! (! (\!  
!
 (!	  
Atj"
( ! (d! (! (
!
 ( (  k"
 (! AO
 A AI!
A  
A 	AktAs"k"  
K! A ! 
A	j! 
 j! 
 j!
A (t!  
 qAtj"Aj! Aj! 
 k!  
 
k!! Aj!" Ak!
 !@  "G@ AF@ ( Ak

  Atj( 
!	 
 
I
 
 	k!@ ! 	Ak"K@ A!  	kA G  Ir
   	k 

 
 I
	 
 AsjAI   Or
 A  j"AG
  Aj  
 
Aj" 
M
   k"
AO
	   
Atj"	 6 	 
Aj6  
Aj!
  
K
 "
 j F

 Aj!


 
 
6 A !A !@@ E  Ir
  
O
	 
    I" jM@  j!  
O@   !


  j  j  j! 

  j"  !

    j  j  
  j" j 
I
!  
K@  O

 
 k"
E
  j    kK!   
Atj"	 6 	 
Aj6  
Aj!
 A K
 !
  j F

   qAtj!	@@@  j j-    j-  I@  6   K
 A
j!

  6   M
 	! !

 ! 	Aj"!	
 Ak! 	( !


 A
j!
 A 6  A 6  AO

 
Aj O

  Ak6

 Aj$  

A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  

# Ak"$ @@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!

-- Chunk 152 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22651-22800
@@  
O
    	j  
AA) j"I! ! 
 
AA AڂA,  
  
6
 ("
A!O
 (! (!	 (\  
Atj"
( ! (d! (! (
!
 ( (  ("k"
 (! AO
 A AI!
A  
A 	AktAs"k"  
K! A ! 
A	j! 
 j! 
 j!
A (t!  
 qAtj"Aj! Aj! 
 k!  
 
k!! Aj!" Ak!
 !@  "G@ AF@ ( Ak

  Atj( 
!	 
 
I
 
 	k!@ ! 	Ak"K@ A!  	kA G  Ir
   	k 

 
 I
	 
 AsjAI   Or
 A  j"AG
  Aj  
 
Aj" 
M
   k"
AO
	   
Atj"	 6 	 
Aj6  
Aj!
  
K
 "
 j F

 Aj!


 
 
6 A !A !@@ E  Ir
  
O
	 
    I" jM@  j!  
O@   !


  j  j  j! 

  j"  !

    j  j  
  j" j 
I
!  
K@  O

 
 k"
E
  j    kK!   
Atj"	 6 	 
Aj6  
Aj!
 A K
 !
  j F

   qAtj!	@@@  j j-    j-  I@  6   K
 A
j!

  6   M
 	! !

 ! 	Aj"!	
 Ak! 	( !


 A
j!
 A 6  A 6  AO

 
Aj O

  Ak6

 Aj$  

A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  

# Ak"$ @@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA) j"I! ! 
 

-- Chunk 153 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22801-22950
AA AڂA,  
  
6
 ("
A!O
 (! (!	 (\  
Atj"
( ! (d! (! (
!
 ( (  ("k"
 (! AO
 A AI!
A  
A 	AktAs"k"  
K! A ! 
A	j! 
 j! 
 j!
A (t!  
 qAtj"Aj! Aj! 
 k!  
 
k!! Aj!" Ak!
 !@  "G@ AF@ ( Ak

  Atj( 
!	 
 
I
 
 	k!@ ! 	Ak"K@ A!  	kA G  Ir
   	k 

 
 I
	 
 AsjAI   Or
 A  j"AG
  Aj  
 
Aj" 
M
   k"
AO
	   
Atj"	 6 	 
Aj6  
Aj!
  
K
 "
 j F

 Aj!


 
 
6 A !A !@@ E  Ir
  
O
	 
    I" jM@  j!  
O@   !


  j  j  j! 

  j"  !

    j  j  
  j" j 
I
!  
K@  O

 
 k"
E
  j    kK!   
Atj"	 6 	 
Aj6  
Aj!
 A K
 !
  j F

   qAtj!	@@@  j j-    j-  I@  6   K
 A
j!

  6   M
 	! !

 ! 	Aj"!	
 Ak! 	( !


 A
j!
 A 6  A 6  AO

 
Aj O

  Ak6

 Aj$  

A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  


# Ak"$ @@@@@@@@ @@@@@@@@@@ (AI@ (" (
"j K

  k!
@@  
O
    j  
AA) j"	I!
 	! 

 
AA AڂA,  

-- Chunk 154 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:22951-23100
  
6
 ("	A!O
 (! (! (\  	Atj" ( !
 (d! (! (
! ( (  ("
k"
 (! AO
 A AI!
A  
A AktAs"
k"  
K!
 A ! 
A	j! 
Aj!! 
 j!  j!A (t!  
 
qAtj"Aj! Aj! 
 k!" 
 k!# Aj!$ Ak! !@  $G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	k!@ # 	Ak"K@ A!  	kA G  Kr
   	k 

 
 I
  AsjAI  "Or
 A  j"	AG
  	Aj   
Aj"	 M
   k"AO
   
Atj" 	6  Aj6  
Aj!
 	 
K
 	" j F

 Aj!


 AK
	 
 (  (`  " I
	 
 k"AK
	  O@   
j 

   j   
"AI
	  
O
 

 E
   6   Aj6   
M@A!
  j G


A!
 
Aj


A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A A AރA
  
A A A߃A
  
A A AA
  
 !
   
6 A !A !@@ E 
 Ir
 
 
O
     I" 
jM@ 
 
j! 
 O@   !

  j  j  j! 


 
 j"  !
  
  j  j    j" 
j I
!  I@ 
 O
 
 
k"E
	  
j    
kK!   
Atj"	 6 	 Aj6  
Aj!
 A K
 !  j F

  
 
qAtj!	@@@  
j j-    j-  I@  
6  
 
K
 A
j!

  
6  
 
M
 	! !

 ! 	Aj"!	
 Ak! 	( !



 A
j!
 A 6  A 6  AO
  !M
 Ak
6


-- Chunk 155 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:23101-23250
 Aj$  

A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
	# Ak"$ @ (AK@ (" (
"j K
  k!	@@  	O
    j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!I@ (! (! (\!	  
!
 (!
 	 
Atj"( ! (
! (d! ( (  k"
 (!
 AI@ A AI!A  
A 
AktAs"k"  
K! 
A 
! 
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !A !
@@@@@@@@@@@  
G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	AkK@ A!  	kA G 
 	k 
Ir

   	k Aj"	 M

  k"AO
   
Atj" 	6  Aj6  
Aj!
 	 K
 	" j F



 
 
O
AA AA
  
  
6 A !A !	@@ E  Ir
  
O
 	   	K" j I
  j!
  O@ 
  !

   j  
j  j"I@  O
 
 k"E
	  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

   qAtj!@@@  
j-    j-  I@  6   K
 A
j!

 
 6   M
 !
 !

 !	 Aj"!
 Ak! ( !


 A
j!

 
A 6  A 6  AO
  
M
  Ak6


AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  

-- Chunk 156 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:23251-23400

	# Ak"$ @ (AF@ (" (
"j K
  k!	@@  	O
    j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!I@ (! (!	 (\  
Atj"( ! (
! (d! ( (  ("k"
 (!
 AI@ A AI!A  
A 	AktAs"k"  
K! 
A 
! 
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !@@@@@@@@@@@  
G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	AkK@ A!  	kA G 
 	k 
Ir

   	k Aj"	 M

  k"AO
   
Atj" 	6  Aj6  
Aj!
 	 K
 	" j F



 
 
O
AA AA
  
  
6 A !A !	@@ E  Ir
  
O
 	   	K" j I
  j!
  O@ 
  !

   j  
j  j"I@  O
 
 k"E
	  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

   qAtj!@@@  
j-    j-  I@  6   K
 A
j!

 
 6   M
 !
 !

 !	 Aj"!
 Ak! ( !


 A
j!

 
A 6  A 6  AO
  
M
  Ak6


AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  

	# Ak"$ @ (AF@ (" (
"j K
  k!	@@  	O
    j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!I@ (! (!	 (\  
Atj"( ! (
! (d! ( (  ("k"
 (!
 AI@ A AI!A  
A 	AktAs"k"  
K! 
A 
! 

-- Chunk 157 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:23401-23550
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !@@@@@@@@@@@  
G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	AkK@ A!  	kA G 
 	k 
Ir

   	k Aj"	 M

  k"AO
   
Atj" 	6  Aj6  
Aj!
 	 K
 	" j F



 
 
O
AA AA
  
  
6 A !A !	@@ E  Ir
  
O
 	   	K" j I
  j!
  O@ 
  !

   j  
j  j"I@  O
 
 k"E
	  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

   qAtj!@@@  
j-    j-  I@  6   K
 A
j!

 
 6   M
 !
 !

 !	 Aj"!
 Ak! ( !


 A
j!

 
A 6  A 6  AO
  
M
  Ak6


AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  


# Ak"$ @ (AI@ ("	 (
"j K
  	k!
@@  
O
    	j  
AA ) j"
I!
 
! 

 
AA AڂA,  
  
6
 ("
A!I@ (! (!
 (\  
Atj"( !	 (
! (d! ( (  ("k"
 (! AI@ A AI!A  
A 
AktAs"k"  
K! A ! 
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !@@@@@@@@@ @@@@@@@  
G@ AF@ ( Ak

  Atj( 
!
 
 I
 
 
AkK@ A  
kAG 

-- Chunk 158 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:23551-23700
 
k Ir
   
k Aj"
 M
  k"AO
   
Atj" 
6  Aj6  
Aj!
 
 K
 
" j F


 
 O
AA AA
  
 AK
  (  (`  " I
 
 k"AK
   j "AI
  
O
 

 E
   6   Aj6   M@A!
  j G

A!
 
Aj

AA AA
  
A A AÃA
  
A A AރA
  
A A A߃A
  
A A AA
  
 !
  
6 A !A !@@ E 	 Ir
 	 
O
    K" 	j I
 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  	 qAtj!@@@  
j-    j-  I@  	6  	 K
 A
j!

 
 	6  	 M
 !
 !

 ! Aj"!
 Ak! ( !	


 A
j!

 
A 6  A 6  AO
  
M
 Ak
6



A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  

# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("
O@  (!  Ej!  j"
Ak!  A 6   j k"k! 
A k! A AI"A AKAk!@A 
 j"k!@@@@@@  I@ Aj!A !@   j"AsjAI
    kj  j  I""	(   (  G
  Aj 	Aj 
  
  Aj!
 
A6
@@@  
    
 
A
jr

    
 
A
jq

    
 
A
jp
"   K"	"AI

-- Chunk 159 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:23701-23850
   	! 
(
A 	!	@@  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  
    
 
Ajr

    
 
Ajq

    
 
Ajp
"AI
  At 	kAj At 
("kN
  !	 ! "!

  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  
    
 
Ajr

    
 
Ajq

    
 
Ajp
"AI
  At 	kAj At 
("kN
  !	 ! "!


 	AI@ 
! 


    	 jkAj" I"
 j!   
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 	Ak! 

! (
 ( ( kAuM
 ( "AO

 (
"
  k"
j ( jK

  
K
@  M@ 
  
AI
 (
"Aj" Aj"
kAkAaO
  
 
A!H
  
j! A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"	6  j!  (@  A 6
@ !
  K
    
 jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 	 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  
6  
6  
Aj$  
 k
    k"AK6 Av jAj!




A A A A

-- Chunk 160 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:23851-24000
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("O@  (!  Ej!  j"	Ak!  A 6   j k"k! 	A k! A AI"A AKAk!@A 
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj 	  	  Aj!
 
A6
@@@  
    	 
A
jr

    	 
A
jq

    	 
A
jp
"   K""AI
   ! 
(
A !
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 j 
 I"
"(   (  G
  Aj Aj 	  	 
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  
    	 
Ajr

    	 
Ajq

    	 
Ajp
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ ! 


    
 jkAj" I" j!   !@@  M  Or
  Ak"-   Ak"-  G
  Aj! !


 
! 
Ak
! (
 ( ( kAuM
 ( "
AO

 (
"
  k"j ( 
jK

  	K
@  M@ 
  AI
 (
"
Aj" Aj"
kAkAaO
  
 A!H
  
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  (@  A 6
@ !  K
     jk" I" j!  AsjAI
 (   (  G
 Aj Aj 	  	  ! (
 
 ( kAuM

 ( "AO

 (
" ( jK
  	K
 Aj!@  M@  

    	

-- Chunk 161 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24001-24150
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j! ! !
 
 
  6  
6  
Aj$  	 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@ ( "  ("( " (" (
j"k   ("
  (
"j"kj"M@  ("O@  (!	  Ej!  j"
Ak!  A 6   j k"k! 
A k! 	A 	AI"A AKAk!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@  
    
 
A
jr

    
 
A
jq

A A AA  
    
 
A
jp
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j!   !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK
	  
K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM

 	Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  	j!  (@  A 6
@ !  K
  
   
jk" I"	 j!  AsjAI
 (   (  G
 Aj Aj 
  
 	 ! (
  ( kAuM
 ( "AO
	 (
" ( jK
  
K

 Aj!	@  M@  

    	
 ("A6  A ; 	AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6  	j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 

-- Chunk 162 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24151-24300
A.A AA   
A.A AA   
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
       A
       A
# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("
O@  (!  Ej!  j"
Ak!  A 6   j k"k! 
A k! A AI"A AKAk!@A 
 j"k!@@@@@@  I@ Aj!A !@   j"AsjAI
    kj  j  I""	(   (  G
  Aj 	Aj 
  
  Aj!
 
A6
@@@  
    
 
A
j

    
 
A
j

    
 
A
j
"   K"	"AI
   	! 
(
A 	!	@@  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  
    
 
Aj

    
 
Aj

    
 
Aj
"AI
  At 	kAj At 
("kN
  !	 ! "!

  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  
    
 
Aj

    
 
Aj

    
 
Aj
"AI
  At 	kAj At 
("kN
  !	 ! "!


 	AI@ 
! 


    	 jkAj" I"
 j!   
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 	Ak! 

! (
 ( ( kAuM
 ( "AO

 (
"
  k"
j ( jK

  
K
@  M@ 
  
AI
 (
"Aj" Aj"
kAkAaO
  
 
A!H
  
j! A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   

-- Chunk 163 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24301-24450
; AM
 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"	6  j!  (@  A 6
@ !
  K
    
 jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 	 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  
6  
6  
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("
O@  (!  Ej!  j"
Ak!  A 6   j k"k! 
A k! A AI"A AKAk!@A 
 j"k!@@@@@@  I@ Aj!A !@   j"AsjAI
    kj  j  I""	(   (  G
  Aj 	Aj 
  
  Aj!
 
A6
@@@  
    
 
A
ju

    
 
A
jt

    
 
A
js
"   K"	"AI
   	! 
(
A 	!	@@  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  
    
 
Aju

    
 
Ajt

    
 
Ajs
"AI
  At 	kAj At 
("kN
  !	 ! "!

  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  
    
 
Aju

    
 
Ajt

    
 
Ajs
"AI
  At 	kAj At 
("kN
  !	 ! "!


 	AI@ 
! 


    	 jkAj" I"
 j!   
!
@@  

-- Chunk 164 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24451-24600
M  Or
  Ak"-   Ak"-  G
  Aj! !


 	Ak! 

! (
 ( ( kAuM
 ( "AO

 (
"
  k"
j ( jK

  
K
@  M@ 
  
AI
 (
"Aj" Aj"
kAkAaO
  
 
A!H
  
j! A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"	6  j!  (@  A 6
@ !
  K
    
 jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 	 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  
6  
6  
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("O@  (!  Ej!  j"	Ak!  A 6   j k"k! 	A k! A AI"A AKAk!@A 
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj 	  	  Aj!
 
A6
@@@  
    	 
A
ju

    	 
A
jt

    	 
A
js
"   K""AI
   ! 
(
A !
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 j 
 I"
"(   (  G
  Aj Aj 	  	 
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  
    	 

-- Chunk 165 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24601-24750
Aju

    	 
Ajt

    	 
Ajs
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ ! 


    
 jkAj" I" j!   !@@  M  Or
  Ak"-   Ak"-  G
  Aj! !


 
! 
Ak
! (
 ( ( kAuM
 ( "
AO

 (
"
  k"j ( 
jK

  	K
@  M@ 
  AI
 (
"
Aj" Aj"
kAkAaO
  
 A!H
  
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  (@  A 6
@ !  K
     jk" I" j!  AsjAI
 (   (  G
 Aj Aj 	  	  ! (
 
 ( kAuM

 ( "AO

 (
" ( jK
  	K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j! ! !
 
 
  6  
6  
Aj$  	 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@ ( "  ("( " (" (
j"k   ("
  (
"j"kj"M@  ("O@  (!	  Ej!  j"
Ak!  A 6   j k"k! 
A k! 	A 	AI"A AKAk!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@  
    
 
A
ju

    
 
A
jt

A A AA  
    
 

-- Chunk 166 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24751-24900
A
js
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j!   !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK
	  
K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM

 	Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  	j!  (@  A 6
@ !  K
  
   
jk" I"	 j!  AsjAI
 (   (  G
 Aj Aj 
  
 	 ! (
  ( kAuM
 ( "AO
	 (
" ( jK
  
K

 Aj!	@  M@  

    	
 ("A6  A ; 	AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6  	j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 
A.A AA   
A.A AA   
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
S"@@@@@@@@@@@@@@@@@@@  (Ak 
 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (
"j"k  
 
j"kj! (! (!	 ( !@  (E
 A 	t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"
Ak! Aj!
 	Aj!
 (d!! (\!   
k 
j"k!" 
A k! 
Ak!   Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! 
A!O
   
! 
A!O
   
!  AvAqj( "	 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @   Aj"
 k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 
 
 
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO

   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I

-- Chunk 167 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:24901-25050
 


     	
  (
 j6
@ AM@ (! 

 ($

 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R
  Aj Aj 
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   	Av"j" 
O
  L
  )    )  R
   Aj Aj 
 
 Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" !   
"	AvAqj( !  Atj"( !  
6 @  
K@  
j"	)   )  R
  A	j 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
  	
E
   Av"j"	 
O
  L
  	)   )  R
   A	j 	Aj 
 
 Aj! 
  jk!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   
 
 Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
   
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  
 k
	
  !
 E

 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj"	6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!   kAI
  (   (  G
  Aj Aj 
 
 
  ! (
 	 ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6   Atj 6    Atj 6   j! !  !


-- Chunk 168 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25051-25200

  ! ! 
 
 












 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (
"j"k  
 
j"kj! (! (!	 ( !@  (E
 A 	t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"
Ak! Aj!
 	Aj!
 (d!! (\!   
k 
j"k!" 
A k! 
Ak!   Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! 
A!O
   
! 
A!O
   
!  AvAqj( "	 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @   Aj"
 k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 
 
 
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO

   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($

 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R
  Aj Aj 
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   	Av"j" 
O
  L
  )    )  R
   Aj Aj 
 
 Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" !   
"	AvAqj( !  Atj"( !  
6 @  
K@  
j"	)   )  R
  A	j 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
  	
E
   Av"j"	 
O
  L
  	)   )  R
   A	j 	Aj 
 
 Aj! 
  jk!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   
 
 Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 

-- Chunk 169 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25201-25350
 
 
   
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  
 k
	
  !
 E

 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj"	6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!   kAI
  (   (  G
  Aj Aj 
 
 
  ! (
 	 ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6   Atj 6    Atj 6   j! !  !


  ! ! 
 
 

	

	

	



 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (
"j"k  
 
j"
kj! (! (! ( !@  (E
 A t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"	Ak! Aj!
 Aj! (d!! (\!
   
k 
j"k!" 	A k! 
Ak!  Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! A!O
   ! 
A!O
   
! 
 AvAqj( "
 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @  Aj"  k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 	 
 	  
! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  	K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R

-- Chunk 170 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25351-25500
  Aj Aj 	Aj!   k!@  
M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   
Av"j" 
O

  L
  )    )  R
   Aj Aj 	 
 
Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" ! 
  "
AvAqj( !  Atj"( !   6 @  
K@  
j")   )  R
  A	j Aj 	Aj!  k!@  
M  Mr
 Ak" -   Ak"-  G
 Aj!  !
 
 
  

E
   Av"
j" 
O
  
N
  )   )  R
   A	j Aj 	 
 
Aj!    
jk!@  M  Mr
 Ak" -   Ak"-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   	 
 
Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
   	Aj!   k!@  
M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  	 k
	
  !
 E

 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  	K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!  kAI
  (   (  G
  Aj Aj 	 
 	  
! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  	K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6   Atj 6    Atj 6   j! !  !


  ! ! 
 
 









 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (

-- Chunk 171 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25501-25650
"j"k  
 
j"kj! (! (!	 ( !@  (E
 A 	t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"
Ak! Aj!
 	Aj!
 (d!! (\!   
k 
j"k!" 
A k! 
Ak!   Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! 
A!O
   
! 
A!O
   
!  AvAqj( "	 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @   Aj"
 k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 
 
 
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R
  Aj Aj 
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   	Av"j" 
O

  L
  )    )  R
   Aj Aj 
 
 Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" !   
"	AvAqj( !  Atj"( !  
6 @  
K@  
j"	)   )  R
  A	j 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
  	
E
   Av"j"	 
O

  L
  	)   )  R
   A	j 	Aj 
 
 Aj! 
  jk!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   
 
 Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
   
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  
 k
	
  !
 E
 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI

-- Chunk 172 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25651-25800
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj"	6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!   kAI
  (   (  G
  Aj Aj 
 
 
  ! (
 	 ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6   Atj 6    Atj 6   j! !  !


  ! ! 
 
 









A A AA   
A A AA   
A A AA   
A.A AA   
A.A AA   
A
A AA   
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
J#@@@@@@@@@@@@@@@@@  (@@@@@  (Ak 
 ! !@  "j"	  "("
 (
"
j"kA (tM@ ("( " ("k" 
M@   kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ 	Ak! Aj! (\! (\!  Ej! 
Aj!#  
 k"
k!$ 	A k!
 
Ak!
 ("A!I!% !@@@  j" K
  %E A!Or
A  k!
 Aj!
  !   "AvAqj( " 
! !@@@  Atj"( ! " !  !    
k"6 @ 
  
j"kAI
    
kj  
j  
I"&"'(   Aj"(  G
  Aj 'Aj 	  	 & ! (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  	K
@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
" 
  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
" A6$  (" ( kAu6(
 A6   ; Aj"AM

 Aj"AI
 ($E


@ E
  Av" !M
   j"(   (  G 
 Ir
  Aj Aj 	  Aj!   
jk! !@@  "M  Mr
  Ak"-   Ak"-  G
  Aj! !

-- Chunk 173 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25801-25950


 E
 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  	K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
"   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
" A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@ 
 O
  
 j"(   (  G
  Aj Aj 	Aj!  k! !@@  M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  	K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
"   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
" A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
! !


 A6$   ( kAu6(
  ;  Aj"6  j"!  K
  #j" M
   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" 
I" j! 
 kAI
 (   (  G
 Aj Aj 	  	  ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K

 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6   Atj 6   j!  ! ! 
 
 
  6   6  	 k

 ! !
 
 


















 ! !@  "j"	  "("
 (
"
j"kA (tM@ ("( " ("k" 
M@   kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ 	Ak! Aj! (\! (\!  Ej! 

-- Chunk 174 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:25951-26100
Aj!#  
 k"
k!$ 	A k!
 
Ak!
 ("A!I!% !@@@  j" K
  %E A!Or
A  k!
 Aj!
  !   "AvAqj( " 
! !@@@  Atj"( ! " !  !    
k"6 @ 
  
j"kAI
    
kj  
j  
I"&"'(   Aj"(  G
  Aj 'Aj 	  	 & ! (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  	K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
! 
  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
! A6$  (" ( kAu6(
 A6   ; Aj"AM

 Aj"AI
 ($E


@ E
  Av" !M
   j"(   (  G 
 Ir
  Aj Aj 	  Aj!   
jk! !@@  "M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
!   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
! A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@ 
 O
  
 j"(   (  G
  Aj Aj 	Aj!  k! !@@  M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
!   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
! A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
! !


 A6$   ( kAu6(
  ;  Aj"6  j"!  K
  #j" M

-- Chunk 175 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:26101-26250
   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" 
I" j! 
 kAI
 (   (  G
 Aj Aj 	  	  ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6   Atj 6   j!  ! ! 
 
 
  6   6  	 k

 ! !
 
 


















 ! !@  "j"  "("
 (
"j"
kA (tM@ ("( " ("k"
 M@   
kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ Ak! Aj! (\! (\!  Ej! 
Aj!#   
k"k!$ A k!
 Ak!
 ("A!I!% !@@@  j" K
  %E
  !
 A!O
A  k!
 Aj!
   "AvAqj( " 
!	 !@@@  
Atj"( ! " !
  !    
k"6 @ 
  
j"kAI
    kj  
j  I"&"'(   Aj"(  G
  Aj 'Aj    & 
!
 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK

  K

@  
M@   AI
 (
"Aj"	 Aj"kAkAaO
  	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
  A6$  (" ( kAu6(
 A6   ; 
Aj"AM

 
Aj"AI
 ($E


@ 	E
  Av" !M
   j"	(   (  G  Ir
  Aj 	Aj   
Aj!   jk! !@@ 	 "M  Mr
  Ak"-   	Ak"	-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK

  K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
  
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    
	
  (
 j6

-- Chunk 176 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:26251-26400
@ AM@ (!

 ($
  A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@  O
  
 j"	(   (  G
  Aj 	Aj Aj!  	k! !@@ 	 
M  Mr
  Ak"-   	Ak"	-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK

  K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
  
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    
	
  (
 j6
@ AM@ (!

 ($
  A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
!	 !


 A6$   ( kAu6(
  ;  Aj6  j"!  K
  #j" M
   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" I" j! 
 kAI
 (   (  G
 Aj Aj     
! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6   Atj 6   j!  ! ! 
 
 
  6   6   k

 ! !
 
 


















 ! !@  "j"	  "("
 (
"
j"kA (tM@ ("( " ("k" 
M@   kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ 	Ak! Aj! (\! (\!  Ej! 
Aj!#  
 k"
k!$ 	A k!
 
Ak!
 ("A!I!% !@@@  j" K
  %E A!Or
A  k!
 Aj!
  !   "AvAqj( " 
! !@@@  Atj"( ! " !  !    
k"6 @ 
  
j"kAI
    
kj  
j  
I"&"'(   Aj"(  G
  Aj 'Aj 	  	 & ! (
 ( ( kAuM
 ( "AO

-- Chunk 177 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:26401-26550
 (
"  k"j ( jK
  	K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; Aj"AM

 Aj"AI
 ($E


@ E
  Av" !M
   j"(   (  G 
 Ir
  Aj Aj 	  Aj!   
jk! !@@  "M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@ 
 O
  
 j"(   (  G
  Aj Aj 	Aj!  k! !@@  M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
! !


 A6$   ( kAu6(
  ;  Aj"6  j"!  K
  #j" M

   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" 
I" j! 
 kAI
 (   (  G
 Aj Aj 	  	  ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6   Atj 6   j!  ! ! 
 
 
  6   6  	 k

-- Chunk 178 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:26551-26700

 ! !
 
 


















A A AA:  
A A AA   
A A AA   
AA AA   
A A AA   
A.A AA   
A.A AA   
AA AA   
A A AA   
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
       A
       A
# Ak"
$  (!
 ( !  A 6  j"A k!  (
"Ak!  (" j! Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@@@  I@  (  (  k"
Aj" !
 Aj!	A !@   k"kAI   
kKr
  	(      I" j"(  G
  Aj Aj     Aj!
 
A6
@@@  
     
A
j

     
A
j

     
A
j
"   K""AI
  	 ! 
(
A !	@@  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"kAI  
  (  ( 
 kKr
  (       I"j"(  G
  Aj Aj     "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  

     
Aj

     
Aj

     
Aj
"AI
  At 	kAj At 
("kN
  
!
 !	 ! "!

  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"
kAI  
  (  ( 
 kKr
  (   
   
 I"j"
(  G
  Aj 
Aj     "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  

     
Aj

     
Aj

     
Aj
"AI
  At 	kAj At 
("
kN
  
!	 ! "!


 	AI@ 
!

    	 jkAj" I"
 j!   
!
 	Ak!@  
M  Or
 Ak"
-   Ak"-  G
 Aj! 
!
 

-- Chunk 179 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:26701-26850
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!

 ! !
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
  K
	@  M@   
AI
 (
"Aj"
 Aj"
kAkAaO
 
 
 
A!H
  
j!
 A j!@  
Aj Aj 
A j"
 A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"
AO@ ($

 A6$   ( kAu6(
  
;  Aj"
6  j!  (@  A 6
@ !
  K
    k" 
k" I"	 j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj    	 ! (
 
 ( kAuM
 ( "AO
 (
" ( jK
	  K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"
6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
# Ak"
$  (!
 ( !  A 6  j"A k!  (
"Ak!  (" j! Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@@@  I@  (  (  k"
Aj" !
 Aj!	A !@   k"kAI   
kKr
  	(      I" j"(  G
  Aj Aj     Aj!
 
A6
@@@  
     
A
jx

     
A
jw

     
A
jv
"   K""AI
  	 ! 
(
A !	@@  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"kAI  
  (  ( 
 kKr
  (       I"j"(  G
  Aj Aj     "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  

     
Ajx

     
Ajw

     
Ajv
"AI
  At 	kAj At 
("kN
  
!
 !	 ! "!

-- Chunk 180 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:26851-27000

  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"
kAI  
  (  ( 
 kKr
  (   
   
 I"j"
(  G
  Aj 
Aj     "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  

     
Ajx

     
Ajw

     
Ajv
"AI
  At 	kAj At 
("
kN
  
!	 ! "!


 	AI@ 
!

    	 jkAj" I"
 j!   
!
 	Ak!@  
M  Or
 Ak"
-   Ak"-  G
 Aj! 
!
 
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!

 ! !
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
  K
	@  M@   
AI
 (
"Aj"
 Aj"
kAkAaO
 
 
 
A!H
  
j!
 A j!@  
Aj Aj 
A j"
 A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"
AO@ ($

 A6$   ( kAu6(
  
;  Aj"
6  j!  (@  A 6
@ !
  K
    k" 
k" I"	 j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj    	 ! (
 
 ( kAuM
 ( "AO
 (
" ( jK
	  K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"
6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$  (! ( !
  A 6  j"
A k!  (

-- Chunk 181 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27001-27150
"Ak!  (" j! 
Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@@@  I@  (  (  k"Aj" ! Aj!
A !@   
k"	kAI 
  kKr
  
(   	   	 I"j"(  G
  Aj Aj 
  
  Aj!
 
A6
@@@  
    
 
A
jx

    
 
A
jw

    
 
A
jv
"   K""AI
  
 ! 
(
A !
@@  O
  Aj! Aj!@ 
E@A !


   
k"	kAI 
   (  (  kKr
  (     	 I" 	j"	(  G
  Aj 	Aj 
  
  "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  

    
 
Ajx

    
 
Ajw

    
 
Ajv
"	AI
  At 
kAj 	At 
("kN
  !
 	! "!


 
AI@ !

    
 jkAj" I" j!   !	 
Ak!@  	M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  6  
6  
Aj$  
 k
    k"AK6 Av jAj!

 
! !

@@@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
	@  M@   AI
 (
"Aj" Aj"	kAkAaO
  	 A!H
  j! A j!@  	Aj Aj 	A j"	 A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j!  (@  A 6
@ !  K
    k" k" I" j!  kAI   (  (  k Ir
 (   (  G
 Aj Aj 
  
  ! (
  ( kAuM
 ( "AO
 (
" ( jK
	  
K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j! 
! !

 
 


A A A A
  
A=A AA"  
 !


A A AA  

-- Chunk 182 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27151-27300
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$  (! ( !
  A 6  j"	A k!  (
"Ak!  (" j! 	Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@  I@  (  (  k"
Aj" !@   
k"kAI 
  kKr
  Aj"(       I"j"(  G
  Aj Aj 	  	  Aj!A!


 
A6
@@@@  
    	 
A
jx

    	 
A
jw

A A AA  
    	 
A
jv
"AM@    k"AK6 Av jAj!

 
(
"
AI@ !

   
 
kAj" I" j!   !
 
Ak!@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  6  
6  
Aj$  	 k
 ! 
! !

@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"j ( 
jK
  	K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
	 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j!  (@  A 6
@ !  K
    k" k" I"
 j!  kAI   (  (  k Ir
 (   (  G
 Aj Aj 	  	 
 ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
	 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j! 
! !

 
 


A A A A
  
A=A AA"  
 ! !


A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
\ @@@@  (Ak 
      A
      A
      A
      A
y   (E@@@@@  (Ak 
      A
      A
      A
      A
A A AA  
 AI@@  (
  ( ( G
   (
"  (G
    (k G A	Ir
 # Ak"$   (6  ) 7 @@@@  (E@ ( ( G
  (
"  (G
   (
kAO
      A      ( k6    (
 j"6
   6
   6 Aj$ 

-- Chunk 183 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27301-27450

A A AA   
AA AA   
AA AA   
A A AA   

      A 
A A AA   
       A 
       A 
# Ak"
$   (!   ("  (
"	j" Fj" k!  (!
 (! ( !  (!
  A 6A     	 
  
k"K"
!	 A  
!A    I"!
  j"
A k! 
Ak! A AI"A AKAk!@@@@@@@@A  	k!@@@@@@  I@A ! 	E Aj" j(   (  GrE@ Aj"  j 
Aj!
 
A6
@@@  

    
 
A
j

    
 
A
j

    
 
A
j
"   K""AI
   ! 
(
A !@@  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"
 
 j 
"
A{K
  Al kAj 
Aj"
AlN
 A! ! 
!
 
A6@@@@  
    
 
Aj

    
 
Aj

    
 
Aj
"
AI
  At kAj 
At 
("kN
  ! 
! "!

  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"  j 
"A{K
  AtAr k Aj"AtN
 A! ! !
 
A6@@@  

    
 
Aj

    
 
Aj

    
 
Aj
"AI
  At kAj At 
("
kN
  
! ! "!


 AI@ 	! 


A k!@@  O
   j"
 M
  Ak"-   
Ak-  G
  Aj! !


 Ak! 	
! (
 ( ( kAuM
 ( "
AO
 (
"
  k"	j ( 
jK

  
K

@  M@ 
  	AI
 (
"
Aj" Aj"
kAkAaO
  
 	A!H
 	 
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 



-- Chunk 184 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27451-27600
 
   	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  6   	; AM

 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j!  (@  A 6
@ "
E  Kr
 (    
k(  G
 Aj"  
k 
! (
 	 ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  	  	6   
  A  "  	    
6 
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !	 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
# Ak"
$   (!   ("  (
"	j" Fj" k!  (!
 (! ( !  (!
  A 6A     	 
  
k"K"
!	 A  
!A    I"!
  j"
A k! 
Ak! A AI"A AKAk!@@@@@@@@A  	k!@@@@@@  I@A ! 	E Aj" j(   (  GrE@ Aj"  j 
Aj!
 
A6
@@@  

    
 
A
j{

    
 
A
jz

    
 
A
jy
"   K""AI
   ! 
(
A !@@  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"
 
 j 
"
A{K
  Al kAj 
Aj"
AlN
 A! ! 
!
 
A6@@@@  
    
 
Aj{

    
 
Ajz

    
 
Ajy
"
AI
  At kAj 
At 
("kN
  ! 
! "!

  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"  j 
"A{K
  AtAr k Aj"AtN
 A! ! !
 
A6@@@  

    
 
Aj{

    
 
Ajz


-- Chunk 185 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27601-27750
    
 
Ajy
"AI
  At kAj At 
("
kN
  
! ! "!


 AI@ 	! 


A k!@@  O
   j"
 M
  Ak"-   
Ak-  G
  Aj! !


 Ak! 	
! (
 ( ( kAuM
 ( "
AO
 (
"
  k"	j ( 
jK

  
K

@  M@ 
  	AI
 (
"
Aj" Aj"
kAkAaO
  
 	A!H
 	 
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  6   	; AM

 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j!  (@  A 6
@ "
E  Kr
 (    
k(  G
 Aj"  
k 
! (
 	 ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  	  	6   
  A  "  	    
6 
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !	 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$   (!   ("  (
"j" Fj" k!	  (!
 (! ( !  (!
  A 6A    	  
 	 
k"K"
!	 A  
!A    I"!  j"
A k! 
Ak! A AI"A AKAk!@@@@@@@@A  	k!@@@@@@  I@A ! 	E Aj" j(   (  GrE@ Aj"  j 
Aj!
 
A6
@@@  

    
 
A
j{

    
 
A
jz

    
 
A
jy
"   K""AI
   ! 
(
A !
@@  O

-- Chunk 186 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27751-27900
  Aj!@ 
E@A !


 	E (    j(  Gr
  Aj"  j 
"A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  

    
 
Aj{

    
 
Ajz

    
 
Ajy
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ 	! 

A 
k!@@  O
   j" M
  Ak"-   Ak-  G
  Aj! !


 
Ak! 	
! (
 ( ( kAuM
 ( "
AO
 (
"  k"	j ( 
jK

  
K

@  M@   	AI
 (
"
Aj" Aj"kAkAaO
   	A!H
 	 
j! 
A j!@  Aj Aj A j" A j" I
 


    	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   	; AM

 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"
6  j!  (@  A 6
@ "E  Kr
 (    k(  G
 Aj"  k 
! (
 
 ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j! ! !
 
 
  	  	6     A  "  	    6 
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !	 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$   (!
   ("  (
"j" Fj" k!  (!	 (! ( !  (!
  A 6A      	  
k"K"	! A  	!A    I"!  j"	A k!
 	Ak! 
A 
AI"A AKAk!@@@@@@@A  k!@@@@@  O
 E Aj" j(   (  GrE@ Aj"  j 	Aj!
A!
 

 
A6
@@@@  
    	 
A
j{

    	 

-- Chunk 187 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:27901-28050
A
jz

A A AA  
    	 
A
jy
"
AM@    k"AK6 Av jAj!


 
(
"
AI@ ! 

A 
k! !@@  O
   j" M
  Ak"-   Ak-  G
  
Aj!
 !


 ! 
Ak
! (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  	K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; 
AM
	 
Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  
j!  (@  A 6
@ "E  Kr
 (    k(  G
 Aj"  k 	! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
	 Aj!@  
M@  

    
	
 ("A6  A ; AM
 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j! ! !
 
 
    6     A  "      6 
Aj$  	 k
A A A A
  
A=A AA"  
 ! !


A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  


 A
ZSTD_cwksp_mark_tables_dirty ZSTD_checkDictValidity sequences->size <= sequences->capacity rawSeqStore->size <= rawSeqStore->capacity res <= dstCapacity fhSize <= dstCapacity cSize <= dstCapacity ZSTD_loadZstdDictionary ZSTD_dedicatedDictSearch_lazy_loadDictionary ZSTD_loadDEntropy ZSTD_safecopy ZSTD_wildcopy cParams1.strategy == cParams2.strategy ZSTD_decompressSequences_body HUF_compress1X_usingCTable_internal_body ZSTD_decompressSequencesLong_body ZSTD_buildFSETable_body ZSTD_cwksp_assert_internal_consistency ZSTD_initCCtx ZSTD_compressCCtx matchIndex >= dmsLowestIndex matchIndex >= ddsLowestIndex matchEndIdx > matchIndex curr > matchIndex ms->window.dictLimit + (1U << cParams->windowLog) >= endIndex target >= idx idx >= startIdx endIdx >= startIdx lastSeqIdx == startIdx max <= defaultMax ZSTD_searchMax ZSTD_window_correctOverflow curr >= windowLow curr >= btLow iend > ilimit_w oLitEnd <= oend_w ZSTD_entropyCost ZSTD_crossEntropyCost compressedCost < basicCost && compressedCost < repeatCost ZSTD_rawLiteralsCost newCurrent >= maxDist ZSTD_compressBlock_fast HUF_sort op >= ostart base+curr+2 > istart base+current0+2 > istart match >= prefixStart seqStore->sequences == seqStore->sequencesStart ws->workspace <= ws->initOnceStart ws->tableEnd <= ws->allocStart ws->tableValidEnd <= ws->allocStart ZSTD_loadDictionaryContent ZSTD_freeCCtxContent ZSTD_DDict_dictContent curr > newCurrent window->lowLimit <= newCurrent window->dictLimit <= newCurrent dctx->streamStage == zdss_init ZSTD_cwksp_init ms->window.dictLimit == ms->window.lowLimit matchIndex >= lowLimit literals + litLength <= litLimit idx >= ms->window.dictLimit ms->dictMatchState == NULL || ms->loadedDictEnd == ms->window.dictLimit matchIndex >= dictLimit curr >= dictLimit matchIndex+matchLength >= dictLimit resultSeqStore->lit == originalSeqStore->lit seqStorePtr->lit + litLength <= seqStorePtr->litStart + seqStorePtr->maxNbLit ZSTD_fracWeight HUF_setMaxHeight ZSTD_resolveRepcodeToRawOffset ZSTD_maxShortOffset curr <= target dctx->refMultipleDDicts && dctx->ddictSet ZSTD_compressBlock_fast_extDict ZSTD_compress_usingDict ZSTD_getDDict ZSTD_decompressBegin_usingDDict ZSTD_DCtx_selectFrameDDict ZSTD_cwksp_reserve_object hufMetadata->hType == set_compressed || hufMetadata->hType == set_repeat HUF_flushBits HUF_addBits HUF_setNbBits mlBits <= MaxMLBits llBits <= MaxLLBits ZSTD_updateStats ZSTD_downscaleStats ZSTD_minLiteralsToCompress ZSTD_ldm_blockCompress ZSTD_ldm_adjustParameters ZSTD_DCtx_resetParameters ZSTD_copyDDictParameters ZSTD_rescaleFreqs ZSTD_assertEqualCParams BOUNDED(3, ms->cParams.minMatch, 6) == mls ZSTD_buildBlockEntropyStats_literals ZSTD_safecopyLiterals ZSTD_compressLiterals ZSTD_noCompressLiterals ZSTD_cwksp_clean_tables ZSTD_ldm_fillFastTables numMatches < rowEntries ZSTD_insertBtAndGetAllMatches ZSTD_seqToCodes ZSTD_seqStore_resolveOffCodes ZSTD_compressSubBlock_sequences zc->seqCollector.seqIndex + 1 < zc->seqCollector.maxSequences ZSTD_copyBlockSequences ZSTD_ldm_generateSequences ZSTD_buildSequencesStatistics ZSTD_hashPtr !kFast || bitC->ptr <= bitC->endPtr bitC.ptr <= bitC.endPtr matchIndex < curr ZSTD_selectBlockCompressor ZSTD_deriveBlockSplitsHelper ZSTD_decompressSequences_bodySplitLitBuffer ZSTD_execSequenceSplitLitBuffer ZSTD_execSequenceEndSplitLitBuffer ZSTD_writeFrameHeader maxSymbolValue <= MaxSeq ZSTD_storeSeq nbSeq <= seqStorePtr->maxNbSeq (size_t)(seqStorePtr->sequences - seqStorePtr->sequencesStart) < seqStorePtr->maxNbSeq HIST_count_parallel_wksp FSE_buildCTable_wksp HUF_readDTableX1_wksp end <= top HUF_compress1X_usingCTable_internal_body_loop *ip <= *op oend >= op iend >= ip ZSTD_updateRep params->useBlockSplitter != ZSTD_ps_auto cctxParams->useBlockSplitter != ZSTD_ps_auto params->useRowMatchFinder != ZSTD_ps_auto params->ldmParams.enableLdm != ZSTD_ps_auto externalRepSearch != ZSTD_ps_auto mode != ZSTD_ps_auto ZSTD_getOffsetInfo ZSTD_decompressBegin tmpMinChain <= minChain ZSTD_minGain ZSTD_cwksp_align cur >= opt[cur].mlen ZSTD_cwksp_mark_tables_clean alloc >= bottom ZSTD_copySequencesToSeqStoreExplicitBlockDelim ZSTD_row_update_internalImpl rankLast[nBitsToDecrease] != noSymbol count[s] < total ZSTD_compressSubBlock_literal ZSTD_estimateBlockSize_literal ZSTD_estimateSubBlockSize_literal ZSTD_resetCCtx_internal ZSTD_CCtxParams_init_internal ZSTD_adjustCParams_internal ZSTD_btGetAllMatches_internal ZSTD_compressBegin_internal ZSTD_compressBlock_splitBlock_internal FSE_optimalTableLog_internal ZSTD_compressContinue_internal ZSTD_row_update_internal ZSTD_entropyCompressSeqStore_internal ZSTD_reduceTable_internal HUF_compressCTable_internal HUF_compress4X_usingCTable_internal ZSTD_updateTree_internal allBytesIdentical ZSTD_deriveSeqStoreChunk ZSTD_compress_frameChunk ZSTD_compressBlock_splitBlock ZSTD_compressRleLiteralsBlock ZSTD_decodeLiteralsBlock ZSTD_compressSubBlock_multi u == length (U32)skipSize < length offset_2 <= dictAndPrefixLength offset_1 <= dictAndPrefixLength ZSTD_startingInputLength cParams1.targetLength == cParams2.targetLength optLdm->seqStore.posInSequence <= currSeq.litLength + currSeq.matchLength op < op + sequenceLength oLitEnd < op + sequenceLength ZSTD_row_prefetch ZSTD_DUBT_findBestMatch ZSTD_RowFindBestMatch ZSTD_HcFindBestMatch ZSTD_DUBT_findBetterDictMatch cParams1.minMatch == cParams2.minMatch ZSTD_optLdm_maybeAddMatch ZSTD_dedicatedDictSearch_lazy_search cParams->hashLog >= rowLog cPar.hashLog >= rowLog cParams1.windowLog == cParams2.windowLog ZSTD_dictAndWindowLog ms->cParams.hashLog > ms->cParams.chainLog cParams1.chainLog == cParams2.chainLog cParams1.hashLog == cParams2.hashLog cParams1.searchLog == cParams2.searchLog huffLog <= LitHufLog params->ldmParams.hashLog >= params->ldmParams.bucketSizeLog FSE_minTableLog HUF_optimalTableLog bitCost <= scaleLog bitCost < scaleLog ofBits <= MaxOff offCode <= MaxOff sequences->pos <= sequences->size rawSeqStore->pos <= rawSeqStore->size zc->externSeqStore.pos <= zc->externSeqStore.size ldmSeqStore.pos == ldmSeqStore.size cLitSize > litSize litLengthSum == litSize litLengthSum <= litSize symbol <= alphabetSize ZSTD_DDict_dictSize cSizeChunk <= zc->blockSize + ZSTD_blockHeaderSize cSizeSingleBlock <= zc->blockSize + ZSTD_blockHeaderSize cSize <= blockSize + ZSTD_blockHeaderSize chainPos <= chainSize newLeftoverSize == chunkSize ZSTD_seqDecompressedSize skippableSize <= srcSize ldmState->window.nextSrc >= (BYTE const*)src + srcSize dstCapacity >= cSize HUF_setValue *ip <= maxSymbolValue ZSTD_reset_matchState ZSTD_sizeof_matchState ZSTD_compressBlock_fast_dictMatchState ZSTD_window_update ZSTD_cwksp_internal_advance_phase phase >= ws->phase ZSTD_finalizeOffBase ZSTD_entropyCompressSeqStore ZSTD_opt_getNextMatchAndUpdateSeqStore ZSTD_buildSeqStore ZSTD_estimateBlockSize_symbolType ZSTD_estimateSubBlockSize_symbolType ZSTD_selectEncodingType seqStorePtr->longLengthType == ZSTD_llt_none ZSTD_decompressMultiFrame ZSTD_buildSeqTable_rle HIST_count_simple ZSTD_cwksp_reserve_table zc->appliedParams.ldmParams.enableLdm == ZSTD_ps_disable zc->appliedParams.useBlockSplitter == ZSTD_ps_enable ZSTD_buildSeqTable ZSTD_allocateChainTable HUF_getNbBitsFromCTable ZSTD_buildCTable ZSTD_cwksp_reserve_aligned_init_once maybeSplitSequence ZSTD_validateSequence ZSTD_decodeSequence ZSTD_execSequence endIndex - prefixStartIndex <= maxDistance ZSTD_litLengthPrice ZSTD_getMatchPrice HUF_alignUpWorkspace ZSTD_cwksp_reserve_internal_buffer_space op <= oend oMatchEnd <= oend oend_w < oend lp <= lend ip <= iend anchor + llen <= iend ip + sequence.litLength + sequence.matchLength <= iend ip + decompressedSize <= iend ip + 8 <= iend chunkStart < iend ip < iend op <= oLitEnd match+4 <= dictEnd dictMatchL < dictEnd dictMatchL3 < dictEnd blockEndIdx >= loadedDictEnd ws->tableValidEnd >= ws->objectEnd ws->workspace <= ws->objectEnd match+4 <= dmsEnd match+4 <= ddsEnd op <= oMatchEnd op < oMatchEnd oLitEnd < oMatchEnd storePos == storeEnd ws->objectEnd <= ws->tableEnd ZSTD_execSequenceEnd ws->allocStart <= ws->workspaceEnd ws->objectEnd <= ws->tableValidEnd isDefaultAllowed ZSTD_hashPtrSalted ZSTD_rowMatchFinderUsed ZSTD_cwksp_reserve_aligned ZSTD_isAligned ZSTD_literalsCompressionIsDisabled ZSTD_blockSplitterEnabled ZSTD_getFrameHeader_advanced seqStoreLiteralsSize >= literalsRead ZSTD_compressBlock_lazy_generic ZSTD_compressBlock_opt_generic FSE_writeNCount_generic ZSTD_compressBlock_fast_extDict_generic ZSTD_compressBlock_doubleFast_extDict_generic ZSTD_compressBlock_fast_noDict_generic ZSTD_compressBlock_doubleFast_noDict_generic ZSTD_compressBlock_fast_dictMatchState_generic ZSTD_compressBlock_doubleFast_dictMatchState_generic ZSTD_compressEnd_public zstd.c curr > matchIndex + dmsIndexDelta ZSTD_initStats_ultra cumul[u] >= cumul[u-1] MEM_readLE32(dict) == ZSTD_MAGIC_DICTIONARY MEM_readLE32(dictPtr) == ZSTD_MAGIC_DICTIONARY newCurrent - maxDist >= ZSTD_WINDOW_START_INDEX total <= INT_MAX cctx->appliedParams.cParams.windowLog <= ZSTD_WINDOWLOG_MAX params->hashLog <= ZSTD_HASHLOG_MAX litLength <= ZSTD_BLOCKSIZE_MAX zc->blockSize <= ZSTD_BLOCKSIZE_MAX srcSize <= ZSTD_BLOCKSIZE_MAX cSize < ZSTD_BLOCKSIZE_MAX symbolValue <= HUF_SYMBOLVALUE_MAX nbBits <= HUF_TABLELOG_ABSOLUTEMAX HUF_getNbBits(elt) <= HUF_TABLELOG_ABSOLUTEMAX ZSTD_updateDUBT litSize >= MIN_LITERALS_FOR_4_STREAMS (bitC->bitPos[idx] & 0xFF) <= HUF_BITS_IN_CONTAINER (bitC->bitPos[0] & 0xFF) <= HUF_BITS_IN_CONTAINER (bitC->bitPos[1] & 0xFF) < HUF_BITS_IN_CONTAINER optPtr->litSumBasePrice >= BITCOST_MULTIPLIER ZSTD_highbit32((U32)maxOffbase) == STREAM_ACCUMULATOR_MIN diff >= WILDCOPY_VECLEN || diff <= -WILDCOPY_VECLEN cur < ZSTD_OPT_NUM storeEnd < ZSTD_OPT_NUM (repCode - ll0 + 1)<=ZSTD_REP_NUM dict==NULL || ddict==NULL ms->dictMatchState == NULL dctx != NULL cctx != NULL dst != NULL ddict != NULL optPtr->symbolCosts != NULL dictMatchStatePtr != NULL loadedDictEndPtr != NULL selectedCompressor != NULL zc->externalMatchCtx.mFinder != NULL optPtr->litFreq != NULL op != NULL ms->dictMatchState != NULL window->base != NULL window->dictBase != NULL ms->chainTable != NULL src != NULL matchLength >= MINMATCH seqStorePtr->maxNbLit <= 128 KB (int)strategy <= 9 ZSTD_overlapCopy8 correction > 1<<28 ip <= iend-8 matchEndIdx > curr+8 *op - *ip >= 8 matchEndIdx > curr + 8 nbBits <= sizeof(bitC->bitContainer[0]) * 8 mult <= 9 && mult >= 7 ZSTD_hash6 ZSTD_BtFindBestMatch_extDict_6 ZSTD_HcFindBestMatch_extDict_6 ZSTD_BtFindBestMatch_noDict_6 ZSTD_HcFindBestMatch_noDict_6 ZSTD_HcFindBestMatch_dedicatedDictSearch_6 ZSTD_BtFindBestMatch_dictMatchState_6 ZSTD_HcFindBestMatch_dictMatchState_6 ZSTD_RowFindBestMatch_extDict_6_6 ZSTD_RowFindBestMatch_noDict_6_6 ZSTD_RowFindBestMatch_dedicatedDictSearch_6_6 ZSTD_RowFindBestMatch_dictMatchState_6_6 ZSTD_RowFindBestMatch_extDict_5_6 ZSTD_RowFindBestMatch_noDict_5_6 ZSTD_RowFindBestMatch_dedicatedDictSearch_5_6 ZSTD_RowFindBestMatch_dictMatchState_5_6 ZSTD_RowFindBestMatch_extDict_4_6 ZSTD_RowFindBestMatch_noDict_4_6 ZSTD_RowFindBestMatch_dedicatedDictSearch_4_6 ZSTD_RowFindBestMatch_dictMatchState_4_6 norm256 < 256 tableLog < 16 rowLog == 4 || rowLog == 5 || rowLog == 6 MAX(4, MIN(6, ms->cParams.minMatch)) == 6 MAX(4, MIN(6, ms->cParams.searchLog)) == 6 ZSTD_BtFindBestMatch_extDict_5 ZSTD_HcFindBestMatch_extDict_5 ZSTD_BtFindBestMatch_noDict_5 ZSTD_HcFindBestMatch_noDict_5 ZSTD_HcFindBestMatch_dedicatedDictSearch_5 ZSTD_BtFindBestMatch_dictMatchState_5 ZSTD_HcFindBestMatch_dictMatchState_5 ZSTD_RowFindBestMatch_extDict_6_5 ZSTD_RowFindBestMatch_noDict_6_5 ZSTD_RowFindBestMatch_dedicatedDictSearch_6_5 ZSTD_RowFindBestMatch_dictMatchState_6_5 ZSTD_RowFindBestMatch_extDict_5_5 ZSTD_RowFindBestMatch_noDict_5_5 ZSTD_RowFindBestMatch_dedicatedDictSearch_5_5 ZSTD_RowFindBestMatch_dictMatchState_5_5 ZSTD_RowFindBestMatch_extDict_4_5 ZSTD_RowFindBestMatch_noDict_4_5 ZSTD_RowFindBestMatch_dedicatedDictSearch_4_5 ZSTD_RowFindBestMatch_dictMatchState_4_5 *maxSymbolValuePtr <= 255 nbAddBits < 255 nbAdditionalBits[symbol] < 255 MAX(4, MIN(6, ms->cParams.minMatch)) == 5 MAX(4, MIN(6, ms->cParams.searchLog)) == 5 ZSTD_BtFindBestMatch_extDict_4 ZSTD_HcFindBestMatch_extDict_4 ZSTD_BtFindBestMatch_noDict_4 ZSTD_HcFindBestMatch_noDict_4 ZSTD_HcFindBestMatch_dedicatedDictSearch_4 ZSTD_BtFindBestMatch_dictMatchState_4 ZSTD_HcFindBestMatch_dictMatchState_4 ZSTD_RowFindBestMatch_extDict_6_4 ZSTD_RowFindBestMatch_noDict_6_4 ZSTD_RowFindBestMatch_dedicatedDictSearch_6_4 ZSTD_RowFindBestMatch_dictMatchState_6_4 ZSTD_RowFindBestMatch_extDict_5_4 ZSTD_RowFindBestMatch_noDict_5_4 ZSTD_RowFindBestMatch_dedicatedDictSearch_5_4 ZSTD_RowFindBestMatch_dictMatchState_5_4 ZSTD_RowFindBestMatch_extDict_4_4 ZSTD_RowFindBestMatch_noDict_4_4 ZSTD_RowFindBestMatch_dedicatedDictSearch_4_4 ZSTD_RowFindBestMatch_dictMatchState_4_4 h <= 64 ms->cParams.chainLog <= 24 dstCapacity >= 4 MAX(4, MIN(6, ms->cParams.minMatch)) == 4 MAX(4, MIN(6, ms->cParams.searchLog)) == 4 skipSize <= 4 curr > matchIndex3 ZSTD_hash3 ZSTD_insertAndFindFirstIndexHash3 fseMetadata->lastCountSize + bitstreamSize == 3 HUF_fillDTableX2Level2 ZSTD_compressBlock_btultra2 hBits <= 32 h <= 32 params->ldmParams.hashRateLog < 32 HUF_mergeIndex1 ZSTD_insertBt1 bucketStartIdx < maxSymbolValue1 pos < maxSymbolValue1 ZSTD_insertDUBT1 hb + BITCOST_ACCURACY < 31 length > 1 srcSize > 1 normalizedCounter[s] > 1 nbSeq_1 > 1 sequence.matchLength >= 1 stepSize >= 1 cSize > 0 || cctx->seqCollector.collectSequences == 1 params.fParams.contentSizeFlag == 1 skipSize == 1 rankLast[nBitsToDecrease] != noSymbol || nBitsToDecrease == 1 ms->window.dictLimit - ms->nextToUpdate <= 1 ll0 <= 1 lowerRank < RANK_POSITION_TABLE_SIZE - 1 zc->seqCollector.maxSequences >= seqStoreSeqSize + 1 ll0 (curr - matchIndex)>0 (optLdm->offset)>0 (inSeqs[idx].offset)>0 (offset)>0 (rawOffset)>0 (cRawOffset)>0 (offsetBound)>0 (curr - matchIndex3)>0 (rep_offset1)>0 (curr - (matchIndex + dmsIndexDelta))>0 (curr - (matchIndex + ddsIndexDelta))>0 n>=0 normalizedCounter[s]>=0 position==0 mnum==0 ZSTD_checkCParams(cPar)==0 shift < 30 price < 1000000000 windowLow > 0 totalCost > 0 sequence.offset > 0 nbBits > 0 total > 0 cSize > 0 offBase > 0 norm256 > 0 hashLog3 > 0 (int)strategy >= 0 n >= 0 opt[cur].price >= 0 opt[0].price >= 0 normalizedCounter[u-1] >= 0 ((size_t)ptr & (ZSTD_CWKSP_ALIGNMENT_BYTES-1))== 0 ((size_t)alloc & (ZSTD_CWKSP_ALIGNMENT_BYTES-1))== 0 position == 0 opt[0].mlen == 0 ms->opt.litLengthSum == 0 tableSize % unroll == 0 n % kUnroll == 0 cctx->staticSize == 0 rankPosition[RANK_POSITION_TABLE_SIZE - 1].base == 0 (value >> nbBits) == 0 n % (2 * kUnroll) == 0 (align & mask) == 0 ((size_t)aligned & mask) == 0 memcmp(match, ip, matchLength) == 0 ((size_t)workSpace & 1) == 0 bytes % ZSTD_ALIGNOF(void*) == 0 (size_t)alloc % ZSTD_ALIGNOF(void*) == 0 (bytes & (ZSTD_CWKSP_ALIGNMENT_BYTES-1)) == 0 (size & (ZSTD_ROWSIZE-1)) == 0 (bytes & (sizeof(U32)-1)) == 0 ((size_t)start & (sizeof(void*)-1)) 

-- Chunk 188 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/utils/webasm_bincode_deserializer/zstd.wasm:28051-28174
	



 A
                                                  	      
      
                          
           0     @               
     
                                                 
      
      
                               (     @    @          	     
   0                                            	      
      
                          
     (     0                @    
   A
             =     	                }     
          
          ?           }     
       ?   
         
           =     
        
         A
                                     	      
      
                              
            "     %     )     /     ;     S          	                            	      
      
                                    
      !     #     '     +     3     C     c             0                         
      
                                    
                    @    
     
    
    
 A
+               ?                   ?           ?   ?                                                                                                                           	



 	






  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************   
   
                  
                                                                                                                                                                                                                                                                                                                                               0                     @                     @                        	                     	                     	            	        	      
   
                  
                                                                                                                                                                                                                                 
                     
                                                                                                                                  	                     	            
         	            
         	            
        	      
   
                  
   
                   
                                                                                                                                                                                                                                 
                     
                                                                                                    
                              	                     	            	         	            
        	      
   
                                                                                                                                                                                                                        	                           
                                                                @                                          0   	                     	                     	                     	                     	            	         	            
        	   \ww_,zk&_
sʩGޱOKeП:~NX4kj|NC:O"$Ξ%$vv[()u	7Vu_G)9*98'Ξ"
( b{ ʈ]E@V\`t :h4
%ƅO=sFV" Q_Ѳ]iTJ@Ñs
m.0HG51ہ4ҡ|ì̖
we#WwqD
+ 7O_H^zvdF*.
|.qi).^F+~VsU?הZp^EaIJ%҅a8黔ouY	rH5&kGz#9D&x`tm6r<Ψ
C#!b[

MSr]?
.U@h:g	1NnIrXxw8;$8'S\:f$ZGY"V5o
F*eG	%l"Y.$ffnrq7x;PP	=Vx(eX$RƮqvgAy+k)n/h%fPnzES9t:´]ުTYB	}(%
8'j;OQ%^٢ᴼQ;
=Rg=OaB{Wb[B^ K=
1hUL>vf]b*uv*rФbD=|]m
Ǜ׹b)z,!MbDg[tP%ctç*>ZF9N;	rT+6ZNw̓)"Gߢ
KPnE4F/+FØaYvR5Sy8H$&ۂg(X@|NQ7AdpKp
Z*bh؜7R52JGKy Oizc}q^%;ykFY;ƈBcʁKg6Z؈#yk
-ӝNl9\qEP^28ˊ&gf#`;d(|ftjv۾ƅe
`Ȯ~evs#il飃V6$otMZu8Dx=9v[m5D	lrgLv=
R̜К7Qz)ME4jwK

4
q F=<8t
헪B
02pU
9)ӹ
?#'zL
g{*}wFfwIgGڎ(ۭH>
}jInfZj45"f^n[Bʮ})9U-
I"r=	S
	!fa0Ľfp5nsfZY͖mG֣9N򯣟S_L	3VYNu>
/.?6ycVZ@g8m	e3)j|Պ,/^v(ml9r¡MÉS

*0~(⹁7=s^[L6"9
>zVgh$܎gv^
yC8OLͧ=̱):zO2aNuE9BTcqR?do/wzB

؃]>nJ=2,THh/fxLfhLGTG
w7%6ֱ Ұu!d`]k_
W_%3$;cJ6Z/K]XB$^96Gb$ѨVgÎ-nb:wļ+}xA,LUM~u<63O\
,8cH͓dh^W4@$9RŌ$AwL R0bbeX/zKB3%bAL2բ(U$;sîhm~iD(I/{=.cP#l+1t{Gp3!V|;۲NkԌ@Kqߩ@
y}5X>^%뀅˻+~Q
&OM++   ,   -   .   /   0   1   2   3   4   5   6                                                                                                                                                                                                                                                                                 	   
   
 A
lP

=== File: middle-server/src/utils/webasm_bincode_deserializer/bincode_js.d.ts ===

-- Chunk 1 --
// bincode_js.d.ts:7-7
function bincode_js_deserialize(val: any): any;

-- Chunk 2 --
// bincode_js.d.ts:12-12
function borsh_bpf_js_deserialize(val: any): any;

-- Chunk 3 --
// bincode_js.d.ts:16-16
function solana_program_init(): void;

-- Chunk 4 --
// bincode_js.d.ts:29-54
class Hash {
  free(): void;
  /**
   * Create a new Hash object
   *
   * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value: any);
  /**
   * Return the base58 string representation of the hash
   * @returns {string}
   */
  toString(): string;
  /**
   * Checks if two `Hash`s are equal
   * @param {Hash} other
   * @returns {boolean}
   */
  equals(other: Hash): boolean;
  /**
   * Return the `Uint8Array` representation of the hash
   * @returns {Uint8Array}
   */
  toBytes(): Uint8Array;
}

-- Chunk 5 --
// bincode_js.d.ts:116-118
class Instruction {
  free(): void;
}

-- Chunk 6 --
// bincode_js.d.ts:121-130
class Instructions {
  free(): void;
  /**
   */
  constructor();
  /**
   * @param {Instruction} instruction
   */
  push(instruction: Instruction): void;
}

-- Chunk 7 --
// bincode_js.d.ts:147-153
class Message {
  free(): void;
  /**
   * The id of a recent ledger entry.
   */
  recent_blockhash: Hash;
}

-- Chunk 8 --
// bincode_js.d.ts:170-225
class Pubkey {
  free(): void;
  /**
   * Create a new Pubkey object
   *
   * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value: any);
  /**
   * Return the base58 string representation of the public key
   * @returns {string}
   */
  toString(): string;
  /**
   * Check if a `Pubkey` is on the ed25519 curve.
   * @returns {boolean}
   */
  isOnCurve(): boolean;
  /**
   * Checks if two `Pubkey`s are equal
   * @param {Pubkey} other
   * @returns {boolean}
   */
  equals(other: Pubkey): boolean;
  /**
   * Return the `Uint8Array` representation of the public key
   * @returns {Uint8Array}
   */
  toBytes(): Uint8Array;
  /**
   * Derive a Pubkey from another Pubkey, string seed, and a program id
   * @param {Pubkey} base
   * @param {string} seed
   * @param {Pubkey} owner
   * @returns {Pubkey}
   */
  static createWithSeed(base: Pubkey, seed: string, owner: Pubkey): Pubkey;
  /**
   * Derive a program address from seeds and a program id
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {Pubkey}
   */
  static createProgramAddress(seeds: any[], program_id: Pubkey): Pubkey;
  /**
   * Find a valid program address
   *
   * Returns:
   * * `[PubKey, number]` - the program address and bump seed
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {any}
   */
  static findProgramAddress(seeds: any[], program_id: Pubkey): any;
}

=== File: middle-server/src/utils/ipfs/ipfs.ts ===

-- Chunk 1 --
// ipfs.ts:3-7
async function getFile(cid: string, filename: string = "submission.json"): Promise<string> {
  const storageClient = KoiiStorageClient.getInstance({});
  const fileBlob = await storageClient.getFile(cid, filename);
  return await fileBlob.text();
}

=== File: middle-server/src/utils/gitHub/gitHub.ts ===

-- Chunk 1 --
// gitHub.ts:1-20
async function createFork(repoUrl: string) {
  const { Octokit } = await import("@octokit/rest");
  const octokit = new Octokit({
    auth: process.env.GITHUB_TOKEN,
  });

  const repo = repoUrl.split("/").pop();
  const owner = repoUrl.split("/")[3];

  if (!owner || !repo) {
    throw new Error("Invalid repository URL");
  }

  const fork = await octokit.rest.repos.createFork({
    owner,
    repo,
  });

  return fork.data.html_url;
}

=== File: middle-server/src/utils/taskState/getRoundTime.ts ===

-- Chunk 1 --
// getRoundTime.ts:5-21
async function getRoundTime(taskId: string) {
  try {
    const documentationModelResult = await TaskRoundTimeModel.findOne({ taskId: taskId });
    if (!documentationModelResult) {
      const connection = new Connection("https://mainnet.koii.network", "confirmed");
      const taskState = await getTaskStateInfo(connection, taskId);
      const roundTime = taskState.round_time;
      const roundTimeInMS = roundTime * 408;
      await TaskRoundTimeModel.create({ taskId: taskId, roundTimeInMS: roundTimeInMS });
      return roundTimeInMS;
    }
    return documentationModelResult.roundTimeInMS;
  } catch (error) {
    console.error("Error in getRoundTime", error);
    return null;
  }
}

=== File: middle-server/src/utils/taskState/submissionRound.ts ===

-- Chunk 1 --
// submissionRound.ts:4-38
async function getMaxSubmissionRound(taskId: string): Promise<number | null> {
  if (!taskId) {
    console.error("Task ID is required");
    return null;
  }

  try {
    // Validate that taskId is a valid Solana public key
    new PublicKey(taskId);
  } catch (error) {
    console.error("Invalid task ID format:", error);
    return null;
  }

  const connection = new Connection("https://mainnet.koii.network", "confirmed");

  try {
    const taskStateInfo = await getTaskStateInfo(connection, taskId);
    if (!taskStateInfo || !taskStateInfo.submissions) {
      console.error("No task state info found for task:", taskId);
      return null;
    }
    const roundsInSubmission = Object.keys(taskStateInfo.submissions);
    if (roundsInSubmission.length === 0) {
      console.error("No submission rounds found for task:", taskId);
      return null;
    }
    const largestRound = Math.max(...roundsInSubmission.map(Number));
    // Return the largest round, even if it's 0
    return largestRound;
  } catch (error) {
    console.error("Error in getMaxSubmissionRound:", error);
    return null;
  }
}

-- Chunk 2 --
// submissionRound.ts:41-62
async function getStartingSlot(taskId: string): Promise<{ startingSlot: number; roundTime: number }> {
  if (startingSlotCache.has(taskId) && startingSlotCache.get(taskId) !== undefined) {
    return startingSlotCache.get(taskId)!;
  }
  const connection = new Connection("https://mainnet.koii.network", "confirmed");
  try {
    const taskStateInfo = await getTaskStateInfo(connection, taskId);
    if (!taskStateInfo) {
      console.error("No task state info returned for task:", taskId);
      throw new Error("No task state info found");
    }
    if (!taskStateInfo.starting_slot || !taskStateInfo.round_time) {
      console.error("Invalid task state info:", taskStateInfo);
      throw new Error("Invalid task state info - missing starting_slot or round_time");
    }
    startingSlotCache.set(taskId, { startingSlot: taskStateInfo.starting_slot, roundTime: taskStateInfo.round_time });
    return { startingSlot: taskStateInfo.starting_slot, roundTime: taskStateInfo.round_time };
  } catch (error) {
    console.error("Error in getStartingSlot:", error);
    throw error;
  }
}

-- Chunk 3 --
// submissionRound.ts:64-96
async function getCurrentRound(taskId: string): Promise<number | null> {
  try {
    const connection = new Connection("https://mainnet.koii.network", "confirmed");
    const currentSlot = await connection.getSlot();
    console.log("currentSlot", currentSlot);

    const startingSlotInfo = await getStartingSlot(taskId);
    if (!startingSlotInfo) {
      console.error("Failed to get starting slot info for task:", taskId);
      return null;
    }

    const { startingSlot, roundTime } = startingSlotInfo;
    if (!startingSlot || !roundTime) {
      console.error(
        "Invalid starting slot or round time for task:",
        taskId,
        "startingSlot:",
        startingSlot,
        "roundTime:",
        roundTime,
      );
      return null;
    }

    const currentRound = Math.floor((currentSlot - startingSlot) / roundTime);
    console.log("Calculated current round:", currentRound, "for task:", taskId);
    return currentRound;
  } catch (error) {
    console.error("Error in getCurrentRound:", error);
    return null;
  }
}

=== File: middle-server/src/utils/taskState/decodeZstd.ts ===

-- Chunk 1 --
// decodeZstd.ts:3-7
async function decodeZstd(base64ZstdData: string): Promise<Buffer> {
  const compressedData = Buffer.from(base64ZstdData, "base64");
  const decompressedData = await fzstd.decompress(compressedData);
  return Buffer.from(decompressedData);
}

=== File: middle-server/src/utils/taskState/getDistributionList.ts ===

-- Chunk 1 --
// getDistributionList.ts:6-25
async function getDistributionListSubmitter(taskId: string, round: string): Promise<string | null> {
  const connection = new Connection("https://mainnet.koii.network", "confirmed");

  try {
    const taskStateInfo = await getTaskStateInfo(connection, taskId);
    if (!taskStateInfo || !taskStateInfo.distribution_rewards_submission) {
      console.error("No distribution rewards submission found for task:", taskId);
      return null;
    }
    if (!taskStateInfo.distribution_rewards_submission[round]) {
      console.error("No distribution rewards submission found for round:", round);
      return null;
    }
    const keys = Object.keys(taskStateInfo.distribution_rewards_submission[round]);
    return keys.length > 0 ? keys[0] : null;
  } catch (error) {
    console.error("Error in getDistributionListSubmitter", error);
    return null;
  }
}

-- Chunk 2 --
// getDistributionList.ts:27-49
async function getDistributionList(publicKey: string, round: string, taskId: string): Promise<string | null> {
  const connection = new Connection("https://mainnet.koii.network", "confirmed");
  let accountInfo: AccountInfo<Buffer> | null = null;
  accountInfo = await connection.getAccountInfo(new PublicKey(publicKey), "base64+zstd");
  if (!accountInfo) {
    console.log(`${publicKey} doesn't contain any distribution list data`);
    return null;
  }
  accountInfo.data = await decodeZstd((accountInfo.data ? accountInfo.data[0] : "") + "");
  const origData = getBincodeDeserializedDistributionList(accountInfo?.data, round, taskId);
  if (origData) return origData;
  try {
    const d = JSON.parse(accountInfo.data + "");
    const i = Buffer.from(d[round][taskId]).indexOf(0x00);
    const t = Buffer.from(d[round][taskId]).slice(0, i);

    const origData = JSON.stringify(new TextDecoder().decode(t));
    return origData;
  } catch (error) {
    console.log("ERROR", error);
    return null;
  }
}

-- Chunk 3 --
// getDistributionList.ts:51-73
function getBincodeDeserializedDistributionList(raw_data: any, round: string, taskId: string): string | null {
  try {
    if (!raw_data) return null;
    const jsObject = {};
    const parse_result = bincode_js_deserialize(raw_data);
    console.log("parse_result", parse_result);
    // @ts-ignore
    parse_result.forEach((innerMap: any, epoch: any) => {
      const innerJsObject = {};
      innerMap.forEach((value: any, key: any) => {
        // @ts-ignore
        innerJsObject[key] = JSON.parse(value);
      });
      // @ts-ignore
      jsObject[epoch] = innerJsObject;
    });
    // @ts-ignore
    return JSON.stringify(jsObject[round][taskId]);
  } catch (e) {
    console.error("Error in BincodeDeserialization", e);
    return null;
  }
}

-- Chunk 4 --
// getDistributionList.ts:75-101
async function getDistributionListWrapper(taskId: string, round: string): Promise<object | null> {
  const submitter = await getDistributionListSubmitter(taskId, round);
  if (!submitter) {
    console.log("No submitter found");
    return null;
  }
  console.log("submitter", submitter);
  console.log("round", round);
  console.log("taskId", taskId);
  const distributionList = await getDistributionList(submitter, round, taskId);
  // console.log("distributionList", distributionList);
  if (distributionList) {
    try {
      // Check if distributionList is already an object
      // if (typeof distributionList === 'object') {
      //     return distributionList;
      // }
      // If it's a string, try to parse it
      const parsedList = JSON.parse(distributionList);
      return parsedList;
    } catch (error) {
      console.error("Error parsing distribution list:", error);
      return null;
    }
  }
  return null;
}

-- Chunk 5 --
// getDistributionList.ts:103-119
async function getKeysByValueSign(
  distributionList: object,
): Promise<{ positive: string[]; negative: string[] }> {
  const positive: string[] = [];
  const negative: string[] = [];

  Object.entries(distributionList).forEach(([key, value]) => {
    const numValue = Number(value);
    if (numValue > 0) {
      positive.push(key);
    } else if (numValue <= 0) {
      negative.push(key);
    }
  });

  return { positive, negative };
}

=== File: middle-server/src/utils/taskState/activeNode.ts ===

-- Chunk 1 --
// activeNode.ts:4-14
async function getLastRoundValueLength(taskId: string): Promise<number> {
  const connection = new Connection("https://mainnet.koii.network", "confirmed");
  const taskState = await getTaskStateInfo(connection, taskId);
  const roundKeys = Object.keys(taskState.submissions);
  const lastRound = Math.max(...roundKeys.map(Number));
  const lastRoundValue = taskState.submissions[(lastRound - 1).toString()];
  if (!lastRoundValue) {
    throw new Error("Last round value is undefined or null");
  }
  return Object.keys(lastRoundValue).length;
}

=== File: middle-server/src/utils/taskState/stakingList.ts ===

-- Chunk 1 --
// stakingList.ts:9-22
async function getTaskStateStakingKeys(taskId: string): Promise<string[]> {
  const cachedTaskState = taskCache.get(taskId);
  if (cachedTaskState) {
    return cachedTaskState as string[];
  }

  const connection = new Connection(RPCURL);
  const taskState = await getTaskStateInfo(connection, taskId);
  //   console.log(Object.keys(taskState.stake_list));
  const stakeListKeys = Object.keys(taskState.stake_list);

  taskCache.set(taskId, stakeListKeys);
  return stakeListKeys;
}

-- Chunk 2 --
// stakingList.ts:24-39
async function isValidStakingKey(taskId: string, pubKey: string): Promise<boolean> {
  // Skip blockchain checks during testing
  if (BYPASS_TASK_STATE_CHECK) {
    console.log(`[TEST MODE] Bypassing task state check for stakingKey: ${pubKey}`);
    return true;
  }

  let stakeListKeys: string[];
  try {
    stakeListKeys = await getTaskStateStakingKeys(taskId);
  } catch (error) {
    console.log("Error fetching task state", error);
    return true;
  }
  return stakeListKeys.includes(pubKey);
}

=== File: middle-server/src/utils/taskState/distributionList.ts ===

-- Chunk 1 --
// distributionList.ts:6-15
async function getDistributionListRounds(taskId: string): Promise<number[]> {
  try {
    const connection = new Connection("https://mainnet.koii.network", "confirmed");
    const taskStateInfo = await getTaskStateInfo(connection, taskId);
    return Object.keys(taskStateInfo.distribution_rewards_submission).map(Number);
  } catch (error) {
    console.error("Error in getDistributionListRounds", error);
    return [];
  }
}

-- Chunk 2 --
// distributionList.ts:17-36
async function getDistributionListSubmitter(taskId: string, round: string): Promise<string | null> {
  const connection = new Connection("https://mainnet.koii.network", "confirmed");

  try {
    const taskStateInfo = await getTaskStateInfo(connection, taskId);
    if (!taskStateInfo || !taskStateInfo.distribution_rewards_submission) {
      console.error("No distribution rewards submission found for task:", taskId);
      return null;
    }
    if (!taskStateInfo.distribution_rewards_submission[round]) {
      console.error("No distribution rewards submission found for round:", round);
      return null;
    }
    const keys = Object.keys(taskStateInfo.distribution_rewards_submission[round]);
    return keys.length > 0 ? keys[0] : null;
  } catch (error) {
    console.error("Error in getDistributionListSubmitter", error);
    return null;
  }
}

-- Chunk 3 --
// distributionList.ts:38-60
async function getDistributionList(publicKey: string, round: string, taskId: string): Promise<string | null> {
  const connection = new Connection("https://mainnet.koii.network", "confirmed");
  let accountInfo: AccountInfo<Buffer> | null = null;
  accountInfo = await connection.getAccountInfo(new PublicKey(publicKey), "base64+zstd");
  if (!accountInfo) {
    console.log(`${publicKey} doesn't contain any distribution list data`);
    return null;
  }
  accountInfo.data = await decodeZstd((accountInfo.data ? accountInfo.data[0] : "") + "");
  const origData = getBincodeDeserializedDistributionList(accountInfo?.data, round, taskId);
  if (origData) return origData;
  try {
    const d = JSON.parse(accountInfo.data + "");
    const i = Buffer.from(d[round][taskId]).indexOf(0x00);
    const t = Buffer.from(d[round][taskId]).slice(0, i);

    const origData = JSON.stringify(new TextDecoder().decode(t));
    return origData;
  } catch (error) {
    console.log("ERROR", error);
    return null;
  }
}

-- Chunk 4 --
// distributionList.ts:62-84
function getBincodeDeserializedDistributionList(raw_data: any, round: string, taskId: string): string | null {
  try {
    if (!raw_data) return null;
    const jsObject = {};
    const parse_result = bincode_js_deserialize(raw_data);
    console.log("parse_result", parse_result);
    // @ts-ignore
    parse_result.forEach((innerMap: any, epoch: any) => {
      const innerJsObject = {};
      innerMap.forEach((value: any, key: any) => {
        // @ts-ignore
        innerJsObject[key] = JSON.parse(value);
      });
      // @ts-ignore
      jsObject[epoch] = innerJsObject;
    });
    // @ts-ignore
    return JSON.stringify(jsObject[round][taskId]);
  } catch (e) {
    console.error("Error in BincodeDeserialization", e);
    return null;
  }
}

-- Chunk 5 --
// distributionList.ts:86-112
async function getDistributionListWrapper(taskId: string, round: string): Promise<object | null> {
  const submitter = await getDistributionListSubmitter(taskId, round);
  if (!submitter) {
    console.log("No submitter found");
    return null;
  }
  console.log("submitter", submitter);
  console.log("round", round);
  console.log("taskId", taskId);
  const distributionList = await getDistributionList(submitter, round, taskId);
  // console.log("distributionList", distributionList);
  if (distributionList) {
    try {
      // Check if distributionList is already an object
      // if (typeof distributionList === 'object') {
      //     return distributionList;
      // }
      // If it's a string, try to parse it
      const parsedList = JSON.parse(distributionList);
      return parsedList;
    } catch (error) {
      console.error("Error parsing distribution list:", error);
      return null;
    }
  }
  return null;
}

-- Chunk 6 --
// distributionList.ts:114-130
async function getKeysByValueSign(
  distributionList: object,
): Promise<{ positive: string[]; negative: string[] }> {
  const positive: string[] = [];
  const negative: string[] = [];

  Object.entries(distributionList).forEach(([key, value]) => {
    const numValue = Number(value);
    if (numValue > 0) {
      positive.push(key);
    } else if (numValue <= 0) {
      negative.push(key);
    }
  });

  return { positive, negative };
}

=== File: middle-server/src/utils/taskState/getSubmissionRound.ts ===

-- Chunk 1 --
// getSubmissionRound.ts:4-38
async function getMaxSubmissionRound(taskId: string): Promise<number | null> {
  if (!taskId) {
    console.error("Task ID is required");
    return null;
  }

  try {
    // Validate that taskId is a valid Solana public key
    new PublicKey(taskId);
  } catch (error) {
    console.error("Invalid task ID format:", error);
    return null;
  }

  const connection = new Connection("https://mainnet.koii.network", "confirmed");

  try {
    const taskStateInfo = await getTaskStateInfo(connection, taskId);
    if (!taskStateInfo || !taskStateInfo.submissions) {
      console.error("No task state info found for task:", taskId);
      return null;
    }
    const roundsInSubmission = Object.keys(taskStateInfo.submissions);
    if (roundsInSubmission.length === 0) {
      console.error("No submission rounds found for task:", taskId);
      return null;
    }
    const largestRound = Math.max(...roundsInSubmission.map(Number));
    // Return the largest round, even if it's 0
    return largestRound;
  } catch (error) {
    console.error("Error in getMaxSubmissionRound:", error);
    return null;
  }
}

-- Chunk 2 --
// getSubmissionRound.ts:40-48
async function getCurrentRound(taskId: string): Promise<number | null> {
  const connection = new Connection("https://mainnet.koii.network", "confirmed");
  const taskStateInfo = await getTaskStateInfo(connection, taskId);
  const currentSlot = await connection.getSlot();
  console.log("currentSlot", currentSlot);
  console.log("taskStateInfo.starting_slot", taskStateInfo.starting_slot);
  const currentRound = Math.floor((currentSlot - taskStateInfo.starting_slot) / taskStateInfo.round_time);
  return currentRound;
}

=== File: middle-server/src/utils/prometheus/api.ts ===

-- Chunk 1 --
// api.ts:4-20
async function getSwarmBounty(): Promise<BountyResponse | null> {
  const endpoint = `${process.env.PROMETHEUS_SERVER_URL}/api/v1/bounty?status=${SwarmBountyStatus.IN_PROGRESS}`;
  const response = await fetch(endpoint, {
    headers: {
      Authorization: `Bearer ${process.env.PROMETHEUS_SERVER_X_API_KEY || ""}`,
      "x-vercel-protection-bypass": process.env.PROMETHEUS_SERVER_BYPASS_KEY || "",
    },
  });

  if (!response.ok) {
    console.log("No data found");
    return null;
  }

  const data: BountyResponse = await response.json();
  return data;
}

=== File: middle-server/src/tests/triggerFetchAuditResult.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/tests/triggerFetchAuditResult.ts:1-15
// import { triggerFetchAuditResultLogic } from "../controllers/triggerFetchAuditResult";
// import { Keypair } from "@_koii/web3.js";
// import { signData } from "../utils/sign";
// import mongoose from "mongoose";
// import dotenv from "dotenv";

// dotenv.config();

// const testTriggerFetchAuditResult = async () => {
//   await mongoose.connect(process.env.MONGODB_URI!);
//   const returnValue = await triggerFetchAuditResultLogic(["fakestakingkey"], [], 1);
//   console.log(returnValue);
// };

// testTriggerFetchAuditResult();

=== File: middle-server/src/tests/id.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/tests/id.json:1-5
[
  123, 99, 226, 204, 46, 203, 189, 91, 139, 163, 138, 103, 154, 195, 187, 63, 42, 196, 252, 165, 111, 132, 35, 110, 32,
  207, 196, 238, 6, 60, 112, 205, 105, 29, 23, 100, 15, 69, 170, 222, 155, 22, 228, 241, 240, 129, 104, 243, 3, 20, 125,
  143, 83, 107, 37, 14, 134, 106, 23, 195, 27, 236, 142, 23
]

=== File: middle-server/src/tests/addAggregatorInfo.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/tests/addAggregatorInfo.ts:1-18
// import { addAggregatorInfoLogic } from "../controllers/builder/addAggregatorInfo";
// import { Keypair } from "@_koii/web3.js";
// import { signData } from "../utils/sign";
// import mongoose from "mongoose";
// import dotenv from "dotenv";

// dotenv.config();

// const testAddAggregatorInfo = async () => {
//   await mongoose.connect(process.env.MONGODB_URI!);
//   const returnValue = await addAggregatorInfoLogic(
//     { signature: "fakesignature", stakingKey: "fakestakingkey", pubKey: "fakepubkey" },
//     { roundNumber: 1, githubUsername: "sss", issueUuid: "456e7890-e12b-34d5-f678-526614174111" },
//   );
//   console.log(returnValue);
// };

// testAddAggregatorInfo();

=== File: middle-server/src/tests/addIssuePR.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/tests/addIssuePR.ts:1-22
// import { addIssuePRLogic } from "../controllers/api/builder/addIssuePR";
// import { Keypair } from "@_koii/web3.js";
// import { signData } from "../utils/sign";
// import mongoose from "mongoose";
// import dotenv from "dotenv";

// dotenv.config();

// const testAddIssuePR = async () => {
//   await mongoose.connect(process.env.MONGODB_URI!);
//   const returnValue = await addIssuePRLogic(
//     { signature: "fakesignature", stakingKey: "fakestakingkey", pubKey: "fakepubkey" },
//     {
//       roundNumber: 1,
//       prUrl: "https://github.com/koii-network/koii-core/pull/1234",
//       issueUuid: "456e7890-e12b-34d5-f678-526614174111",
//     },
//   );
//   console.log(returnValue);
// };

// testAddIssuePR();

=== File: middle-server/src/tests/addTodoPR.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/tests/addTodoPR.ts:1-18
// import { addPRLogic } from "../controllers/api/builder/addTodoPR";
// import { Keypair } from "@_koii/web3.js";
// import { signData } from "../utils/sign";
// import mongoose from "mongoose";
// import dotenv from "dotenv";

// dotenv.config();

// const testAddTodoPR = async () => {
//   await mongoose.connect(process.env.MONGODB_URI!);
//   const returnValue = await addPRLogic(
//     { signature: "fakesignature", stakingKey: "fakestakingkey", pubKey: "fakepubkey" },
//     { roundNumber: 1, prUrl: "https://github.com/koii-network/koii-core/pull/1234" },
//   );
//   console.log(returnValue);
// };

// testAddTodoPR();

=== File: middle-server/src/tests/initialize.ts ===

-- Chunk 1 --
// initialize.ts:10-20
async (req: Request, res: Response) => {
  const { title, acceptanceCriteria, repoOwner, repoName } = req.body;
  const todo = new TodoModel({
    title,
    acceptanceCriteria,
    repoOwner,
    repoName,
  });
  await todo.save();
  res.status(201).json({ todo });
}

-- Chunk 2 --
// initialize.ts:22-48
async () => {
  await mongoose.connect(process.env.MONGODB_URI as string);
  for (let i = 0; i < 10; i++) {
    const exampleTodo = new TodoModel({
      title: "Implement new feature",
      uuid: `123e4567-e89b-12d3-a456-426614174000${i}`,
      issueUuid: `456e7890-e12b-34d5-f678-526614174111`,
      description: "This task involves implementing a new feature in the application.",
      acceptanceCriteria: "The feature should be fully functional and pass all tests.",
      repoOwner: "exampleOwner",
      repoName: "exampleRepo",
      dependencyTasks: ["123e4567-e89b-12d3-a456-4266141740001"],
      status: TodoStatus.INITIALIZED,
    });
    await exampleTodo.save();
  }
  const exampleIssue = new IssueModel({
    issueUuid: `456e7890-e12b-34d5-f678-526614174111`,
    status: IssueStatus.INITIALIZED,
    description: "This task involves implementing a new feature in the application.",
    repoOwner: "exampleOwner",
    repoName: "exampleRepo",
    assignedTo: [],
  });
  await exampleIssue.save();
  console.log("Example todos inserted");
}

=== File: middle-server/src/tests/fetchToDo.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/tests/fetchToDo.ts:1-31
// import { fetchTodo, fetchTodoLogic } from "../controllers/api/builder/fetchToDo";
// import { Keypair } from "@_koii/web3.js";
// import { signData } from "../utils/sign";
// import mongoose from "mongoose";
// import dotenv from "dotenv";

// dotenv.config();

// const testFetchTodo = async () => {
//   await mongoose.connect(process.env.MONGODB_URI!);
//   const returnValue = await fetchTodoLogic(
//     { signature: "fakesignature", stakingKey: "fakestakingkey", pubKey: "fakepubkey" },
//     { roundNumber: 1, githubUsername: "sss" },
//   );
//   console.log(returnValue);
// };

// testFetchTodo();

// /****
//  * Returned Value:
//  * {
//     statuscode: 200,
//     data: {
//         success: true,
//         role: 'aggregator',
//         issue_uuid: '456e7890-e12b-34d5-f678-526614174111',
//         assignPendingIssueUUIDs: []
//     }
// }
//  */

=== File: middle-server/src/tests/SummarizerServerEndToEndTest/serviceFlowTest.ts ===

-- Chunk 1 --
// serviceFlowTest.ts:12-19
interface UserData {
  signature: string;
  stakingKey: string;
  githubUsername: string;
  prUrl?: string;
  swarmBountyId?: string;
  submissionRoundNumber?: number;
}

-- Chunk 2 --
// serviceFlowTest.ts:21-25
interface DocsTaskData {
  swarmBountyId: string;
  repoOwner: string;
  repoName: string;
}

-- Chunk 3 --
// serviceFlowTest.ts:28-39
async function addDummyData() {
  const swarmBountyId = "fakeSwarmBountyId" + Math.random().toString(36).substring(2, 15);
  const repoOwner = "fakeRepoOwner" + Math.random().toString(36).substring(2, 15);
  const repoName = "fakeRepoName" + Math.random().toString(36).substring(2, 15);

  await DocumentationModel.create({
    repoOwner: repoOwner, // Extract owner from GitHub URL
    repoName: repoName, // Extract repo name from GitHub URL
    swarmBountyId: swarmBountyId,
  });
  usedTaskData.push({ swarmBountyId: swarmBountyId, repoOwner: repoOwner, repoName: repoName });
}

-- Chunk 4 --
// serviceFlowTest.ts:40-45
async function cleanup() {
  // delete all swarmBountyId in usedTaskData
  for (const task of usedTaskData) {
    await DocumentationModel.deleteOne({ swarmBountyId: task.swarmBountyId });
  }
}

-- Chunk 5 --
// serviceFlowTest.ts:47-57
async function dummyFetchTodo() {
  const signature = "fakeSignature" + Math.random().toString(36).substring(2, 15);
  const stakingKey = "fakeStakingKey" + Math.random().toString(36).substring(2, 15);
  const githubUsername = "fakeGithubUsername" + Math.random().toString(36).substring(2, 15);
  usedUserData.push({ signature: signature, stakingKey: stakingKey, githubUsername: githubUsername });
  const response = await fetchTodoLogic(
    { signature: signature, stakingKey: stakingKey },
    { githubUsername: githubUsername },
  );
  return response;
}

-- Chunk 6 --
// serviceFlowTest.ts:58-71
async function dummyAddTodoPR(signature: string, stakingKey: string, swarmBountyId: string) {
  const prUrl = "fakePrUrl" + Math.random().toString(36).substring(2, 15);
  // Find this staking key in usedUserData
  const userData = usedUserData.find((user) => user.stakingKey === stakingKey);
  if (!userData) {
    throw new Error("Staking key not found");
  }
  userData.prUrl = prUrl;
  const response = await addPRUrlLogic(
    { signature: signature, stakingKey: stakingKey },
    { prUrl: prUrl, swarmBountyId: swarmBountyId },
  );
  return response;
}

-- Chunk 7 --
// serviceFlowTest.ts:72-78
async function dummyAddTodoStatus(signature: string, stakingKey: string, swarmBountyId: string) {
  const response = await addStatusLogic(
    { signature: signature, stakingKey: stakingKey },
    { SwarmBountyId: swarmBountyId },
  );
  return response;
}

-- Chunk 8 --
// serviceFlowTest.ts:79-82
async function dummyCheckTodo(stakingKey: string, roundNumber: string, githubUsername: string, prUrl: string) {
  const response = await checkToDoAssignment(stakingKey, roundNumber, githubUsername, prUrl);
  return response;
}

-- Chunk 9 --
// serviceFlowTest.ts:83-92
async function dummyAddRoundNumber(
  signature: string,
  stakingKey: string,
  prUrl: string,
  roundNumber: number,
  swarmBountyId: string,
) {
  const response = await updateAssignedInfoRoundNumber(stakingKey, prUrl, signature, roundNumber, swarmBountyId);
  return response;
}

-- Chunk 10 --
// serviceFlowTest.ts:93-242
async function main() {
  try {
    for (let i = 0; i < 10; i++) {
      await addDummyData();
      const response = await dummyFetchTodo();
      if (response.statuscode !== 200) {
        console.log(response);
        throw new Error("Failed to fetch todo");
      }
    }
    // 8 of them added pr url
    for (let i = 0; i < 8; i++) {
      const response = await dummyAddTodoPR(
        usedUserData[i].signature,
        usedUserData[i].stakingKey,
        usedTaskData[i].swarmBountyId,
      );

      if (response.statuscode !== 200) {
        console.log(response);
        throw new Error("Failed to add todo pr");
      }
    }
    // 2 of them failed and add failed status
    for (let i = 8; i < 10; i++) {
      const response = await dummyAddTodoStatus(
        usedUserData[i].signature,
        usedUserData[i].stakingKey,
        usedTaskData[i].swarmBountyId,
      );
      if (response.statuscode !== 200) {
        console.log(response);
        throw new Error("Failed to add todo status");
      }
    }

    // 3 of them added round number 1
    for (let i = 0; i < 3; i++) {
      const response = await dummyAddRoundNumber(
        usedUserData[i].signature,
        usedUserData[i].stakingKey,
        usedUserData[i].prUrl!,
        1,
        usedTaskData[i].swarmBountyId,
      );
      if (response.statuscode !== 200) {
        console.log(response);
        throw new Error("Failed to add round number");
      }
    }
    // 5 of them added round number 2
    for (let i = 3; i < 8; i++) {
      if (!usedUserData[i].prUrl) {
        throw new Error("Pr url is undefined");
      }
      const response = await dummyAddRoundNumber(
        usedUserData[i].signature,
        usedUserData[i].stakingKey,
        usedUserData[i].prUrl!,
        2,
        usedTaskData[i].swarmBountyId,
      );
      if (response.statuscode !== 200) {
        console.log(response);
        throw new Error("Failed to add round number");
      }
    }
    for (let i = 0; i < 3; i++) {
      if (!usedUserData[i].prUrl) {
        throw new Error("Pr url is undefined");
      }
      const response = await dummyCheckTodo(
        usedUserData[i].stakingKey,
        "1",
        usedUserData[i].githubUsername,
        usedUserData[i].prUrl!,
      );
      if (response !== true) {
        console.log(response);
        throw new Error("Failed to check todo");
      }
    }
    for (let i = 0; i < 3; i++) {
      if (!usedUserData[i].prUrl) {
        throw new Error("Pr url is undefined");
      }
      const response = await dummyCheckTodo(
        usedUserData[i].stakingKey,
        "2",
        usedUserData[i].githubUsername,
        usedUserData[i].prUrl!,
      );
      if (response !== false) {
        console.log(response);
        throw new Error("Check todo should return false");
      }
    }
    for (let i = 3; i < 8; i++) {
      if (!usedUserData[i].prUrl) {
        throw new Error("Pr url is undefined");
      }
      const response = await dummyCheckTodo(
        usedUserData[i].stakingKey,
        "2",
        usedUserData[i].githubUsername,
        usedUserData[i].prUrl!,
      );
      if (response !== true) {
        console.log(response);
        throw new Error("Failed to check todo");
      }
    }
    for (let i = 3; i < 8; i++) {
      if (!usedUserData[i].prUrl) {
        throw new Error("Pr url is undefined");
      }
      const response = await dummyCheckTodo(
        usedUserData[i].stakingKey,
        "1",
        usedUserData[i].githubUsername,
        usedUserData[i].prUrl!,
      );
      if (response !== false) {
        console.log(response);
        throw new Error("Check todo should return false");
      }
    }
    const positiveKeys: string[] = [];
    const negativeKeys: string[] = [];
    // 0, 1 should be positive,
    for (let i = 0; i < 2; i++) {
      positiveKeys.push(usedUserData[i].stakingKey);
    }
    // 2, should be negative
    negativeKeys.push(usedUserData[2].stakingKey);
    // 3, 4, 5, 6 can be positive, but they cannot be marked as done
    for (let i = 3; i < 7; i++) {
      positiveKeys.push(usedUserData[i].stakingKey);
    }
    await updateSubtaskStatus(positiveKeys, negativeKeys, 1);

    // Expect result:
    // 0, 1 should be done,
    for (let i = 0; i < 2; i++) {
      const result = await DocumentationModel.findOne({ stakingKey: usedUserData[i].stakingKey });
      if (result?.status !== DocumentationStatus.DONE) {
        console.log(result);
        throw new Error("0, 1 should be done");
      }
    }

-- Chunk 11 --
// serviceFlowTest.ts:243-317
    // 2 should be failed
    const result = await DocumentationModel.findOne({ stakingKey: usedUserData[2].stakingKey });
    if (result?.status !== DocumentationStatus.INITIALIZED) {
      console.log(result);
      throw new Error("2 should be failed");
    }
    // 3, 4, 5, 6 should be in review
    for (let i = 3; i < 7; i++) {
      const result = await DocumentationModel.findOne({ stakingKey: usedUserData[i].stakingKey });
      if (result?.status !== DocumentationStatus.IN_REVIEW) {
        console.log(result);
        throw new Error("3, 4, 5, 6 should be in review");
      }
    }

    const positiveKeys2: string[] = [];
    const negativeKeys2: string[] = [];
    // Even if the 0, 1 are negative, they should be marked as done
    for (let i = 0; i < 2; i++) {
      negativeKeys2.push(usedUserData[i].stakingKey);
    }
    // 3, 4, 5, 6 should be positive
    for (let i = 3; i < 7; i++) {
      positiveKeys2.push(usedUserData[i].stakingKey);
    }
    // 7 should be negative
    negativeKeys2.push(usedUserData[7].stakingKey);
    await updateSubtaskStatus(positiveKeys2, negativeKeys2, 2);

    // Expect result:
    // 0, 1 should be done,
    for (let i = 0; i < 2; i++) {
      const result = await DocumentationModel.findOne({ stakingKey: usedUserData[i].stakingKey });
      if (result?.status !== DocumentationStatus.DONE) {
        console.log(result);
        throw new Error("0, 1 should be done");
      }
    }
    // 2 should be failed
    const result2 = await DocumentationModel.findOne({ stakingKey: usedUserData[2].stakingKey });
    if (result2?.status !== DocumentationStatus.INITIALIZED) {
      console.log(result2);
      throw new Error("2 should be failed");
    }
    // 3, 4, 5 should be done
    for (let i = 3; i < 7; i++) {
      const result = await DocumentationModel.findOne({ stakingKey: usedUserData[i].stakingKey });
      if (result?.status !== DocumentationStatus.DONE) {
        console.log(result);
        throw new Error("3, 4, 5, 6 should be done");
      }
    }
    // 7 should be initialized
    const result3 = await DocumentationModel.findOne({ stakingKey: usedUserData[7].stakingKey });
    if (result3?.status !== DocumentationStatus.INITIALIZED) {
      console.log(result3);
      throw new Error("7 should be initialized");
    }
    // 8, 9 should be initialized
    for (let i = 8; i < 10; i++) {
      console.log("USER", i, usedTaskData[i].swarmBountyId);
      const result = await DocumentationModel.findOne({ swarmBountyId: usedTaskData[i].swarmBountyId });
      if (result?.status !== DocumentationStatus.INITIALIZED) {
        console.log(result);
        throw new Error("8, 9 should be initialized");
      }
    }
    console.log("TEST PASSED");
  } catch (error) {
    console.error("Test failed with error:", error);
    throw error;
  } finally {
    await cleanup();
  }
}

-- Chunk 12 --
// serviceFlowTest.ts:319-322
(error) => {
  console.error("Unhandled error:", error);
  process.exit(1);
}

=== File: middle-server/src/cronJobs/syncDB.ts ===

-- Chunk 1 --
// syncDB.ts:5-10
async function syncDB() {
  await syncSummarizerDB();
  await syncPlannerDB();
  await syncBugFinderDB();
  process.exit(0);
}

=== File: middle-server/src/cronJobs/saveAuditResult.ts ===

-- Chunk 1 --
// saveAuditResult.ts:3-7
async () => {
  const response = await loadMissingDistributionToDatabase();
  console.log("response", response);
  process.exit(0);
}

=== File: middle-server/src/routes/builder.ts ===

=== File: middle-server/src/routes/supporter.ts ===

=== File: middle-server/src/routes/bug-finder.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/routes/bug-finder.ts:1-23
import { Router, RequestHandler } from "express";
import { fetchRequest as fetchSummarizerRequest } from "../controllers/bug-finder/worker/fetchTodo";
import { addRequest as addSummarizerRequest } from "../controllers/bug-finder/worker/addTodoPR";
// import { triggerFetchAuditResult as triggerFetchAuditResultSummarizer } from "../controllers/bug-finder/worker/updateAuditResult";
import { checkRequest as checkSummarizerRequest } from "../controllers/bug-finder/worker/checkTodo";
import { addTodoStatus } from "../controllers/bug-finder/worker/addTodoStatus";
import { addErrorLogToDB, addLogToDB } from "../controllers/bug-finder/worker/addLog";
import { addRoundNumberRequest } from "../controllers/bug-finder/worker/addRoundNumber";

const router = Router();

/********** Worker ***********/
router.post("/worker/fetch-todo", fetchSummarizerRequest as RequestHandler);
router.post("/worker/add-todo-pr", addSummarizerRequest as RequestHandler);
// router.post('/worker/update-audit-result', triggerFetchAuditResultSummarizer as RequestHandler);
router.post("/worker/check-todo", checkSummarizerRequest as RequestHandler);
router.post("/worker/record-error-log", addErrorLogToDB as RequestHandler);
router.post("/worker/record-log", addLogToDB as RequestHandler);
router.post("/worker/add-round-number", addRoundNumberRequest as RequestHandler);
// router.post("/worker/trigger-update-swarms-status", triggerUpdateSwarmsStatus as RequestHandler);
// router.post("/worker/trigger-save-swarms-for-round", triggerSaveSwarmsForRound as RequestHandler);
router.post("/worker/add-todo-status", addTodoStatus as RequestHandler);
export default router;

=== File: middle-server/src/routes/routes.ts ===

-- Chunk 1 --
// routes.ts:64-66
(req, res) => {
  res.json({ message: "Hello World!" });
}

=== File: middle-server/src/routes/summarizer.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/middle-server/src/routes/summarizer.ts:1-23
import { Router, RequestHandler } from "express";
import { fetchRequest as fetchSummarizerRequest } from "../controllers/summarizer/worker/fetchTodo";
import { addRequest as addSummarizerRequest } from "../controllers/summarizer/worker/addTodoPR";
// import { triggerFetchAuditResult as triggerFetchAuditResultSummarizer } from '../controllers/summarizer/worker/updateAuditResult';
import { checkRequest as checkSummarizerRequest } from "../controllers/summarizer/worker/checkTodo";
import { addTodoStatus } from "../controllers/summarizer/worker/addTodoStatus";
import { addFailedInfoRequest } from "../controllers/summarizer/worker/addFailedInfo";
import { addRoundNumberRequest } from "../controllers/summarizer/worker/addRoundNumber";
import { addDraftRequest } from "../controllers/summarizer/worker/addTodoDraftPR";
const router = Router();

/********** Worker ***********/
router.post("/worker/fetch-todo", fetchSummarizerRequest as RequestHandler);
router.post("/worker/add-todo-pr", addSummarizerRequest as RequestHandler);
router.post("/worker/add-todo-draft-pr", addDraftRequest as RequestHandler);
// router.post('/worker/update-audit-result', triggerFetchAuditResultSummarizer as RequestHandler);
router.post("/worker/check-todo", checkSummarizerRequest as RequestHandler);
router.post("/worker/add-failed-info", addFailedInfoRequest as RequestHandler);
router.post("/worker/add-round-number", addRoundNumberRequest as RequestHandler);
// router.post("/worker/trigger-update-swarms-status", triggerUpdateSwarmsStatus as RequestHandler);
// router.post("/worker/trigger-save-swarms-for-round", triggerSaveSwarmsForRound as RequestHandler);
router.post("/worker/add-todo-status", addTodoStatus as RequestHandler);
export default router;

=== File: middle-server/src/routes/prometheus.ts ===

-- Chunk 1 --
// prometheus.ts:10-13
(req, res, next) => {
    res.set("Cache-Control", "public, max-age=30");
    next();
  }

=== File: planner-agent/README.md ===

=== File: planner-agent/requirements.txt ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/requirements.txt:1-20
anthropic>=0.8.1
python-dotenv>=1.0.0
pandas>=2.0.0
tiktoken>=0.5.2
pytest>=8.0.2
typing-extensions>=4.12.2
GitPython>=3.1.44
pygithub>=2.5.0
Flask>=3.0.0
requests>=2.32.0
cryptography>=42.0.0
gunicorn>=22.0.0
solders>=0.26.0
base58>=2.1.0
tenacity>=9.0.0
sqlmodel>=0.0.22
openai>=0.28.0
colorama>=0.4.6
pymongo>=4.0.0
prometheus_swarm>=0.3.0

=== File: planner-agent/setup.md ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/setup.md:1-118
# 247 Builder

## Developing locally

Navigate to the correct directory:

```sh
cd builder/container
```

Set up a virtual environment and activate it:

```sh
python3 -m venv .venv
source .venv/bin/activate
```

Install dependencies:

```sh
pip install -r requirements.txt
```

Run tests:

```sh
python3 -m pytest tests/
```

Run the agent:

```sh
python3 main.py
```

## Developing in Docker

### Running the Flask Server

Navigate to the correct directory:

```sh
cd builder/container
```

Build the image:

```sh
docker build -t builder247 .
```

Run the container:

```sh
docker run builder247
```

You can also run with a mounted volume if you'd like to change files without updating the container:

```sh
docker run -v $(pwd):/app builder247
```

### Running Interactively (using the shell)

Navigate to the correct directory:

```sh
cd builder/container
```

Change this line in the Dockerfile:

```sh
CMD ["python", "main.py"]
```

to

```sh
CMD ["/bin/bash"]
```

Build the image:

```sh
docker build -t builder247.
```

Run the container with a mounted volume:

```sh
docker run -it -v $(pwd)/builder:/app builder247
```

This will give you access to your files within the container and run the container in interactive mode with shell access. You can then run tests inside the container using:

```sh
python -m pytest tests/
```

or

```sh
python3 -m pytest tests/
```

You can also run the flask server in the container with:

```sh
python main.py
```

To exit the container's shell:

```sh
exit
```

=== File: planner-agent/.env.example ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/.env.example:1-26
ANTHROPIC_API_KEY=your_anthropic_api_key
# the token requires the repo scope
GITHUB_TOKEN=your_github_token
GITHUB_USERNAME=your_github_username

# for testing only
# these credentials must be different from the ones above
# they are used to create and delete test repositories
# the token requires the repo and delete_repo scopes
UPSTREAM_GITHUB_TOKEN=your_upstream_github_token
UPSTREAM_GITHUB_USERNAME=your_upstream_github_username

# for testing only
MIDDLE_SERVER_URL=http://localhost:3000

TASK_SYSTEM_PROMPT="You are an AI development assistant specializing in writing code and creating GitHub pull requests.
Follow these rules:
1. Create a new file in the /src directory.
2. Write a single Python function that accomplishes the assigned task.
3. Commit and push the changes to the remote repository.
4. Create a second new file in the /tests directory.
5. Write a series of tests that thoroughly test the function, including edge cases and error handling, using PyTest.
6. Commit and push the changes to the remote repository.
7. Run the tests to ensure they pass.
8. Continue to make commits and push them to the remote repository until the tests pass.
9. Validate code changes before submitting"

=== File: planner-agent/.dockerignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/.dockerignore:1-16
**/.env
**/.env.*

**/node_modules
**/dist
**/build
**/*.log
**/Dockerfile
**/docker-compose.yml
**/venv
**/.venv
**/*__pycache__
**/.pytest_cache
**/*.db
**/*.egg-info
**/*/repos/

=== File: planner-agent/setup.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/setup.py:1-8
from setuptools import setup, find_packages

setup(
    name="task-flow",
    version="0.1",
    packages=find_packages(include=["src", "src.*"]),
    python_requires=">=3.6",
)

=== File: planner-agent/tests/e2e.py ===

-- Chunk 1 --
// e2e.py:10-18
def log_request(method: str, url: str, payload: dict = None):
    """Log request details"""
    print("\n" + "=" * 80)
    print(f"REQUEST: {method} {url}")
    print("-" * 80)
    if payload:
        print("Payload:")
        print(json.dumps(payload, indent=2))
    print("-" * 80)

-- Chunk 2 --
// e2e.py:21-31
def log_response(response):
    """Log response details"""
    print("\nRESPONSE:")
    print("-" * 80)
    print(f"Status: {response.status_code}")
    try:
        print("Body:")
        print(json.dumps(response.json(), indent=2))
    except json.JSONDecodeError:
        print(f"Raw response: {response.text}")
    print("=" * 80)

-- Chunk 3 --
// e2e.py:34-38
def log_step(step_name: str, description: str):
    """Log a test step with clear formatting"""
    print("\n" + "#" * 80)
    print(f"STEP {step_name}: {description}")
    print("#" * 80)

-- Chunk 4 --
// e2e.py:41-48
def reset_databases():
    """Delete all database files before starting the test sequence"""
    builder_path = Path(__file__).parent.parent
    for role in ["leader", "worker1", "worker2"]:
        db_path = builder_path / f"database_{role}.db"
        if db_path.exists():
            print(f"Deleting database file: {db_path}")
            os.remove(db_path)

-- Chunk 5 --
// e2e.py:51-84
def save_state(data_manager, step_name):
    """Save the current state to a JSON file after completing a step"""
    state_file = Path(__file__).parent / "e2e_state.json"

    # Load existing state if it exists
    state = {}
    if state_file.exists():
        with open(state_file, "r") as f:
            state = json.load(f)

    # Ensure top-level structure exists
    if "task_id" not in state:
        state["task_id"] = data_manager.task_id
    if "issue_uuid" not in state:
        state["issue_uuid"] = data_manager.issue_uuid
    if "rounds" not in state:
        state["rounds"] = {}

    # Update current round data
    data_manager.last_completed_step = step_name
    round_key = str(data_manager.round_number)
    state["rounds"][round_key] = {
        "last_completed_step": data_manager.last_completed_step,
        "ipfs_cid": data_manager.ipfs_cid,
        "submission_data": data_manager.submission_data,
    }

    # Save to file
    with open(state_file, "w") as f:
        json.dump(state, f, indent=2)

    print(
        f"\nState saved to {state_file} after completing step {step_name} in round {data_manager.round_number}"
    )

-- Chunk 6 --
// e2e.py:87-126
def load_state(data_manager, starting_step):
    """Load state from JSON file when skipping steps"""
    state_file = Path(__file__).parent / "e2e_state.json"

    if not state_file.exists():
        raise Exception(
            f"Cannot start from step {starting_step}: State file {state_file} does not exist"
        )

    with open(state_file, "r") as f:
        state = json.load(f)

    # Load top-level data
    if "issue_uuid" in state:
        data_manager.issue_uuid = state["issue_uuid"]

    # Load all rounds data
    data_manager.rounds = state.get("rounds", {})

    # Get current round data
    round_key = str(data_manager.round_number)
    if round_key not in data_manager.rounds:
        data_manager.clear_round_data()
        return

    # Load current round data
    round_data = data_manager.rounds[round_key]
    data_manager.last_completed_step = round_data.get("last_completed_step")
    data_manager.ipfs_cid = round_data.get("ipfs_cid")
    data_manager.submission_data = round_data.get("submission_data", {})

    print(f"\nLoaded state from {state_file} for round {data_manager.round_number}")
    print(f"Starting from step {starting_step} with:")
    if data_manager.issue_uuid:
        print(f"Issue UUID: {data_manager.issue_uuid}")
    print(f"Round number: {data_manager.round_number}")
    if data_manager.last_completed_step:
        print(f"Last completed step: {data_manager.last_completed_step}")
        if data_manager.ipfs_cid:
            print(f"IPFS CID: {data_manager.ipfs_cid}")

-- Chunk 7 --
// e2e.py:129-184
def reset_mongodb(data_dir: Path = None, task_id: str = None):
    """Reset the MongoDB database by clearing collections and importing fresh test data"""
    print("\nResetting MongoDB database...")

    # Get data directory path - use provided path or default to tests/data
    if data_dir is None:
        data_dir = os.getenv("DATA_DIR")
    print(f"Using data directory: {data_dir}")

    # Check if files exist
    spec_path = data_dir / "spec.json"

    if not spec_path.exists():
        print(f"Error: spec.json not found at {spec_path}")
        return

    # Connect to MongoDB
    mongodb_uri = os.getenv("MONGODB_URI", "mongodb://localhost:27017")
    print(f"Connecting to MongoDB at: {mongodb_uri}")

    client = MongoClient(mongodb_uri)
    db = client["builder247"]

    try:
        # Clear collections
        print("\nClearing collections...")
        db.specs.delete_many({})
        db.systemprompts.delete_many({})
        db.audits.delete_many({})

        # Read and import specs
        print(f"\nReading specs from {spec_path}")
        with open(spec_path, "r") as f:
            specs_data = json.load(f)
            # Convert to array if it's a single object
            if not isinstance(specs_data, list):
                specs_data = [specs_data]

            # Add task_id to each spec if provided
            if task_id:
                for spec in specs_data:
                    spec["taskId"] = task_id

            # Insert specs
            if specs_data:
                print(f"Inserting {len(specs_data)} specs...")
                db.specs.insert_many(specs_data)
            else:
                print("No specs to insert")

        print("\nMongoDB reset complete!")

    except Exception as e:
        print(f"Error resetting MongoDB: {e}")
    finally:
        client.close()

-- Chunk 8 --
// e2e.py:187-212
def check_and_populate_db(data_dir: Path = None, task_id: str = None):
    """Check if MongoDB is populated and reset if needed"""
    mongodb_uri = os.getenv("MONGODB_URI", "mongodb://localhost:27017")
    client = MongoClient(mongodb_uri)
    db = client["builder247"]

    try:
        # Check if we have any specs
        specs_count = db.specs.count_documents({})
        prompts_count = db.systemprompts.count_documents({})

        print(f"\nFound {specs_count} specs and {prompts_count} prompts in MongoDB")

        # If either collection is empty, reset the database
        if specs_count == 0 or prompts_count == 0:
            print("Database is empty or missing data, resetting...")
            reset_mongodb(data_dir, task_id)
        else:
            print("Database already populated, skipping reset")

    except Exception as e:
        print(f"Error checking MongoDB: {e}")
        print("Attempting to reset database...")
        reset_mongodb(data_dir, task_id)
    finally:
        client.close()

-- Chunk 9 --
// e2e.py:215-275
def run_test_sequence(
    test_setup,
    task_id: str = "",
    data_dir: Path = None,
    max_rounds: int = None,
):
    """Run the test sequence for the planner task"""
    # Initialize test data manager
    data_manager = DataManager(task_id=task_id, round_number=0)

    # Reset databases and check MongoDB
    reset_databases()
    check_and_populate_db(data_dir, task_id)

    # Start test sequence
    round_number = 0
    while True:
        if max_rounds is not None and round_number >= max_rounds:
            print(f"\nReached maximum rounds ({max_rounds}), stopping test sequence")
            break

        print(f"\n{'='*40} ROUND {round_number} {'='*40}")
        data_manager.round_number = round_number

        # Step 1: Worker fetches task
        log_step("1", "Worker fetches task")
        worker_task_payload = data_manager.prepare_worker_task("worker1", round_number)
        log_request("POST", "/api/planner/fetch-planner-todo", worker_task_payload)

        worker_task_response = test_setup.fetch_planner_todo(worker_task_payload)
        log_response(worker_task_response)

        if worker_task_response.status_code != 200:
            print("\nNo more work to do, test sequence complete!")
            break

        worker_task_data = worker_task_response.json()
        data_manager.issue_uuid = worker_task_data.get("data", {}).get("uuid")
        save_state(data_manager, "worker_task")

        # Step 2: Worker submits task result
        log_step("2", "Worker submits task result")
        # The actual task execution happens in the worker's pod
        # We just need to wait for the submission

        # Step 3: Worker audits task
        log_step("3", "Worker audits task")
        worker_audit_payload = data_manager.prepare_worker_audit(
            "worker2",
            data_manager.ipfs_cid,
            round_number,
            data_manager.submission_data,
        )
        log_request("POST", "/api/planner/audit", worker_audit_payload)

        worker_audit_response = test_setup.audit_planner(worker_audit_payload)
        log_response(worker_audit_response)
        save_state(data_manager, "worker_audit")

        # Increment round number
        round_number += 1

=== File: planner-agent/tests/data.py ===

-- Chunk 1 --
// data.py:8-157
class DataManager:
    def __init__(self, task_id=None, round_number=None):
        # Task info
        self.task_id = task_id
        self.round_number = round_number

        # Repository info
        self.repo_owner = None
        self.repo_name = None

        # All rounds data
        self.rounds = {}

        # Current round data
        self.issue_uuid = None
        self.ipfs_cid = None
        self.submission_data = {}
        self.last_completed_step = None

        # Store keypair paths for each role
        self.keypairs = {
            "leader": {
                "staking": os.getenv("LEADER_STAKING_KEYPAIR"),
                "public": os.getenv("LEADER_PUBLIC_KEYPAIR"),
            },
            "worker1": {
                "staking": os.getenv("WORKER1_STAKING_KEYPAIR"),
                "public": os.getenv("WORKER1_PUBLIC_KEYPAIR"),
            },
            "worker2": {
                "staking": os.getenv("WORKER2_STAKING_KEYPAIR"),
                "public": os.getenv("WORKER2_PUBLIC_KEYPAIR"),
            },
        }

    def get_round_data(self):
        """Get the current round's data as a dictionary"""
        data = {
            "last_completed_step": self.last_completed_step,
            "issue_uuid": self.issue_uuid,
        }
        if self.ipfs_cid:
            data["ipfs_cid"] = self.ipfs_cid
        if self.submission_data:
            data["submission_data"] = self.submission_data
        return data

    def set_round_data(self, round_data):
        """Set the current round's data from a dictionary"""
        self.last_completed_step = round_data.get("last_completed_step")
        self.issue_uuid = round_data.get("issue_uuid")
        self.ipfs_cid = round_data.get("ipfs_cid")
        self.submission_data = round_data.get("submission_data", {})
        # Store in rounds data too
        self.rounds[str(self.round_number)] = round_data

    def clear_round_data(self):
        """Clear round-specific data when starting a new round"""
        self.ipfs_cid = None
        self.submission_data = {}
        self.last_completed_step = None

    def _load_keypair(self, keypair_path: str) -> tuple[SigningKey, str]:
        """Load a keypair from file and return signing key and public key."""
        with open(keypair_path) as f:
            keypair_bytes = bytes(json.load(f))
            private_key = keypair_bytes[:32]
            signing_key = SigningKey(private_key)
            verify_key = signing_key.verify_key
            public_key = base58.b58encode(bytes(verify_key)).decode("utf-8")
            return signing_key, public_key

    def create_signature(self, role: str, payload: Dict[str, Any]) -> Dict[str, str]:
        """Create signatures for a payload using the specified role's keypair."""
        try:
            keypair = self.keypairs[role]
            staking_keypair_path = keypair["staking"]
            public_keypair_path = keypair["public"]

            if not staking_keypair_path or not public_keypair_path:
                return {
                    "staking_key": "dummy_staking_key",
                    "pub_key": "dummy_pub_key",
                    "staking_signature": "dummy_staking_signature",
                    "public_signature": "dummy_public_signature",
                }

            # Load keypairs
            staking_signing_key, staking_key = self._load_keypair(staking_keypair_path)
            public_signing_key, pub_key = self._load_keypair(public_keypair_path)

            # Add required fields if not present
            if "pubKey" not in payload:
                payload["pubKey"] = pub_key
            if "stakingKey" not in payload:
                payload["stakingKey"] = staking_key
            if "githubUsername" not in payload:
                payload["githubUsername"] = os.getenv(f"{role.upper()}_GITHUB_USERNAME")

            # Convert payload to string with sorted keys
            payload_str = json.dumps(payload, sort_keys=True).encode()

            # Create signatures
            staking_signed = staking_signing_key.sign(payload_str)
            public_signed = public_signing_key.sign(payload_str)

            # Combine signatures with payload
            staking_combined = staking_signed.signature + payload_str
            public_combined = public_signed.signature + payload_str

            # Encode combined data
            staking_signature = base58.b58encode(staking_combined).decode()
            public_signature = base58.b58encode(public_combined).decode()

            return {
                "staking_key": staking_key,
                "pub_key": pub_key,
                "staking_signature": staking_signature,
                "public_signature": public_signature,
            }
        except Exception as e:
            print(f"Error creating signatures: {e}")
            return {
                "staking_key": "dummy_staking_key",
                "pub_key": "dummy_pub_key",
                "staking_signature": "dummy_staking_signature",
                "public_signature": "dummy_public_signature",
            }

    def prepare_worker_task(self, role: str, round_number: int) -> Dict[str, Any]:
        """Prepare payload for worker-task endpoint."""
        # Get keys first so we can use them in the payload
        keys = self.get_keys(role)

        # Create fetch-planner-todo payload for signature
        fetch_todo_payload = {
            "taskId": self.task_id,
            "roundNumber": round_number,
            "action": "fetch",
            "githubUsername": keys["staking_key"],  # Use staking key as githubUsername
            "stakingKey": keys["staking_key"],  # Include actual staking key
        }

        # Get signatures for fetch-todo
        fetch_signatures = self.create_signature(role, fetch_todo_payload)

        # The actual payload just needs signature and stakingKey
        return {
            "signature": fetch_signatures["staking_signature"],
            "stakingKey": fetch_signatures["staking_key"],

-- Chunk 2 --
// data.py:158-214
        }

    def prepare_worker_audit(
        self,
        auditor: str,
        ipfs_cid: str,
        round_number: int,
        submission_data: Dict[str, Any] = None,
    ) -> Dict[str, Any]:
        """Prepare payload for worker-audit endpoint."""
        # Create audit payload
        audit_payload = {
            "taskId": self.task_id,
            "roundNumber": round_number,
            "action": "audit",
            "githubUsername": os.getenv(f"{auditor.upper()}_GITHUB_USERNAME"),
            "prUrl": ipfs_cid,
        }

        # Get signatures for audit
        audit_signatures = self.create_signature(auditor, audit_payload)

        return {
            "taskId": self.task_id,
            "roundNumber": round_number,
            "stakingKey": audit_signatures["staking_key"],
            "stakingSignature": audit_signatures["staking_signature"],
            "prUrl": ipfs_cid,
            "submissionData": submission_data or {},
        }

    def get_keys(self, role: str) -> Dict[str, str]:
        """Get public and staking keys for a role."""
        try:
            keypair = self.keypairs[role]
            staking_keypair_path = keypair["staking"]
            public_keypair_path = keypair["public"]

            if not staking_keypair_path or not public_keypair_path:
                return {
                    "staking_key": "dummy_staking_key",
                    "pub_key": "dummy_pub_key",
                }

            _, staking_key = self._load_keypair(staking_keypair_path)
            _, pub_key = self._load_keypair(public_keypair_path)

            return {
                "staking_key": staking_key,
                "pub_key": pub_key,
            }
        except Exception as e:
            print(f"Error getting keys: {e}")
            return {
                "staking_key": "dummy_staking_key",
                "pub_key": "dummy_pub_key",
            }

=== File: planner-agent/tests/setup.py ===

-- Chunk 1 --
// setup.py:14-103
class ServerInstance:
    def __init__(self, role: str, port: int, github_token: str, github_username: str):
        self.role = role
        self.port = port
        self.url = f"http://localhost:{port}"
        self.process = None
        self.github_username = github_username

        # Get the absolute path to the builder directory
        self.builder_path = Path(__file__).parent.parent

        # Create unique database path for each server instance
        self.db_path = self.builder_path / f"database_{role}.db"

        # Set up environment
        self.env = os.environ.copy()
        self.env.update(
            {
                "GITHUB_TOKEN": github_token,
                "GITHUB_USERNAME": github_username,
                "PORT": str(port),
                "DATABASE_PATH": str(self.db_path),
                "PYTHONUNBUFFERED": "1",  # Force unbuffered output
            }
        )

    def _print_output(self, stream, prefix):
        """Print output from a stream with a prefix"""
        for line in stream:
            print(f"{prefix} {line.strip()}")
            sys.stdout.flush()

    def start(self):
        """Start the Flask server instance"""
        print(f"\nStarting {self.role} server on port {self.port}...")
        sys.stdout.flush()

        # Start the process with unbuffered output
        self.process = subprocess.Popen(
            [sys.executable, str(self.builder_path / "main.py")],
            env=self.env,
            cwd=self.builder_path,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            bufsize=1,
            universal_newlines=True,
        )

        # Wait for server to start
        time.sleep(3)

        # Check if server started successfully
        if self.process.poll() is not None:
            _, stderr = self.process.communicate()
            error_msg = stderr.strip() if stderr else "No error output available"
            raise RuntimeError(f"Failed to start {self.role} server:\n{error_msg}")

        # Start threads to read and print output
        import threading

        stdout_thread = threading.Thread(
            target=self._print_output,
            args=(self.process.stdout, f"[{self.role}]"),
            daemon=True,
        )
        stderr_thread = threading.Thread(
            target=self._print_output,
            args=(self.process.stderr, f"[{self.role} ERR]"),
            daemon=True,
        )
        stdout_thread.start()
        stderr_thread.start()

    def stop(self):
        """Stop the Flask server instance"""
        if self.process:
            print(f"\nStopping {self.role} server...")
            sys.stdout.flush()

            # Send SIGTERM first to allow graceful shutdown
            os.kill(self.process.pid, signal.SIGTERM)
            time.sleep(1)

            # If still running, send SIGKILL
            if self.process.poll() is None:
                os.kill(self.process.pid, signal.SIGKILL)

            # Wait for process to fully terminate
            self.process.wait()
            self.process = None

-- Chunk 2 --
// setup.py:106-230
class TestSetup:
    def __init__(self):
        # Initialize server instances
        self.leader_server = ServerInstance(
            "leader",
            5000,
            os.getenv("LEADER_GITHUB_TOKEN"),
            os.getenv("LEADER_GITHUB_USERNAME"),
        )

        self.worker1_server = ServerInstance(
            "worker1",
            5001,
            os.getenv("WORKER1_GITHUB_TOKEN"),
            os.getenv("WORKER1_GITHUB_USERNAME"),
        )

        self.worker2_server = ServerInstance(
            "worker2",
            5002,
            os.getenv("WORKER2_GITHUB_TOKEN"),
            os.getenv("WORKER2_GITHUB_USERNAME"),
        )

        self.current_server = None
        self.middle_server_url = os.getenv("MIDDLE_SERVER_URL", "http://localhost:3000")

    def __enter__(self):
        """Start all server instances"""
        print("Starting server instances...")
        try:
            self.leader_server.start()
            self.worker1_server.start()
            self.worker2_server.start()
            return self
        except Exception as e:
            print(f"Failed to start servers: {str(e)}")
            self._cleanup_servers()
            raise

    def _cleanup_servers(self):
        """Clean up server processes safely"""
        for server in [self.leader_server, self.worker1_server, self.worker2_server]:
            if hasattr(server, "process") and server.process:
                try:
                    os.kill(server.process.pid, signal.SIGTERM)
                except ProcessLookupError:
                    pass  # Process already gone
                server.process = None

    def __exit__(self, exc_type=None, exc_val=None, exc_tb=None):
        """Stop all server instances"""
        print("Stopping server instances...")
        self._cleanup_servers()

    def switch_role(self, role: str):
        """Switch between leader/worker1/worker2 servers"""
        if role == "leader":
            self.current_server = self.leader_server
        elif role == "worker1":
            self.current_server = self.worker1_server
        elif role == "worker2":
            self.current_server = self.worker2_server
        else:
            raise ValueError(f"Unknown role: {role}")

    def fetch_planner_todo(self, payload: dict) -> requests.Response:
        """Fetch a planner task from the middle server, then execute via Flask server"""
        # First get todo from middle server
        url = f"{self.middle_server_url}/api/planner/fetch-planner-todo"
        middle_response = requests.post(url, json=payload)

        if middle_response.status_code != 200:
            return middle_response

        # Get the data from middle server response
        todo_data = middle_response.json()

        # Prepare payload for Flask server
        flask_payload = {
            "repoUrl": f"https://github.com/{todo_data['data']['repo_owner']}/{todo_data['data']['repo_name']}",
            "issueSpec": todo_data["data"]["description"],
        }

        # Make pod call to Flask server
        self.switch_role("worker1")
        url = f"{self.current_server.url}/task/{todo_data.get('roundNumber', 0)}"
        return requests.post(url, json=flask_payload)

    def audit_planner(self, payload: dict) -> requests.Response:
        """Submit an audit for a planner task"""
        # First check with middle server
        check_url = f"{self.middle_server_url}/api/planner/check-planner"
        check_response = requests.post(
            check_url,
            json={
                "stakingKey": payload.get("stakingKey"),
                "roundNumber": payload.get("roundNumber"),
                "prUrl": payload.get("prUrl"),
            },
        )

        if check_response.status_code != 200:
            return check_response

        check_data = check_response.json()

        # Prepare payload for Flask server audit
        flask_payload = {
            "issuesAndTasks": payload.get("submission_data"),
            "issueSpec": check_data["data"]["description"],
            "repoOwner": check_data["data"]["repoOwner"],
            "repoName": check_data["data"]["repoName"],
        }

        # Make pod call to Flask server
        self.switch_role("worker2")
        url = f"{self.current_server.url}/audit/{payload['roundNumber']}"
        return requests.post(url, json=flask_payload)

    def get_submission(self, task_id: str, round_number: int) -> requests.Response:
        """Get submission data from a worker's pod"""
        self.switch_role("worker1")
        url = f"{self.current_server.url}/submission/{task_id}/{round_number}"
        return requests.get(url)

=== File: planner-agent/tests/data/spec.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/tests/data/spec.json:1-8
[
  {
    "title": "Create a random data generator",
    "description": "Create an API that generates random data",
    "repoOwner": "koii-network",
    "repoName": "builder-test"
  }
]

=== File: planner-agent/src/types.py ===

-- Chunk 1 --
// types.py:4-12
class ToolDefinition(TypedDict):
    """Standard internal tool definition format."""

    name: str
    description: str
    parameters: Dict[str, str]  # JSON Schema object
    required: List[str]
    final_tool: bool
    function: Callable

-- Chunk 2 --
// types.py:15-20
class ToolCall(TypedDict):
    """Format for a tool call made by the LLM."""

    id: str  # Unique identifier for this tool call
    name: str  # name of tool being called
    arguments: Dict[str, Any]

-- Chunk 3 --
// types.py:23-33
class ToolOutput(TypedDict):
    """Standard output format for all tools.

    All tools must return a response in this format.
    The message field contains a human-readable description of what happened,
    which will be an error message if success is False.
    """

    success: bool  # Whether the tool execution was successful
    message: str  # Human-readable message about what happened (error message if success is False)
    data: Optional[Dict[str, Any]]  # Optional structured data from the tool

-- Chunk 4 --
// types.py:36-43
class ToolResponse(TypedDict):
    """Format for a tool execution response.

    Wraps a tool's output with its call ID for client handling.
    """

    tool_call_id: str  # ID of the tool call this is responding to
    output: ToolOutput  # The actual output from the tool

-- Chunk 5 --
// types.py:46-51
class PhaseResult(TypedDict):
    """Format for a phase result."""

    success: bool
    data: Dict[str, Any]
    error: Optional[str]

-- Chunk 6 --
// types.py:54-58
class ToolChoice(TypedDict):
    """Configuration for tool usage."""

    type: Literal["optional", "required", "required_any"]
    tool: Optional[str]  # Required only when type is "required"

-- Chunk 7 --
// types.py:61-65
class ToolConfig(TypedDict):
    """Configuration for tool usage."""

    tool_definitions: List[ToolDefinition]
    tool_choice: ToolChoice

-- Chunk 8 --
// types.py:68-72
class TextContent(TypedDict):
    """Format for plain text content."""

    type: Literal["text"]
    text: str

-- Chunk 9 --
// types.py:75-79
class ToolCallContent(TypedDict):
    """Format for tool call content."""

    type: Literal["tool_call"]
    tool_call: ToolCall

-- Chunk 10 --
// types.py:82-86
class ToolResponseContent(TypedDict):
    """Format for tool response content."""

    type: Literal["tool_response"]
    tool_response: ToolResponse

-- Chunk 11 --
// types.py:89-93
class MessageContent(TypedDict):
    """Standard internal message format."""

    role: Literal["user", "assistant", "system", "tool"]
    content: Union[str, List[Union[TextContent, ToolCall, ToolResponseContent]]]

=== File: planner-agent/src/workflows/audit/workflow.py ===

-- Chunk 1 --
// workflow.py:19-40
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:43-150
class AuditWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        issues,
        tasks,
        issueSpec,
        repo_owner,
        repo_name,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        repo_url = f"https://github.com/{repo_owner}/{repo_name}"

        super().__init__(
            client=client,
            prompts=prompts,
            repo_url=repo_url,
            repo_owner=repo_owner,
            repo_name=repo_name,
            issues=issues,
            tasks=tasks,
            issueSpec=issueSpec,
        )

    def setup(self):
        """Set up repository and workspace."""
        # Set context values first

        check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
        validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))

        # Get the default branch from GitHub
        try:
            gh = Github(os.getenv("GITHUB_TOKEN"))
            repo = gh.get_repo(
                f"{self.context['repo_owner']}/{self.context['repo_name']}"
            )
            self.context["base_branch"] = repo.default_branch
            log_key_value("Default branch", self.context["base_branch"])
        except Exception as e:
            log_error(e, "Failed to get default branch, using 'main'")
            self.context["base_branch"] = "main"

        # Set up repository directory
        setup_result = setup_repository(
            self.context["repo_url"],
            github_token=os.getenv("GITHUB_TOKEN"),
            github_username=os.getenv("GITHUB_USERNAME"),
        )
        if not setup_result["success"]:
            raise Exception(f"Failed to set up repository: {setup_result['message']}")

        self.context["repo_path"] = setup_result["data"]["clone_path"]
        self.original_dir = setup_result["data"]["original_dir"]
        self.context["fork_url"] = setup_result["data"]["fork_url"]
        self.context["fork_owner"] = setup_result["data"]["fork_owner"]
        self.context["fork_name"] = setup_result["data"]["fork_name"]

        # Enter repo directory
        os.chdir(self.context["repo_path"])

        # Get current files for context
        self.context["current_files"] = get_current_files()

    def cleanup(self):
        """Cleanup workspace."""
        # Make sure we're not in the repo directory before cleaning up
        if os.getcwd() == self.context.get("repo_path", ""):
            os.chdir(self.original_dir)

        # Clean up the repository directory
        cleanup_repository(self.original_dir, self.context.get("repo_path", ""))
        # Clean up the MongoDB

    def run(self):
        validate_tasks_result = self.validate_tasks()

        return {
            "success": True,
            "result": validate_tasks_result["data"]["result"],
        }

    def validate_tasks(self):
        """Execute the issue generation workflow."""

        issues = []
        try:
            self.setup()
            # ==================== Generate issues ====================
            Task_Validation_Phase = phases.TaskValidationPhase(workflow=self)
            Task_Validation_Result = Task_Validation_Phase.execute()
            # Check Task Validation Result
            if not Task_Validation_Result or not Task_Validation_Result.get("success"):
                log_error(
                    Exception(Task_Validation_Result.get("error", "No result")),
                    "Task validation failed",
                )
            return Task_Validation_Result
        except Exception as e:
            log_error(e, "Issue generation workflow failed")
            print(e)
            return {
                "success": False,
                "message": f"Issue generation workflow failed: {str(e)}",
                "data": {"issues": issues},
            }

=== File: planner-agent/src/workflows/audit/phases.py ===

-- Chunk 1 --
// phases.py:6-17
class TaskValidationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="audit_tasks",
            available_tools=[
                "read_file",
                "audit_tasks",
            ],
            conversation_id=conversation_id,
            name="Task Validation",
        )

=== File: planner-agent/src/workflows/audit/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/audit/prompts.py:1-23
"""Prompts for the audit workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in breaking down complex "
        "features into small, manageable tasks. You excel at creating detailed, actionable subtasks "
        "with clear acceptance criteria. You understand software development best practices and "
        "focus on creating tasks that follow the Single Responsibility Principle."
    ),
    "audit_tasks": (
        "Please analyze the following information and audit the tasks against the issue description:\n\n"
        "1. Issue Details:\n{issues}\n\n"
        "2. Task Details:\n{tasks}\n\n"
        "3. Feature Description:\n{issueSpec}\n\n"
        "For each task, please audit:\n"
        "- Is the task aligned with the issue's objectives?\n"
        "- Does it follow the Single Responsibility Principle?\n"
        "- Are the acceptance criteria clear and measurable?\n"
        "- Is the task properly scoped and manageable?\n"
        "- Does it have all necessary context and dependencies identified?\n\n"
        "Please provide a boolean value indicating if the tasks are valid to the issue description."
    ),
}

=== File: planner-agent/src/workflows/audit/__main__.py ===

-- Chunk 1 --
// __main__.py:8-15
def run_workflow(pr_url):
    client = setup_client("anthropic")
    workflow = AuditWorkflow(
        client=client,
        prompts=PROMPTS,
        pr_url=pr_url,
    )
    workflow.run()

=== File: planner-agent/src/workflows/docstodocreator/workflow.py ===

-- Chunk 1 --
// workflow.py:19-40
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:43-192
class TodoCreatorWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        source_url,
        fork_url,
        bounty_id,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = source_url.strip("/").split("/")
        repo_owner = parts[-2]
        repo_name = parts[-1]
        fork_parts = fork_url.strip("/").split("/")
        fork_owner = fork_parts[-2]

        super().__init__(
            client=client,
            prompts=prompts,
            repo_url=source_url,
            repo_owner=repo_owner,
            repo_name=repo_name,
            fork_owner=fork_owner,
            fork_url=fork_url,
            bounty_id=bounty_id,
        )


    def setup(self):
        """Set up repository and workspace."""
        check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
        validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))

        # Get the default branch from GitHub
        try:
            gh = Github(os.getenv("GITHUB_TOKEN"))
            repo = gh.get_repo(
                f"{self.context['repo_owner']}/{self.context['repo_name']}"
            )
            self.context["base_branch"] = repo.default_branch
            log_key_value("Default branch", self.context["base_branch"])
        except Exception as e:
            log_error(e, "Failed to get default branch, using 'main'")
            self.context["base_branch"] = "main"

        # Set up repository directory
        setup_result = setup_repository(
            self.context["repo_url"],
            github_token=os.getenv("GITHUB_TOKEN"),
            github_username=os.getenv("GITHUB_USERNAME"),
        )
        if not setup_result["success"]:
            raise Exception(f"Failed to set up repository: {setup_result['message']}")

        self.context["repo_path"] = setup_result["data"]["clone_path"]
        self.original_dir = setup_result["data"]["original_dir"]

        # Enter repo directory
        os.chdir(self.context["repo_path"])

        # Get current files for context
        self.context["current_files"] = get_current_files()

        # Add feature spec to context


    def cleanup(self):
        """Cleanup workspace."""
        # Make sure we're not in the repo directory before cleaning up
        cleanup_repository(self.original_dir, self.context.get("repo_path", ""))
    def generate_sections(self):
        for _ in range(3):
            generate_sections_phase = phases.RepoSectionGenerationPhase(workflow=self)
            generate_sections_result = generate_sections_phase.execute()
            self.context["sections"] = generate_sections_result["data"]["sections"]
            
            validate_sections_phase = phases.RepoSectionValidationPhase(workflow=self)
            validate_sections_result = validate_sections_phase.execute()
            if not validate_sections_result or not validate_sections_result.get("success"):
                log_error(
                    Exception(validate_sections_result.get("error", "No result")),
                    "Section validation failed",
                )
                continue

            return {
                "success": True,
                "message": "Section generation workflow completed",
                "data": {
                    "sections": self.context["sections"],
                },
            }
        return {
            "success": False,
            "message": "Section generation workflow failed after 3 attempts",
            "data": {
                "sections": self.context["sections"],
            },
        }
    def run(self):
        generate_sections_result = self.generate_sections()
        if (generate_sections_result.get("success") == False):
            return generate_sections_result
        generate_system_prompt_result = self.generate_system_prompt()
        if (generate_system_prompt_result.get("success") == False):
            return generate_system_prompt_result
        log_key_value("generate_sections_result", self.context["sections"])
        insert_docs_issue_result = self.insert_docs_issue_to_mongodb()
        if (insert_docs_issue_result.get("success") == False):
            return insert_docs_issue_result
        insert_sections_result = self.insert_sections_to_mongodb()
        if (insert_sections_result.get("success") == False):
            return insert_sections_result
        insert_docs_system_prompt_result = self.insert_docs_system_prompt_to_mongodb()
        if (insert_docs_system_prompt_result.get("success") == False):
            return insert_docs_system_prompt_result
        return {
            "success": True,
            "message": "Documentation creation workflow completed",
            "data": {
                "issue": insert_docs_issue_result,
                "sections": insert_sections_result,
                "system_prompt": insert_docs_system_prompt_result,
            }
        }

    def generate_system_prompt(self):
        try: 
            system_prompt_phase = phases.SystemPromptGenerationPhase(workflow=self)
            system_prompt_result = system_prompt_phase.execute()
            self.context["prompt"] = system_prompt_result.get("data").get("prompt")
            return system_prompt_result
        except Exception as e:
            log_error(e, "Failed to generate system prompt")
            return {
                "success": False,
                "message": "Failed to generate system prompt",
            }

    def insert_docs_system_prompt_to_mongodb(self):
        """Generate system prompt."""

        try:
            system_prompt = SystemPromptModel(
                prompt=self.context["prompt"],
                bountyId=self.context["bounty_id"],
                bountyType=SwarmBountyType.DOCUMENT_SUMMARIZER,
            )
            log_key_value("system_prompt", system_prompt)

-- Chunk 3 --
// workflow.py:193-270
            insert_system_prompt_to_mongodb(system_prompt)
            return {
                "success": True,
                "message": "System prompt inserted into MongoDB",
                "data": {
                    "system_prompt": system_prompt
                }
            }
        except Exception as e:
            log_error(e, "Failed to insert system prompt into MongoDB")
            return {
                "success": False,
                "message": "Failed to insert system prompt into MongoDB",
            }
    def  insert_docs_issue_to_mongodb(self):
        """Insert issue to MongoDB."""
        self.context["issue_uuid"] = str(uuid.uuid4())
        
        # Create documentation issue
        self.context["issue"] = {
            "title": "Create Documentation",
            "description": "Create comprehensive documentation for the project, including setup instructions, usage guidelines, and API documentation.",
            "bountyType": SwarmBountyType.DOCUMENT_SUMMARIZER,
            "repoOwner": self.context["repo_owner"],
            "repoName": self.context["repo_name"],
            "forkOwner": self.context["fork_owner"],
            "forkUrl": self.context["fork_url"],
            "uuid": self.context["issue_uuid"],
            "bountyId": self.context["bounty_id"]
        }
        
        issue = IssueModel(
            title=self.context["issue"]["title"],
            description=self.context["issue"]["description"],
            bountyType=self.context["issue"]["bountyType"],
            repoOwner=self.context["issue"]["repoOwner"],
            repoName=self.context["issue"]["repoName"],
            forkOwner=self.context["issue"]["forkOwner"],
            forkUrl=self.context["issue"]["forkUrl"],
            uuid=self.context["issue"]["uuid"],
            bountyId=self.context["issue"]["bountyId"]
        )
        log_key_value("issue", issue)
        insert_issue_to_mongodb(issue)
        return issue
    def insert_sections_to_mongodb(self):
        """Insert sections to MongoDB."""
        # Insert into MongoDB
        for section in self.context["sections"]:
            try:
                task_model = TaskModel(
                    title="Documentation",
                    description=section,
                    bountyType=SwarmBountyType.DOCUMENT_SUMMARIZER,
                    acceptanceCriteria=[],
                    repoOwner=self.context["repo_owner"],
                    repoName=self.context["repo_name"],
                    dependencyTasks=[],
                    uuid=str(uuid.uuid4()),
                    issueUuid=str(uuid.uuid4()),
                    bountyId=self.context["bounty_id"],
                )

                log_key_value("task_model", task_model)
                insert_task_to_mongodb(task_model)
            except Exception as e:
                log_error(
                    e,
                    f"Failed to process task {section}",
                )
                continue

        # Return the final result
        return {
            "success": True,
            "message": f"Created {len(self.context['sections'])} tasks for the feature",
            "data": {"tasks": self.context["sections"]},
        }

=== File: planner-agent/src/workflows/docstodocreator/utils.py ===

-- Chunk 1 --
// utils.py:16-20
class TodoStatus(str, Enum):
    INITIALIZED = "initialized"  # Means not assigned to any node or when a node is audited as false
    IN_PROGRESS = "in_progress"  # Means is assigned to a node, not completed
    AUDITED = "audited"  # Means a PR is audited and waiting for merge
    MERGED = "merged"  # Means a PR is merged

-- Chunk 2 --
// utils.py:23-30
class DocumentationStatus(str, Enum):
    INITIALIZED = "initialized"
    IN_PROGRESS = "in_progress"
    DRAFT_PR_RECEIVED = "draft_pr_received"
    PR_RECEIVED = "pr_received"
    IN_REVIEW = "in_review"
    DONE = "done"
    FAILED = "failed"

-- Chunk 3 --
// utils.py:33-36
class SwarmBountyType(str, Enum):
    DOCUMENT_SUMMARIZER = "document-summarizer"
    FIND_BUGS = "find-bugs"
    BUILD_FEATURE = "build-feature"

-- Chunk 4 --
// utils.py:39-49
class TaskAssignedInfo(BaseModel):
    stakingKey: str = Field(..., description="Staking key of the assigned agent")
    pubkey: str = Field(..., description="Public key of the assigned agent")
    taskId: str = Field(..., description="Task ID")
    roundNumber: int = Field(..., description="Round number")
    githubUsername: str = Field(..., description="GitHub username")
    prUrl: Optional[str] = Field(None, description="Pull request URL")
    todoSignature: Optional[str] = Field(None, description="Todo signature")
    prSignature: Optional[str] = Field(None, description="PR signature")
    auditSignature: Optional[str] = Field(None, description="Audit signature")
    auditResult: Optional[bool] = Field(None, description="Audit result")

-- Chunk 5 --
// utils.py:52-82
class TaskModel(BaseModel):
    title: str = Field(..., description="Task title")
    uuid: str = Field(
        default_factory=lambda: str(uuid.uuid4()), description="Unique identifier"
    )
    bountyType: SwarmBountyType = Field(..., description="Bounty type")
    issueUuid: str = Field(..., description="Issue UUID")
    description: str = Field(..., description="Task description")
    acceptanceCriteria: List[str] = Field(..., description="Acceptance criteria")
    repoOwner: str = Field(..., description="Repository owner")
    repoName: str = Field(..., description="Repository name")
    assignedTo: List[TaskAssignedInfo] = Field(
        default=[], description="List of assigned agents"
    )
    bountyId: str = Field(..., description="Bounty ID")
    dependencyTasks: List[str] = Field(
        default=[], description="List of dependency tasks"
    )
    status: TodoStatus | DocumentationStatus = Field(
        default=TodoStatus.INITIALIZED, description="Task status"
    )
    createdAt: datetime = Field(
        default_factory=datetime.utcnow, description="Creation timestamp"
    )
    updatedAt: datetime = Field(
        default_factory=datetime.utcnow, description="Last update timestamp"
    )

    def to_dict(self):
        """Convert Task object to dictionary format for storing in MongoDB"""
        return self.model_dump()

-- Chunk 6 --
// utils.py:85-87
class AggregatorInfo(BaseModel):
    agent: str = Field(..., description="Aggregator agent")
    timestamp: int = Field(..., description="Timestamp of aggregator assignment")

-- Chunk 7 --
// utils.py:90-94
class IssueStatus(str, Enum):
    INITIALIZED = "initialized"
    IN_PROGRESS = "in_progress"
    COMPLETED = "completed"
    # Add other status values as needed

-- Chunk 8 --
// utils.py:97-107
class AssignedInfo(BaseModel):
    stakingKey: str = Field(..., description="Staking key of the assigned agent")
    pubkey: str = Field(..., description="Public key of the assigned agent")
    taskId: str = Field(..., description="Task ID")
    roundNumber: int = Field(..., description="Round number")
    githubUsername: str = Field(..., description="GitHub username")
    prUrl: Optional[str] = Field(None, description="Pull request URL")
    todoSignature: Optional[str] = Field(None, description="Todo signature")
    prSignature: Optional[str] = Field(None, description="PR signature")
    auditSignature: Optional[str] = Field(None, description="Audit signature")
    auditResult: Optional[bool] = Field(None, description="Audit result")

-- Chunk 9 --
// utils.py:110-140
class IssueModel(BaseModel):
    title: Optional[str] = Field(None, description="Issue title")
    description: Optional[str] = Field(None, description="Issue description")
    uuid: str = Field(
        default_factory=lambda: str(uuid.uuid4()), description="Unique identifier"
    )
    forkOwner: str = Field(..., description="Fork owner")
    forkUrl: str = Field(..., description="Fork URL")
    repoOwner: str = Field(..., description="Repository owner")
    repoName: str = Field(..., description="Repository name")
    bountyType: SwarmBountyType = Field(..., description="Bounty type")
    status: IssueStatus = Field(
        default=IssueStatus.INITIALIZED, description="Issue status"
    )
    bountyId: str = Field(..., description="Bounty ID")
    assignedTo: List[AssignedInfo] = Field(
        default=[], description="List of assigned agents"
    )
    predecessorUuid: Optional[str] = Field(
        None, description="UUID of the immediately previous issue in the chain"
    )
    createdAt: datetime = Field(
        default_factory=datetime.utcnow, description="Creation timestamp"
    )
    updatedAt: datetime = Field(
        default_factory=datetime.utcnow, description="Last update timestamp"
    )

    def to_dict(self):
        """Convert Issue object to dictionary format for storing in MongoDB"""
        return self.model_dump()

-- Chunk 10 --
// utils.py:143-159
def insert_task_to_mongodb(task: TaskModel) -> bool:
    try:
        # Insert the task
        result = todos_collection.insert_one(task.to_dict())

        # Check if the insertion was successful
        return result.acknowledged

    except ConnectionFailure:
        print("MongoDB connection failed")
        return False
    except PyMongoError as e:
        print(f"MongoDB error: {e}")
        return False
    except Exception as e:
        print(f"An unknown error occurred: {e}")
        return False

-- Chunk 11 --
// utils.py:162-171
def get_all_tasks_title_uuid_from_mongodb() -> List[dict]:
    try:
        # Get all tasks from MongoDB
        tasks = todos_collection.find({}, {"_id": 0, "title": 1, "uuid": 1})

        # Convert cursor to list of dictionaries with only 'uuid' and 'title'
        return [{"uuid": task["uuid"], "title": task["title"]} for task in tasks]
    except Exception as e:
        print(f"An error occurred: {e}")
        return []

-- Chunk 12 --
// utils.py:174-186
def insert_issue_to_mongodb(issue: IssueModel) -> bool:
    try:
        # Insert the issue
        result = issues_collection.insert_one(issue.to_dict())

        # Check if the insertion was successful
        return result.acknowledged
    except ConnectionFailure:
        print("MongoDB connection failed")
        return False
    except PyMongoError as e:
        print(f"MongoDB error: {e}")
        return False

-- Chunk 13 --
// utils.py:189-201
class SystemPromptModel(BaseModel):
    prompt: str = Field(..., description="System prompt text")
    bountyId: str = Field(..., description="Bounty ID")
    createdAt: datetime = Field(
        default_factory=datetime.utcnow, description="Creation timestamp"
    )
    updatedAt: datetime = Field(
        default_factory=datetime.utcnow, description="Last update timestamp"
    )

    def to_dict(self):
        """Convert SystemPrompt object to dictionary format for storing in MongoDB"""
        return self.model_dump()

-- Chunk 14 --
// utils.py:204-217
def insert_system_prompt_to_mongodb(system_prompt: SystemPromptModel) -> bool:
    """Insert system prompt into MongoDB."""
    try:
        # Insert the system prompt
        result = system_prompts_collection.insert_one(system_prompt.to_dict())

        # Check if the insertion was successful
        return result.acknowledged
    except ConnectionFailure:
        print("MongoDB connection failed")
        return False
    except PyMongoError as e:
        print(f"MongoDB error: {e}")
        return False

=== File: planner-agent/src/workflows/docstodocreator/phases.py ===

-- Chunk 1 --
// phases.py:7-15
class RepoSectionGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_sections",
            available_tools=["read_file", "search_code", "list_directory_contents", "generate_sections"],
            conversation_id=conversation_id,
            name="Repository Section Generation",
        )

-- Chunk 2 --
// phases.py:17-23
class RepoSectionValidationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="validate_sections",
            available_tools=["validate_sections"],
        )

-- Chunk 3 --
// phases.py:25-33
class SystemPromptGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_system_prompt",
            available_tools=["generate_system_prompt"],
            conversation_id=conversation_id,
            name="System Prompt Generation",
        )

=== File: planner-agent/src/workflows/docstodocreator/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/docstodocreator/prompts.py:1-52
"""Prompts for the task decomposition workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in breaking down complex "
        "features into small, manageable tasks. "
    ),
    "generate_sections": (
        "You identify and suggest appropriate sections that should be included in the project's README, "
        "Please use the repository's content and structure to generate the sections. "
        "such as installation instructions, usage examples, configuration details, and other relevant "
        "documentation sections that would help users understand and use the project effectively."
    ),
    "validate_sections": (
        "You need to verify if the given sections are valid and complete for this type of project."
        "The sections are: {sections}"
        "Please use the function to validate the sections with a boolean value."
    ),
    "generate_system_prompt": (
        "Your task is to create a comprehensive system prompt that will guide an AI agent in summarizing "
        "and analyzing documents effectively:\n\n"
        # "Document spec: {issue_spec}\n"
        # "Key points: {issues}\n"
        # "Analysis tasks: {tasks}\n\n"
        "Sections: {sections}\n\n"
        "Create a single system prompt that:\n"
        "1. Defines the AI's role and expertise needed for document analysis and summarization\n"
        "2. Provides comprehensive context about the document type and its key components\n"
        "3. Sets clear guidelines for information extraction and summarization\n"
        "4. Specifies document analysis standards and best practices\n"
        "5. Includes requirements for maintaining document context and accuracy\n"
        "6. Explains how different sections of the document relate to each other\n"
        "7. Provides guidance on maintaining consistency in summarization\n\n"
        "Format the system prompt as follows:\n"
        "---\n"
        "Document Overview:\n"
        "[High-level description of the document type and analysis goals]\n\n"
        "AI Role and Expertise:\n"
        "[Define the AI's role in document analysis and summarization]\n\n"
        "Analysis Context:\n"
        "[Comprehensive context about the document and its components]\n\n"
        "Analysis Guidelines:\n"
        "- [List document analysis requirements and guidelines]\n\n"
        "Summarization Standards:\n"
        "- [List summarization standards and best practices]\n\n"
        "Document Structure and Relationships:\n"
        "[Explain how different sections relate to each other]\n\n"
        "Quality and Accuracy Requirements:\n"
        "[Specify quality standards and accuracy requirements]\n"
        "---\n"
    ),
 }

=== File: planner-agent/src/workflows/docstodocreator/mongo_connection.py ===

-- Chunk 1 --
// mongo_connection.py:8-16
class MongoConnection:
    def __init__(self, mongo_uri: str = os.getenv("MONGODB_URI")):
        self.client = MongoClient(mongo_uri)

    def get_database(self, db_name: str):
        return self.client[db_name]

    def close(self):
        self.client.close()

=== File: planner-agent/src/workflows/docstodocreator/docs_sections.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/docstodocreator/docs_sections.py:1-150
DOCS_SECTIONS = {
    "koii_task": [
        {
            "name": "Task Lifecycle",
            "description": "Explain how the task and audit stages work for this task\n\n",
        },
        {
            "name": "Reward System",
            "description": "Explain how rewards are distributed for this task\n\n",
        },
        {
            "name": "Task Variables",
            "description": "List all environment variables used in the task, as listed in config-task.yml\n\n",
        },
    ],
    "library": [
        {
            "name": "API Reference",
            "description": "Generate a complete list of all publicly exported functions, classes, and constants "
            "from the library\n"
            "For each item, include:\n"
            "- Its name\n"
            "- Description of what it does\n"
            "- Function signature with types and descriptions of parameters and return values\n"
            "- Example usage\n"
            "Do not omit any significant exports — include everything that would be relevant to a developer using "
            "this library\n"
            "Group related items (e.g., utility functions, configuration, components) under subsections if helpful\n",
        },
    ],
    "web_app": [
        {
            "name": "Deployment",
            "description": "Describe how to build and deploy the application to production\n"
            "Include relevant deployment commands and target platforms (e.g., Vercel, Netlify, Docker)\n\n",
        },
        {
            "name": "Feature Highlights",
            "description": "Describe core user-facing features or flows "
            "(e.g., authentication, dashboards, routing)\n\n",
        },
        {
            "name": "Configuration",
            "description": "Mention any configurable options, build settings, or plugins used\n\n",
        },
    ],
    "api_service": [
        {
            "name": "API Documentation",
            "description": "List the available endpoints or routes\n"
            "For each endpoint, include:\n"
            "Method (GET, POST, etc.)\n"
            "Path and parameters\n"
            "Example request and response\n"
            "Authentication requirements (if any)\n"
            "If an OpenAPI/Swagger spec or GraphQL schema exists, link to it\n\n",
        },
        {
            "name": "Authentication",
            "description": "Describe how authentication works (e.g., API keys, OAuth, JWT)\n"
            "Include example headers or auth flow steps if needed\n\n",
        },
        {
            "name": "Deployment",
            "description": "Describe how to deploy the service (e.g., Docker, CI/CD, cloud platforms)\n"
            "Include environment config or scaling considerations if relevant\n\n",
        },
    ],
    "mobile_app": [
        {
            "name": "Supported Platforms",
            "description": "Indicate whether the app runs on Android, iOS, or both\n"
            "Mention any platform-specific dependencies or limitations\n\n",
        },
        {
            "name": "Running the App",
            "description": "Show commands to run the app on a simulator/emulator or real device\n"
            "Include platform-specific commands if needed (e.g., `npx react-native run-ios`, `flutter run`)\n\n",
        },
        {
            "name": "Key Screens and Features",
            "description": "Highlight core screens or flows within the app (e.g., login, profile, dashboard)\n"
            "Optionally include screenshots or descriptions of user interactions\n\n",
        },
        {
            "name": "Build and Deployment",
            "description": "Provide steps for creating production builds\n"
            "Mention any tools or services used for distribution (e.g., TestFlight, Play Store, Expo)\n\n",
        },
    ],
    "tutorial": [
        {
            "name": "Tutorial Structure",
            "description": "Break down the tutorial into sections, stages, or lessons\n"
            "Briefly describe what each section teaches or builds\n"
            "Link to key files or folders associated with each part\n\n",
        },
        {
            "name": "Learning Outcomes",
            "description": "Clearly list the skills or concepts users will have mastered by the end\n\n",
        },
        {
            "name": "Code Examples and Exercises",
            "description": "Mention inline code snippets, checkpoints, or interactive examples\n"
            "If exercises are included, describe how users should complete or test them\n\n",
        },
        {
            "name": "Next Steps / Further Reading",
            "description": "Suggest where users can go after completing the tutorial\n"
            "Include links to additional docs, libraries, or related tutorials\n\n",
        },
    ],
    "template": (
        {
            "name": "Customization Guide",
            "description": "Explain which parts of the codebase are intended to be modified by users\n"
            "Offer guidance on how to rename, rebrand, or restructure parts of the template\n\n",
        },
        {
            "name": "Use Cases",
            "description": "Provide example scenarios where this template is useful "
            "(e.g., 'Use this for building a REST API with authentication')\n"
            "Link to live demos or projects built from this template if available\n\n",
        },
    ),
    "cli_tool": [
        {
            "name": "Usage",
            "description": "Show how to use the tool from the command line\n"
            "Include at least 2–3 example commands with explanations of the output\n"
            "Demonstrate the most common and useful flags or options\n"
            "If the tool supports subcommands, show examples of each\n\n",
        },
        {
            "name": "Command Reference",
            "description": "List all available commands, flags, and options in a table or list format\n"
            "Explain each option clearly, including defaults and accepted values\n\n",
        },
        {
            "name": "Configuration",
            "description": "Describe any optional or required configuration files (e.g., `.clirc`, `config.json`)\n"
            "Show example configurations and where to place them\n\n",
        },
    ],
    "framework": [
        {
            "name": "Core Concepts",
            "description": "Explain the main components or building blocks "
            "(e.g., modules, services, lifecycle, routing, etc.)\n"
            "Include diagrams or conceptual overviews if helpful\n\n",

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/docstodocreator/docs_sections.py:151-300
        },
        {
            "name": "Extension Points",
            "description": "Describe how developers can extend the framework "
            "(e.g., plugins, middleware, custom components)\n"
            "Include examples of common extension use cases\n\n",
        },
        {
            "name": "Best Practices",
            "description": "Offer guidance for structuring large projects, writing maintainable code, or "
            "following framework conventions\n\n",
        },
    ],
    "data_science": [
        {
            "name": "Dataset",
            "description": "Describe the dataset used (source, size, structure)\n"
            "Include schema information or link to external data sources\n\n",
        },
        {
            "name": "Model Architecture and Training",
            "description": "Briefly describe the model(s) used and why they were chosen\n"
            "Include training scripts and command-line instructions\n\n",
        },
        {
            "name": "Evaluation and Results",
            "description": "Summarize how the model was evaluated and key performance metrics\n"
            "   - Include training scripts and command-line instructions\n"
            "   - Mention metrics used for evaluation\n\n",
        },
        {
            "name": "Inference / How to Use the Model",
            "description": "Explain how to run inference or apply the model to new data\n"
            "Include input/output formats and example commands or code\n\n",
        },
    ],
    "plugin": [
        {
            "name": "Usage",
            "description": "Show how to enable and configure the plugin\n"
            "Include code snippets or configuration steps\n\n",
        },
        {
            "name": "Integration Points",
            "description": "Describe hooks, lifecycle methods, or extension APIs the plugin interacts with\n\n",
        },
    ],
    "chrome_extension": [
        {
            "name": "Usage",
            "description": "Explain how users interact with the extension "
            "(e.g., popup UI, context menu, background scripts)\n"
            "Include example scenarios or screenshots if applicable\n\n",
        },
    ],
    "jupyter_notebook": [
        {
            "name": "Notebook Summary",
            "description": "List and briefly describe each notebook in the repo\n"
            "Mention whether they build on each other or are standalone\n\n",
        },
        {
            "name": "Dataset (if applicable)",
            "description": "Describe any datasets used and where they come from\n\n",
        },
    ],
    "infrastructure": [
        {
            "name": "Configuration Files",
            "description": "Explain the structure and purpose of major files (e.g., `main.tf`, `docker-compose.yml`, "
            "`playbooks/`)\n\n",
        },
        {
            "name": "Deployment Workflow",
            "description": "Describe how deployments are triggered and verified\n"
            "Mention any CI/CD pipelines, remote state management, or secrets handling\n\n",
        },
        {
            "name": "Environments",
            "description": "Clarify how to deploy to multiple environments (dev, staging, prod)\n\n",
        },
    ],
    "smart_contract": [
        {
            "name": "Contracts",
            "description": "Describe the main contract(s) and what each one does\n"
            "Include deployment steps and how to interact with them\n\n",
        },
        {
            "name": "Testing",
            "description": "Explain how to run tests and what framework is used\n\n",
        },
    ],
    "dapp": [
        {
            "name": "Architecture",
            "description": "Provide a high-level diagram or explanation of how the frontend "
            "interacts with smart contracts\n"
            "Mention key technologies used on both sides (e.g., React, Ethers.js, Anchor, Web3.js)\n\n",
        },
        {
            "name": "Smart Contracts",
            "description": "Describe the deployed contracts and how to interact with them\n"
            "Include deployment instructions and test commands\n\n",
        },
        {
            "name": "Frontend",
            "description": "Describe key UI components and user flows (e.g., connect wallet, mint token, submit vote)\n"
            "Mention any integrations with IPFS, oracles, or off-chain data\n\n",
        },
    ],
    "game": [
        {
            "name": "Controls and Gameplay",
            "description": "Explain player controls and core mechanics\n"
            "Optionally include screenshots, video, or demo links\n\n",
        },
    ],
    "desktop_app": [
        {
            "name": "Usage",
            "description": "Describe the app's main features and user workflows\n"
            "Include screenshots if applicable\n\n",
        },
    ],
    "dataset": [
        {
            "name": "Dataset Details",
            "description": "Describe the structure and format (e.g., CSV, JSON, images, text)\n"
            "Include column definitions, schema, or data dictionaries\n"
            "Mention the number of records, size, and any notable characteristics\n\n",
        },
        {
            "name": "Usage Instructions",
            "description": "Provide example code snippets for loading and using the dataset (e.g., pandas, SQL, etc.)\n"
            "Mention any preprocessing steps if needed\n\n",
        },
        {
            "name": "Related Work / Source Links",
            "description": "Link to original data sources, research papers, or related projects (if applicable)\n\n",
        },
    ],
    "other": [
        {
            "name": "Features / Capabilities",
            "description": "List the core features or components of the project\n"
            "Include relevant examples, demos, or configurations if applicable\n\n",
        },
        {
            "name": "Usage Examples",

-- Chunk 3 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/docstodocreator/docs_sections.py:301-351
            "description": "Include example commands or steps showing how to use the project\n\n",
        },
    ],
}

INITIAL_SECTIONS = [
    {
        "name": "Project Overview",
        "description": "A concise description of what the codebase does\n"
        "- Its main purpose and the problems it solves\n"
        "- Key features and benefits\n\n",
    },
    {
        "name": "Getting Started, Installation, and Setup",
        "description": "Include a quick start guide with usage instructions. Leave detailed installation instructions "
        "to the Installation and Setup section.\n\n"
        "Provide all necessary instruction to install and use the project, including dependencies and "
        "platform-specific instructions (if applicable)\n"
        "Include steps for both running the app in development and building a production release (if applicable)\n\n",
    },
]

FINAL_SECTIONS = [
    {
        "name": "Project Structure",
        "description": "Describe the layout of the project, highlighting the purpose of key directories and files\n\n",
    },
    {
        "name": "Technologies Used",
        "description": "List the major technologies used in the project, including "
        "frameworks, libraries, SDKs, and tools\n\n",
    },
    {
        "name": "Additional Notes",
        "description": "Focus on making the README useful and descriptive, "
        "even if the project type is ambiguous\n"
        "- Use best judgment to tailor the content to the actual "
        "functionality and audience of the project\n"
        "- Avoid placeholder text and strive to extract real, useful information from the codebase",
    },
    {
        "name": "Contributing",
        "description": "Include basic instructions for how others can contribute\n"
        "- Mention any specific guidelines or requirements for contributions (e.g. code style, testing, etc.)\n\n",
    },
    {
        "name": "License",
        "description": "State the type of license and include a link to the license file\n\n"
        "If no license is mentioned, state that the code is unlicensed and explain the implications.",
    },
]

=== File: planner-agent/src/workflows/docstodocreator/__main__.py ===

-- Chunk 1 --
// __main__.py:15-63
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Create tasks from a feature specification for a GitHub repository"
    )
    parser.add_argument(
        "--repo",
        type=str,
        required=True,
        help="GitHub repository URL (e.g., https://github.com/owner/repo)",
    )
    parser.add_argument(
        "--fork",
        type=str,
        required=True,
        help="Fork repository URL (e.g., https://github.com/fork-owner/repo)",
    )
    parser.add_argument(
        "--output",
        type=str,
        default="todos.json",
        help="Output JSON file path (default: todos.json)",
    )
    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )

    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = TodoCreatorWorkflow(
        client=client,
        prompts=PROMPTS,
        source_url=args.repo,
        fork_url=args.fork,
        bounty_id=str(uuid.uuid4()),
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Todo creator workflow failed")
        sys.exit(1)

=== File: planner-agent/src/workflows/docstodocreator/tools/__init__.py ===

=== File: planner-agent/src/workflows/docstodocreator/tools/planner_operations/implementations.py ===

-- Chunk 1 --
// implementations.py:8-40
def generate_system_prompt(
    prompt: str,
    **kwargs,
) -> dict:
    """Generate a system prompt for the feature.

    Args:
        prompt: The system prompt text

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - prompt: The generated system prompt
            - error: Error message if any
    """
    try:
        return {
            "success": True,
            "message": "Successfully generated system prompt",
            "data": {
                "prompt": prompt,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to generate system prompt: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 2 --
// implementations.py:42-72
def generate_sections(
    sections: List[str] = None,
    **kwargs,
) -> dict:
    """Generate sections for the repository.
    
    Args:
        sections: List of section titles of the readme file

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
    """
    try:
        return {
            "success": True,
            "message": f"Successfully generated {len(sections)} sections",
            "data": {
                "section_count": len(sections),
                "sections": sections,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to generate tasks: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 3 --
// implementations.py:75-105
def validate_sections(
    result: bool,
    **kwargs,
) -> dict:
    """Validate sections for the repository.
    
    Args:
        result: Boolean value indicating if the sections are valid

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing the validation result
    """
    try:
        return {
            "success": True,
            "message": f"Successfully validated sections",
            "data": {
                "valid": result
            },
            "error": None
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to validate sections: {str(e)}",
            "data": None,
            "error": str(e),
        }

=== File: planner-agent/src/workflows/docstodocreator/tools/planner_operations/definitions.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/docstodocreator/tools/planner_operations/definitions.py:1-60
from .implementations import (
    generate_sections,
    generate_system_prompt,
    validate_sections,
)

DEFINITIONS = {
    "generate_sections": {
        "name": "generate_sections",
        "description": "Generate a JSON file containing tasks from a feature breakdown.",
        "parameters": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "description": "List of sections",
                },
            },
            "required": ["sections"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": generate_sections,
    },
    "validate_sections": {
        "name": "validate_sections",
        "description": "Validate the sections for the repository.",
        "parameters": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean",
                    "description": "Result of the validation",
                },
            },
            "required": ["result"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": validate_sections,
    },
        "generate_system_prompt": {
        "name": "generate_system_prompt",
        "description": "Generate a system prompt for implementing the feature.",
        "parameters": {
            "type": "object",
            "properties": {
                "prompt": {
                    "type": "string",
                    "description": "The system prompt text that will guide the implementation",
                    "minLength": 10,
                },
            },
            "required": ["prompt"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": generate_system_prompt,
    },
}

=== File: planner-agent/src/workflows/docstodocreator/tools/planner_operations/__init__.py ===

=== File: planner-agent/src/workflows/todocreator/workflow.py ===

-- Chunk 1 --
// workflow.py:24-45
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:48-197
class TodoCreatorWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        source_url,
        fork_url,
        issue_spec,
        bounty_id,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = source_url.strip("/").split("/")
        repo_owner = parts[-2]
        repo_name = parts[-1]
        fork_parts = fork_url.strip("/").split("/")
        fork_owner = fork_parts[-2]

        super().__init__(
            client=client,
            prompts=prompts,
            repo_url=source_url,
            repo_owner=repo_owner,
            repo_name=repo_name,
            fork_owner=fork_owner,
            fork_url=fork_url,
            bounty_id=bounty_id,
        )
        self.issue_spec = issue_spec

    def setup(self):
        """Set up repository and workspace."""
        check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
        validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))

        # Get the default branch from GitHub
        try:
            gh = Github(os.getenv("GITHUB_TOKEN"))
            repo = gh.get_repo(
                f"{self.context['repo_owner']}/{self.context['repo_name']}"
            )
            self.context["base_branch"] = repo.default_branch
            log_key_value("Default branch", self.context["base_branch"])
        except Exception as e:
            log_error(e, "Failed to get default branch, using 'main'")
            self.context["base_branch"] = "main"

        # Set up repository directory
        setup_result = setup_repository(
            self.context["repo_url"],
            github_token=os.getenv("GITHUB_TOKEN"),
            github_username=os.getenv("GITHUB_USERNAME"),
        )
        if not setup_result["success"]:
            raise Exception(f"Failed to set up repository: {setup_result['message']}")

        self.context["repo_path"] = setup_result["data"]["clone_path"]
        self.original_dir = setup_result["data"]["original_dir"]

        # Enter repo directory
        os.chdir(self.context["repo_path"])

        # Get current files for context
        self.context["current_files"] = get_current_files()

        # Add feature spec to context
        self.context["issue_spec"] = self.issue_spec

    def cleanup(self):
        """Cleanup workspace."""
        # Make sure we're not in the repo directory before cleaning up
        cleanup_repository(self.original_dir, self.context.get("repo_path", ""))

    def run(self):
        generate_issues_result = self.generate_issues()
        self.context["issues"] = generate_issues_result["data"]["issues"]
        approved_issues = generate_issues_result["data"]["approved"]
        while not approved_issues:
            validate_issues_result = self.validate_issues()
            approved_issues = validate_issues_result["data"]["approved"]
        tasks = []
        self.context["issues"] = generate_issues_result["data"]["issues"]

        for issue in generate_issues_result["data"]["issues"]:
            self.context["feature_spec"] = issue
            task_result = self.generate_tasks(issue["uuid"])
            if task_result:
                tasks.append(task_result["data"]["tasks"])

        # Generate a single system prompt for all issues and tasks
        system_prompt_result = self.generate_system_prompts(
            generate_issues_result["data"]["issues"], tasks
        )

        return {
            "success": True,
            "message": "Issue generation workflow completed",
            "data": {
                "issues": generate_issues_result["data"]["issues"],
                "tasks": tasks,
                "system_prompt": (
                    system_prompt_result["data"]["prompt"]
                    if system_prompt_result
                    else None
                ),
                "issue_spec": self.issue_spec,
                "repo_owner": self.context["repo_owner"],
                "repo_name": self.context["repo_name"],
            },
        }

    def generate_issues(self):
        """Execute the issue generation workflow."""

        issues = []
        try:
            self.setup()
            # ==================== Generate issues ====================
            generate_issues_phase = phases.IssueGenerationPhase(workflow=self)
            generate_issues_result = generate_issues_phase.execute()
            # Check Issue Generation Result
            if not generate_issues_result or not generate_issues_result.get("success"):
                log_error(
                    Exception(generate_issues_result.get("error", "No result")),
                    "Issue generation failed",
                )
                return None
            return generate_issues_result
        except Exception as e:
            log_error(e, "Issue generation workflow failed")
            print(e)
            return {
                "success": False,
                "message": f"Issue generation workflow failed: {str(e)}",
                "data": {"issues": issues},
            }

    def validate_issues(self):
        """Validate generated issues.

        Returns:
            dict: Validation result containing success status and data
        """
        validate_issues_phase = phases.IssueValidationPhase(workflow=self)
        validate_issues_result = validate_issues_phase.execute()
        if not validate_issues_result or not validate_issues_result.get("success"):
            log_error(
                Exception(validate_issues_result.get("error", "No result")),
                "Issue validation failed",
            )

-- Chunk 3 --
// workflow.py:198-347
            return {
                "success": False,
                "message": "Issue validation failed",
                "data": {"approved": True},
            }
        return validate_issues_result

    def generate_tasks(self, issue_uuid):
        """Execute the task decomposition workflow."""
        tasks = []
        try:
            self.setup()
            # ==================== Decompose feature into tasks ====================
            decompose_phase = phases.TaskDecompositionPhase(workflow=self)
            decomposition_result = decompose_phase.execute()
            # Check Decomposition Result
            if not decomposition_result or not decomposition_result.get("success"):
                log_error(
                    Exception(decomposition_result.get("error", "No result")),
                    "Task decomposition failed",
                )
                return None

            # Temporary save the tasks data in a variable
            tasks_data = decomposition_result["data"].get("tasks", [])
            task_count = decomposition_result["data"].get("task_count", 0)
            # Check Decomposition Result
            if not tasks_data:
                log_error(
                    Exception("No tasks generated"),
                    "Task decomposition failed",
                )
                return None
            log_key_value("Tasks created Number", task_count)

            # Save the tasks data in the context, prepare for the validation phase
            self.context["subtasks"] = tasks_data
            log_key_value("Subtasks Number", len(self.context["subtasks"]))

            # ==================== Validation phase ====================
            validation_phase = phases.TaskValidationPhase(workflow=self)
            validation_result = validation_phase.execute()

            if not validation_result or not validation_result.get("success"):
                log_error(
                    Exception(validation_result.get("error", "No result")),
                    "Task validation failed",
                )
                return None

            # Get the decisions from the validation result
            decisions = validation_result["data"]["decisions"]

            # TODO: Rework until all the tasks are valid
            # save the audited tasks in the context, prepare for the regeneration phase
            self.context["auditedSubtasks"] = []
            # decisions_flag =  True
            for task_uuid, decision in decisions.items():
                # decision["decision"] = False
                if not decision["decision"]:
                    task = next(
                        (task for task in tasks_data if task["uuid"] == task_uuid), None
                    )
                    if task:
                        self.context["auditedSubtasks"].append(task)
                    # decisions_flag = False

            # save the decisions in the context, prepare for the regeneration phase
            self.context["feedbacks"] = decisions

            # ==================== Regeneration phase ====================
            if len(self.context["auditedSubtasks"]) > 0:
                regenerate_phase = phases.TaskRegenerationPhase(workflow=self)
                regenerate_result = regenerate_phase.execute()
                if not regenerate_result or not regenerate_result.get("success"):
                    log_error(
                        Exception(regenerate_result.get("error", "No result")),
                        "Task regeneration failed",
                    )
                # replace the tasks with the new tasks
                regenerated_tasks_data = regenerate_result["data"]["tasks"]
                # replace the self.context["subtasks"] with the new tasks
                for task in regenerated_tasks_data:
                    index = next(
                        (
                            i
                            for i, t in enumerate(tasks_data)
                            if t["uuid"] == task["uuid"]
                        ),
                        None,
                    )
                    if index is not None:
                        # decisions[task["uuid"]]["decision"] = True
                        tasks_data[index] = task
                    else:
                        tasks_data.append(task)
            log_key_value("Regenerated tasks", len(tasks_data))
            # save the regenerated tasks in the context, prepare for the dependency phase
            self.context["subtasks"] = tasks_data
            # ==================== Dependency Phase ====================
            # # TODO: Refine the Dependency Phase
            for task in tasks_data:
                self.context["target_task"] = task
                dependency_phase = phases.TaskDependencyPhase(workflow=self)
                dependency_result = dependency_phase.execute()
                if dependency_result is None or not dependency_result.get("success"):
                    log_error(
                        Exception(
                            dependency_result.get("error", "No result")
                            if dependency_result
                            else "No results returned from phase"
                        ),
                        "Task dependency failed, continuing with empty dependencies",
                    )
                    task["dependency_tasks"] = []
                    continue
                # Check for circular dependencies
                log_key_value("Proposed dependencies", dependency_result)
                proposed_dependencies = dependency_result["data"].get(task["uuid"], [])
                # Check each dependency individually to find which ones create circular dependencies
                valid_dependencies = []
                for dep in proposed_dependencies:
                    # Temporarily add this dependency to check if it creates a cycle
                    temp_deps = valid_dependencies + [dep]
                    if not self.check_circular_dependency(
                        task["uuid"], temp_deps, tasks_data
                    ):
                        valid_dependencies.append(dep)
                    else:
                        log_error(
                            Exception("Circular dependency detected"),
                            f"Dependency {dep} for task {task['title']} would create a circular dependency, skipping it",
                        )
                task["dependency_tasks"] = valid_dependencies
            # check if the dependency tasks are not mutual dependency
            for task in tasks_data:
                if task["dependency_tasks"]:
                    for dep in task["dependency_tasks"]:
                        # Find the dependent task
                        dep_task = next(
                            (t for t in tasks_data if t["uuid"] == dep), None
                        )
                        if dep_task and task["uuid"] in dep_task.get(
                            "dependency_tasks", []
                        ):
                            log_error(
                                Exception("Mutual dependency detected"),
                                f"Task {task['title']} and {dep_task['title']} have a mutual dependency, removing it",
                            )
                            task["dependency_tasks"].remove(dep)

-- Chunk 4 --
// workflow.py:348-482
            log_key_value("Tasks after dependency phase", len(tasks_data))
            # ==================== MongoDB Insertion Phase ====================
            # Insert into MongoDB
            for task in tasks_data:
                try:
                    # Check if task UUID exists in decisions and has a decision value
                    if task["uuid"] in decisions and decisions[task["uuid"]].get(
                        "decision", False
                    ):
                        task_model = TaskModel(
                            title=task["title"],
                            description=task["description"],
                            acceptanceCriteria=task["acceptance_criteria"],
                            repoOwner=self.context["repo_owner"],
                            repoName=self.context["repo_name"],
                            dependencyTasks=task["dependency_tasks"],
                            uuid=task["uuid"],
                            issueUuid=issue_uuid,
                            bountyId=self.context["bounty_id"],
                            bountyType=SwarmBountyType.BUILD_FEATURE,
                        )
                        insert_task_to_mongodb(task_model)
                except Exception as e:
                    log_error(
                        e,
                        f"Failed to process task {task.get('title', 'unknown')} "
                        f"with UUID {task.get('uuid', 'unknown')}",
                    )
                    continue

            # Return the final result
            return {
                "success": True,
                "message": f"Created {task_count} tasks for the feature",
                "data": {"tasks": tasks_data},
            }

        except Exception as e:
            log_error(e, "Task decomposition workflow failed")
            return {
                "success": False,
                "message": f"Task decomposition workflow failed: {str(e)}",
                "data": None,
            }
        finally:
            self.cleanup()

    def generate_system_prompts(self, issues, tasks):
        """Execute the system prompt generation workflow."""
        try:
            # Set up context for system prompt generation
            self.context["tasks"] = tasks
            self.context["issues"] = issues
            self.context["issue_spec"] = self.issue_spec

            # Generate system prompt
            system_prompt_phase = phases.SystemPromptGenerationPhase(workflow=self)
            system_prompt_result = system_prompt_phase.execute()

            if not system_prompt_result or not system_prompt_result.get("success"):
                log_error(
                    Exception(system_prompt_result.get("error", "No result")),
                    "System prompt generation failed",
                )
                return None

            # Insert system prompt into MongoDB
            try:
                system_prompt_model = SystemPromptModel(
                    prompt=system_prompt_result["data"]["prompt"],
                    bountyId=self.context["bounty_id"],
                    bountyType=SwarmBountyType.BUILD_FEATURE,
                )
                insert_system_prompt_to_mongodb(system_prompt_model)
            except Exception as e:
                log_error(e, "Failed to insert system prompt into MongoDB")
                # Continue even if MongoDB insertion fails
                pass

            return system_prompt_result
        except Exception as e:
            log_error(e, "System prompt generation workflow failed")
            print(e)
            return {
                "success": False,
                "message": f"System prompt generation workflow failed: {str(e)}",
                "data": {"prompt": None},
            }

    def check_circular_dependency(
        self, task_uuid: str, dependency_tasks: list[str], all_tasks: list[dict]
    ) -> bool:
        """Check if adding a dependency would create a circular dependency.

        Args:
            task_uuid: The UUID of the current task
            dependency_tasks: List of task UUIDs that are dependencies
            all_tasks: List of all tasks with their dependencies

        Returns:
            bool: True if adding the dependency would create a circular dependency
        """
        visited = set()
        path = set()

        def has_cycle(current_uuid: str) -> bool:
            if current_uuid in path:
                return True
            if current_uuid in visited:
                return False

            visited.add(current_uuid)
            path.add(current_uuid)

            # Find the task in all_tasks
            current_task = next(
                (t for t in all_tasks if t["uuid"] == current_uuid), None
            )
            if current_task:
                for dep_uuid in current_task.get("dependency_tasks", []):
                    if has_cycle(dep_uuid):
                        return True

            path.remove(current_uuid)
            return False

        # Add the new dependencies temporarily for checking
        current_task = next((t for t in all_tasks if t["uuid"] == task_uuid), None)
        if current_task:
            original_deps = current_task.get("dependency_tasks", [])
            current_task["dependency_tasks"] = dependency_tasks
            has_circular = has_cycle(task_uuid)
            current_task["dependency_tasks"] = original_deps
            return has_circular
        return False

=== File: planner-agent/src/workflows/todocreator/utils.py ===

-- Chunk 1 --
// utils.py:16-20
class TodoStatus(str, Enum):
    INITIALIZED = "initialized"  # Means not assigned to any node or when a node is audited as false
    IN_PROGRESS = "in_progress"  # Means is assigned to a node, not completed
    AUDITED = "audited"  # Means a PR is audited and waiting for merge
    MERGED = "merged"  # Means a PR is merged

-- Chunk 2 --
// utils.py:23-30
class DocumentationStatus(str, Enum):
    INITIALIZED = "initialized"
    IN_PROGRESS = "in_progress"
    DRAFT_PR_RECEIVED = "draft_pr_received"
    PR_RECEIVED = "pr_received"
    IN_REVIEW = "in_review"
    DONE = "done"
    FAILED = "failed"

-- Chunk 3 --
// utils.py:33-36
class SwarmBountyType(str, Enum):
    DOCUMENT_SUMMARIZER = "document-summarizer"
    FIND_BUGS = "find-bugs"
    BUILD_FEATURE = "build-feature"

-- Chunk 4 --
// utils.py:39-49
class TaskAssignedInfo(BaseModel):
    stakingKey: str = Field(..., description="Staking key of the assigned agent")
    pubkey: str = Field(..., description="Public key of the assigned agent")
    taskId: str = Field(..., description="Task ID")
    roundNumber: int = Field(..., description="Round number")
    githubUsername: str = Field(..., description="GitHub username")
    prUrl: Optional[str] = Field(None, description="Pull request URL")
    todoSignature: Optional[str] = Field(None, description="Todo signature")
    prSignature: Optional[str] = Field(None, description="PR signature")
    auditSignature: Optional[str] = Field(None, description="Audit signature")
    auditResult: Optional[bool] = Field(None, description="Audit result")

-- Chunk 5 --
// utils.py:52-82
class TaskModel(BaseModel):
    title: str = Field(..., description="Task title")
    uuid: str = Field(
        default_factory=lambda: str(uuid.uuid4()), description="Unique identifier"
    )
    bountyType: SwarmBountyType = Field(..., description="Bounty type")
    issueUuid: str = Field(..., description="Issue UUID")
    description: str = Field(..., description="Task description")
    acceptanceCriteria: List[str] = Field(..., description="Acceptance criteria")
    repoOwner: str = Field(..., description="Repository owner")
    repoName: str = Field(..., description="Repository name")
    assignedTo: List[TaskAssignedInfo] = Field(
        default=[], description="List of assigned agents"
    )
    bountyId: str = Field(..., description="Bounty ID")
    dependencyTasks: List[str] = Field(
        default=[], description="List of dependency tasks"
    )
    status: TodoStatus | DocumentationStatus = Field(
        default=TodoStatus.INITIALIZED, description="Task status"
    )
    createdAt: datetime = Field(
        default_factory=datetime.utcnow, description="Creation timestamp"
    )
    updatedAt: datetime = Field(
        default_factory=datetime.utcnow, description="Last update timestamp"
    )

    def to_dict(self):
        """Convert Task object to dictionary format for storing in MongoDB"""
        return self.model_dump()

-- Chunk 6 --
// utils.py:85-87
class AggregatorInfo(BaseModel):
    agent: str = Field(..., description="Aggregator agent")
    timestamp: int = Field(..., description="Timestamp of aggregator assignment")

-- Chunk 7 --
// utils.py:90-94
class IssueStatus(str, Enum):
    INITIALIZED = "initialized"
    IN_PROGRESS = "in_progress"
    COMPLETED = "completed"
    # Add other status values as needed

-- Chunk 8 --
// utils.py:97-107
class AssignedInfo(BaseModel):
    stakingKey: str = Field(..., description="Staking key of the assigned agent")
    pubkey: str = Field(..., description="Public key of the assigned agent")
    taskId: str = Field(..., description="Task ID")
    roundNumber: int = Field(..., description="Round number")
    githubUsername: str = Field(..., description="GitHub username")
    prUrl: Optional[str] = Field(None, description="Pull request URL")
    todoSignature: Optional[str] = Field(None, description="Todo signature")
    prSignature: Optional[str] = Field(None, description="PR signature")
    auditSignature: Optional[str] = Field(None, description="Audit signature")
    auditResult: Optional[bool] = Field(None, description="Audit result")

-- Chunk 9 --
// utils.py:110-140
class IssueModel(BaseModel):
    title: Optional[str] = Field(None, description="Issue title")
    description: Optional[str] = Field(None, description="Issue description")
    uuid: str = Field(
        default_factory=lambda: str(uuid.uuid4()), description="Unique identifier"
    )
    forkOwner: str = Field(..., description="Fork owner")
    forkUrl: str = Field(..., description="Fork URL")
    repoOwner: str = Field(..., description="Repository owner")
    repoName: str = Field(..., description="Repository name")
    bountyType: SwarmBountyType = Field(..., description="Bounty type")
    status: IssueStatus = Field(
        default=IssueStatus.INITIALIZED, description="Issue status"
    )
    bountyId: str = Field(..., description="Bounty ID")
    assignedTo: List[AssignedInfo] = Field(
        default=[], description="List of assigned agents"
    )
    predecessorUuid: Optional[str] = Field(
        None, description="UUID of the immediately previous issue in the chain"
    )
    createdAt: datetime = Field(
        default_factory=datetime.utcnow, description="Creation timestamp"
    )
    updatedAt: datetime = Field(
        default_factory=datetime.utcnow, description="Last update timestamp"
    )

    def to_dict(self):
        """Convert Issue object to dictionary format for storing in MongoDB"""
        return self.model_dump()

-- Chunk 10 --
// utils.py:143-159
def insert_task_to_mongodb(task: TaskModel) -> bool:
    try:
        # Insert the task
        result = todos_collection.insert_one(task.to_dict())

        # Check if the insertion was successful
        return result.acknowledged

    except ConnectionFailure:
        print("MongoDB connection failed")
        return False
    except PyMongoError as e:
        print(f"MongoDB error: {e}")
        return False
    except Exception as e:
        print(f"An unknown error occurred: {e}")
        return False

-- Chunk 11 --
// utils.py:162-171
def get_all_tasks_title_uuid_from_mongodb() -> List[dict]:
    try:
        # Get all tasks from MongoDB
        tasks = todos_collection.find({}, {"_id": 0, "title": 1, "uuid": 1})

        # Convert cursor to list of dictionaries with only 'uuid' and 'title'
        return [{"uuid": task["uuid"], "title": task["title"]} for task in tasks]
    except Exception as e:
        print(f"An error occurred: {e}")
        return []

-- Chunk 12 --
// utils.py:174-186
def insert_issue_to_mongodb(issue: IssueModel) -> bool:
    try:
        # Insert the issue
        result = issues_collection.insert_one(issue.to_dict())

        # Check if the insertion was successful
        return result.acknowledged
    except ConnectionFailure:
        print("MongoDB connection failed")
        return False
    except PyMongoError as e:
        print(f"MongoDB error: {e}")
        return False

-- Chunk 13 --
// utils.py:189-202
class SystemPromptModel(BaseModel):
    prompt: str = Field(..., description="System prompt text")
    bountyId: str = Field(..., description="Bounty ID")
    bountyType: SwarmBountyType = Field(..., description="Bounty type")
    createdAt: datetime = Field(
        default_factory=datetime.utcnow, description="Creation timestamp"
    )
    updatedAt: datetime = Field(
        default_factory=datetime.utcnow, description="Last update timestamp"
    )

    def to_dict(self):
        """Convert SystemPrompt object to dictionary format for storing in MongoDB"""
        return self.model_dump()

-- Chunk 14 --
// utils.py:205-218
def insert_system_prompt_to_mongodb(system_prompt: SystemPromptModel) -> bool:
    """Insert system prompt into MongoDB."""
    try:
        # Insert the system prompt
        result = system_prompts_collection.insert_one(system_prompt.to_dict())

        # Check if the insertion was successful
        return result.acknowledged
    except ConnectionFailure:
        print("MongoDB connection failed")
        return False
    except PyMongoError as e:
        print(f"MongoDB error: {e}")
        return False

=== File: planner-agent/src/workflows/todocreator/phases.py ===

-- Chunk 1 --
// phases.py:6-14
class IssueGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_issues",
            available_tools=["generate_issues", "list_files", "read_file"],
            conversation_id=conversation_id,
            name="Issue Generation",
        )

-- Chunk 2 --
// phases.py:17-30
class IssueValidationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="validate_issues",
            available_tools=[
                "generate_issues",
                "approve_issues",
                "list_files",
                "read_file",
            ],
            conversation_id=conversation_id,
            name="Issue Validation",
        )

-- Chunk 3 --
// phases.py:33-45
class TaskDecompositionPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="decompose_feature",
            available_tools=[
                "read_file",
                "list_files",
                "generate_tasks",
            ],
            conversation_id=conversation_id,
            name="Task Decomposition",
        )

-- Chunk 4 --
// phases.py:48-59
class TaskValidationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="validate_subtasks",
            available_tools=[
                "read_file",
                "validate_tasks",
            ],
            conversation_id=conversation_id,
            name="Task Validation",
        )

-- Chunk 5 --
// phases.py:62-73
class TaskRegenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="regenerate_subtasks",
            available_tools=[
                "read_file",
                "regenerate_tasks",
            ],
            conversation_id=conversation_id,
            name="Task Regeneration",
        )

-- Chunk 6 --
// phases.py:77-88
class TaskDependencyPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="dependency_tasks",
            available_tools=[
                "read_file",
                "create_task_dependency",
            ],
            conversation_id=conversation_id,
            name="Task Dependency",
        )

-- Chunk 7 --
// phases.py:91-103
class SystemPromptGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_system_prompts",
            available_tools=[
                "read_file",
                "list_files",
                "generate_system_prompt",
            ],
            conversation_id=conversation_id,
            name="System Prompt Generation",
        )

=== File: planner-agent/src/workflows/todocreator/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/todocreator/prompts.py:1-150
"""Prompts for the task decomposition workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in breaking down complex "
        "features into small, manageable tasks. You excel at creating detailed, actionable subtasks "
        "with clear acceptance criteria. You understand software development best practices and "
        "focus on creating tasks that follow the Single Responsibility Principle."
    ),
    "generate_issues": (
        "Your task is to create a list of user stories for a requested feature.\n"
        "Feature: {issue_spec}\n"
        "A repository has already been checked out for you. Examine the existing code and then think through, "
        "step by step, which user stories are needed to implement the feature.\n"
        "Generate user stories in the order they need to be implemented.\n"
        "IMPORTANT: It is VITAL that you avoid over-engineering. The feature should be fully implemented but "
        "you must avoid unnecessary complexity.\n"
        "For each user story, you must provide:\n"
        "1. A clear, specific title\n"
        "2. A description that contains a user story in the format of "
        "'As a [role], I want [feature] so that [benefit].'\n"
        "3. Any additional information that is needed to understand the context of the user story.\n"
        "Keep in mind that user stories are written from the perspective of the end user of the product, "
        "NOT the development team.\n"
    ),
    "validate_issues": (
        "A project manager has created a list of user stories for a requested feature. Please review them and "
        "determine if they should be accepted or rejected.\n"
        "This is the feature to be implemented:\n"
        "{issue_spec}\n"
        "The feature has been broken down into the following user stories:\n"
        "{issues}\n"
        "Consider the user stories as a whole and determine if they comprehensively cover the feature.\n"
        "Carefully consider each user story and determine if it:\n"
        "1. Makes sense and is an essential part of the feature\n"
        "2. Is not over-engineered\n"
        "3. Does not overlap with other user stories\n"
        "4. Is arranged in the correct order\n"
        "If any problems are found, provide an updated list of user stories that are valid.\n"
        "If there none of the problems above are found, use the 'approve_issues' tool to approve the user stories. "
        "Do not generate new user stories if the only improvements are minor wording changes.\n"
    ),
    "decompose_feature": (
        "You are creating user stories and subtasks as part of a plan to implement the following feature: "
        "{issue_spec}\n"
        "The feature has been broken down into the following user stories:\n"
        "{issues}\n"
        "The specific user story you are planning to implement is: {feature_spec}\n"
        "A repository has already been checked out for you. Examine the existing code and then think through, "
        "step by step, which tasks are needed to implement the user story.\n"
        "For each task, you must provide:\n"
        "1. A clear, specific title\n"
        "2. A detailed description of the work required\n"
        "3. Quantifiable acceptance criteria that can be verified through automated tests\n\n"
        "Guidelines for task breakdown:\n"
        "- Each task should follow the Single Responsibility Principle - do one thing and do it well\n"
        "- Tasks should represent a single logical change (e.g., one schema change, one API endpoint)\n"
        "- Tasks should be independently testable with specific test cases\n"
        "- Each acceptance criterion must be measurable through unit tests, integration tests, or E2E tests\n"
        "- Tasks should be small enough that their implementation approach is clear\n"
        "- Consider separation of concerns (e.g., separate backend/frontend/database tasks)\n"
        "- Include necessary setup/infrastructure tasks\n"
        "- Tasks should be specific and focused\n"
        "- Tasks should include detailed steps\n"
        "- Every task must be a clear, actionable software development task that results in a code change\n"
        "- Consider using try logic to handle potential exceptions appropriately\n\n"
        "IMPORTANT: It is VITAL that you avoid over-engineering. The feature should be fully implemented but "
        "you must avoid unnecessary complexity. Do not include tasks that are not directly related to the feature. "
        "Do not include functionality beyond the user story.\n"
        "IMPORTANT: Make sure each task is discrete and doesn't overlap with other tasks.\n"
    ),
    "validate_subtasks": (
        "Review the following subtasks to ensure they meet these criteria:\n"
        "1. Each task follows the Single Responsibility Principle\n"
        "2. Each task represents a single logical change\n"
        "3. Each acceptance criterion is quantifiably measurable through automated tests\n"
        "4. Test coverage requirements are explicitly specified\n"
        "5. Performance criteria are measurable where applicable\n"
        "6. No critical aspects of the feature are missing\n"
        "7. Each task requires a code change\n\n"
        "Subtasks to validate:\n{subtasks}\n\n"
        "If any issues are found, provide specific recommendations for improvement."
    ),
    "regenerate_subtasks": (
        "You are creating user stories and subtasks as part of a plan to implement the following feature: "
        "{issue_spec}\n"
        "A user story has been broken down into subtasks but some were deemed invalid.\n"
        "Your task is to regenerate the subtasks based on the feedback provided.\n"
        "The feature has been broken down into the following user stories:\n"
        "{issues}\n"
        "The specific user story that was broken down into subtasks is: {feature_spec}\n"
        "Original Subtasks: {subtasks}\n"
        "Failed Subtasks: {auditedSubtasks}\n"
        "Feedback: {feedbacks}\n"
        "A repository has already been checked out for you. Examine the existing code and then think through, "
        "step by step, which tasks are needed to implement the user story.\n"
        "For each task, you must provide:\n"
        "1. A clear, specific title\n"
        "2. A detailed description of the work required\n"
        "3. Quantifiable acceptance criteria that can be verified through automated tests\n\n"
        "Guidelines for task breakdown:\n"
        "- Each task should follow the Single Responsibility Principle - do one thing and do it well\n"
        "- Tasks should represent a single logical change (e.g., one schema change, one API endpoint)\n"
        "- Tasks should be independently testable with specific test cases\n"
        "- Each acceptance criterion must be measurable through unit tests, integration tests, or E2E tests\n"
        "- Tasks should be small enough that their implementation approach is clear\n"
        "- Consider separation of concerns (e.g., separate backend/frontend/database tasks)\n"
        "- Include necessary setup/infrastructure tasks\n"
        "- Tasks should be specific and focused\n"
        "- Tasks should include detailed steps\n"
        "- Every task must be a clear, actionable software development task that results in a code change\n"
        "- Consider using try logic to handle potential exceptions appropriately\n\n"
    ),
    "dependency_tasks": (
        "Review the following target task and determine if it depends on any other tasks.\n"
        "Target task: {target_task}\n"
        "Other tasks:\n{subtasks}\n\n"
        "Dependencies should always be one way, marking which tasks a task depends on.\n"
        "If any dependencies are found, link the uuid of the target task "
        "with a list of uuids for any tasks it depends on.\n"
        "IMPORTANT: do not create circular dependencies.\n"
    ),
    "generate_system_prompts": (
        "Your task is to create a comprehensive system prompt that will guide an AI agent in implementing "
        "the entire feature and all its tasks:\n\n"
        "Issue spec: {issue_spec}\n"
        "Issues: {issues}\n"
        "Tasks: {tasks}\n\n"
        "Create a single system prompt that:\n"
        "1. Defines the AI's role and expertise needed for implementing the entire feature\n"
        "2. Provides comprehensive context about the feature, its issues, and all tasks\n"
        "3. Sets clear guidelines and constraints that apply across all tasks\n"
        "4. Specifies coding standards and best practices to follow throughout implementation\n"
        "5. Includes technical requirements and architectural considerations\n"
        "6. Explains how different tasks relate to and depend on each other\n"
        "7. Provides guidance on maintaining consistency across all implementations\n\n"
        "Format the system prompt as follows:\n"
        "---\n"
        "Feature Overview:\n"
        "[High-level description of the feature and its goals]\n\n"
        "AI Role and Expertise:\n"
        "[Define the AI's role and required expertise]\n\n"
        "Implementation Context:\n"
        "[Comprehensive context about the feature and its components]\n\n"
        "Technical Guidelines:\n"
        "- [List technical requirements and architectural guidelines]\n\n"
        "Coding Standards:\n"
        "- [List coding standards and best practices]\n\n"
        "Task Dependencies and Relationships:\n"
        "[Explain how tasks relate to and depend on each other]\n\n"

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/todocreator/prompts.py:151-155
        "Quality and Testing Requirements:\n"
        "[Specify quality standards and testing requirements]\n"
        "---\n"
    ),
}

=== File: planner-agent/src/workflows/todocreator/mongo_connection.py ===

-- Chunk 1 --
// mongo_connection.py:8-16
class MongoConnection:
    def __init__(self, mongo_uri: str = os.getenv("MONGODB_URI")):
        self.client = MongoClient(mongo_uri)

    def get_database(self, db_name: str):
        return self.client[db_name]

    def close(self):
        self.client.close()

=== File: planner-agent/src/workflows/todocreator/__main__.py ===

-- Chunk 1 --
// __main__.py:15-69
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Create tasks from a feature specification for a GitHub repository"
    )
    parser.add_argument(
        "--repo",
        type=str,
        required=True,
        help="GitHub repository URL (e.g., https://github.com/owner/repo)",
    )
    parser.add_argument(
        "--fork",
        type=str,
        required=True,
        help="Fork repository URL (e.g., https://github.com/fork-owner/repo)",
    )
    parser.add_argument(
        "--output",
        type=str,
        default="todos.json",
        help="Output JSON file path (default: todos.json)",
    )
    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )
    parser.add_argument(
        "--issue-spec",
        type=str,
        required=True,
        help="Description of the issue to implement",
    )
    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = TodoCreatorWorkflow(
        client=client,
        prompts=PROMPTS,
        source_url=args.repo,
        fork_url=args.fork,
        issue_spec=args.issue_spec,
        bounty_id=str(uuid.uuid4()),
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Todo creator workflow failed")
        sys.exit(1)

=== File: planner-agent/src/workflows/todocreator/tools/__init__.py ===

=== File: planner-agent/src/workflows/todocreator/tools/planner_operations/implementations.py ===

-- Chunk 1 --
// implementations.py:10-50
def generate_tasks(
    tasks: List[Dict[str, Any]] = None,
    **kwargs,
) -> dict:
    """Generate a Task List for the repository.

    Args:
        tasks: List of task dictionaries, each containing:
            - title: Task title
            - description: Task description
            - acceptance_criteria: List of acceptance criteria

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - task_count: Number of tasks written
                - tasks: List of task dictionaries
            - error: Error message if any
    """
    try:
        for task in tasks:
            task_uuid = str(uuid.uuid4())
            task["uuid"] = task_uuid
        return {
            "success": True,
            "message": f"Successfully generated {len(tasks)} tasks",
            "data": {
                "task_count": len(tasks),
                "tasks": tasks,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to generate tasks: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 2 --
// implementations.py:53-91
def regenerate_tasks(
    tasks: List[Dict[str, Any]] = None,
    **kwargs,
) -> dict:
    """Regenerate the tasks.

    Args:
        tasks: List of task dictionaries, each containing:
            - title: Task title
            - description: Task description
            - acceptance_criteria: List of acceptance criteria
            - uuid: UUID of the task

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - task_count: Number of tasks written
                - tasks: List of task dictionaries
            - error: Error message if any
    """
    try:
        return {
            "success": True,
            "message": f"Successfully regenerated {len(tasks)} tasks",
            "data": {
                "task_count": len(tasks),
                "tasks": tasks,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to regenerate tasks: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 3 --
// implementations.py:94-133
def validate_tasks(decisions: List[Dict[str, Any]], **kwargs) -> dict:
    """Validate the tasks.

    Args:
        decisions: List of decisions, each containing:
            - uuid: UUID of the task
            - comment: Comment on the task
            - decision: Decision on the task, True or False

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - decision_count: Number of decisions
                - decisions: Dictionary of decision dictionaries
            - error: Error message if any
    """
    try:
        decisions_dict = {}
        for decision in decisions:
            if decision["decision"]:
                decisions_dict[decision["uuid"]] = decision
        return {
            "success": True,
            "message": f"Successfully validated {len(decisions)} tasks",
            "data": {
                "decision_count": len(decisions_dict),
                "decisions": decisions_dict,
            },
            "error": None,
        }

    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to validate tasks: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 4 --
// implementations.py:136-167
def create_task_dependency(
    task_uuid: str, dependency_tasks: List[str], **kwargs
) -> dict:
    """Create the task dependency for a task.

    Args:
        task_uuid: UUID of the task
        dependency_tasks: List of UUIDs of dependency tasks

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - task_uuid: UUID of the task
                - dependency_tasks: List of UUIDs of dependency tasks
    """
    try:
        # Create a new dict one is task_uuid and value is dependency_tasks
        dependency_tasks_dict = {task_uuid: dependency_tasks}
        return {
            "success": True,
            "message": f"Successfully updated dependency tasks for {task_uuid}",
            "data": dependency_tasks_dict,
        }
    except Exception as e:
        return {
            "success": False,
            "error": str(e),
            "message": f"Failed to update dependency tasks: {str(e)}",
            "data": None,
        }

-- Chunk 5 --
// implementations.py:170-211
def generate_issues(
    issues: List[Dict[str, Any]] = None,
    **kwargs,
) -> dict:
    """Generate issues for the repository.

    Args:
        issues: List of issue dictionaries, each containing:
            - title: Issue title
            - description: Issue description
            - acceptance_criteria: List of acceptance criteria

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - issue_count: Number of issues generated
                - issues: List of issue dictionaries with UUIDs
            - error: Error message if any
    """
    try:
        for issue in issues:
            issue_uuid = str(uuid.uuid4())
            issue["uuid"] = issue_uuid
        return {
            "success": True,
            "message": f"Successfully generated {len(issues)} issues",
            "data": {
                "issue_count": len(issues),
                "issues": issues,
                "approved": False,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to generate issues: {str(e)}",
            "data": {"approved": False},
            "error": str(e),
        }

-- Chunk 6 --
// implementations.py:214-234
def audit_tasks(
    result: bool,
    **kwargs,
) -> dict:
    """Audit the tasks."""
    try:
        return {
            "success": True,
            "message": "Successfully audited tasks",
            "data": {
                "result": result,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to validate tasks: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 7 --
// implementations.py:237-269
def generate_system_prompt(
    prompt: str,
    **kwargs,
) -> dict:
    """Generate a system prompt for the feature.

    Args:
        prompt: The system prompt text

    Returns:
        dict: Result of the operation containing:
            - success: Whether the operation succeeded
            - message: Success/error message
            - data: Dictionary containing:
                - prompt: The generated system prompt
            - error: Error message if any
    """
    try:
        return {
            "success": True,
            "message": "Successfully generated system prompt",
            "data": {
                "prompt": prompt,
            },
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to generate system prompt: {str(e)}",
            "data": None,
            "error": str(e),
        }

-- Chunk 8 --
// implementations.py:272-311
def approve_issues(
    issues: List[Dict[str, Any]] = None,
    repo_owner: str = None,
    repo_name: str = None,
    bounty_id: str = None,
    fork_owner: str = None,
    fork_url: str = None,
    **kwargs,
) -> dict:
    """Save approved issues to MongoDB."""
    try:
        previous_issue_uuid = None
        for issue in issues:
            issue_model = IssueModel(
                title=issue["title"],
                description=issue["description"],
                repoOwner=repo_owner,
                repoName=repo_name,
                uuid=issue["uuid"],
                bountyId=bounty_id,
                forkOwner=fork_owner,
                forkUrl=fork_url,
                predecessorUuid=previous_issue_uuid,
                bountyType=SwarmBountyType.BUILD_FEATURE,
            )
            insert_issue_to_mongodb(issue_model)
            previous_issue_uuid = issue["uuid"]
        return {
            "success": True,
            "message": "Successfully approved issues",
            "data": {"approved": True},
            "error": None,
        }
    except Exception as e:
        return {
            "success": False,
            "message": f"Failed to approve issues: {str(e)}",
            "data": {"approved": True},
            "error": str(e),
        }

=== File: planner-agent/src/workflows/todocreator/tools/planner_operations/definitions.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/todocreator/tools/planner_operations/definitions.py:1-150
from .implementations import (
    generate_tasks,
    validate_tasks,
    regenerate_tasks,
    create_task_dependency,
    generate_issues,
    audit_tasks,
    generate_system_prompt,
    approve_issues,
)

DEFINITIONS = {
    "generate_tasks": {
        "name": "generate_tasks",
        "description": "Generate a JSON file containing tasks from a feature breakdown.",
        "parameters": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "description": "List of tasks",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "Clear, specific title of the task",
                                "maxLength": 100,
                            },
                            "description": {
                                "type": "string",
                                "description": "Detailed explanation of the work required",
                                "minLength": 10,
                            },
                            "acceptance_criteria": {
                                "type": "array",
                                "description": "List of verifiable acceptance criteria",
                                "items": {"type": "string", "minLength": 1},
                                "minItems": 1,
                            },
                        },
                        "required": ["title", "description", "acceptance_criteria"],
                        "additionalProperties": False,
                    },
                },
            },
            "required": ["tasks"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": generate_tasks,
    },
    "regenerate_tasks": {
        "name": "regenerate_tasks",
        "description": "Regenerate the tasks.",
        "parameters": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "description": "List of tasks",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "Clear, specific title of the task",
                                "maxLength": 100,
                            },
                            "description": {
                                "type": "string",
                                "description": "Detailed explanation of the work required",
                                "minLength": 10,
                            },
                            "acceptance_criteria": {
                                "type": "array",
                                "description": "List of verifiable acceptance criteria",
                                "items": {"type": "string", "minLength": 1},
                                "minItems": 1,
                            },
                            "uuid": {
                                "type": "string",
                                "description": "UUID of the task",
                            },
                        },
                        "required": [
                            "title",
                            "description",
                            "acceptance_criteria",
                            "uuid",
                        ],
                        "additionalProperties": False,
                    },
                },
                # "file_name": {
                #     "type": "string",
                #     "description": "Name of the output JSON file",
                #     "default": "tasks.json",
                # },
                # "repo_url": {
                #     "type": "string",
                #     "description": "URL of the repository (for reference)",
                # },
            },
            "required": ["tasks"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": regenerate_tasks,
    },
    "validate_tasks": {
        "name": "validate_tasks",
        "description": "Generate a List of Decisions on Tasks from a feature breakdown.",
        "parameters": {
            "type": "object",
            "properties": {
                "decisions": {
                    "type": "array",
                    "description": "List of decisions on tasks",
                    "items": {
                        "type": "object",
                        "properties": {
                            "uuid": {
                                "type": "string",
                                "description": "UUID of the task",
                            },
                            "comment": {
                                "type": "string",
                                "description": "Comment on the task",
                            },
                            "decision": {
                                "type": "boolean",
                            },
                        },
                        "required": ["uuid", "comment", "decision"],
                        "additionalProperties": False,
                    },
                },
            },
            "required": ["decisions"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": validate_tasks,
    },
    "create_task_dependency": {
        "name": "create_task_dependency",
        "description": "Create the task dependency for a task.",
        "parameters": {
            "type": "object",

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/planner-agent/src/workflows/todocreator/tools/planner_operations/definitions.py:151-247
            "properties": {
                "task_uuid": {
                    "type": "string",
                    "description": "UUID of the task",
                },
                "dependency_tasks": {
                    "type": "array",
                    "description": "List of UUIDs of dependency tasks",
                },
            },
            "required": ["task_uuid", "dependency_tasks"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": create_task_dependency,
    },
    "generate_issues": {
        "name": "generate_issues",
        "description": "Generate a JSON file containing issues from a feature breakdown.",
        "parameters": {
            "type": "object",
            "properties": {
                "issues": {
                    "type": "array",
                    "description": "List of issues",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "Clear, specific title of the issue",
                                "maxLength": 100,
                            },
                            "description": {
                                "type": "string",
                                "description": "Detailed explanation of the issue",
                                "minLength": 10,
                            },
                        },
                        "required": ["title", "description"],
                        "additionalProperties": False,
                    },
                },
            },
            "required": ["issues"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": generate_issues,
    },
    "approve_issues": {
        "name": "approve_issues",
        "description": "Approve the issues.",
        "parameters": {
            "type": "object",
            "properties": {},
            "required": [],
        },
        "final_tool": True,
        "function": approve_issues,
    },
    "audit_tasks": {
        "name": "audit_tasks",
        "description": "Audit the tasks.",
        "parameters": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean",
                    "description": "Result of the validation",
                },
            },
            "required": ["result"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": audit_tasks,
    },
    "generate_system_prompt": {
        "name": "generate_system_prompt",
        "description": "Generate a system prompt for implementing the feature.",
        "parameters": {
            "type": "object",
            "properties": {
                "prompt": {
                    "type": "string",
                    "description": "The system prompt text that will guide the implementation",
                    "minLength": 10,
                },
            },
            "required": ["prompt"],
            "additionalProperties": False,
        },
        "final_tool": True,
        "function": generate_system_prompt,
    },
}

=== File: planner-agent/src/workflows/todocreator/tools/planner_operations/__init__.py ===

=== File: planner-agent/src/server/main.py ===

-- Chunk 1 --
// main.py:23-58
def audit_issues_and_tasks(future):
    # """Review PR and decide if it should be accepted, revised, or rejected."""
    # try:
    #     # Get the result from the completed future
    #     result = future.result()
    #     if not result.get("success"):
    #         logger.error(f"Todo creation failed: {result.get('error')}")
    #         return

    #     # Extract data from the result
    #     data = result.get("data", {})
    #     issues = data.get("issues")
    #     tasks = data.get("tasks")
    #     issue_spec = data.get("issue_spec")
    #     repo_owner = data.get("repo_owner")
    #     repo_name = data.get("repo_name")

    #     # Set up client and workflow
    #     client = setup_client("anthropic")
    #     workflow = AuditWorkflow(
    #         client=client,
    #         prompts=AUDIT_PROMPTS,
    #         issues=issues,
    #         tasks=tasks,
    #         issueSpec=issue_spec,
    #         repo_owner=repo_owner,
    #         repo_name=repo_name,
    #     )

    #     # Run workflow and get result
    #     result = workflow.run()
    #     return result
    # except Exception as e:
    #     logger.error(f"PR review failed: {str(e)}")
    #     raise Exception("PR review failed")'
    pass

-- Chunk 2 --
// main.py:61-91
def create_todos(source_url: str, fork_url: str, issue_spec: dict, bounty_id: str):
    """Run the workflow in a background thread"""
    try:
        workflow = TodoCreatorWorkflow(
            client=setup_client("anthropic"),
            prompts=PROMPTS,
            source_url=source_url,
            fork_url=fork_url,
            issue_spec=issue_spec,
            bounty_id=bounty_id,
        )
        result = workflow.run()
        if not result or not result.get("success"):
            log_error(
                Exception(result.get("error", "No result")), "Task creation failed"
            )
            return {"success": False, "error": result.get("error", "No result")}
        return {
            "success": True,
            "data": {
                "issues": result.get("data", {}).get("issues", []),
                "tasks": result.get("data", {}).get("tasks", []),
                "issue_spec": issue_spec,
                # Extract repo owner and name from repo_url
                "repo_owner": source_url.split("/")[-2],
                "repo_name": source_url.split("/")[-1],
            },
        }
    except Exception as e:
        logger.error(f"Workflow execution failed: {str(e)}")
        return {"success": False, "error": str(e)}

-- Chunk 3 --
// main.py:95-124
def create_plan():
    try:
        data = request.get_json()
        logger.info(f"Task data: {data}")
        required_fields = [
            "sourceUrl",
            "forkUrl",
            "issueSpec",
            "bountyId",
        ]
        if any(data.get(field) is None for field in required_fields):
            return jsonify({"error": "Missing data"}), 401

        # Submit task to background executor
        future = executor.submit(
            create_todos,
            source_url=data["sourceUrl"],
            fork_url=data["forkUrl"],
            issue_spec=data["issueSpec"],
            bounty_id=data["bountyId"],
        )
        future.add_done_callback(audit_issues_and_tasks)

        return (
            jsonify({"success": True, "message": "Task submitted for processing"}),
            202,
        )  # 202 Accepted indicates the request was accepted for processing
    except Exception as e:
        logger.error(f"Workflow execution failed: {str(e)}")
        return jsonify({"error": str(e)}), 500

=== File: planner-agent/src/server/create_app.py ===

-- Chunk 1 --
// create_app.py:16-74
def create_app():
    """Create and configure the Flask application."""
    app = Flask(__name__)

    # Add request ID middleware
    @app.before_request
    def before_request():
        request.id = str(uuid.uuid4())
        # Store request start time for duration calculation
        request.start_time = request.environ.get("REQUEST_TIME", 0)

    @app.after_request
    def after_request(response):
        # Calculate request duration
        duration = (request.environ.get("REQUEST_TIME", 0) - request.start_time) * 1000

        # Get error message if this is an error response
        error_msg = ""
        if response.status_code >= 400:
            try:
                json_data = response.get_json()
                if isinstance(json_data, dict):
                    error_msg = json_data.get("error") or json_data.get("message", "")
            except Exception:
                # If we can't get JSON data, try to get the message from the response
                error_msg = getattr(response, "description", "")

        # Log the request with appropriate color
        color = Fore.GREEN if response.status_code < 400 else Fore.RED
        log_value(
            f"[{color}REQ{Style.RESET_ALL}] {request.method} {request.path} "
            f"{color}{response.status_code}{Style.RESET_ALL} {error_msg} {duration}ms"
        )

        return response

    # Configure logging within app context
    with app.app_context():
        # Set up logging (includes both console and database logging)
        configure_logging()

        # Debug logging for database path
        print("\nDEBUG: Environment variables:")
        print(f"DATABASE_PATH={os.getenv('DATABASE_PATH')}")
        print(f"PWD={os.getenv('PWD')}")
        print(f"Current working directory: {os.getcwd()}")

        # Initialize database
        initialize_database()
        # Disable Flask's default logging
        app.logger.disabled = True

        # Log startup information
        log_section("SERVER STARTUP")
        log_key_value("Workers", 1)
        log_key_value("Host", "0.0.0.0:8080")
        log_key_value("Database", os.getenv("DATABASE_PATH", "Not configured"))

    return app

=== File: node/documentation/worker/.gitignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/.gitignore:1-18
dist
build
node_modules
package-lock.json
yarn.lock
migrate.sh
*/dev.js
data/*
executables/*
namespace/*
config/*
.env.local
.env
taskStateInfoKeypair.json
localKOIIDB.db
metadata.json
.npmrc
**/*.log

=== File: node/documentation/worker/README.md ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/README.md:1-26
# Earn Crypto with AI Agents: Prometheus Document & Summarize Task (Beta v0)

## Overview

The **Prometheus Document & Summarize Task** spins up an **AI agent** capable of continuously summarizing repositories, **earning you KOII**. Automated document summarization agents can constantly process and summarize information, increasing the value of the network _and_ your node. Our ultimate goal is to have **AI agents summarizing Koii tasks**, growing the network with **more opportunities for node operators to earn rewards**.

## Releases

### Beta v0

- This is the **first beta release** of the task.
- The AI agent reads documents and generates summaries automatically.
- Documentations are sent to the user repository.
- Future versions will introduce **enhanced AI logic, more complex summarization tasks, and more!**

## Task Setup

**[How to set up a Claude API key and a GitHub API key for the 247 Document & Summarize Task.](https://www.koii.network/blog/Earn-Crypto-With-AI-Agent)**

## How It Works

1. The Koii Node **launches an AI agent** inside a lightweight runtime.
2. The agent reads an active **repository list** from the bounty repository.
3. It picks a **repository**, generates the necessary **documentation**, and submits a **Github pull request** (a request to have its documentation added to the repository).
4. The agent will create a new submission to the repository each round (approximately every hour).
5. Koii Nodes **earn rewards** for running the AI agent and contributing documentation.

=== File: node/documentation/worker/jest.config.js ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/jest.config.js:1-6
export default {
  transform: { "^.+\\.tsx?$": "babel-jest" },
  transformIgnorePatterns: ["/node_modules/(?!@babel/runtime)"],
  moduleFileExtensions: ["ts", "tsx", "js", "jsx", "json", "node"],
  testEnvironment: "node",
};

=== File: node/documentation/worker/config-task-test.yml ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/config-task-test.yml:1-130
######################## ALL FIELDS ARE REQUIRED UNLESS OTHERWISE NOTED #########################

######################################### TASK METADATA #########################################
############################ Will be displayed in the desktop node ##############################

## Task Name ##
# Maximum 24 characters.
task_name: "Prometheus Docs Agent"

## Task Author ##
author: "Prometheus"

# Task Description Markdown ##
# If you specify a markdown file, the description field will be ignored.
# Markdown is recommended for better formatting.
markdownDescriptionPath: "./README.md"

## Task Description ##
# Ignored if you specify a markdown file.
description: "Task description."

## Repository URL ##
# Must be public for whitelisted tasks.
repositoryUrl: "https://github.com/koii-network/builder-247"

## Image URL ##
# 230x86 pixels.
imageUrl: "https://koii-k2-task-metadata.s3.us-east-2.amazonaws.com/Docs.png"

## Info URL ##
infoUrl: "https://www.koii.network/blog/Earn-Crypto-With-AI-Agent"

####################################### TASK CONFIGURATION ######################################

## Task Executable Network ##
# IPFS or DEVELOPMENT
# Keep this as IPFS unless you know you need to change it.
task_executable_network: "IPFS"

## Task Audit Program ##
# Task Executable Network IPFS: Path to your executable.
# Task Executable Network DEVELOPMENT: The value should be 'main'.
# Keep this as-is unless you know you need to change it.
task_audit_program: "dist/main.js"

## Round Time ##
# Duration of task, measured in slots (with each slot approximately equal to 408ms). Should be at least 800 slots.
# See https://www.koii.network/docs/concepts/what-are-tasks/what-are-tasks/gradual-consensus for more information on how round time, audit window, and submission window work.
round_time: 3000

## Audit Window ##
# The audit window should be at least 1/3 of the round time.
audit_window: 1300

## Submission Window ##
# The submission window should be at least 1/3 of the round time.
submission_window: 1300

## Minimum Stake Amount ##
# The minimum amount of KOII or KPL that a user must stake in order to participate in the task.
minimum_stake_amount: 0.01

## Task Bounty Type ##
# KOII or KPL
task_type: "KOII"

## Token Mint Address (ONLY for KPL tasks) ##
# The Fire Token address is provided as an example.
token_type: "4qayyw53kWz6GzypcejjT1cvwMXS1qYLSMQRE8se3gTv"

## Total Bounty Amount ##
# The total bounty amount that will be available for distribution over all rounds.
# Does nothing when updating a task.
total_bounty_amount: 11

## Bounty Amount per Round ##
# The maximum amount that can be distributed per round.
# If the actual distribution per round exceeds this amount, the distribution list will fail.
bounty_amount_per_round: 1

## Allowed Failed Distributions ##
# Number of retries allowed for the distribution list if it is fails audit.
# If all retries fail, the task will not distribute anything for the round.
# This is also the number of rounds of submissions it will keep.
allowed_failed_distributions: 8

## Space ##
# Expected Task Data Size in MBs for the account size.
# Minimums: 2 for whitelisted tasks, 1 for production, 0.1 for testing.
# See https://www.koii.network/docs/develop/command-line-tool/create-task-cli/create-task#space for calculation details.
space: 0.1

## Requirement Tags (Optional) ##
# To add more global variables and task variables, please refer to the type, value, description format shown below.
# The ORCA_TASK addon is REQUIRED
requirementsTags:
  - type: ADDON
    value: "ORCA_TASK"
  - type: CPU
    value: "4-core"
  - type: RAM
    value: "5 GB"
  - type: STORAGE
    value: "5 GB"
  - type: TASK_VARIABLE
    value: "ANTHROPIC_API_KEY"
    description: "Your Anthropic API key. You can get one here: https://console.anthropic.com/settings/keys"
  - type: TASK_VARIABLE
    value: "GITHUB_USERNAME"
    description: "Your GitHub username. You can sign up for an account here: https://github.com/join"
  - type: TASK_VARIABLE
    value: "GITHUB_TOKEN"
    description: "Your GitHub Personal Access Token. You can create one here: https://github.com/settings/tokens"

## Tags ##
# See https://www.koii.network/docs/develop/command-line-tool/create-task-cli/create-task#tags for available tag options.
tags: ["AI"]

# Environment ##
# TEST or PRODUCTION
# Production mode will expose your task to all the task runners, even if not whitelisted.
environment: "TEST"

#################################### FOR UPDATING TASKS ONLY ####################################

## Old Task ID ##
task_id: "48h3f4r3AR7MdgCMkET4v3yh7PpPHuqGDWzqgH52rny1"

## Migration Description ##
migrationDescription: "Fix audit bug"

=== File: node/documentation/worker/.env.example ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/.env.example:1-1
DEFAULT_BOUNTY_MARKDOWN_FILE=https://raw.githubusercontent.com/HermanL02/prometheus-swarm-bounties/master/README.md # Testing only

=== File: node/documentation/worker/webpack.config.mjs ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/webpack.config.mjs:1-39
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export default {
  mode: "development",
  entry: "./src/index.ts",
  output: {
    filename: "main.js",
    path: path.resolve(__dirname, "dist"),
    libraryTarget: "commonjs2",
    clean: true,
  },
  target: "node",

  resolve: {
    extensions: [".ts", ".js"],
  },

  module: {
    rules: [
      {
        test: /\.ts$/,
        use: {
          loader: "ts-loader",
          options: {
            transpileOnly: true,
          },
        },
        exclude: /node_modules/,
      },
    ],
  },

  plugins: [],
  devtool: "source-map",
};

=== File: node/documentation/worker/tsconfig.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tsconfig.json:1-25
{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es2020",

    /* Modules */
    "module": "CommonJS",
    "rootDir": "./",
    "outDir": "./build",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "moduleResolution": "Node",

    /* Type Checking */
    "strict": true,
    "skipLibCheck": true,
    "allowJs": true,
    "declaration": false,
    "sourceMap": true,
    "noEmit": false,
    "allowImportingTsExtensions": false
  },
  "include": ["src/**/*", "tests/**/*", "../api/builder/src/orcaSettings.js"],
  "exclude": ["node_modules", "dist", "build"]
}

=== File: node/documentation/worker/package.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/package.json:1-77
{
  "name": "orca-task",
  "version": "2.2.0",
  "description": "",
  "main": "src/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "test": "npm run build && node build/tests/simulateTask.js",
    "jest-test": "jest --detectOpenHandles",
    "start": "node index.js",
    "prod-debug": "nodemon --ignore 'dist/*' tests/prod-debug.js",
    "webpack": "rm -rf dist && rm -rf node_modules && yarn && webpack",
    "webpack:test": "webpack --config tests/test.webpack.config.js",
    "webpack:prod": "webpack --mode production",
    "webpack:dev": "webpack",
    "rename-dist": "mv dist/main.js dist/bafybeibtgoqe4p7m5ykahwzrqlib6nqeqk7lypai5f6x5zymdkihs7gc4u.js"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@_koii/orca-node": "^0.1.18",
    "@_koii/storage-task-sdk": "^1.2.7",
    "@_koii/task-manager": "^1.0.13",
    "@_koii/web3.js": "^0.1.11",
    "@octokit/rest": "^21.1.1",
    "axios": "^1.7.2",
    "cross-spawn": "^7.0.3",
    "dotenv": "^16.5.0",
    "dotenv-webpack": "^8.1.0",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "nodemon": "^3.1.0",
    "seedrandom": "^3.0.5",
    "tail": "^2.2.6",
    "uuid": "^11.1.0"
  },
  "peerDependencies": {
    "@_koii/namespace-wrapper": "^1.0.23"
  },
  "devDependencies": {
    "@_koii/namespace-wrapper": "^1.0.23",
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-typescript": "^7.26.0",
    "@types/cross-spawn": "^6.0.6",
    "@types/eslint": "^9.6.1",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/js-yaml": "^4.0.9",
    "@types/lodash": "^4.17.9",
    "@types/node": "^22.14.1",
    "@types/seedrandom": "^3.0.8",
    "@types/tail": "^2.2.3",
    "@typescript-eslint/eslint-plugin": "^8.7.0",
    "@typescript-eslint/parser": "^8.7.0",
    "axios": "^1.7.2",
    "babel-jest": "^29.7.0",
    "chalk": "^5.3.0",
    "cross-spawn": "^7.0.3",
    "dotenv-webpack": "^8.1.0",
    "eslint": "^8.57.0",
    "globals": "^15.9.0",
    "jest": "^29.7.0",
    "joi": "^17.9.2",
    "prettier": "^3.3.3",
    "tail": "^2.2.6",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.3",
    "typescript": "^5.6.2",
    "webpack": "^5.28.0",
    "webpack-cli": "^4.5.0"
  },
  "engines": {
    "node": ">=18.17.0"
  }
}

=== File: node/documentation/worker/.env.developer.example ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/.env.developer.example:1-9
# This File is for prod-debug.js

TASK_ID='FGzVTXn6iZFhFo9FgWW6zoHfDkJepQkKKKPfMvDdvePv' # Easy Testing Task ID
TEST_KEYWORDS='TEST,EZ TESTING'

# Set this to use your desktop node staking wallet during testing so IPFS will work
# See https://github.com/koii-network/ezsandbox/blob/main/Lesson%201/PartIV.md#staking-wallet
STAKING_WALLET_PATH="path to your desktop node staking wallet"
MIDDLE_SERVER_URL="http://localhost:3000"

=== File: node/documentation/worker/config-task-prod.yml ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/config-task-prod.yml:1-130
######################## ALL FIELDS ARE REQUIRED UNLESS OTHERWISE NOTED #########################

######################################### TASK METADATA #########################################
############################ Will be displayed in the desktop node ##############################

## Task Name ##
# Maximum 24 characters.
task_name: "Prometheus Docs Agent"

## Task Author ##
author: "Prometheus"

# Task Description Markdown ##
# If you specify a markdown file, the description field will be ignored.
# Markdown is recommended for better formatting.
markdownDescriptionPath: "./README.md"

## Task Description ##
# Ignored if you specify a markdown file.
description: "Task description."

## Repository URL ##
# Must be public for whitelisted tasks.
repositoryUrl: "https://github.com/koii-network/builder-247"

## Image URL ##
# 230x86 pixels.
imageUrl: "https://s3.koii.network/koii-k2-task-metadata/Docs.png"

## Info URL ##
infoUrl: "https://www.koii.network/blog/Earn-Crypto-With-AI-Agent"

####################################### TASK CONFIGURATION ######################################

## Task Executable Network ##
# IPFS or DEVELOPMENT
# Keep this as IPFS unless you know you need to change it.
task_executable_network: "IPFS"

## Task Audit Program ##
# Task Executable Network IPFS: Path to your executable.
# Task Executable Network DEVELOPMENT: The value should be 'main'.
# Keep this as-is unless you know you need to change it.
task_audit_program: "dist/main.js"

## Round Time ##
# Duration of task, measured in slots (with each slot approximately equal to 408ms). Should be at least 800 slots.
# See https://www.koii.network/docs/concepts/what-are-tasks/what-are-tasks/gradual-consensus for more information on how round time, audit window, and submission window work.
round_time: 3000

## Audit Window ##
# The audit window should be at least 1/3 of the round time.
audit_window: 1300

## Submission Window ##
# The submission window should be at least 1/3 of the round time.
submission_window: 1300

## Minimum Stake Amount ##
# The minimum amount of KOII or KPL that a user must stake in order to participate in the task.
minimum_stake_amount: 0.01

## Task Bounty Type ##
# KOII or KPL
task_type: "KOII"

## Token Mint Address (ONLY for KPL tasks) ##
# The Fire Token address is provided as an example.
token_type: "4qayyw53kWz6GzypcejjT1cvwMXS1qYLSMQRE8se3gTv"

## Total Bounty Amount ##
# The total bounty amount that will be available for distribution over all rounds.
# Does nothing when updating a task.
total_bounty_amount: 12000

## Bounty Amount per Round ##
# The maximum amount that can be distributed per round.
# If the actual distribution per round exceeds this amount, the distribution list will fail.
bounty_amount_per_round: 2001

## Allowed Failed Distributions ##
# Number of retries allowed for the distribution list if it is fails audit.
# If all retries fail, the task will not distribute anything for the round.
# This is also the number of rounds of submissions it will keep.
allowed_failed_distributions: 8

## Space ##
# Expected Task Data Size in MBs for the account size.
# Minimums: 2 for whitelisted tasks, 1 for production, 0.1 for testing.
# See https://www.koii.network/docs/develop/command-line-tool/create-task-cli/create-task#space for calculation details.
space: 5

## Requirement Tags (Optional) ##
# To add more global variables and task variables, please refer to the type, value, description format shown below.
# The ORCA_TASK addon is REQUIRED
requirementsTags:
  - type: ADDON
    value: "ORCA_TASK"
  - type: CPU
    value: "4-core"
  - type: RAM
    value: "5 GB"
  - type: STORAGE
    value: "5 GB"
  - type: TASK_VARIABLE
    value: "ANTHROPIC_API_KEY"
    description: "Your Anthropic API key. You can get one here: https://console.anthropic.com/settings/keys"
  - type: TASK_VARIABLE
    value: "GITHUB_USERNAME"
    description: "Your GitHub username. You can sign up for an account here: https://github.com/join"
  - type: TASK_VARIABLE
    value: "GITHUB_TOKEN"
    description: "Your GitHub Personal Access Token. You can create one here: https://github.com/settings/tokens"

## Tags ##
# See https://www.koii.network/docs/develop/command-line-tool/create-task-cli/create-task#tags for available tag options.
tags: ["AI"]

# Environment ##
# TEST or PRODUCTION
# Production mode will expose your task to all the task runners, even if not whitelisted.
environment: "TEST"

#################################### FOR UPDATING TASKS ONLY ####################################

## Old Task ID ##
task_id: "A1UwX31uCMhZN4x9ZeH5xv3dzZcKLXsXytk6r7PzDLn3"

## Migration Description ##
migrationDescription: "Time Based Logic, Poll Task"

=== File: node/documentation/worker/tsconfig.tests.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tsconfig.tests.json:1-29
{
  "compilerOptions": {
    /* Language and Environment */
    "target": "es2020",

    /* Modules */
    "module": "commonjs",
    "moduleResolution": "Node",
    "rootDir": "./tests",
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,

    /* Type Checking */
    "strict": true,
    "useUnknownInCatchVariables": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedIndexedAccess": true,
    "noImplicitOverride": true,
    "noPropertyAccessFromIndexSignature": true,

    /* Completeness */
    "skipLibCheck": true
  },
  "include": ["tests/**/*"]
}

=== File: node/documentation/worker/babel.config.cjs ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/babel.config.cjs:1-1
module.exports = { presets: ["@babel/preset-env", "@babel/preset-typescript"] };

=== File: node/documentation/worker/orca-agent/.gitignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/.gitignore:1-1
venv

=== File: node/documentation/worker/orca-agent/README.md ===

=== File: node/documentation/worker/orca-agent/requirements.txt ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/requirements.txt:1-20
anthropic>=0.8.1
python-dotenv>=1.0.0
pandas>=2.0.0
tiktoken>=0.5.2
pytest>=8.0.2
typing-extensions>=4.12.2
GitPython>=3.1.44
pygithub>=2.5.0
Flask>=3.0.0
requests>=2.32.0
cryptography>=42.0.0
gunicorn>=22.0.0
solders>=0.26.0
base58>=2.1.0
tenacity>=9.0.0
sqlmodel>=0.0.22
openai>=0.28.0
colorama>=0.4.6
prometheus-swarm>=0.2.2
prometheus-test>=0.1.7

=== File: node/documentation/worker/orca-agent/setup.md ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/setup.md:1-118
# 247 Builder

## Developing locally

Navigate to the correct directory:

```sh
cd builder/container
```

Set up a virtual environment and activate it:

```sh
python3 -m venv .venv
source .venv/bin/activate
```

Install dependencies:

```sh
pip install -r requirements.txt
```

Run tests:

```sh
python3 -m pytest tests/
```

Run the agent:

```sh
python3 main.py
```

## Developing in Docker

### Running the Flask Server

Navigate to the correct directory:

```sh
cd builder/container
```

Build the image:

```sh
docker build -t builder247 .
```

Run the container:

```sh
docker run builder247
```

You can also run with a mounted volume if you'd like to change files without updating the container:

```sh
docker run -v $(pwd):/app builder247
```

### Running Interactively (using the shell)

Navigate to the correct directory:

```sh
cd builder/container
```

Change this line in the Dockerfile:

```sh
CMD ["python", "main.py"]
```

to

```sh
CMD ["/bin/bash"]
```

Build the image:

```sh
docker build -t builder247.
```

Run the container with a mounted volume:

```sh
docker run -it -v $(pwd)/builder:/app builder247
```

This will give you access to your files within the container and run the container in interactive mode with shell access. You can then run tests inside the container using:

```sh
python -m pytest tests/
```

or

```sh
python3 -m pytest tests/
```

You can also run the flask server in the container with:

```sh
python main.py
```

To exit the container's shell:

```sh
exit
```

=== File: node/documentation/worker/orca-agent/main.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/main.py:1-8
from src.server import create_app
import os

app = create_app()

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port, debug=True)

=== File: node/documentation/worker/orca-agent/.env.example ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/.env.example:1-26
ANTHROPIC_API_KEY=your_anthropic_api_key
# the token requires the repo scope
GITHUB_TOKEN=your_github_token
GITHUB_USERNAME=your_github_username

# for testing only
# these credentials must be different from the ones above
# they are used to create and delete test repositories
# the token requires the repo and delete_repo scopes
UPSTREAM_GITHUB_TOKEN=your_upstream_github_token
UPSTREAM_GITHUB_USERNAME=your_upstream_github_username

# for testing only
MIDDLE_SERVER_URL=http://localhost:3000

TASK_SYSTEM_PROMPT="You are an AI development assistant specializing in writing code and creating GitHub pull requests.
Follow these rules:
1. Create a new file in the /src directory.
2. Write a single Python function that accomplishes the assigned task.
3. Commit and push the changes to the remote repository.
4. Create a second new file in the /tests directory.
5. Write a series of tests that thoroughly test the function, including edge cases and error handling, using PyTest.
6. Commit and push the changes to the remote repository.
7. Run the tests to ensure they pass.
8. Continue to make commits and push them to the remote repository until the tests pass.
9. Validate code changes before submitting"

=== File: node/documentation/worker/orca-agent/.dockerignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/.dockerignore:1-16
**/.env
**/.env.*

**/node_modules
**/dist
**/build
**/*.log
**/Dockerfile
**/docker-compose.yml
**/venv
**/.venv
**/*__pycache__
**/.pytest_cache
**/*.db
**/*.egg-info
**/*/repos/

=== File: node/documentation/worker/orca-agent/tests/e2e.py ===

-- Chunk 1 --
// e2e.py:12-19
def parse_args():
    parser = argparse.ArgumentParser(description="Run summarizer test sequence")
    parser.add_argument(
        "--reset",
        action="store_true",
        help="Force reset of all databases before running tests",
    )
    return parser.parse_args()

-- Chunk 2 --
// e2e.py:26-41
def main():
    global runner
    args = parse_args()

    # Import steps here to avoid circular imports
    from .steps import steps

    # Create test runner with config from YAML
    base_dir = Path(__file__).parent
    runner = TestRunner(
        steps=steps,
        config_file=base_dir / "config.yaml",
    )

    # Run test sequence
    runner.run(force_reset=args.reset)

=== File: node/documentation/worker/orca-agent/tests/workers.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/tests/workers.json:1-22
{
  "worker1": {
    "env_vars": {
      "GITHUB_TOKEN": "WORKER1_GITHUB_TOKEN",
      "GITHUB_USERNAME": "WORKER1_GITHUB_USERNAME"
    },
    "keypairs": {
      "staking": "WORKER1_STAKING_KEYPAIR",
      "main": "WORKER1_PUBLIC_KEYPAIR"
    }
  },
  "worker2": {
    "env_vars": {
      "GITHUB_TOKEN": "WORKER2_GITHUB_TOKEN",
      "GITHUB_USERNAME": "WORKER2_GITHUB_USERNAME"
    },
    "keypairs": {
      "staking": "WORKER2_STAKING_KEYPAIR",
      "main": "WORKER2_PUBLIC_KEYPAIR"
    }
  }
}

=== File: node/documentation/worker/orca-agent/tests/config.yaml ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/tests/config.yaml:1-22
# Test Configuration
task_id: "1111" # Task ID from config-task.yml
middle_server_url: "http://localhost:3000"
# collection used to determine the max_rounds, if the value is not directly set
rounds_collection: "documentations"
# base_port: 5000 # Base port for worker servers
# max_rounds: 1 # Maximum number of test rounds

# Paths
# relative to the test directory
data_dir: data/minimal # Directory containing test data
# workers_config: workers.json # Worker configuration file

# MongoDB Configuration
mongodb:
  database: builder247
  collections:
    documentations:
      data_file: documentations.json
      required_count: 1
    audits:
      required_count: 0 # No data file, just needs to exist

=== File: node/documentation/worker/orca-agent/tests/steps.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/tests/steps.py:1-66
"""Test step definitions."""

from prometheus_test import TestStep
from functools import partial
from .stages import (
    worker_fetch,
    worker_task,
    worker_pr,
    worker_submission,
    worker_check,
    worker_audit,
    update_audit,
)


steps = [
    TestStep(
        name="worker_fetch",
        description="Fetch worker task",
        prepare=worker_fetch.prepare,
        execute=worker_fetch.execute,
        worker="worker1",
    ),
    TestStep(
        name="worker_task",
        description="Execute worker task",
        prepare=worker_task.prepare,
        execute=worker_task.execute,
        worker="worker1",
    ),
    TestStep(
        name="worker_pr",
        description="Add PR to worker",
        prepare=worker_pr.prepare,
        execute=worker_pr.execute,
        worker="worker1",
    ),
    TestStep(
        name="worker_submission",
        description="Submit worker task",
        prepare=worker_submission.prepare,
        execute=worker_submission.execute,
        worker="worker1",
    ),
    TestStep(
        name="worker_check",
        description="Check worker task",
        prepare=worker_check.prepare,
        execute=worker_check.execute,
        worker="worker1",
    ),
    TestStep(
        name="worker_audit",
        description="Worker2 audits Worker1",
        prepare=partial(worker_audit.prepare, target_name="worker1"),
        execute=worker_audit.execute,
        worker="worker2",
    ),
    TestStep(
        name="update_audit",
        description="Update audit results",
        prepare=partial(update_audit.prepare, role="worker"),
        execute=update_audit.execute,
        worker="worker2",
    ),
]

=== File: node/documentation/worker/orca-agent/tests/stages/worker_pr.py ===

-- Chunk 1 --
// worker_pr.py:5-23
def prepare(runner, worker):
    pr_url = runner.get(f"pr_urls.{worker.get('name')}")
    if pr_url is None:
        print(f"✓ No pr_urls.{worker.get('name')} found - continuing")
        return None

    payload = {
        "taskId": runner.get("task_id"),
        "action": "add-todo-pr",
        "roundNumber": runner.get("current_round"),
        "prUrl": pr_url,
        "stakingKey": worker.get_key("staking_public"),
        "pubKey": worker.get_key("main_public"),
    }
    return {
        "signature": create_signature(worker.get_key("staking_signing"), payload),
        "stakingKey": worker.get_key("staking_public"),
    }


-- Chunk 2 --
// worker_pr.py:25-47
f execute(runner, worker, data):
    """Add worker PR URL to middle server"""

    if data is None:
        return {"success": True, "message": "Skipped due to missing PR URL"}

    url = f"{runner.get('middle_server_url')}/summarizer/worker/add-todo-pr"
    response = requests.post(
        url,
        json={"signature": data["signature"], "stakingKey": data["stakingKey"]},
    )
    result = response.json()

    # Handle 409 gracefully - no eligible todos is an expected case
    if response.status_code == 409:
        print(
            f"✓ {result.get('message', 'No eligible todos')} for {worker.get('name')} - continuing"
        )
        return {"success": True, "message": result.get("message")}
    else:
        response.raise_for_status()

    return result

=== File: node/documentation/worker/orca-agent/tests/stages/worker_fetch.py ===

-- Chunk 1 --
// worker_fetch.py:7-28
def prepare(runner, worker):
    """Prepare data for worker task"""
    # Create fetch-todo payload for stakingSignature and publicSignature
    payload = {
        "taskId": runner.get("task_id"),
        "roundNumber": runner.get("current_round"),
        "action": "fetch-todo",
        "githubUsername": worker.get_env("GITHUB_USERNAME"),
        "stakingKey": worker.get_key("staking_public"),
        "pubKey": worker.get_key("main_public"),
    }

    return {
        "taskId": runner.get("task_id"),
        "roundNumber": runner.get("current_round"),
        "stakingKey": worker.get_key("staking_public"),
        "pubKey": worker.get_key("main_public"),
        "stakingSignature": create_signature(
            worker.get_key("staking_signing"), payload
        ),
        "publicSignature": create_signature(worker.get_key("main_signing"), payload),
    }

-- Chunk 2 --
// worker_fetch.py:31-53
def execute(runner, worker, data):
    """Execute worker task step"""
    url = f"{runner.get('middle_server_url')}/summarizer/worker/fetch-todo"
    response = requests.post(
        url,
        json={"signature": data["stakingSignature"], "stakingKey": data["stakingKey"]},
    )
    result = response.json()

    # Handle 409 gracefully - no eligible todos is an expected case
    if response.status_code == 409:
        print(
            f"✓ {result.get('message', 'No eligible todos')} for {worker.get('name')} - continuing"
        )
        return {"success": True, "message": result.get("message")}
    else:
        response.raise_for_status()

    if result.get("success"):
        repo_url = f"https://github.com/{result['data']['repo_owner']}/{result['data']['repo_name']}"
        runner.set("repo_url", repo_url, scope="round")

    return result

=== File: node/documentation/worker/orca-agent/tests/stages/worker_audit.py ===

-- Chunk 1 --
// worker_audit.py:8-63
def prepare(runner, worker, target_name):
    """Prepare data for worker audit"""
    pr_url = runner.get(f"pr_urls.{target_name}")
    if pr_url is None:
        print(f"✓ No pr_urls.{target_name} found - continuing")
        return None

    submission_data = runner.get(f"submission_data.{target_name}")
    if submission_data is None:
        print(f"✓ No submission_data.{target_name} found - continuing")
        return None

    # Note: Commented out code is preserved as it may be needed in future
    # Create auditor payload which is used to generate the signature
    # auditor_payload = {
    #     "taskId": runner.get("task_id"),
    #     "roundNumber": runner.get("current_round"),
    #     "prUrl": pr_url,
    #     "stakingKey": worker.get_key("staking_public"),
    #     "pubKey": worker.get_key("main_public"),
    # }

    # Structure the payload according to what the server expects
    # return {
    #     "submission": {
    #         "taskId": runner.get("task_id"),
    #         "roundNumber": runner.get("current_round"),
    #         "prUrl": pr_url,
    #         "githubUsername": submission_data.get("githubUsername"),
    #         "repoOwner": submission_data.get("repoOwner"),
    #         "repoName": submission_data.get("repoName"),
    #         "stakingKey": submission_data.get("stakingKey"),
    #         "pubKey": submission_data.get("pubKey"),
    #         "uuid": submission_data.get("uuid"),
    #         "nodeType": submission_data.get("nodeType"),
    #     },
    #     "submitterSignature": submission_data.get("signature"),
    #     "submitterStakingKey": submission_data.get("stakingKey"),
    #     "submitterPubKey": submission_data.get("pubKey"),
    #     "prUrl": pr_url,
    #     "repoOwner": submission_data.get("repoOwner"),
    #     "repoName": submission_data.get("repoName"),
    #     "githubUsername": worker.get_env("GITHUB_USERNAME"),
    #     "stakingKey": worker.get_key("staking_public"),
    #     "pubKey": worker.get_key("main_public"),
    #     "stakingSignature": create_signature(
    #         worker.get_key("staking_signing"), auditor_payload
    #     ),
    #     "publicSignature": create_signature(
    #         worker.get_key("main_signing"), auditor_payload
    #     ),
    # }
    return {"submission": submission_data}


d

-- Chunk 2 --
// worker_audit.py:63-76
execute(runner, worker, data):
    """Execute worker audit step"""
    # If prepare returned None, skip this step
    if data is None:
        return {
            "success": True,
            "message": "Skipped due to missing PR URL or submission data",
        }

    url = f"{worker.get('url')}/worker-audit/{runner.get('current_round')}"
    response = requests.post(url, json=data)
    result = response.json()

    return result

=== File: node/documentation/worker/orca-agent/tests/stages/worker_submission.py ===

-- Chunk 1 --
// worker_submission.py:7-38
def prepare(runner, worker):
    """Prepare data for worker submission"""
    pr_url = runner.get(f"pr_urls.{worker.get('name')}")
    if pr_url is None:
        print(f"✓ No pr_urls.{worker.get('name')} found - continuing")
        return None

    # Get submission data from worker
    url = f"{worker.get('url')}/submission/{runner.get('current_round')}"
    response = requests.get(url)
    response.raise_for_status()
    submission_data = response.json()

    # Create signature for the submission
    submitter_payload = {
        "taskId": runner.get("task_id"),
        "roundNumber": runner.get("current_round"),
        "stakingKey": worker.get_key("staking_public"),
        "pubKey": worker.get_key("main_public"),
        "action": "audit",
        **submission_data,
    }

    return {
        **submission_data,
        "signature": create_signature(
            worker.get_key("staking_signing"), submitter_payload
        ),
        "stakingKey": worker.get_key("staking_public"),
        "pubKey": worker.get_key("main_public"),
    }


-- Chunk 2 --
// worker_submission.py:40-50
f execute(runner, worker, data):
    """Store worker submission data"""
    # If prepare returned None, skip this step
    if data is None:
        return {"success": True, "message": "Skipped due to missing PR URL"}

    # Store submission data in state
    runner.set(f"submission_data.{worker.get('name')}", data, scope="round")

    # Return success result
    return {"success": True, "data": data}

=== File: node/documentation/worker/orca-agent/tests/stages/worker_task.py ===

-- Chunk 1 --
// worker_task.py:8-35
def prepare(runner, worker):
    """Prepare data for worker task"""
    repo_url = runner.get("repo_url")
    if repo_url is None:
        print("✓ No repo_url found - continuing")
        return None

    # Generate UUID for this round
    uuid = str(uuid4())
    runner.set(f"uuid.{worker.get('name')}", uuid, scope="round")

    # Create podcall payload and signature
    podcall_payload = {
        "taskId": runner.get("task_id"),
        "roundNumber": runner.get("current_round"),
        "uuid": uuid,
    }
    podcall_signature = create_signature(
        worker.get_key("staking_signing"), podcall_payload
    )

    return {
        "task_id": runner.get("task_id"),
        "round_number": str(runner.get("current_round")),
        "repo_url": repo_url,
        "podcall_signature": podcall_signature,
    }


-- Chunk 2 --
// worker_task.py:37-60
f execute(runner, worker, data):
    """Execute worker task step"""
    if not data:
        return {"success": True, "message": "No repo url found"}
    url = f"{worker.get('url')}/worker-task/{runner.get('current_round')}"
    response = requests.post(url, json=data)
    result = response.json()

    # Handle 409 gracefully - no eligible todos is an expected case
    if response.status_code == 409:
        print(
            f"✓ {result.get('message', 'No eligible todos')} for {worker.get('name')} - continuing"
        )
        return {"success": True, "message": result.get("message")}

    if result.get("success") and "pr_url" in result["result"]["data"]:
        # Store PR URL in state
        runner.set(
            f"pr_urls.{worker.get('name')}",
            result["result"]["data"]["pr_url"],
            scope="round",
        )

    return result

=== File: node/documentation/worker/orca-agent/tests/stages/worker_check.py ===

-- Chunk 1 --
// worker_check.py:6-19
def prepare(runner, worker):
    """Prepare data for worker task"""
    pr_url = runner.get(f"pr_urls.{worker.get('name')}")
    if pr_url is None:
        print(f"✓ No pr_urls.{worker.get('name')} found - continuing")
        return None

    return {
        "stakingKey": worker.get_key("staking_public"),
        "roundNumber": runner.get("current_round"),
        "githubUsername": worker.get_env("GITHUB_USERNAME"),
        "prUrl": pr_url,
    }


-- Chunk 2 --
// worker_check.py:21-41
f execute(runner, worker, data):
    """Execute worker task step"""
    if not data:
        return {"success": True, "message": "No PR URL found"}
    url = f"{runner.get('middle_server_url')}/summarizer/worker/check-todo"
    response = requests.post(
        url,
        json=data,
    )
    result = response.json()

    # Handle 409 gracefully - no eligible todos is an expected case
    if response.status_code == 409:
        print(
            f"✓ {result.get('message', 'No eligible todos')} for {worker.get('name')} - continuing"
        )
        return {"success": True, "message": result.get("message")}
    else:
        response.raise_for_status()

    return result

=== File: node/documentation/worker/orca-agent/tests/stages/update_audit.py ===

-- Chunk 1 --
// update_audit.py:6-12
def prepare(runner, worker, role: str):
    """Prepare data for worker task"""

    return {
        "taskId": runner.get("task_id"),
        "round": runner.get("current_round"),
    }

-- Chunk 2 --
// update_audit.py:15-25
def execute(runner, worker, data):
    """Execute worker task step"""
    url = f"{runner.get('middle_server_url')}/summarizer/worker/update-audit-result"
    response = requests.post(
        url,
        json=data,
    )
    response.raise_for_status()

    # Return a formatted response regardless of type
    return {"success": True, "message": response.text}

=== File: node/documentation/worker/orca-agent/tests/data/node-test.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/tests/data/node-test.json:1-58
[
  {
    "repoOwner": "labrocadabro",
    "repoName": "ct-clone",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "vsvtrend",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "pulsetrade",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "torchfold",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "nearai",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "social-guidance",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "program_synthesis",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  },
  {
    "repoOwner": "labrocadabro",
    "repoName": "smart-contract-example",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized",
    "taskId": "2R71HVpiZb1uADhzKzHSpo4LBw5aTcqEmVeanxmAtAF7"
  }
]

=== File: node/documentation/worker/orca-agent/tests/data/minimal/documentations.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/tests/data/minimal/documentations.json:1-8
[
  {
    "repoOwner": "labrocadabro",
    "repoName": "ct-clone",
    "swarmBountyId": "67ef132f2272992e69a8478c",
    "status": "initialized"
  }
]

=== File: node/documentation/worker/orca-agent/src/types.py ===

-- Chunk 1 --
// types.py:4-12
class ToolDefinition(TypedDict):
    """Standard internal tool definition format."""

    name: str
    description: str
    parameters: Dict[str, str]  # JSON Schema object
    required: List[str]
    final_tool: bool
    function: Callable

-- Chunk 2 --
// types.py:15-20
class ToolCall(TypedDict):
    """Format for a tool call made by the LLM."""

    id: str  # Unique identifier for this tool call
    name: str  # name of tool being called
    arguments: Dict[str, Any]

-- Chunk 3 --
// types.py:23-33
class ToolOutput(TypedDict):
    """Standard output format for all tools.

    All tools must return a response in this format.
    The message field contains a human-readable description of what happened,
    which will be an error message if success is False.
    """

    success: bool  # Whether the tool execution was successful
    message: str  # Human-readable message about what happened (error message if success is False)
    data: Optional[Dict[str, Any]]  # Optional structured data from the tool

-- Chunk 4 --
// types.py:36-43
class ToolResponse(TypedDict):
    """Format for a tool execution response.

    Wraps a tool's output with its call ID for client handling.
    """

    tool_call_id: str  # ID of the tool call this is responding to
    output: ToolOutput  # The actual output from the tool

-- Chunk 5 --
// types.py:46-51
class PhaseResult(TypedDict):
    """Format for a phase result."""

    success: bool
    data: Dict[str, Any]
    error: Optional[str]

-- Chunk 6 --
// types.py:54-58
class ToolChoice(TypedDict):
    """Configuration for tool usage."""

    type: Literal["optional", "required", "required_any"]
    tool: Optional[str]  # Required only when type is "required"

-- Chunk 7 --
// types.py:61-65
class ToolConfig(TypedDict):
    """Configuration for tool usage."""

    tool_definitions: List[ToolDefinition]
    tool_choice: ToolChoice

-- Chunk 8 --
// types.py:68-72
class TextContent(TypedDict):
    """Format for plain text content."""

    type: Literal["text"]
    text: str

-- Chunk 9 --
// types.py:75-79
class ToolCallContent(TypedDict):
    """Format for tool call content."""

    type: Literal["tool_call"]
    tool_call: ToolCall

-- Chunk 10 --
// types.py:82-86
class ToolResponseContent(TypedDict):
    """Format for tool response content."""

    type: Literal["tool_response"]
    tool_response: ToolResponse

-- Chunk 11 --
// types.py:89-93
class MessageContent(TypedDict):
    """Standard internal message format."""

    role: Literal["user", "assistant", "system", "tool"]
    content: Union[str, List[Union[TextContent, ToolCall, ToolResponseContent]]]

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizer/workflow.py ===

-- Chunk 1 --
// workflow.py:28-49
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:52-201
class RepoSummarizerWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        repo_url,
        podcall_signature=None,
        task_id=None,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = repo_url.strip("/").split("/")
        repo_owner = parts[-2]
        repo_name = parts[-1]

        super().__init__(
            client=client,
            prompts=prompts,
            repo_url=repo_url,
            repo_owner=repo_owner,
            repo_name=repo_name,
            podcall_signature=podcall_signature,
            task_id=task_id,
        )

    def submit_draft_pr(self, pr_url):
        """Submit the draft PR."""
        try:
            response = requests.post(
                f"http://host.docker.internal:30017/task/{self.task_id}/add-todo-draft-pr",
                json={
                "prUrl": pr_url,
                "signature": self.podcall_signature,
                "swarmBountyId": self.swarmBountyId,
                "success": True,
                "message": "",
                },
            )
        except Exception as e:
            log_error(e, "Failed to submit draft PR")
            return {
                "success": False,
                "message": "Failed to submit draft PR",
                "data": None,
            }
    def setup(self):
        """Set up repository and workspace."""
        check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
        validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))

        # Get the default branch from GitHub
        try:
            gh = Github(os.getenv("GITHUB_TOKEN"))
            self.context["repo_full_name"] = (
                f"{self.context['repo_owner']}/{self.context['repo_name']}"
            )

            repo = gh.get_repo(
                f"{self.context['repo_owner']}/{self.context['repo_name']}"
            )
            self.context["base"] = repo.default_branch
            log_key_value("Default branch", self.context["base"])
        except Exception as e:
            log_error(e, "Failed to get default branch, using 'main'")
            self.context["base"] = "main"

        # Set up repository directory
        setup_result = setup_repository(
            self.context["repo_url"],
            github_token=os.getenv("GITHUB_TOKEN"),
            github_username=os.getenv("GITHUB_USERNAME"),
        )
        if not setup_result["success"]:
            raise Exception(f"Failed to set up repository: {setup_result['message']}")
        self.context["github_token"] = os.getenv("GITHUB_TOKEN")
        self.context["repo_path"] = setup_result["data"]["clone_path"]
        self.original_dir = setup_result["data"]["original_dir"]
        self.context["fork_url"] = setup_result["data"]["fork_url"]
        self.context["fork_owner"] = setup_result["data"]["fork_owner"]
        self.context["fork_name"] = setup_result["data"]["fork_name"]

        # Enter repo directory
        os.chdir(self.context["repo_path"])
        tools_build_result = self.build_tools_setup()
        if not tools_build_result:
            log_error(Exception("Failed to build tools setup"), "Failed to build tools setup")
            return {
                "success": False,
                "message": "Failed to build tools setup",
                "data": None,
            }
        # Configure Git user info
        # setup_git_user_config(self.context["repo_path"])

        # Get current files for context
    def build_tools_setup(self):
        index = index_repo(Path(self.context["repo_path"]))
        tools = build_tools_wrapper(index)
        return tools
    def cleanup(self):
        """Cleanup workspace."""
        # Make sure we're not in the repo directory before cleaning up
        if os.getcwd() == self.context.get("repo_path", ""):
            os.chdir(self.original_dir)

        # Clean up the repository directory
        cleanup_repository(self.original_dir, self.context.get("repo_path", ""))
        # Clean up the MongoDB

    def run(self):
        self.setup()
        # Create a feature branch
        log_section("CREATING FEATURE BRANCH")
        branch_phase = phases.BranchCreationPhase(workflow=self)
        branch_result = branch_phase.execute()

        if not branch_result or not branch_result.get("success"):
            log_error(Exception("Branch creation failed"), "Branch creation failed")
            return {
                "success": False,
                "message": "Branch creation failed",
                "data": None,
            }

        # Store branch name in context
        self.context["head"] = branch_result["data"]["branch_name"]
        log_key_value("Branch created", self.context["head"])
        try:
            commit_and_push(message="empty commit", allow_empty=True)
            draft_pr_result = self.create_pull_request()
            if draft_pr_result.get("success"):

                print("DRAFT PR RESULT", draft_pr_result)
                self.submit_draft_pr(draft_pr_result.get("data").get("pr_url"))
            else:
                return {
                    "success": False,
                    "message": "Failed to create pull request",
                    "data": None,
                }
        except Exception as e:
            log_error(e, "Failed to commit and push")
            return {
                "success": False,
                "message": "Failed to commit and push",
                "data": None,
            }
        
        # Classify repository
        repo_classification_result = self.classify_repository()

-- Chunk 3 --
// workflow.py:202-351
        if not repo_classification_result or not repo_classification_result.get(
            "success"
        ):
            log_error(
                Exception("Repository classification failed"),
                "Repository classification failed",
            )
            return {
                "success": False,
                "message": "Repository classification failed",
                "data": None,
            }

        # Get prompt name for README generation
        prompt_name = repo_classification_result["data"].get("repo_type")
        if not prompt_name:
            log_error(
                Exception("No prompt name returned from repository classification"),
                "Repository classification failed to provide prompt name",
            )
            return {
                "success": False,
                "message": "Repository classification failed to provide prompt name",
                "data": None,
            }

        # Generate README file
        for i in range(3):
            if i > 0:
                prompt_name = "other"
            readme_result = self.generate_readme_file(prompt_name)
            if not readme_result or not readme_result.get("success"):
                log_error(
                    Exception("README generation failed"), "README generation failed"
                )
                return {
                    "success": False,
                    "message": "README generation failed",
                    "data": None,
                }
            if readme_result.get("success"):
                review_result = self.review_readme_file(readme_result)
                if not review_result or not review_result.get("success"):
                    log_error(Exception("README review failed"), "README review failed")
                    return {
                        "success": False,
                        "message": "README review failed",
                        "data": None,
                    }
                log_key_value("README review result", review_result.get("data"))
                if (
                    review_result.get("success")
                    and review_result.get("data").get("recommendation") == "APPROVE"
                ):
                    result = self.create_pull_request()
                    return result
                else:
                    self.context["previous_review_comments_section"] = PROMPTS[
                        "previous_review_comments"
                    ] + review_result.get("data").get("comment")

        return {
            "success": False,
            "message": "README Review Exceed Max Attempts",
            "data": None,
        }

    def classify_repository(self):
        try:
            log_section("CLASSIFYING REPOSITORY TYPE")
            repo_classification_phase = phases.RepoClassificationPhase(workflow=self)
            return repo_classification_phase.execute()
        except Exception as e:
            log_error(e, "Repository classification workflow failed")
            return {
                "success": False,
                "message": f"Repository classification workflow failed: {str(e)}",
                "data": None,
            }

    def review_readme_file(self, readme_result):
        """Execute the issue generation workflow."""
        try:
            log_section("REVIEWING README FILE")
            review_readme_file_phase = phases.ReadmeReviewPhase(workflow=self)
            return review_readme_file_phase.execute()
        except Exception as e:
            log_error(e, "Readme file review workflow failed")
            return {
                "success": False,
                "message": f"Readme file review workflow failed: {str(e)}",
                "data": None,
            }

    def generate_readme_section(self, section):
        """Create the subsections of the README file."""

        self.context["section_name"] = section["name"]
        self.context["section_description"] = section["description"]

        try:

            # ==================== Generate README file ====================
            log_section("GENERATING README SECTION")
            generate_readme_section_phase = phases.ReadmeSectionGenerationPhase(
                workflow=self
            )
            readme_result = generate_readme_section_phase.execute()

            # Check README Generation Result


            log_key_value("README RESULT", readme_result)
            if not readme_result or not readme_result.get("success"):
                log_error(
                    Exception(readme_result.get("error", "No result")),
                    "Readme file generation failed",
                )
                return None

            return readme_result

        except Exception as e:
            log_error(e, "Readme file generation workflow failed")
            return {
                "success": False,
                "message": f"Readme file generation workflow failed: {str(e)}",
                "data": None,
            }

    def generate_readme_file(self, repo_type):
        """Generate the README file."""

        readme_sections_spec = (
            list(INITIAL_SECTIONS)
            # + list(DOCS_SECTIONS[repo_type])
            # + list(FINAL_SECTIONS)
        )

        self.context["repo_type"] = repo_type
        self.context["all_sections"] = ", ".join(
            [section["name"] for section in readme_sections_spec]
        )
        try:
            readme_sections = []
            for section in readme_sections_spec:
                readme_result = self.generate_readme_section(section)
                print("README RESULT", readme_result)
                if not readme_result or not readme_result.get("success"):
                    log_error(

-- Chunk 4 --
// workflow.py:352-410
                        Exception(readme_result.get("error", "No result")),
                        "Readme file generation failed",
                    )
                    return None

                readme_section_content = readme_result.get("data", {}).get(
                    "section_content"
                )
                if readme_section_content:
                    readme_section_title = readme_result.get("data", {}).get(
                        "section_name"
                    )

                    readme_section = (
                        f"## {readme_section_title}\n\n" f"{readme_section_content}"
                    )
                    readme_sections.append(readme_section)

            self.context["readme_content"] = "\n\n".join(readme_sections)

            generate_readme_file_phase = phases.ReadmeFileCreationPhase(workflow=self)
            return generate_readme_file_phase.execute()

        except Exception as e:
            log_error(e, "Readme file generation workflow failed")
            return {
                "success": False,
                "message": f"Readme file generation workflow failed: {str(e)}",
                "data": None,
            }

    def create_pull_request(self):
        """Create a pull request for the README file."""
        try:
            log_section("CREATING PULL REQUEST")

            # Add required PR title and description parameters to context
            self.context["title"] = (
                f"Prometheus: Add README for {self.context['repo_name']}"
            )
            self.context["description"] = (
                f"This PR adds a README file for the {self.context['repo_name']} repository."
            )

            log_key_value(
                "Creating PR",
                f"from {self.context['head']} to {self.context['base']}",
            )

            print("CONTEXT", self.context)
            create_pull_request_phase = phases.CreatePullRequestPhase(workflow=self)
            return create_pull_request_phase.execute()
        except Exception as e:
            log_error(e, "Pull request creation workflow failed")
            return {
                "success": False,
                "message": f"Pull request creation workflow failed: {str(e)}",
                "data": None,
            }

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizer/phases.py ===

-- Chunk 1 --
// phases.py:6-14
class BranchCreationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="create_branch",
            available_tools=["create_branch"],
            conversation_id=conversation_id,
            name="Branch Creation",
        )

-- Chunk 2 --
// phases.py:17-25
class RepoClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_repository",
            available_tools=["read_file", "search_code", "list_directory_contents", "classify_repository"],
            conversation_id=conversation_id,
            name="Repository Classification",
        )

-- Chunk 3 --
// phases.py:28-41
class ReadmeSectionGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_readme_section",
            available_tools=[
                "read_file",
                "search_code",
                "list_directory_contents", 
                "create_readme_section",
            ],
            conversation_id=conversation_id,
            name="Readme Section Generation",
        )

-- Chunk 4 --
// phases.py:44-52
class ReadmeFileCreationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_readme",
            required_tool="create_readme_file",
            conversation_id=conversation_id,
            name="Readme File Creation",
        )

-- Chunk 5 --
// phases.py:55-63
class ReadmeReviewPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="review_readme_file",
            available_tools=["read_file", "search_code", "list_directory_contents", "review_readme_file"],
            conversation_id=conversation_id,
            name="Readme Review",
        )

-- Chunk 6 --
// phases.py:66-74
class CreatePullRequestPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="create_pr",
            available_tools=["read_file", "search_code", "list_directory_contents", "create_pull_request_legacy"],
            conversation_id=conversation_id,
            name="Create Pull Request",
        )

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizer/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/src/workflows/repoSummarizer/prompts.py:1-97
"""Prompts for the repository summarization workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in summarizing "
        "repositories into comprehensive documentation. You excel at analyzing codebases "
        "and creating clear, structured documentation. Do NOT OVERLY READ THE REPO."
    ),
    "create_branch": (
        "You need to create a feature branch for the README generation.\n"
        "Create a new branch with a descriptive name related to creating a README file.\n"
    ),
    "classify_repository": (
        "A repository has been cloned locally for you. All files can be accessed relative to the current directory.\n"
        "Analyze the structure and identify the type of repository this is.\n"
        "Use the `classify_repository` tool to report your choice.\n"
        "You must choose one of the following repository types:\n"
        "- Library/SDK: Code meant to be imported and used by other developers\n"
        "- Web App: Frontend or full-stack web application\n"
        "- API Service: Server-side application providing APIs\n"
        "- Mobile App: Native or cross-platform mobile app\n"
        "- Tutorial: Educational repository demonstrating techniques\n"
        "- Template: Starter code for new projects\n"
        "- CLI Tool: Command-line interface application\n"
        "- Framework: Foundational structure for building applications\n"
        "- Data Science: Machine learning or data analysis project\n"
        "- Plugin: Extension or module for a larger system (e.g., CMS, IDE, platform)\n"
        "- Chrome Extension: Browser extension targeting the Chrome platform\n"
        "- Jupyter Notebook: Interactive code notebooks, often for demos or research\n"
        "- Infrastructure: Configuration or automation code (e.g., Docker, Terraform)\n"
        "- Smart Contract: Blockchain smart contracts, typically written in Solidity, Rust, etc.\n"
        "- DApp: Decentralized application with both smart contract and frontend components\n"
        "- Game: Codebase for a game or game engine (2D, 3D, or browser-based)\n"
        "- Desktop App: GUI application for desktop environments (e.g., Electron, Qt, Tauri)\n"
        "- Dataset: Repository containing structured data for analysis or training\n"
        "- Other: If it doesn't fit into any of the above categories\n"
        "IMPORTANT: Do not assume that the README is correct. "
        "Classify the repository based on the codebase.\n"
        "If files are mentioned in the README but are not present in the codebase, "
        "do NOT use them as a source of information.\n"
    ),
    "generate_readme_section": (
        "You are writing the {section_name} section of a README file for a repository.\n"
        "If you don't want to write a section, return an empty string.\n"
        "The repository has been cloned to the current directory and the files are available for inspection.\n"
        "The readme will contain the following sections:\n"
        "{all_sections}\n"
        "Restrict your documentation to the section you are writing.\n"
        "IMPORTANT: Read the existing readme.md file ONCE to understand the project, then proceed with writing your section.\n"
        "DO NOT read the same file multiple times. If you have read readme.md once, you have enough information.\n"
        "The section should include the following information:\n"
        "{section_description}\n"
        "Write the section in markdown format.\n"
        "The section name will be automatically added as a second level heading. "
        "DO NOT include it in your documentation. DO NOT include any second level headings.\n"
        "Any sub-sections you would like to add should be THIRD level headings or LOWER. "
        "Follow the proper hierarchy when choosing a heading level.\n"
        "IMPORTANT: DO NOT assume that any existing documentation is correct. It may be inaccurate or outdated.\n"
        "Create the documentation based SOLELY on the files actually present in the codebase.\n"
        "EXTREMELY IMPORTANT: If files are mentioned in the README but are not present in the codebase, "
        "do NOT mention them in your documentation. They do not exist and are not relevant.\n"
        "This is a public facing document, so DO NOTinclude any instructions or suggestions to the developer.\n"
    ),
    "generate_readme": (
        "Create a descriptive title for the following README contents and create the README file:\n"
        "{readme_content}\n"
        "The content will be added automatically, your job is just to create a good title."
    ),
    "create_pr": (
        "You are creating a pull request."
        "The repository has been cloned to the current directory.\n"
        "Use the `create_pull_request_legacy` tool to create the pull request.\n"
        "IMPORTANT: Always use relative paths (e.g., 'src/file.py' not '/src/file.py')\n\n"
        "Steps to create the pull request:\n"
        "1. First examine the available files to understand the implementation\n"
        "2. Create a clear and descriptive PR title\n"
        "3. Write a comprehensive PR description that includes:\n"
        "   - Description of all changes made\n"
        "   - The main features and value of the documentation\n"
    ),
    "review_readme_file": (
        "Review the README_Prometheus.md in the repository and evaluate its quality and "
        "relevance to the repository.\n\n"
        "Please analyze:\n"
        "1. Is the README_Prometheus.md file related to this specific repository? (Does it describe the actual code "
        "and purpose of this repo?)\n"
        "2. Does it correctly explain the repository's purpose, features, and functionality?\n"
        "3. Is it comprehensive enough to help users understand and use the repository?\n"
        "4. Does it follow best practices for README documentation?\n\n"
        "Use the `review_readme_file` tool to submit your findings.\n"
        # "IMPORTANT: Do not assume that an existing README is correct. "
        "Evaluate README_Prometheus.md against the codebase.\n"
        "DO NOT consider the filename in your analysis, only the content.\n"
        "STOP after submitting the review report."
    ),
    "previous_review_comments": ("Here are the comments from the previous review:\n"),
}

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizer/docs_sections.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/src/workflows/repoSummarizer/docs_sections.py:1-150
DOCS_SECTIONS = {
    "koii_task": [
        {
            "name": "Task Lifecycle",
            "description": "Explain how the task and audit stages work for this task\n\n",
        },
        {
            "name": "Reward System",
            "description": "Explain how rewards are distributed for this task\n\n",
        },
        {
            "name": "Task Variables",
            "description": "List all environment variables used in the task, as listed in config-task.yml\n\n",
        },
    ],
    "library": [
        {
            "name": "API Reference",
            "description": "Generate a complete list of all publicly exported functions, classes, and constants "
            "from the library\n"
            "For each item, include:\n"
            "- Its name\n"
            "- Description of what it does\n"
            "- Function signature with types and descriptions of parameters and return values\n"
            "- Example usage\n"
            "Do not omit any significant exports — include everything that would be relevant to a developer using "
            "this library\n"
            "Group related items (e.g., utility functions, configuration, components) under subsections if helpful\n",
        },
    ],
    "web_app": [
        {
            "name": "Deployment",
            "description": "Describe how to build and deploy the application to production\n"
            "Include relevant deployment commands and target platforms (e.g., Vercel, Netlify, Docker)\n\n",
        },
        {
            "name": "Feature Highlights",
            "description": "Describe core user-facing features or flows "
            "(e.g., authentication, dashboards, routing)\n\n",
        },
        {
            "name": "Configuration",
            "description": "Mention any configurable options, build settings, or plugins used\n\n",
        },
    ],
    "api_service": [
        {
            "name": "API Documentation",
            "description": "List the available endpoints or routes\n"
            "For each endpoint, include:\n"
            "Method (GET, POST, etc.)\n"
            "Path and parameters\n"
            "Example request and response\n"
            "Authentication requirements (if any)\n"
            "If an OpenAPI/Swagger spec or GraphQL schema exists, link to it\n\n",
        },
        {
            "name": "Authentication",
            "description": "Describe how authentication works (e.g., API keys, OAuth, JWT)\n"
            "Include example headers or auth flow steps if needed\n\n",
        },
        {
            "name": "Deployment",
            "description": "Describe how to deploy the service (e.g., Docker, CI/CD, cloud platforms)\n"
            "Include environment config or scaling considerations if relevant\n\n",
        },
    ],
    "mobile_app": [
        {
            "name": "Supported Platforms",
            "description": "Indicate whether the app runs on Android, iOS, or both\n"
            "Mention any platform-specific dependencies or limitations\n\n",
        },
        {
            "name": "Running the App",
            "description": "Show commands to run the app on a simulator/emulator or real device\n"
            "Include platform-specific commands if needed (e.g., `npx react-native run-ios`, `flutter run`)\n\n",
        },
        {
            "name": "Key Screens and Features",
            "description": "Highlight core screens or flows within the app (e.g., login, profile, dashboard)\n"
            "Optionally include screenshots or descriptions of user interactions\n\n",
        },
        {
            "name": "Build and Deployment",
            "description": "Provide steps for creating production builds\n"
            "Mention any tools or services used for distribution (e.g., TestFlight, Play Store, Expo)\n\n",
        },
    ],
    "tutorial": [
        {
            "name": "Tutorial Structure",
            "description": "Break down the tutorial into sections, stages, or lessons\n"
            "Briefly describe what each section teaches or builds\n"
            "Link to key files or folders associated with each part\n\n",
        },
        {
            "name": "Learning Outcomes",
            "description": "Clearly list the skills or concepts users will have mastered by the end\n\n",
        },
        {
            "name": "Code Examples and Exercises",
            "description": "Mention inline code snippets, checkpoints, or interactive examples\n"
            "If exercises are included, describe how users should complete or test them\n\n",
        },
        {
            "name": "Next Steps / Further Reading",
            "description": "Suggest where users can go after completing the tutorial\n"
            "Include links to additional docs, libraries, or related tutorials\n\n",
        },
    ],
    "template": (
        {
            "name": "Customization Guide",
            "description": "Explain which parts of the codebase are intended to be modified by users\n"
            "Offer guidance on how to rename, rebrand, or restructure parts of the template\n\n",
        },
        {
            "name": "Use Cases",
            "description": "Provide example scenarios where this template is useful "
            "(e.g., 'Use this for building a REST API with authentication')\n"
            "Link to live demos or projects built from this template if available\n\n",
        },
    ),
    "cli_tool": [
        {
            "name": "Usage",
            "description": "Show how to use the tool from the command line\n"
            "Include at least 2–3 example commands with explanations of the output\n"
            "Demonstrate the most common and useful flags or options\n"
            "If the tool supports subcommands, show examples of each\n\n",
        },
        {
            "name": "Command Reference",
            "description": "List all available commands, flags, and options in a table or list format\n"
            "Explain each option clearly, including defaults and accepted values\n\n",
        },
        {
            "name": "Configuration",
            "description": "Describe any optional or required configuration files (e.g., `.clirc`, `config.json`)\n"
            "Show example configurations and where to place them\n\n",
        },
    ],
    "framework": [
        {
            "name": "Core Concepts",
            "description": "Explain the main components or building blocks "
            "(e.g., modules, services, lifecycle, routing, etc.)\n"
            "Include diagrams or conceptual overviews if helpful\n\n",

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/src/workflows/repoSummarizer/docs_sections.py:151-300
        },
        {
            "name": "Extension Points",
            "description": "Describe how developers can extend the framework "
            "(e.g., plugins, middleware, custom components)\n"
            "Include examples of common extension use cases\n\n",
        },
        {
            "name": "Best Practices",
            "description": "Offer guidance for structuring large projects, writing maintainable code, or "
            "following framework conventions\n\n",
        },
    ],
    "data_science": [
        {
            "name": "Dataset",
            "description": "Describe the dataset used (source, size, structure)\n"
            "Include schema information or link to external data sources\n\n",
        },
        {
            "name": "Model Architecture and Training",
            "description": "Briefly describe the model(s) used and why they were chosen\n"
            "Include training scripts and command-line instructions\n\n",
        },
        {
            "name": "Evaluation and Results",
            "description": "Summarize how the model was evaluated and key performance metrics\n"
            "   - Include training scripts and command-line instructions\n"
            "   - Mention metrics used for evaluation\n\n",
        },
        {
            "name": "Inference / How to Use the Model",
            "description": "Explain how to run inference or apply the model to new data\n"
            "Include input/output formats and example commands or code\n\n",
        },
    ],
    "plugin": [
        {
            "name": "Usage",
            "description": "Show how to enable and configure the plugin\n"
            "Include code snippets or configuration steps\n\n",
        },
        {
            "name": "Integration Points",
            "description": "Describe hooks, lifecycle methods, or extension APIs the plugin interacts with\n\n",
        },
    ],
    "chrome_extension": [
        {
            "name": "Usage",
            "description": "Explain how users interact with the extension "
            "(e.g., popup UI, context menu, background scripts)\n"
            "Include example scenarios or screenshots if applicable\n\n",
        },
    ],
    "jupyter_notebook": [
        {
            "name": "Notebook Summary",
            "description": "List and briefly describe each notebook in the repo\n"
            "Mention whether they build on each other or are standalone\n\n",
        },
        {
            "name": "Dataset (if applicable)",
            "description": "Describe any datasets used and where they come from\n\n",
        },
    ],
    "infrastructure": [
        {
            "name": "Configuration Files",
            "description": "Explain the structure and purpose of major files (e.g., `main.tf`, `docker-compose.yml`, "
            "`playbooks/`)\n\n",
        },
        {
            "name": "Deployment Workflow",
            "description": "Describe how deployments are triggered and verified\n"
            "Mention any CI/CD pipelines, remote state management, or secrets handling\n\n",
        },
        {
            "name": "Environments",
            "description": "Clarify how to deploy to multiple environments (dev, staging, prod)\n\n",
        },
    ],
    "smart_contract": [
        {
            "name": "Contracts",
            "description": "Describe the main contract(s) and what each one does\n"
            "Include deployment steps and how to interact with them\n\n",
        },
        {
            "name": "Testing",
            "description": "Explain how to run tests and what framework is used\n\n",
        },
    ],
    "dapp": [
        {
            "name": "Architecture",
            "description": "Provide a high-level diagram or explanation of how the frontend "
            "interacts with smart contracts\n"
            "Mention key technologies used on both sides (e.g., React, Ethers.js, Anchor, Web3.js)\n\n",
        },
        {
            "name": "Smart Contracts",
            "description": "Describe the deployed contracts and how to interact with them\n"
            "Include deployment instructions and test commands\n\n",
        },
        {
            "name": "Frontend",
            "description": "Describe key UI components and user flows (e.g., connect wallet, mint token, submit vote)\n"
            "Mention any integrations with IPFS, oracles, or off-chain data\n\n",
        },
    ],
    "game": [
        {
            "name": "Controls and Gameplay",
            "description": "Explain player controls and core mechanics\n"
            "Optionally include screenshots, video, or demo links\n\n",
        },
    ],
    "desktop_app": [
        {
            "name": "Usage",
            "description": "Describe the app's main features and user workflows\n"
            "Include screenshots if applicable\n\n",
        },
    ],
    "dataset": [
        {
            "name": "Dataset Details",
            "description": "Describe the structure and format (e.g., CSV, JSON, images, text)\n"
            "Include column definitions, schema, or data dictionaries\n"
            "Mention the number of records, size, and any notable characteristics\n\n",
        },
        {
            "name": "Usage Instructions",
            "description": "Provide example code snippets for loading and using the dataset (e.g., pandas, SQL, etc.)\n"
            "Mention any preprocessing steps if needed\n\n",
        },
        {
            "name": "Related Work / Source Links",
            "description": "Link to original data sources, research papers, or related projects (if applicable)\n\n",
        },
    ],
    "other": [
        {
            "name": "Features / Capabilities",
            "description": "List the core features or components of the project\n"
            "Include relevant examples, demos, or configurations if applicable\n\n",
        },
        {
            "name": "Usage Examples",

-- Chunk 3 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/src/workflows/repoSummarizer/docs_sections.py:301-351
            "description": "Include example commands or steps showing how to use the project\n\n",
        },
    ],
}

INITIAL_SECTIONS = [
    {
        "name": "Project Overview",
        "description": "A concise description of what the codebase does\n"
        "- Its main purpose and the problems it solves\n"
        "- Key features and benefits\n\n",
    },
    {
        "name": "Getting Started, Installation, and Setup",
        "description": "Include a quick start guide with usage instructions. Leave detailed installation instructions "
        "to the Installation and Setup section.\n\n"
        "Provide all necessary instruction to install and use the project, including dependencies and "
        "platform-specific instructions (if applicable)\n"
        "Include steps for both running the app in development and building a production release (if applicable)\n\n",
    },
]

FINAL_SECTIONS = [
    {
        "name": "Project Structure",
        "description": "Describe the layout of the project, highlighting the purpose of key directories and files\n\n",
    },
    {
        "name": "Technologies Used",
        "description": "List the major technologies used in the project, including "
        "frameworks, libraries, SDKs, and tools\n\n",
    },
    {
        "name": "Additional Notes",
        "description": "Focus on making the README useful and descriptive, "
        "even if the project type is ambiguous\n"
        "- Use best judgment to tailor the content to the actual "
        "functionality and audience of the project\n"
        "- Avoid placeholder text and strive to extract real, useful information from the codebase",
    },
    {
        "name": "Contributing",
        "description": "Include basic instructions for how others can contribute\n"
        "- Mention any specific guidelines or requirements for contributions (e.g. code style, testing, etc.)\n\n",
    },
    {
        "name": "License",
        "description": "State the type of license and include a link to the license file\n\n"
        "If no license is mentioned, state that the code is unlicensed and explain the implications.",
    },
]

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizer/__main__.py ===

-- Chunk 1 --
// __main__.py:14-48
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Create tasks from a feature specification for a GitHub repository"
    )
    parser.add_argument(
        "--repo",
        type=str,
        required=True,
        help="GitHub repository URL (e.g., https://github.com/owner/repo)",
    )

    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )
    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = RepoSummarizerWorkflow(
        client=client,
        prompts=PROMPTS,
        repo_url=args.repo,
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Todo creator workflow failed")
        sys.exit(1)

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizerAudit/workflow.py ===

-- Chunk 1 --
// workflow.py:17-38
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:41-166
class repoSummarizerAuditWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        pr_url,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = pr_url.strip("/").split("/")
        repo_owner = parts[-4]
        repo_name = parts[-3]
        pr_number = int(parts[-1])  # Convert to integer
        super().__init__(
            client=client,
            prompts=prompts,
            repo_owner=repo_owner,
            repo_name=repo_name,
            pr_number=pr_number,
        )
        self.context["pr_number"] = pr_number
        self.context["pr_url"] = pr_url
        self.context["repo_owner"] = repo_owner
        self.context["repo_name"] = repo_name
        self.context["repo_full_name"] = f"{repo_owner}/{repo_name}"

    def setup(self):
        """Set up repository and workspace."""
        # Check required environment variables and validate GitHub auth
        check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
        validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))
        self.context["repo_url"] = (
            f"https://github.com/{self.context['repo_owner']}/{self.context['repo_name']}"
        )
        # Set up repository directory
        setup_result = setup_repository(
            self.context["repo_url"],
            github_token=os.getenv("GITHUB_TOKEN"),
            github_username=os.getenv("GITHUB_USERNAME"),
        )
        if not setup_result["success"]:
            raise Exception(f"Failed to set up repository: {setup_result['message']}")

        self.context["repo_path"] = setup_result["data"]["clone_path"]
        self.original_dir = setup_result["data"]["original_dir"]
        self.context["fork_url"] = setup_result["data"]["fork_url"]
        self.context["fork_owner"] = setup_result["data"]["fork_owner"]
        self.context["fork_name"] = setup_result["data"]["fork_name"]
        self.context["github_token"] = os.getenv("GITHUB_TOKEN")
        # Enter repo directory
        os.chdir(self.context["repo_path"])
        gh = Github(self.context["github_token"])
        repo = gh.get_repo(f"{self.context['repo_owner']}/{self.context['repo_name']}")
        pr = repo.get_pull(self.context["pr_number"])
        self.context["pr"] = pr
        # Add remote for PR's repository and fetch the branch
        os.system(
            f"git remote add pr_source https://github.com/{pr.head.repo.full_name}"
        )
        os.system(f"git fetch pr_source {pr.head.ref}")
        os.system("git checkout FETCH_HEAD")

        # Get current files for context
        self.context["current_files"] = get_current_files()

    def cleanup(self):
        """Cleanup workspace."""
        # Make sure we're not in the repo directory before cleaning up
        if os.getcwd() == self.context.get("repo_path", ""):
            os.chdir(self.original_dir)

        # Clean up the repository directory
        cleanup_repository(self.original_dir, self.context.get("repo_path", ""))
        # Clean up the MongoDB

    def run(self):
        check_readme_file_result = self.check_readme_file()

        return check_readme_file_result

    def check_readme_file(self):
        """Execute the issue generation workflow."""
        try:
            self.setup()
            # ==================== Generate issues ====================
            check_readme_file_phase = phases.CheckReadmeFilePhase(workflow=self)
            check_readme_file_result = check_readme_file_phase.execute()
            # Check Issue Generation Result
            if not check_readme_file_result or not check_readme_file_result.get(
                "success"
            ):
                log_error(
                    Exception(check_readme_file_result.get("error", "No result")),
                    "Readme file check failed",
                )
                return {
                    "success": False,
                    "message": "Readme file check failed",
                    "data": {
                        "is_approved": False,
                    },
                }
            log_section("Readme file check completed")
            print(check_readme_file_result)
            recommendation = check_readme_file_result["data"]["recommendation"]
            log_key_value(
                "Readme file check completed", f"Recommendation: {recommendation}"
            )
            # Star the repository
            return {
                "success": True,
                "message": "Readme file check completed",
                "data": {
                    "is_approved": recommendation == "APPROVE",
                },
            }
        except Exception as e:
            log_error(e, "Readme file check workflow failed")
            print(e)
            return {
                "success": False,
                "message": f"Readme file check workflow failed: {str(e)}",
                "data": {
                    "is_approved": False,
                },
            }

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizerAudit/phases.py ===

-- Chunk 1 --
// phases.py:6-14
class CheckReadmeFilePhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="check_readme_file",
            available_tools=["read_file",  "list_files", "review_pull_request_legacy"],
            conversation_id=conversation_id,
            name="Check Readme File",
        )

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizerAudit/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/orca-agent/src/workflows/repoSummarizerAudit/prompts.py:1-24
"""Prompts for the repository summarization workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in summarizing "
        "repositories into comprehensive documentation. You excel at analyzing codebases "
        "and creating clear, structured documentation."
    ),
    "check_readme_file": (
        "Review the README_Prometheus.md in the repository and evaluate its quality and "
        "relevance to the repository.\n\n"
        "Please analyze:\n"
        "1. Is the README_Prometheus.md file related to this specific repository? (Does it describe the actual code "
        "and purpose of this repo?)\n"
        "2. Does it correctly explain the repository's purpose, features, and functionality?\n"
        "3. Is it comprehensive enough to help users understand and use the repository?\n"
        "4. Does it follow best practices for README documentation?\n\n"
        "Use the `review_readme_file` tool to submit your findings.\n"
        # "IMPORTANT: Do not assume that an existing README is correct. "
        "Evaluate README_Prometheus.md against the codebase.\n"
        "DO NOT consider the filename in your analysis, only the content.\n"
        "STOP after submitting the review report."
    ),
}

=== File: node/documentation/worker/orca-agent/src/workflows/repoSummarizerAudit/__main__.py ===

-- Chunk 1 --
// __main__.py:14-48
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Create tasks from a feature specification for a GitHub repository"
    )
    parser.add_argument(
        "--pr-url",
        type=str,
        required=True,
        help="GitHub pull request URL (e.g., https://github.com/owner/repo/pull/1)",
    )

    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )
    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = repoSummarizerAuditWorkflow(
        client=client,
        prompts=PROMPTS,
        pr_url=args.pr_url,
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Todo creator workflow failed")
        sys.exit(1)

=== File: node/documentation/worker/orca-agent/src/server/__init__.py ===

-- Chunk 1 --
// __init__.py:17-74
def create_app():
    """Create and configure the Flask application."""
    app = Flask(__name__)

    # Add request ID middleware
    @app.before_request
    def before_request():
        request.id = str(uuid.uuid4())
        # Store request start time for duration calculation
        request.start_time = request.environ.get("REQUEST_TIME", 0)

    @app.after_request
    def after_request(response):
        # Calculate request duration
        duration = (request.environ.get("REQUEST_TIME", 0) - request.start_time) * 1000

        # Get error message if this is an error response
        error_msg = ""
        if response.status_code >= 400:
            try:
                json_data = response.get_json()
                if isinstance(json_data, dict):
                    error_msg = json_data.get("error") or json_data.get("message", "")
            except Exception:
                # If we can't get JSON data, try to get the message from the response
                error_msg = getattr(response, "description", "")

        # Log the request with appropriate color
        color = Fore.GREEN if response.status_code < 400 else Fore.RED
        log_value(
            f"[{color}REQ{Style.RESET_ALL}] {request.method} {request.path} "
            f"{color}{response.status_code}{Style.RESET_ALL} {error_msg} {duration}ms"
        )

        return response

    # Register blueprints
    app.register_blueprint(healthz.bp)
    app.register_blueprint(task.bp)
    app.register_blueprint(audit.bp)
    app.register_blueprint(submission.bp)

    # Configure logging within app context
    with app.app_context():
        # Set up logging (includes both console and database logging)
        configure_logging()
        # Initialize database
        initialize_database()
        # Disable Flask's default logging
        app.logger.disabled = True

        # Log startup information
        log_section("SERVER STARTUP")
        log_key_value("Workers", 1)
        log_key_value("Host", "0.0.0.0:8080")
        log_key_value("Database", os.getenv("DATABASE_PATH", "Not configured"))

    return app

=== File: node/documentation/worker/orca-agent/src/server/services/github_service.py ===

-- Chunk 1 --
// github_service.py:10-44
def verify_pr_ownership(
    pr_url,
    expected_username,
    expected_owner,
    expected_repo,
):
    try:
        gh = Github(os.environ.get("GITHUB_TOKEN"))

        match = re.match(r"https://github.com/([^/]+)/([^/]+)/pull/(\d+)", pr_url)
        if not match:
            logger.error(f"Invalid PR URL: {pr_url}")
            return False

        owner, repo_name, pr_number = match.groups()

        if owner != expected_owner or repo_name != expected_repo:
            logger.error(
                f"PR URL mismatch: {pr_url} != {expected_owner}/{expected_repo}"
            )
            return False

        repo = gh.get_repo(f"{owner}/{repo_name}")
        pr = repo.get_pull(int(pr_number))

        if pr.user.login != expected_username:
            logger.error(
                f"PR username mismatch: {pr.user.login} != {expected_username}"
            )
            return False
        return True

    except Exception as e:
        logger.error(f"Error verifying PR ownership: {str(e)}")
        return True

=== File: node/documentation/worker/orca-agent/src/server/services/audit_service.py ===

-- Chunk 1 --
// audit_service.py:13-40
def audit_repo(pr_url):
    # def review_pr(repo_urls, pr_url, github_username, star_only=True):
    """Review PR and decide if it should be accepted, revised, or rejected."""
    try:
        # Set up client and workflow
        client = setup_client("anthropic")

        # Below commented out because we won't need to distribute starring repo nodes
        # star_repo_workflow = StarRepoAuditWorkflow(
        #     client=client,
        #     prompts=STAR_REPO_AUDIT_PROMPTS,
        #     repo_url=repo_urls[0],
        #     github_username=github_username,
        # )
        # star_repo_workflow.run()

        repo_summerizer_audit_workflow = repoSummarizerAuditWorkflow(
            client=client,
            prompts=REPO_SUMMARIZER_AUDIT_PROMPTS,
            pr_url=pr_url,
        )

        # Run workflow and get result
        result = repo_summerizer_audit_workflow.run()
        return result
    except Exception as e:
        logger.error(f"PR review failed: {str(e)}")
        raise Exception("PR review failed")

=== File: node/documentation/worker/orca-agent/src/server/services/repo_summary_service.py ===

-- Chunk 1 --
// repo_summary_service.py:14-46
def handle_task_creation(task_id, swarmBountyId, repo_url, db=None, podcall_signature=None):
    """Handle task creation request."""
    try:
        if db is None:
            db = get_db()  # Fallback for direct calls
        client = setup_client("anthropic")

        workflow = RepoSummarizerWorkflow(
            client=client,
            prompts=PROMPTS,
            repo_url=repo_url,
            podcall_signature=podcall_signature,
            task_id=task_id,
        )

        result = workflow.run()
        if result.get("success"):
            # Convert swarmBountyId to integer
            submission = Submission(
                task_id=task_id,
                swarmBountyId=swarmBountyId,
                status="summarized",
                repo_url=repo_url,
                pr_url=result["data"]["pr_url"],
            )
            db.add(submission)
            db.commit()
            return {"success": True, "result": result}
        else:
            return {"success": False, "result": result.get("error", "No result")}
    except Exception as e:
        logger.error(f"Repo summarizer failed: {str(e)}")
        raise

=== File: node/documentation/worker/orca-agent/src/server/models/Log.py ===

-- Chunk 1 --
// Log.py:7-10
def init_logs_table():
    """Initialize the logs table if it doesn't exist."""
    # Not needed - handled by SQLModel
    pass

-- Chunk 2 --
// Log.py:13-65
def save_log(
    level: str,
    message: str,
    module: str = None,
    function: str = None,
    path: str = None,
    line_no: int = None,
    exception: str = None,
    stack_trace: str = None,
    request_id: str = None,
    additional_data: str = None,
) -> bool:
    """
    Save a log entry to the database.

    Args:
        level: Log level (ERROR, WARNING, INFO, etc)
        message: Log message
        module: Module name where log was generated
        function: Function name where log was generated
        path: File path where log was generated
        line_no: Line number where log was generated
        exception: Exception type if any
        stack_trace: Stack trace if any
        request_id: Request ID if available
        additional_data: Any additional JSON-serializable data

    Returns:
        bool: True if log was saved successfully
    """
    try:
        db = get_db()
        from prometheus_swarm.database import Log

        log = Log(
            timestamp=datetime.utcnow(),
            level=level,
            message=message,
            module=module,
            function=function,
            path=path,
            line_no=line_no,
            exception=exception,
            stack_trace=stack_trace,
            request_id=request_id,
            additional_data=additional_data,
        )
        db.add(log)
        db.commit()
        return True
    except Exception as e:
        print(f"Failed to save log to database: {e}")  # Fallback logging
        return False

=== File: node/documentation/worker/orca-agent/src/server/routes/task.py ===

-- Chunk 1 --
// task.py:16-41
def post_pr_url(agent_result, task_id, signature, swarmBountyId):
    try:
        result = agent_result.result()  # Get the result from the future
        logger.info(f"Result: {result}")
        result_data = result.get("result", {})
        logger.info(f"Result data: {result_data}")
        # Make a POST request with the result
        response = requests.post(
            f"http://host.docker.internal:30017/task/{task_id}/add-todo-pr",
            json={
                "prUrl": result_data.get("data", {}).get("pr_url"),
                "signature": signature,
                "swarmBountyId": swarmBountyId,
                "success": result.get("success", False),
                "message": result_data.get("error", ""),
            },
        )
        response.raise_for_status()  # Raise an error for bad responses
    except Exception as e:
        # Handle exceptions (e.g., log the error)
        logger.error(f"Failed to send result: {e}")
        logger.error(f"Exception type: {type(e)}")
        if hasattr(e, "__traceback__"):
            import traceback

            logger.error(f"Traceback: {''.join(traceback.format_tb(e.__traceback__))}")

-- Chunk 2 --
// task.py:45-93
def start_task():
    logger = repo_summary_service.logger
    # logger.info(f"Task started for bounty: {swarmBountyId}")

    data = request.get_json()
    task_id = data["task_id"]
    podcall_signature = data["podcall_signature"]
    repo_url = data["repo_url"]
    swarmBountyId = data["swarmBountyId"]
    logger.info(f"Task data: {data}")
    required_fields = ["task_id", "swarmBountyId", "repo_url", "podcall_signature"]
    if any(data.get(field) is None for field in required_fields):
        return jsonify({"error": "Missing data"}), 401

    # Check if this swarm bounty is already being processed
    if swarmBountyId in in_progress_tasks:
        return jsonify({"status": "Task is already being processed"}), 200

    # Get db instance in the main thread where we have app context
    db = get_db()

    if os.getenv("TEST_MODE") == "true":
        result = repo_summary_service.handle_task_creation(
            task_id=task_id,
            swarmBountyId=swarmBountyId,
            repo_url=repo_url,
            db=db,  # Pass db instance
            podcall_signature=podcall_signature,
        )
        return jsonify(result)
    else:
        # Mark this swarm bounty as in progress
        in_progress_tasks.add(swarmBountyId)
        
        def cleanup_callback(future):
            # Remove from in-progress tasks when done
            in_progress_tasks.discard(swarmBountyId)
            # Call the original callback
            post_pr_url(future, task_id, podcall_signature, swarmBountyId)

        agent_result = executor.submit(
            repo_summary_service.handle_task_creation,
            task_id=task_id,
            swarmBountyId=swarmBountyId,
            repo_url=repo_url,
            db=db,  # Pass db instance
        )
        agent_result.add_done_callback(cleanup_callback)
        return jsonify({"status": "Task is being processed"}), 200

=== File: node/documentation/worker/orca-agent/src/server/routes/audit.py ===

-- Chunk 1 --
// audit.py:12-78
def audit_submission(round_number: int):
    logger.info("Auditing submission")

    data = request.get_json()
    submission = data.get("submission")

    if not submission:
        return (
            jsonify({"success": False, "data": {"error": "Missing submission"}}),
            400,
        )

    # submission_round_number = submission.get("roundNumber")
    task_id = submission.get("taskId")
    pr_url = submission.get("prUrl")
    github_username = submission.get("githubUsername")

    # Extract repo owner and name from PR URL
    try:
        pr_url_parts = pr_url.split("github.com/")[1].split("/")
        repo_owner = pr_url_parts[0]
        repo_name = pr_url_parts[1]
    except (IndexError, AttributeError):
        return (
            jsonify({"success": False, "data": {"error": "Invalid PR URL format"}}),
            400,
        )
    print(f"Repo owner: {repo_owner}, Repo name: {repo_name}")
    # if int(round_number) != submission_round_number:
    #     return (
    #         jsonify({"success": False, "data": {"error": "Round number mismatch"}}),
    #         400,
    #     )

    if (
        not task_id
        or not pr_url
        or not github_username
        or not repo_owner
        or not repo_name
    ):
        return (
            jsonify({"success": False, "data": {"error": "Missing submission data"}}),
            400,
        )

    is_valid = verify_pr_ownership(
        pr_url=pr_url,
        expected_username=github_username,
        expected_owner=repo_owner,
        expected_repo=repo_name,
    )

    if not is_valid:
        return jsonify({"success": True, "data": {"is_approved": False}}), 200

    try:
        result = audit_repo(pr_url)
        return jsonify(result), 200
    except Exception as e:
        logger.error(f"Error auditing PR: {str(e)}")
        return jsonify({
            "success": False,
            "data": {
                "error": str(e)
            }
        }), 500

=== File: node/documentation/worker/orca-agent/src/server/routes/healthz.py ===

-- Chunk 1 --
// healthz.py:11-14
def healthz():
    # Test database connection
    _ = get_db()
    return jsonify({"status": "ok"})

=== File: node/documentation/worker/orca-agent/src/server/routes/submission.py ===

-- Chunk 1 --
// submission.py:13-38
def fetch_submission(swarmBountyId):
    logger.info(f"Fetching submission for swarmBountyId: {swarmBountyId}")
    db = get_db()
    submission = (
        db.query(Submission)
        .filter(
            Submission.swarmBountyId == swarmBountyId,
        )
        .first()
    )
    logger.info(f"Submission: {submission}")
    logger.info(f"Submission: {submission}")
    if submission:

        github_username = os.getenv("GITHUB_USERNAME")
        return jsonify(
            {
                "taskId": submission.task_id,
                "swarmBountyId": submission.swarmBountyId,
                "status": submission.status,
                "prUrl": submission.pr_url,
                "githubUsername": github_username,
            }
        )
    else:
        return jsonify({"error": "Submission not found"}), 409

=== File: node/documentation/worker/orca-agent/src/database/models.py ===

-- Chunk 1 --
// models.py:9-20
class Submission(SQLModel, table=True):
    """Task submission model."""

    task_id: str
    swarmBountyId: str = Field(primary_key=True)
    status: str = "pending"
    pr_url: Optional[str] = None
    username: Optional[str] = None
    repo_urls: Optional[dict] = Field(
        default=None, sa_column=Column(JSON)
    )  # Store as JSON type
    repo_url: Optional[str] = None

=== File: node/documentation/worker/tests/simulateTask.ts ===

-- Chunk 1 --
// simulateTask.ts:15-17
function sleep(ms: number) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

-- Chunk 2 --
// simulateTask.ts:19-83
async function executeTasks() {
  const keypair = Keypair.generate();
  await namespaceWrapper.stakeOnChain(keypair.publicKey, keypair, keypair.publicKey, 10000);
  for (let round = 0; round < numRounds; round++) {
    const taskStartTime = Date.now();
    await taskRunner.task(round);
    const taskEndTime = Date.now();
    TASK_TIMES.push(taskEndTime - taskStartTime);
    await sleep(functionDelay);

    const taskSubmissionStartTime = Date.now();
    await taskRunner.submitTask(round);
    const taskSubmissionEndTime = Date.now();
    SUBMISSION_TIMES.push(taskSubmissionEndTime - taskSubmissionStartTime);
    await sleep(functionDelay);

    const auditStartTime = Date.now();
    await taskRunner.auditTask(round);
    const auditEndTime = Date.now();
    AUDIT_TIMES.push(auditEndTime - auditStartTime);
    await sleep(functionDelay);

    await taskRunner.selectAndGenerateDistributionList(round);
    await sleep(functionDelay);

    await taskRunner.auditDistribution(round);

    if (round < numRounds - 1) {
      await sleep(roundDelay);
    }
  }
  console.log("TIME METRICS BELOW");
  function metrics(name: string, times: number[]) {
    const average = (arr: number[]) => arr.reduce((a, b) => a + b, 0) / arr.length;
    const formatTime = (ms: number) => (ms / 1000).toFixed(4);
    const formatSlot = (ms: number) => Math.ceil(ms / 408);
    const min = Math.min(...times);
    const max = Math.max(...times);
    const avg = average(times);
    const timeMin = formatTime(min);
    const timeMax = formatTime(max);
    const timeAvg = formatTime(avg);
    const slotMin = formatSlot(min);
    const slotMax = formatSlot(max);
    const slotAvg = formatSlot(avg);

    return {
      Metric: `SIMULATED ${name} WINDOW`,
      "Avg Time (s)": timeAvg,
      "Avg Slots": slotAvg,
      "Min Time (s)": timeMin,
      "Min Slots": slotMin,
      "Max Time (s)": timeMax,
      "Max Slots": slotMax,
    };
  }
  const timeMetrics = metrics("TASK", TASK_TIMES);
  const submissionMetrics = metrics("SUBMISSION", SUBMISSION_TIMES);
  const auditMetrics = metrics("AUDIT", AUDIT_TIMES);

  console.table([timeMetrics, submissionMetrics, auditMetrics]);

  console.log("All tasks executed. Test completed.");
  process.exit(0);
}

=== File: node/documentation/worker/tests/README.md ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/README.md:1-73
# Summarizer Task Tests

This directory contains end-to-end tests for the summarizer task using the Prometheus test framework.

## Structure

```
tests/
├── config.yaml           # Test configuration
├── workers.json         # Worker configuration
├── data/               # Test data
│   ├── todos.json     # Sample todo items
│   └── issues.json    # Sample issues
├── stages/            # Test stages implementation
├── e2e.py            # Test runner script
└── steps.py          # Test steps definition
```

## Prerequisites

1. Install the test framework:

```bash
pip install -e test-framework/
```

2. Set up environment variables in `.env`:

```
ANTHROPIC_API_KEY=your_test_key
GITHUB_USERNAME=your_test_username
GITHUB_TOKEN=your_test_token
```

## Running Tests

To run the tests:

```bash
python -m tests.e2e
```

To force reset databases before running:

```bash
python -m tests.e2e --reset
```

## Test Flow

1. API Key Validation

   - Validates Anthropic API key

2. GitHub Validation

   - Validates GitHub credentials

3. Todo Management

   - Fetches todos for each worker
   - Generates summaries
   - Submits results

4. Audit Process
   - Workers audit each other's submissions

## Adding New Tests

1. Create a new stage in `stages/`
2. Add stage to `stages/__init__.py`
3. Add test step in `steps.py`
4. Update test data in `data/` if needed

=== File: node/documentation/worker/tests/webpack.config.js ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/webpack.config.js:1-31
import path from "path";
import Dotenv from "dotenv-webpack";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export default {
  mode: "development",
  entry: "./src/index.ts",
  output: {
    filename: "main.js",
    path: path.resolve(__dirname, "dist"),
    libraryTarget: "commonjs2",
  },
  target: "node",
  resolve: {
    extensions: [".ts", ".js"],
  },
  module: {
    rules: [
      {
        test: /\.ts$/,
        use: "ts-loader",
        exclude: /node_modules/,
      },
    ],
  },
  devtool: "source-map",
  plugins: [new Dotenv()],
};

=== File: node/documentation/worker/tests/workers.json ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/workers.json:1-29
{
  "worker1": {
    "port": 5001,
    "env": {
      "WORKER_ID": "worker1",
      "ANTHROPIC_API_KEY": "test_key",
      "GITHUB_USERNAME": "test_user",
      "GITHUB_TOKEN": "test_token"
    }
  },
  "worker2": {
    "port": 5002,
    "env": {
      "WORKER_ID": "worker2",
      "ANTHROPIC_API_KEY": "test_key",
      "GITHUB_USERNAME": "test_user",
      "GITHUB_TOKEN": "test_token"
    }
  },
  "leader": {
    "port": 5000,
    "env": {
      "WORKER_ID": "leader",
      "ANTHROPIC_API_KEY": "test_key",
      "GITHUB_USERNAME": "test_user",
      "GITHUB_TOKEN": "test_token"
    }
  }
}

=== File: node/documentation/worker/tests/debugger.ts ===

-- Chunk 1 --
// debugger.ts:8-81
class Debugger {
  /*
  Create .env file with following variables or directly input values to be used in live-debugging mode.
  */
  static taskID = TASK_ID;
  static webpackedFilePath = WEBPACKED_FILE_PATH;
  static keywords = TEST_KEYWORDS;
  static nodeDir: string;

  static async getConfig() {
    Debugger.nodeDir = await this.getNodeDirectory();

    let destinationPath = "executables/" + (await this.getAuditProgram()) + ".js";
    let logPath = "namespace/" + TASK_ID + "/task.log";

    console.log("Debugger.nodeDir", Debugger.nodeDir);

    return {
      webpackedFilePath: Debugger.webpackedFilePath,
      destinationPath: destinationPath,
      keywords: Debugger.keywords,
      logPath: logPath,
      nodeDir: Debugger.nodeDir,
      taskID: Debugger.taskID,
    };
  }

  static async getNodeDirectory() {
    if (Debugger.nodeDir) {
      return Debugger.nodeDir;
    }
    const homeDirectory = os.homedir();
    let nodeDirectory: string;

    switch (os.platform()) {
      case "linux":
        nodeDirectory = path.join(homeDirectory, ".config", "KOII-Desktop-Node");
        break;
      case "darwin":
        nodeDirectory = path.join(homeDirectory, "Library", "Application Support", "KOII-Desktop-Node");
        break;
      default:
        // Windows is the default
        nodeDirectory = path.join(homeDirectory, "AppData", "Roaming", "KOII-Desktop-Node");
    }

    return nodeDirectory;
  }

  static async getAuditProgram() {
    const connection = new Connection("https://mainnet.koii.network");
    const taskId = Debugger.taskID;
    const accountInfo = await connection.getAccountInfo(new PublicKey(taskId));
    if (!accountInfo?.data) {
      console.log(`${taskId} doesn't contain any distribution list data`);
      return null;
    }
    let data;
    const owner = accountInfo.owner.toBase58();
    if (owner === "Koiitask22222222222222222222222222222222222") {
      data = JSON.parse(accountInfo.data.toString());
    } else if (owner === "KPLTRVs6jA7QTthuJH2cEmyCEskFbSV2xpZw46cganN") {
      const buffer = accountInfo.data;
      data = borsh_bpf_js_deserialize(buffer);
      data = parseTaskState(data);
    } else {
      console.error(`Not a valid Task ID ${taskId}`);
      return null;
    }

    console.log("data.task_audit_program", data.task_audit_program);
    return data.task_audit_program;
  }
}

-- Chunk 2 --
// debugger.ts:83-93
function parseTaskState(taskState: any) {
  taskState.stake_list = objectify(taskState.stake_list, true);
  taskState.ip_address_list = objectify(taskState.ip_address_list, true);
  taskState.distributions_audit_record = objectify(taskState.distributions_audit_record, true);
  taskState.distributions_audit_trigger = objectify(taskState.distributions_audit_trigger, true);
  taskState.submissions = objectify(taskState.submissions, true);
  taskState.submissions_audit_trigger = objectify(taskState.submissions_audit_trigger, true);
  taskState.distribution_rewards_submission = objectify(taskState.distribution_rewards_submission, true);
  taskState.available_balances = objectify(taskState.available_balances, true);
  return taskState;
}

-- Chunk 3 --
// debugger.ts:95-110
function objectify(data: any, recursive = false) {
  if (data instanceof Map) {
    const obj = Object.fromEntries(data);
    if (recursive) {
      for (const key in obj) {
        if (obj[key] instanceof Map) {
          obj[key] = objectify(obj[key], true);
        } else if (typeof obj[key] === "object" && obj[key] !== null) {
          obj[key] = objectify(obj[key], true);
        }
      }
    }
    return obj;
  }
  return data;
}

=== File: node/documentation/worker/tests/config.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/config.ts:1-8
import "dotenv/config";

export const TASK_ID = process.env.TASK_ID || "BXbYKFdXZhQgEaMFbeShaisQBYG1FD4MiSf9gg4n6mVn";
export const WEBPACKED_FILE_PATH = process.env.WEBPACKED_FILE_PATH || "../dist/main.js";

const envKeywords = process.env.TEST_KEYWORDS ?? "";

export const TEST_KEYWORDS = envKeywords ? envKeywords.split(",") : ["TEST", "EZ TESTING"];

=== File: node/documentation/worker/tests/prod-debug.ts ===

-- Chunk 1 --
// prod-debug.ts:11-15
function startWatching(): void {
  console.log("Watching for file changes...");
  // watch and trigger builds
  build();
}

-- Chunk 2 --
// prod-debug.ts:18-33
function build(): void {
  console.log("Building...");
  const child = spawn("npm", ["run", "webpack:test"], {
    stdio: "inherit",
  });

  child.on("close", (code: number) => {
    if (code !== 0) {
      console.error("Build failed");
    } else {
      console.log("Build successful");
      copyWebpackedFile();
    }
    return;
  });
}

-- Chunk 3 --
// prod-debug.ts:36-61
async function copyWebpackedFile(): Promise<void> {
  const debugConfig = await Debugger.getConfig();
  console.log("debugConfig", debugConfig);
  const nodeDIR = debugConfig.nodeDir;
  const sourcePath = path.join(__dirname, debugConfig.webpackedFilePath);
  const desktopNodeExecutablePath = path.join(nodeDIR, debugConfig.destinationPath);
  const desktopNodeLogPath = path.join(nodeDIR, debugConfig.logPath);
  const keywords = debugConfig.keywords;
  const taskID = debugConfig.taskID;

  if (!sourcePath || !desktopNodeExecutablePath) {
    console.error("Source path or destination path not specified in .env");
    return;
  }

  console.log(`Copying webpacked file from ${sourcePath} to ${desktopNodeExecutablePath}...`);

  fs.copyFile(sourcePath, desktopNodeExecutablePath, async (err) => {
    if (err) {
      console.error("Error copying file:", err);
    } else {
      console.log("File copied successfully");
      tailLogs(desktopNodeLogPath, keywords, taskID);
    }
  });
}

-- Chunk 4 --
// prod-debug.ts:64-108
async function tailLogs(desktopNodeLogPath: string, keywords: string[], taskID: string): Promise<void> {
  console.log("Watching logs for messages containing ", keywords);

  // Extract the directory path from the full log file path
  const dirPath = path.dirname(desktopNodeLogPath);

  // Check if the directory exists, create it if it doesn't
  try {
    await fs.promises.access(dirPath, fs.constants.F_OK);
  } catch (dirErr) {
    console.log(
      "Unable to find task directory. Please make sure you have the correct task ID set in your .env file, and run the task on the Desktop Node before running prod-debug.",
    );
    process.exit(1);
  }

  // Ensure the log file exists, or create it if it doesn't
  try {
    await fs.promises.access(desktopNodeLogPath, fs.constants.F_OK);
  } catch (err) {
    console.log(`Log file not found, creating ${desktopNodeLogPath}`);
    await fs.promises.writeFile(desktopNodeLogPath, "", { flag: "a" }); // 'a' flag ensures the file is created if it doesn't exist and not overwritten if it exists
  }

  let tail = new Tail(desktopNodeLogPath, {
    separator: "\n",
    flushAtEOF: true,
  });

  console.warn(
    `Now watching logs for messages containing ${keywords.join(",")}. Please start the task ${taskID} and keep it running on the Desktop Node.`,
  );

  tail.on("line", (data: string) => {
    if (keywords.some((keyword) => data.includes(keyword))) {
      console.log(chalk.magenta(data));
    } else {
      console.log(data);
    }
  });

  +tail.on("error", (error: Error) => {
    console.log("ERROR: ", error);
  });
}

=== File: node/documentation/worker/tests/main.test.ts ===

-- Chunk 1 --
// main.test.ts:12-22
async () => {
  await namespaceWrapper.defaultTaskSetup();
  initializeTaskManager({
    setup,
    task,
    submission,
    audit,
    distribution,
    routes,
  });
}

-- Chunk 2 --
// main.test.ts:24-173
() => {
  it("should performs the core logic task", async () => {
    const round = 1;
    await taskRunner.task(round);
    const value = await namespaceWrapper.storeGet("value");
    expect(value).toBeDefined();
    expect(value).not.toBeNull();
  });

  it("should make the submission to k2 for dummy round 1", async () => {
    const round = 1;
    await taskRunner.submitTask(round);
    const taskState = await namespaceWrapper.getTaskState({});
    const schema = Joi.object()
      .pattern(
        Joi.string(),
        Joi.object().pattern(
          Joi.string(),
          Joi.object({
            submission_value: Joi.string().required(),
            slot: Joi.number().integer().required(),
            round: Joi.number().integer().required(),
          }),
        ),
      )
      .required()
      .min(1);
    const validationResult = schema.validate(taskState?.submissions);
    try {
      expect(validationResult.error).toBeUndefined();
    } catch (e) {
      throw new Error("Submission doesn't exist or is incorrect");
    }
  });

  it("should make an audit on submission", async () => {
    const round = 1;
    await taskRunner.auditTask(round);
    const taskState = await namespaceWrapper.getTaskState({});
    console.log("TASK STATE", taskState);
    console.log("audit task", taskState?.submissions_audit_trigger);
    const schema = Joi.object()
      .pattern(
        Joi.string(),
        Joi.object().pattern(
          Joi.string(),
          Joi.object({
            trigger_by: Joi.string().required(),
            slot: Joi.number().integer().required(),
            votes: Joi.array().required(),
          }),
        ),
      )
      .required();
    const validationResult = schema.validate(taskState?.submissions_audit_trigger);
    try {
      expect(validationResult.error).toBeUndefined();
    } catch (e) {
      throw new Error("Submission audit is incorrect");
    }
  });
  it("should make the distribution submission to k2 for dummy round 1", async () => {
    const round = 1;
    await taskRunner.submitDistributionList(round);

    const taskState = await namespaceWrapper.getTaskState({});
    const schema = Joi.object()
      .pattern(
        Joi.string(),
        Joi.object().pattern(
          Joi.string(),
          Joi.object({
            submission_value: Joi.string().required(),
            slot: Joi.number().integer().required(),
            round: Joi.number().integer().required(),
          }),
        ),
      )
      .required()
      .min(1);
    console.log("Distribution submission", taskState?.distribution_rewards_submission);
    const validationResult = schema.validate(taskState?.distribution_rewards_submission);
    try {
      expect(validationResult.error).toBeUndefined();
    } catch (e) {
      throw new Error("Distribution submission doesn't exist or is incorrect");
    }
  });
  it("should make an audit on distribution submission", async () => {
    const round = 1;
    await taskRunner.auditDistribution(round);
    const taskState = await namespaceWrapper.getTaskState({});
    console.log("audit task", taskState?.distributions_audit_trigger);
    const schema = Joi.object()
      .pattern(
        Joi.string(),
        Joi.object().pattern(
          Joi.string(),
          Joi.object({
            trigger_by: Joi.string().required(),
            slot: Joi.number().integer().required(),
            votes: Joi.array().required(),
          }),
        ),
      )
      .required();
    const validationResult = schema.validate(taskState?.distributions_audit_trigger);
    try {
      expect(validationResult.error).toBeUndefined();
    } catch (e) {
      throw new Error("Distribution audit is incorrect");
    }
  });

  it("should make sure the submitted distribution list is valid", async () => {
    const round = 1;
    const distributionList = await namespaceWrapper.getDistributionList("", round);
    console.log("Generated distribution List", JSON.parse(distributionList.toString()));
    const schema = Joi.object().pattern(Joi.string().required(), Joi.number().integer().required()).required();
    const validationResult = schema.validate(JSON.parse(distributionList.toString()));
    console.log(validationResult);
    try {
      expect(validationResult.error).toBeUndefined();
    } catch (e) {
      throw new Error("Submitted distribution list is not valid");
    }
  });

  it("should test the endpoint", async () => {
    const response = await axios.get("http://localhost:3000");
    expect(response.status).toBe(200);
    expect(response.data).toEqual({ message: "Running", status: 200 });
  });

  it("should generate a empty distribution list when submission is 0", async () => {
    const submitters: Submitter[] = [];
    const bounty = Math.floor(Math.random() * 1e15) + 1;
    const roundNumber = Math.floor(Math.random() * 1e5) + 1;
    const distributionList = await distribution(submitters, bounty, roundNumber);
    expect(distributionList).toEqual({});
  });

  it("should generate a distribution list contains all the submitters", async () => {
    const simulatedSubmitters = 5;
    const submitters: Submitter[] = [];
    // 10k is the rough maximum number of submitters
    for (let i = 0; i < simulatedSubmitters; i++) {
      const publicKey = `mockPublicKey${i}`;
      submitters.push({
        publicKey,

-- Chunk 3 --
// main.test.ts:174-184
        votes: Math.floor(Math.random() * simulatedSubmitters) - 5000,
        stake: Math.floor(Math.random() * 1e9) + 1,
      });
    }
    const bounty = Math.floor(Math.random() * 1e15) + 1;
    const roundNumber = 1;
    const distributionList = await distribution(submitters, bounty, roundNumber);
    expect(Object.keys(distributionList).length).toBe(submitters.length);
    expect(Object.keys(distributionList).sort()).toEqual(submitters.map((submitter) => submitter.publicKey).sort());
  });
}

-- Chunk 4 --
// main.test.ts:186-188
async () => {
  _server.close();
}

=== File: node/documentation/worker/tests/test.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/test.ts:1-19
// async function testSlackWebhook(){
//     const slackResponse = await fetch('https://hooks.slack.com/services/', {
//     method: "POST",
//     headers: {
//       "Content-Type": "application/json",
//     },
//     body: JSON.stringify({
//       text: `[TASK] Error summarizing issue:\n ${JSON.stringify({
//         status: "error",
//         data: {
//           message: "test"
//         }
//       })}`
//     }),
//   });
//   console.log("[TASK] slackResponse: ", slackResponse);
// }

// testSlackWebhook();

=== File: node/documentation/worker/tests/stages/generate_summary.py ===

-- Chunk 1 --
// generate_summary.py:7-17
async def prepare(context: Context):
    """Prepare for generating summary."""
    staking_key = context.env.get("WORKER_ID")
    todo = await context.storeGet(f"todo-{staking_key}")

    return {
        "staking_key": staking_key,
        "round_number": context.round_number,
        "repo_owner": todo.get("repo_owner"),
        "repo_name": todo.get("repo_name"),
    }

-- Chunk 2 --
// generate_summary.py:20-47
async def execute(context: Context, prepare_data: dict):
    """Execute summary generation test."""
    staking_key = prepare_data["staking_key"]
    round_number = prepare_data["round_number"]
    repo_owner = prepare_data["repo_owner"]
    repo_name = prepare_data["repo_name"]

    # Mock response for repo summary generation
    response = requests.post(
        "http://localhost:5000/api/summarizer/generate-summary",
        json={
            "taskId": context.config.task_id,
            "round_number": str(round_number),
            "repo_url": f"https://github.com/{repo_owner}/{repo_name}",
        },
    )

    if response.status_code != 200:
        raise Exception(f"Failed to generate summary: {response.text}")

    result = response.json()
    if not result.get("success"):
        raise Exception("Failed to generate summary")

    # Store PR URL for next steps
    await context.storeSet(f"pr-{staking_key}", result.get("data", {}).get("pr_url"))

    return True

=== File: node/documentation/worker/tests/stages/validate_api_keys.py ===

-- Chunk 1 --
// validate_api_keys.py:7-11
async def prepare(context: Context):
    """Prepare for API key validation test."""
    return {
        "api_key": context.env.get("ANTHROPIC_API_KEY"),
    }

-- Chunk 2 --
// validate_api_keys.py:14-31
async def execute(context: Context, prepare_data: dict):
    """Execute API key validation test."""
    api_key = prepare_data["api_key"]

    # Mock response for Anthropic API validation
    response = requests.post(
        "http://localhost:5000/api/summarizer/validate-api-key",
        json={"api_key": api_key},
    )

    if response.status_code != 200:
        raise Exception(f"API key validation failed: {response.text}")

    result = response.json()
    if not result.get("valid"):
        raise Exception("API key is not valid")

    return True

=== File: node/documentation/worker/tests/stages/audit_summary.py ===

-- Chunk 1 --
// audit_summary.py:7-17
async def prepare(context: Context, target_name: str):
    """Prepare for auditing summary."""
    staking_key = context.env.get("WORKER_ID")
    target_submission = await context.storeGet(f"submission-{target_name}")

    return {
        "staking_key": staking_key,
        "round_number": context.round_number,
        "target_submission": target_submission,
        "target_name": target_name,
    }

-- Chunk 2 --
// audit_summary.py:20-51
async def execute(context: Context, prepare_data: dict):
    """Execute summary audit test."""
    staking_key = prepare_data["staking_key"]
    round_number = prepare_data["round_number"]
    target_submission = prepare_data["target_submission"]
    target_name = prepare_data["target_name"]

    # Mock response for audit
    response = requests.post(
        "http://localhost:5000/api/summarizer/audit",
        json={
            "taskId": context.config.task_id,
            "roundNumber": round_number,
            "stakingKey": staking_key,
            "submitterKey": target_name,
            "cid": target_submission.get("cid"),
            "prUrl": target_submission.get("pr_url"),
            "githubUsername": target_submission.get("github_username"),
        },
    )

    if response.status_code != 200:
        raise Exception(f"Failed to audit summary: {response.text}")

    result = response.json()
    if not result.get("success"):
        raise Exception("Failed to audit summary")

    # Store audit result
    await context.storeSet(f"audit-{staking_key}-{target_name}", result.get("data"))

    return True

=== File: node/documentation/worker/tests/stages/submit_summary.py ===

-- Chunk 1 --
// submit_summary.py:7-17
async def prepare(context: Context):
    """Prepare for submitting summary."""
    staking_key = context.env.get("WORKER_ID")
    pr_url = await context.storeGet(f"pr-{staking_key}")

    return {
        "staking_key": staking_key,
        "round_number": context.round_number,
        "pr_url": pr_url,
        "github_username": context.env.get("GITHUB_USERNAME"),
    }

-- Chunk 2 --
// submit_summary.py:20-56
async def execute(context: Context, prepare_data: dict):
    """Execute summary submission test."""
    staking_key = prepare_data["staking_key"]
    round_number = prepare_data["round_number"]
    pr_url = prepare_data["pr_url"]
    github_username = prepare_data["github_username"]

    # Mock response for submission
    response = requests.post(
        "http://localhost:5000/api/summarizer/submit",
        json={
            "taskId": context.config.task_id,
            "roundNumber": round_number,
            "prUrl": pr_url,
            "stakingKey": staking_key,
            "githubUsername": github_username,
        },
    )

    if response.status_code != 200:
        raise Exception(f"Failed to submit summary: {response.text}")

    result = response.json()
    if not result.get("success"):
        raise Exception("Failed to submit summary")

    # Store submission data for audit
    await context.storeSet(
        f"submission-{staking_key}",
        {
            "cid": result.get("data", {}).get("cid"),
            "pr_url": pr_url,
            "github_username": github_username,
        },
    )

    return True

=== File: node/documentation/worker/tests/stages/fetch_summarizer_todo.py ===

-- Chunk 1 --
// fetch_summarizer_todo.py:7-12
async def prepare(context: Context):
    """Prepare for fetching summarizer todo."""
    return {
        "staking_key": context.env.get("WORKER_ID"),
        "round_number": context.round_number,
    }

-- Chunk 2 --
// fetch_summarizer_todo.py:15-39
async def execute(context: Context, prepare_data: dict):
    """Execute fetch summarizer todo test."""
    staking_key = prepare_data["staking_key"]
    round_number = prepare_data["round_number"]

    # Mock response for fetching todo
    response = requests.post(
        "http://localhost:5000/api/summarizer/fetch-summarizer-todo",
        json={
            "stakingKey": staking_key,
            "roundNumber": round_number,
        },
    )

    if response.status_code != 200:
        raise Exception(f"Failed to fetch summarizer todo: {response.text}")

    result = response.json()
    if not result.get("success"):
        raise Exception("Failed to fetch summarizer todo")

    # Store todo data for next steps
    await context.storeSet(f"todo-{staking_key}", result.get("data"))

    return True

=== File: node/documentation/worker/tests/wasm/bincode_js.cjs ===

-- Chunk 1 --
// bincode_js.cjs:12-17
function getUint8Memory0() {
  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {
    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);
  }
  return cachedUint8Memory0;
}

-- Chunk 2 --
// bincode_js.cjs:19-22
function getStringFromWasm0(ptr, len) {
  ptr = ptr >>> 0;
  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
}

-- Chunk 3 --
// bincode_js.cjs:30-37
function addHeapObject(obj) {
  if (heap_next === heap.length) heap.push(heap.length + 1);
  const idx = heap_next;
  heap_next = heap[idx];

  heap[idx] = obj;
  return idx;
}

-- Chunk 4 --
// bincode_js.cjs:39-41
function getObject(idx) {
  return heap[idx];
}

-- Chunk 5 --
// bincode_js.cjs:43-47
function dropObject(idx) {
  if (idx < 132) return;
  heap[idx] = heap_next;
  heap_next = idx;
}

-- Chunk 6 --
// bincode_js.cjs:49-53
function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

-- Chunk 7 --
// bincode_js.cjs:55-57
function isLikeNone(x) {
  return x === undefined || x === null;
}

-- Chunk 8 --
// bincode_js.cjs:61-66
function getFloat64Memory0() {
  if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {
    cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);
  }
  return cachedFloat64Memory0;
}

-- Chunk 9 --
// bincode_js.cjs:70-75
function getInt32Memory0() {
  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {
    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);
  }
  return cachedInt32Memory0;
}

-- Chunk 10 --
// bincode_js.cjs:95-132
function passStringToWasm0(arg, malloc, realloc) {
  if (realloc === undefined) {
    const buf = cachedTextEncoder.encode(arg);
    const ptr = malloc(buf.length, 1) >>> 0;
    getUint8Memory0()
      .subarray(ptr, ptr + buf.length)
      .set(buf);
    WASM_VECTOR_LEN = buf.length;
    return ptr;
  }

  let len = arg.length;
  let ptr = malloc(len, 1) >>> 0;

  const mem = getUint8Memory0();

  let offset = 0;

  for (; offset < len; offset++) {
    const code = arg.charCodeAt(offset);
    if (code > 0x7f) break;
    mem[ptr + offset] = code;
  }

  if (offset !== len) {
    if (offset !== 0) {
      arg = arg.slice(offset);
    }
    ptr = realloc(ptr, len, (len = offset + arg.length * 3), 1) >>> 0;
    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
    const ret = encodeString(arg, view);

    offset += ret.written;
  }

  WASM_VECTOR_LEN = offset;
  return ptr;
}

-- Chunk 11 --
// bincode_js.cjs:134-197
function debugString(val) {
  // primitive types
  const type = typeof val;
  if (type == "number" || type == "boolean" || val == null) {
    return `${val}`;
  }
  if (type == "string") {
    return `"${val}"`;
  }
  if (type == "symbol") {
    const description = val.description;
    if (description == null) {
      return "Symbol";
    } else {
      return `Symbol(${description})`;
    }
  }
  if (type == "function") {
    const name = val.name;
    if (typeof name == "string" && name.length > 0) {
      return `Function(${name})`;
    } else {
      return "Function";
    }
  }
  // objects
  if (Array.isArray(val)) {
    const length = val.length;
    let debug = "[";
    if (length > 0) {
      debug += debugString(val[0]);
    }
    for (let i = 1; i < length; i++) {
      debug += ", " + debugString(val[i]);
    }
    debug += "]";
    return debug;
  }
  // Test for built-in
  const builtInMatches = /\[object ([^\]]+)\]/.exec(toString.call(val));
  let className;
  if (builtInMatches.length > 1) {
    className = builtInMatches[1];
  } else {
    // Failed to match the standard '[object ClassName]'
    return toString.call(val);
  }
  if (className == "Object") {
    // we're a user defined class or Object
    // JSON.stringify avoids problems with cycles, and is generally much
    // easier than looping through ownProperties of `val`.
    try {
      return "Object(" + JSON.stringify(val) + ")";
    } catch (_) {
      return "Object";
    }
  }
  // errors
  if (val instanceof Error) {
    return `${val.name}: ${val.message}\n${val.stack}`;
  }
  // TODO we could test for more things here, like `Set`s and `Map`s.
  return className;
}

-- Chunk 12 --
// bincode_js.cjs:223-228
function _assertClass(instance, klass) {
  if (!(instance instanceof klass)) {
    throw new Error(`expected instance of ${klass.name}`);
  }
  return instance.ptr;
}

-- Chunk 13 --
// bincode_js.cjs:230-233
function getArrayU8FromWasm0(ptr, len) {
  ptr = ptr >>> 0;
  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
}

-- Chunk 14 --
// bincode_js.cjs:237-242
function getUint32Memory0() {
  if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {
    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);
  }
  return cachedUint32Memory0;
}

-- Chunk 15 --
// bincode_js.cjs:244-252
function passArrayJsValueToWasm0(array, malloc) {
  const ptr = malloc(array.length * 4, 4) >>> 0;
  const mem = getUint32Memory0();
  for (let i = 0; i < array.length; i++) {
    mem[ptr / 4 + i] = addHeapObject(array[i]);
  }
  WASM_VECTOR_LEN = array.length;
  return ptr;
}

-- Chunk 16 --
// bincode_js.cjs:254-260
function handleError(f, args) {
  try {
    return f.apply(this, args);
  } catch (e) {
    wasm.__wbindgen_exn_store(addHeapObject(e));
  }
}

-- Chunk 17 --
// bincode_js.cjs:273-361
class Hash {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Hash.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_hash_free(ptr);
  }
  /**
   * Create a new Hash object
   *
   * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.hash_constructor(retptr, addHeapObject(value));
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Hash.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Return the base58 string representation of the hash
   * @returns {string}
   */
  toString() {
    let deferred1_0;
    let deferred1_1;
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.hash_toString(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      deferred1_0 = r0;
      deferred1_1 = r1;
      return getStringFromWasm0(r0, r1);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
      wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);
    }
  }
  /**
   * Checks if two `Hash`s are equal
   * @param {Hash} other
   * @returns {boolean}
   */
  equals(other) {
    _assertClass(other, Hash);
    const ret = wasm.hash_equals(this.__wbg_ptr, other.__wbg_ptr);
    return ret !== 0;
  }
  /**
   * Return the `Uint8Array` representation of the hash
   * @returns {Uint8Array}
   */
  toBytes() {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.hash_toBytes(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var v1 = getArrayU8FromWasm0(r0, r1).slice();
      wasm.__wbindgen_free(r0, r1 * 1);
      return v1;
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
}

-- Chunk 18 --
// bincode_js.cjs:424-444
class Instruction {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Instruction.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_instruction_free(ptr);
  }
}

-- Chunk 19 --
// bincode_js.cjs:448-482
class Instructions {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Instructions.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_instructions_free(ptr);
  }
  /**
   */
  constructor() {
    const ret = wasm.instructions_constructor();
    return Instructions.__wrap(ret);
  }
  /**
   * @param {Instruction} instruction
   */
  push(instruction) {
    _assertClass(instruction, Instruction);
    var ptr0 = instruction.__destroy_into_raw();
    wasm.instructions_push(this.__wbg_ptr, ptr0);
  }
}

-- Chunk 20 --
// bincode_js.cjs:500-529
class Message {
  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_message_free(ptr);
  }
  /**
   * The id of a recent ledger entry.
   * @returns {Hash}
   */
  get recent_blockhash() {
    const ret = wasm.__wbg_get_message_recent_blockhash(this.__wbg_ptr);
    return Hash.__wrap(ret);
  }
  /**
   * The id of a recent ledger entry.
   * @param {Hash} arg0
   */
  set recent_blockhash(arg0) {
    _assertClass(arg0, Hash);
    var ptr0 = arg0.__destroy_into_raw();
    wasm.__wbg_set_message_recent_blockhash(this.__wbg_ptr, ptr0);
  }
}

-- Chunk 21 --
// bincode_js.cjs:547-696
class Pubkey {
  static __wrap(ptr) {
    ptr = ptr >>> 0;
    const obj = Object.create(Pubkey.prototype);
    obj.__wbg_ptr = ptr;

    return obj;
  }

  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_pubkey_free(ptr);
  }
  /**
   * Create a new Pubkey object
   *
   * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.pubkey_constructor(retptr, addHeapObject(value));
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Pubkey.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Return the base58 string representation of the public key
   * @returns {string}
   */
  toString() {
    let deferred1_0;
    let deferred1_1;
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.pubkey_toString(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      deferred1_0 = r0;
      deferred1_1 = r1;
      return getStringFromWasm0(r0, r1);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
      wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);
    }
  }
  /**
   * Check if a `Pubkey` is on the ed25519 curve.
   * @returns {boolean}
   */
  isOnCurve() {
    const ret = wasm.pubkey_isOnCurve(this.__wbg_ptr);
    return ret !== 0;
  }
  /**
   * Checks if two `Pubkey`s are equal
   * @param {Pubkey} other
   * @returns {boolean}
   */
  equals(other) {
    _assertClass(other, Pubkey);
    const ret = wasm.pubkey_equals(this.__wbg_ptr, other.__wbg_ptr);
    return ret !== 0;
  }
  /**
   * Return the `Uint8Array` representation of the public key
   * @returns {Uint8Array}
   */
  toBytes() {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      wasm.pubkey_toBytes(retptr, this.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var v1 = getArrayU8FromWasm0(r0, r1).slice();
      wasm.__wbindgen_free(r0, r1 * 1);
      return v1;
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Derive a Pubkey from another Pubkey, string seed, and a program id
   * @param {Pubkey} base
   * @param {string} seed
   * @param {Pubkey} owner
   * @returns {Pubkey}
   */
  static createWithSeed(base, seed, owner) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      _assertClass(base, Pubkey);
      const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
      const len0 = WASM_VECTOR_LEN;
      _assertClass(owner, Pubkey);
      wasm.pubkey_createWithSeed(retptr, base.__wbg_ptr, ptr0, len0, owner.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Pubkey.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Derive a program address from seeds and a program id
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {Pubkey}
   */
  static createProgramAddress(seeds, program_id) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      const ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);
      const len0 = WASM_VECTOR_LEN;
      _assertClass(program_id, Pubkey);
      wasm.pubkey_createProgramAddress(retptr, ptr0, len0, program_id.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return Pubkey.__wrap(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * Find a valid program address
   *
   * Returns:

-- Chunk 22 --
// bincode_js.cjs:697-720
   * * `[PubKey, number]` - the program address and bump seed
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {any}
   */
  static findProgramAddress(seeds, program_id) {
    try {
      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
      const ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);
      const len0 = WASM_VECTOR_LEN;
      _assertClass(program_id, Pubkey);
      wasm.pubkey_findProgramAddress(retptr, ptr0, len0, program_id.__wbg_ptr);
      var r0 = getInt32Memory0()[retptr / 4 + 0];
      var r1 = getInt32Memory0()[retptr / 4 + 1];
      var r2 = getInt32Memory0()[retptr / 4 + 2];
      if (r2) {
        throw takeObject(r1);
      }
      return takeObject(r0);
    } finally {
      wasm.__wbindgen_add_to_stack_pointer(16);
    }
  }
}

-- Chunk 23 --
// bincode_js.cjs:723-872
class SystemInstruction {
  __destroy_into_raw() {
    const ptr = this.__wbg_ptr;
    this.__wbg_ptr = 0;

    return ptr;
  }

  free() {
    const ptr = this.__destroy_into_raw();
    wasm.__wbg_systeminstruction_free(ptr);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @param {bigint} space
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static createAccount(from_pubkey, to_pubkey, lamports, space, owner) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_createAccount(
      from_pubkey.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      lamports,
      space,
      owner.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} to_pubkey
   * @param {Pubkey} base
   * @param {string} seed
   * @param {bigint} lamports
   * @param {bigint} space
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static createAccountWithSeed(from_pubkey, to_pubkey, base, seed, lamports, space, owner) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    _assertClass(base, Pubkey);
    const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    const len0 = WASM_VECTOR_LEN;
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_createAccountWithSeed(
      from_pubkey.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      base.__wbg_ptr,
      ptr0,
      len0,
      lamports,
      space,
      owner.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} pubkey
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static assign(pubkey, owner) {
    _assertClass(pubkey, Pubkey);
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_assign(pubkey.__wbg_ptr, owner.__wbg_ptr);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} pubkey
   * @param {Pubkey} base
   * @param {string} seed
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static assignWithSeed(pubkey, base, seed, owner) {
    _assertClass(pubkey, Pubkey);
    _assertClass(base, Pubkey);
    const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    const len0 = WASM_VECTOR_LEN;
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_assignWithSeed(pubkey.__wbg_ptr, base.__wbg_ptr, ptr0, len0, owner.__wbg_ptr);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @returns {Instruction}
   */
  static transfer(from_pubkey, to_pubkey, lamports) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    const ret = wasm.systeminstruction_transfer(from_pubkey.__wbg_ptr, to_pubkey.__wbg_ptr, lamports);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} from_base
   * @param {string} from_seed
   * @param {Pubkey} from_owner
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @returns {Instruction}
   */
  static transferWithSeed(from_pubkey, from_base, from_seed, from_owner, to_pubkey, lamports) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(from_base, Pubkey);
    const ptr0 = passStringToWasm0(from_seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
    const len0 = WASM_VECTOR_LEN;
    _assertClass(from_owner, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    const ret = wasm.systeminstruction_transferWithSeed(
      from_pubkey.__wbg_ptr,
      from_base.__wbg_ptr,
      ptr0,
      len0,
      from_owner.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      lamports,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} pubkey
   * @param {bigint} space
   * @returns {Instruction}
   */
  static allocate(pubkey, space) {
    _assertClass(pubkey, Pubkey);
    const ret = wasm.systeminstruction_allocate(pubkey.__wbg_ptr, space);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} address
   * @param {Pubkey} base
   * @param {string} seed
   * @param {bigint} space
   * @param {Pubkey} owner
   * @returns {Instruction}
   */
  static allocateWithSeed(address, base, seed, space, owner) {
    _assertClass(address, Pubkey);
    _assertClass(base, Pubkey);
    const ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);

-- Chunk 24 --
// bincode_js.cjs:873-951
    const len0 = WASM_VECTOR_LEN;
    _assertClass(owner, Pubkey);
    const ret = wasm.systeminstruction_allocateWithSeed(
      address.__wbg_ptr,
      base.__wbg_ptr,
      ptr0,
      len0,
      space,
      owner.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} from_pubkey
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authority
   * @param {bigint} lamports
   * @returns {Array<any>}
   */
  static createNonceAccount(from_pubkey, nonce_pubkey, authority, lamports) {
    _assertClass(from_pubkey, Pubkey);
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authority, Pubkey);
    const ret = wasm.systeminstruction_createNonceAccount(
      from_pubkey.__wbg_ptr,
      nonce_pubkey.__wbg_ptr,
      authority.__wbg_ptr,
      lamports,
    );
    return takeObject(ret);
  }
  /**
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authorized_pubkey
   * @returns {Instruction}
   */
  static advanceNonceAccount(nonce_pubkey, authorized_pubkey) {
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authorized_pubkey, Pubkey);
    const ret = wasm.systeminstruction_advanceNonceAccount(nonce_pubkey.__wbg_ptr, authorized_pubkey.__wbg_ptr);
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authorized_pubkey
   * @param {Pubkey} to_pubkey
   * @param {bigint} lamports
   * @returns {Instruction}
   */
  static withdrawNonceAccount(nonce_pubkey, authorized_pubkey, to_pubkey, lamports) {
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authorized_pubkey, Pubkey);
    _assertClass(to_pubkey, Pubkey);
    const ret = wasm.systeminstruction_withdrawNonceAccount(
      nonce_pubkey.__wbg_ptr,
      authorized_pubkey.__wbg_ptr,
      to_pubkey.__wbg_ptr,
      lamports,
    );
    return Instruction.__wrap(ret);
  }
  /**
   * @param {Pubkey} nonce_pubkey
   * @param {Pubkey} authorized_pubkey
   * @param {Pubkey} new_authority
   * @returns {Instruction}
   */
  static authorizeNonceAccount(nonce_pubkey, authorized_pubkey, new_authority) {
    _assertClass(nonce_pubkey, Pubkey);
    _assertClass(authorized_pubkey, Pubkey);
    _assertClass(new_authority, Pubkey);
    const ret = wasm.systeminstruction_authorizeNonceAccount(
      nonce_pubkey.__wbg_ptr,
      authorized_pubkey.__wbg_ptr,
      new_authority.__wbg_ptr,
    );
    return Instruction.__wrap(ret);
  }
}

=== File: node/documentation/worker/tests/wasm/bincode_js_bg.wasm ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1-150
 asm   )`` ``` ` ` ` ` ``  `~``` `~ `~`|`~`	~~~ ``~`~~ `~ `~~`~ `~`~`
`~ `~~`~~ `~`~`} `} `~ `~ `| `| `| 6__wbindgen_placeholder____wbindgen_error_new  __wbindgen_placeholder____wbindgen_object_drop_ref __wbindgen_placeholder____wbg_log_fb911463b057a706 __wbindgen_placeholder____wbindgen_number_new __wbindgen_placeholder____wbindgen_bigint_from_u64 __wbindgen_placeholder____wbindgen_string_new  __wbindgen_placeholder____wbindgen_object_clone_ref __wbindgen_placeholder____wbindgen_is_object __wbindgen_placeholder____wbindgen_jsval_loose_eq  __wbindgen_placeholder____wbindgen_boolean_get __wbindgen_placeholder____wbindgen_number_get __wbindgen_placeholder____wbindgen_string_get __wbindgen_placeholder____wbg_set_20cbc34131e76824 __wbindgen_placeholder____wbg_instruction_new __wbindgen_placeholder____wbg_pubkey_new __wbindgen_placeholder____wbindgen_is_undefined __wbindgen_placeholder__
__wbg_debug_9a6b3243fbbebb61 __wbindgen_placeholder__
__wbg_error_788ae33f81d3b84b __wbindgen_placeholder____wbg_info_2e30e8204b29d91d __wbindgen_placeholder____wbg_log_1d3ae0273d8f4f8a __wbindgen_placeholder____wbg_warn_d60e832f9882c1b2 __wbindgen_placeholder____wbg_new_abda76e883ba8a5f __wbindgen_placeholder__
__wbg_stack_658279fe44541cf6 __wbindgen_placeholder__
__wbg_error_f851667af71bcfc6 __wbindgen_placeholder____wbindgen_is_string __wbindgen_placeholder____wbg_get_44be0491f933a435  __wbindgen_placeholder__
__wbg_length_fff51ee6522a1a18 __wbindgen_placeholder____wbg_new_898a68150f225f2e __wbindgen_placeholder____wbindgen_is_function __wbindgen_placeholder____wbg_new_56693dbed0c32988 __wbindgen_placeholder____wbg_next_526fc47e980da008 __wbindgen_placeholder____wbg_next_ddb3312ca1c4e32a __wbindgen_placeholder____wbg_done_5c1f01fb660d73b5 __wbindgen_placeholder__
__wbg_value_1695675138684bd5 __wbindgen_placeholder____wbg_iterator_97f0c81209c6c35a __wbindgen_placeholder____wbg_get_97b561fb56f034b5  __wbindgen_placeholder____wbg_call_cb65541d95d71282  __wbindgen_placeholder____wbg_new_b51585de1b234aff __wbindgen_placeholder__$__wbg_newwithlength_3ec098a360da1909 __wbindgen_placeholder____wbg_set_502d29070ea18557 __wbindgen_placeholder__
__wbg_isArray_4c24b343cb13cfb1 __wbindgen_placeholder____wbg_push_ca1c26067ef907ac  __wbindgen_placeholder__-__wbg_instanceof_ArrayBuffer_39ac22089b74fddb __wbindgen_placeholder__
__wbg_values_e80af618f92c8649 __wbindgen_placeholder____wbg_set_bedc3d02d0f05eb0 __wbindgen_placeholder__$__wbg_isSafeInteger_bb8e18dd21c97288 __wbindgen_placeholder__
__wbg_buffer_085ec1f694018c4f __wbindgen_placeholder____wbg_new_8125e318e6245eed __wbindgen_placeholder____wbg_set_5cf90238115182c3 __wbindgen_placeholder__
__wbg_length_72e2208bbc0efc61 __wbindgen_placeholder__,__wbg_instanceof_Uint8Array_d8d9cb2b8e8ac1d4 __wbindgen_placeholder____wbindgen_debug_string __wbindgen_placeholder____wbindgen_throw __wbindgen_placeholder____wbindgen_memory   
    	             	 	

     
                   
 !
 	  

         
 "	$&   ( 
                           

       

 


p 	A 
*memory bincode_js_deserialize borsh_bpf_js_deserialize __wbg_message_free "__wbg_get_message_recent_blockhash "__wbg_set_message_recent_blockhash solana_program_init systeminstruction_createAccount 'systeminstruction_createAccountWithSeed systeminstruction_assign  systeminstruction_assignWithSeed systeminstruction_transfer "systeminstruction_transferWithSeed systeminstruction_allocate "systeminstruction_allocateWithSeed $systeminstruction_createNonceAccount %systeminstruction_advanceNonceAccount &systeminstruction_withdrawNonceAccount 'systeminstruction_authorizeNonceAccount __wbg_instruction_free pubkey_constructor {pubkey_toString pubkey_isOnCurve 
pubkey_equals pubkey_toBytes pubkey_createWithSeed Upubkey_createProgramAddress bpubkey_findProgramAddress __wbg_instructions_free instructions_constructor instructions_push hash_constructor |
hash_toString 
hash_equals 
hash_toBytes __wbg_pubkey_free __wbg_hash_free __wbindgen_malloc __wbindgen_realloc __wbindgen_add_to_stack_pointer __wbindgen_free __wbindgen_exn_store 	 A
EqqlrqqqsmntaTV~g

!~# Ak"
$ @@@@@@  AO@AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K  M
  AjA!A ( E
A  k!A  AI
 A AK
  A Avg" kvAq  AtkA>j
"AtAܗ j( "
A ! A !

A  AjAAAk  KA!@@@@@A ( " Av" v"AqE@ A ( M

 
A ( " E

  hAtAܗ j( " k! " @@   k"   I"!    !  " 
 

  ! iAA K
    A ( " E
  AxqA j!A ( !A ( "A  Avt" qE
 (

@ AsAq  j"At" A j( "Aj( "  A j" G@   6
   6

A  A~ wq6 
  At !


@A  Aq" t   tqh"At" A j( "Aj( "  A j" G@   6
   6

A A ( A~ wq6 
    " At k"A ( " @  AxqA j!A ( !A ( "A  Avt" q@ (

A    r6  
!   6   6
  6
   6
A  6 A  6  !


A    r6  
!   6   6
  6
   6
A  6 A  6 

   j
 "


  t!A ! A !@@ " I
   k" O
  ! "
 A ! ! 

 Aj( "     A
vAqjAj( "G   !  At! 
 

   rE@A !A tA ( q" E
  hAtAܗ j( ! 
  E

@     " O  k" Iq"!   !  " 
 

 E
  A ( " M    kOq
   ! i@AA M@     AO@  k

 AxqA j!A ( "A Avt" q@ (

A    r6  
!   6   6
  6
   6

   j
 "

@@@@@@@ A ( " K@A ( "  K
AA jAAjAAjA" Av@ ! 
A 6 
A   A|q AF" 6 
A  At  6  
( "
A !

A ( !AA   k"K@A A 6 A ( ! A A 6     !

  ! A  6 A   6       !

 
(!
A  
("
A ( j"6 A A ( "     K6 @@@A ( @Aܘ ! @   F
  (" 
 


A ( " E   Kr


  
    
G
   ( "A ( "M   (j KA 


A A ( "     I6   
j!Aܘ ! @@@   ( G@  (" 

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:151-300



  
    
F

A ( !	Aܘ ! @@ 	  ( O@   	K

  (" 
 
A ! 
 	  "AA"kAk"" A  k j"   AA 	jI"
! 
 ! AA!AA!AA!A   "A k""6 A  
Aj   jj jk"6   Ar6AA!AA!AA!     Akjj6A A6  
 Aܘ ) ! AjA ) 7   7 A  
6 A  
6 Aܘ  6 A  6 @  A  A6" Aj I
 
 	 
F
 	 
 	k"  	    AO@ 	  k

  AxqA j!A ( "A  Avt" q@ (

A    r6  
!   	6   	6
 	 6
 	  6

  ( !   6     ( 
j6 "A! "A!    kj" !      kj"   jk!A (   G@  A ( F
  (AqAG
@  "AO@  i

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
  j!   ! 

A  6 A A (  j" 6    Ar6 !

    ( 
j6A (  
j!A ( "   " A  k" !A    k"6 A  6   Ar6AA!AA!AA!       Akjj6A A6 

A    k"6 A A ( " " 6    Ar6   !

A  6 A A (  j" 6     !

A  6 

     AO@  k !

 AxqA j!A ( "A Avt" q@ (

A    r6  
!   6   6
  6
   6 !

A A6 A  
6 A  
6 Aܘ  6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aș A 6 Aę A 6 AЙ Aę 6 A̙ Aę 6 Aؙ A̙ 6 Aԙ A̙ 6 A Aԙ 6 Aܙ Aԙ 6 A Aܙ 6 A Aܙ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 AȚ A 6 A A 6 AК AĚ 6 AĚ A 6 Aؚ A̚ 6 A̚ AĚ 6 A AԚ 6 AԚ A̚ 6 A Aܚ 6 Aܚ AԚ 6 A A 6 A Aܚ 6 A A 6 AA!AA!AA!A   " A  k" "6 A  
Aj   jj  jk"6   Ar6AA!AA!AA!       Akjj6A A6 
A !A ( "  M
 A    k"6 A A ( " " 6    Ar6   !
 
Aj$  
	~# Ak"$   ) " ) " Aj ) " )"B~ Aj )" )"
B~" Aj )"	 )"
B~" Aj )"
 ) "B~"
 A j 
  Aj   Aj   Aj   Aj 	 
 A j 	  Aj 
  A j  
 Aj   Aj  
 A j   Aj 	  Aj 
 
 A0j  
 Aj  
 Aj   Aj   Aj 	 
 Aj 
 
 A@k     )" ) |" )|" )`|" )|" )" )|" )|"	 )|"
 )P|"
 )" ) |"
 )|"
 )|" )|"B3  V Aj)  
 V Aj)  
 
V Aj)  
 T Aj)  Aj) ||||||||B
|"
B3 
 
V 
 
V A j)  	 
V Aj)   	V Aj)   T Aj)  Aj) |||||||||B
|"B7   )" )0|"	 )p|"
 )|"
 )|"
  T  V Aj)   V A j)   V Aj)   T Aj)  A(j) |||||||||B
 B3|"B7   )" )@|" )|" )|" )|"  
T 
 
V Aj)  
 
V Aj)  	 
V A j)  	 T Aj)  A8j) |||||||||B
 B3|"B7     T  T Aj)   V Aj)   V Aj)   T Aj)  A j) |||||||||B
 B3B~ B|"B7    
B B3|7 Aj$ 
  "   "!@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  i

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
@ @    

@@@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( F


 " j!@ AO@ i

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

A A 6 A A 6 

-- Chunk 3 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:301-450
A (  O
AA! AA!AA!A AAAtk"A|    jjkAwqAk"    KE
A ( E
AA! AA!AA!A !@A ( "    Akjj" M
    kAjA|q"Ak!A ( !Aܘ ! @@   ( O@   K

  (" 
 
A ! 
  
   A
j( 
 
pA  kG
A ( A ( M
A A6 
 AI
   kA A ( Ak" 6   
 p

 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6
@ A	M@ Av!@@@  ("@ Ak! At  jAk!  jAt  jAk! A(K!@ 
  j"A(O
  ( 6  Ak! Ak! Ak"AG
 

 A I
  A 6  A O


 A(A  
  A 6A  AM"AF
  A 6 AF
  A 6
 AF
  A 6 AF
  A 6 AF
  A 6 AF
  A 6
 AF
  A 6  A	F
  A 6$ A
F
  A 6( A
F
  A 6, A
F
  A 60 A
F
  A 64 AF
  A 68 AF
  A 6< AF
  A 6@ AF
  A 6D AF
  A 6H AF
  A 6L AF
  A 6P AF
  A 6T AF
  A 6X AF
  A 6\ AF
  A 6` AF
  A 6d AF
  A 6h AF
  A 6l A
F
  A 6p A
F
  A 6t A
F
  A 6x AF
  A 6| A F
  A 6 A!F
  A 6 A"F
  A 6 A#F
  A 6 A$F
  A 6 A%F
  A 6 A&F
  A 6 A'F
  A 6 A(F
A(A(A  
 A(A  
AΎ A
A  
  ( j! Aq"E@   6  
@ Ak"A'M@ !   Atj( "A  k"v"E
 A'M@   Atj 6  Aj!

 A(A  
 A(A  
@  Aj"K@ Aq! At  jAk!@ AkA(O
 Aj  t ( " vr6  Ak!  Ak"I
 

   Atj" (  t6    6  
AA(A  
~# Ak"$  ) ! )! )! )! ) !@ Aj   Aj  B~"
 A@k B~"	  Aj 	  A j   A0j  
 A j   A j   Aj 	  Aj 
  Aj   Aj      Aj   A j   )" )P|"B" ) |" )" )|"B" )|" ) " )|"B" )`|"
 )p" )0|"	B" )|"
 )" )@|"
B" )|"
B3 
 T Aj)  
 T Aj)  A j) ||B 
B?||B
|"
B3 
 
T 
 T Aj)  	 T A j)  A8j) ||B 	B?|||B
|"	B3 	 
T 
 T A j)   T A(j)  Aj) ||B B?|||B
|"B3  V  T Aj)   T Aj)  Aj) ||B B?|||B
|"B3  T  T Aj)   T Aj)  A j) ||B B?|||B
B~ 
B|"B! 
B B3|! B! B! 	B! Ak"
 
   7    7   7   7   7  Aj$ 
@@  ("
  ("r@@ E
   j!	  Aj( Aj! !@@ ! Ak"E
   	F
 ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr"A F
 Aj
"  kj! A G



  	F
  ,  "A N A`Ir ApIrE@ AqAtA q - A?q - A?qAt - A?qA
trrrA F

@@ E
   M@A !  F


-- Chunk 4 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:451-600

A !  j,  A@H

 !
   !   !
 
E
  A
j( !@ AO@  <!

 E@A !

 Aq!@ AI@A ! !

 A|q!A ! !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 E
 @  ,  AJj! Aj! Ak"
 

  I@  k"!@@@  -  "A  AG"Ak 
A ! !

 Av! AjAv!
 Aj!  Aj( !  (
!  ( ! @@ Ak"E
    (  E
 
A
A! A F
     (
 
A !@  F@A 
 Aj!    (  E
 
 Ak I


  (     ((
 !
 
  (     ((
 
@@  AjA|q"  k" K AKr
   k"AI
  Aq!A !@   F
  Aq!@   AsjAI@  !

 A|q!  !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 E
 @  ,  AJj! Aj! Ak"
 

   j! @ E
    A|qj",  AJ! AF
   , AJj! AF
   , AJj!
 Av!  j!@  ! E
A  AO"Aq! At!@ Aq"E@A !

  Atj!	A !@  E
   ( "AsAv AvrAqj  Aj( "AsAv AvrAqj  Aj( "AsAv AvrAqj  A
j( "AsAv AvrAqj!  Aj"  	G
 

  k!  j!  AvAq AqjAlAv j! E
 
A  E
   Atj"( " AsAv  AvrAq"  AF
    (" AsAv  AvrAqj"  AF
    (" AsAv  AvrAqj
" AvA
q  AqjAlAv j
 E@A 
 Aq!@ AI@

 A|q!@   ,  AJj  , AJj  , AJj  , AJj!  Aj!  Ak"
 

 E
 @   ,  AJj!  Aj!  Ak"
 

 
@@ ( "
A" ("
("  E@@ E@

   j!  !@@@ ,  "A N@ Aj!
 Aq!

 - A?q! Aq! A_M@ At r! Aj!


 - A?q Atr! Aj!
 ApI@  A
tr!

 AtA q 
-  A?q Atrr"A F
 Aj!

A !A0!@@@@@@@@ # 
 A F

 ]E
 ArgAvAs

A !

A !

A !

 !

A ! ! 
 ArgAvAs
! !
@A A k" AOAG@  K
@ E
   M@  F


   j,  A@H

@ E
   M@  G


   j,  AL

 
   j  k 
(
 @A
A!	@@@ 	!
 !A !A !@@@@@A A k" AOAk 
A !	A ! !@@@ 
AqAk 
A!	A !

A!	A !

A!	A !

A ! "A G

-- Chunk 5 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:601-750

A! AI
A! AK


 
A !	A0A   AtvAq"A
I j! ! Ak"A   O!
 
    E
 
A
AA AI!
  j!
  k 
j! 
" G



     A  
 E@A !

  M@  F


   j,  AL

 
   j  k 
(
 E

A
 
A"   
     A  
~# A k"$ @@@@@@@ ("AO@ A j ( " - H
 ( I!  Ak"6  Aj6 

 A jAA̎ A )H"	BBR
 	B !
 E@A!A !

  O@   k6  ( " j6 A ! Aj A  (! ("  !  6(   B 7  @ !

 AjA   A OA  A 6P  )7H ( ! (!@@@ @  Ak"6  Aj"6  -  ! !

 A8jAA̎ A )8"	BBR
 	B!A ! (P!
 (H F A j  (P 
 (Lj :    (PAj"6P Ak"
 
 (L! (H! ($E
 A j

 (<! (8! A j ($E
 A j

 A jAA̎ A
 (L! (H!
  A6     B 7

A A+ AjA A  
 A j  C@ (H@ )L"	BB R

   6  A 6   A
j 6   Aj 6 

  60  6,  6(  	7  A 6@ B78 A j" A8jAԌ # A0k"$  A j"- @  Aj-  :  AjA 6   6 A6
  Aj6 (  ( A6, A6$ A 6  A 6  Aj6( AjH

 A 6
  6 (  ( A6, A6$ A 6  A 6  Aj6( AjH
 A0j$ 
 A j A@k( 6   )87H AjA A j A(j   )7  A6 
 A j$ 
A A7 AjA A  
~@@@@@@ Aq"@@@  ("A)I@ E@A !

 AtA j5 ! AkAq"Aj"Aq! AI@  !

 Aq!  !@  5  ~ |">  Aj" 5  ~ B |">  Aj" 5  ~ B |">  A
j" 5  ~ B |">  B ! Aj! Ak"
 


 A(A  
 @@  5  ~ |">  Aj! B ! Ak"
 

 "E
  A'K
   Atj 6  Aj!
   6
 AqE
  ("A)O
 E@A !

 AkAq"Aj"Aq! AI@B !  !

 Aq!B !  !@  5 B/~ |">  Aj" 5 B/~ B |">  Aj" 5 B/~ B |">  A
j" 5 B/~ B |">  B ! Aj! Ak"
 


 A(A  
 A(A  
 @@  5 B/~ |">  Aj! B ! Ak"
 

 "E
  A'K
   Atj 6  Aj!
   6
 Aq@  A AA
 A q@  A AA
 A q@  A AA
 Aq@  A AA
 Aq@  A AA

 A(A  
)%~# Ak"$ @@@@ ("AO@ Aj ( " - 
 ( !  Ak6  Aj6 

 AjAA̎ A )"'BBR
 'B !
 B 7@@@@@ @ AjAr!
 A j! Aj!
@ Aj > )!' (
  (6  '7@ ("AO@ Aj ( " - 

 ( !  Ak6  Aj6 

 AjAA̎ A )"'BBR
 'B !
 B 74 @ Aj > )!' (
  (6H  '7@ Aj!	A !# Ak"$  A8j Q@@@@@@@ - 8E@ A&j - ;:   Aj A j) 7  Aj A j)  7    / 9;$  A j) 7 ("AI
 )<!( A8j ( " - 8E
A A+ A(jA A  
 	 )<7 

 ) 9!)  Ak"6  Aj"6 @ AO@ A8j  - 8
 ( 9!  A
k6  A
j6 

 A8jAA̎ A )8"'BBR
 'B !
@ ~@A   A O"E@A!

-- Chunk 6 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:751-900

@@ AժK
  A0l"A H
  AժIAt! E
  

 
 
"
    
  6  6  A 60  ) 7( A@k! A j"
Aj!@ A8j!# A k"$ @@@@@ ("E@ A jAA̎ A

  Ak6  ( "Aj6   -  ": G AI
 A,jA6  A4jA6  A 6( A 6  A6L  A j60  A j6H Aj" A j"
O 
A 
 ) "'BBR
 'B!
 A j Q@@ -  E@ A j - #:   Aj A4j) 7  Aj A9j)  7    / !;D  A,j) 7 ("
AI
 )$!' A j ( "
 -  E
A A+ A jA A  
  )$7 

 ) !!*  
Ak6  
Aj6   /D;   Aj A j-  :    )7 
 Aj Aj) 7   Aj Aj)  7    : (  *7   '7 

 AA̎ A

 A: (  '7 

 A: (
 A j$  - `"AF
 )8!' Aj" Aj) 7  Aj" Aj) 7  A j" Aj) 7   ) 7p  
(  6h  (  6 k (0" ((F@# Ak"
$  A(j!
# A k"$  
Aj"A   Aj"K
 A 
( "At"
   
I" AM"
A0l! 
AժIAt!@ @ A6  A0l6  
(6

 A 6
    Aj (! ( @ Aj( 

 
 
6  
 6Ax
6  6  A j$ @@ 
(
"AxG@ E
 
(  
 
Aj$ 

 
 (0!
 (, A0lj" )p7  '7   : (  (h6 ) A,j ( k6   Aj ) 7  Aj ) 7  A j ) 7   (0Aj"60 Ak"
 
 )(B
!' 	 /$;   	 )7 
 	 60 	 '7( 	 )7  	 (7  	Aj A&j-  :   	Aj Aj) 7   	Aj Aj)  7  

 (<! (8! ((E
 (,8

 	AA̎ A

 (<! (8!
 	  B 7 

A A+ A(jA A  
 	A 6,
 Aj$  )!' ("E
  
A$  6|  '7P  )7 Aj A j( 6   )@7 Aj! A j!# A@j"	$  Aj!A !
# A0k"$ @ A0j"
("E@ 	A 6 	 
6 	 ) 7
 	Aj Aj( 6 

 Aj! 
( !
# A k"$   6
  
6 Aj Aj  (!
@ (@@ 
E@ A 6 A
j 
6  Aj 6 A!


   
AtjAj( "6
  
Ak"
6 Aj Aj  (
!
 (
 

  
6 A
j 
6  Aj 6 
  
6  A j$  (@ A j" Aj( 6  A,j Aj( 6  	 )
7  	 
6  ) 7$ 	Aj ) 7  	Aj A(j) 7 

 	 )
7  	A 6 	 
6
 	Aj Aj( 6  
 A0j$ @ 	(@ 	A8j 	Aj( 6  	A0j 	Aj) 7  	A(j 	Aj) 7  	 	) 7 # A0k"$ @ 	A j"
(E@ 
(!"A 6 A(j 
Aj( "6  
)
!' A;  '7 Aj 6   '7   A8! A6  6 A 6 

 Aj 
Aj( 6   
) 7  Aj 
Aj( 6   
)
7 A j! Aj!
 
Aj!# Ak"
$  
A j!
# A k"$ @ ("/A
O@ Aj" ( Aj( ! (
! ( !  (6h  6d  6`"A ; A 6 Aj A j" w A j 6  A 6P  ) 7  A j Ar ( "Aj" A
lj! A j  ( !@ Aj" /"K@  
) 7  Aj 
Aj( 6 

  A
lj   k"A

-- Chunk 7 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:901-1050
l Aj 
Aj( 6   
) 7   A8lj  A8lj A8l
  A8lj A8  Aj; 
 AjA 

 Aj! ("Aj" ("A
lj!@ Aj" /"K@  
) 7  Aj 
Aj( 6 

  A
lj   k"A
l Aj 
Aj( 6   
) 7   A8lj  A8lj A8l
  A8lj A8  Aj;  6  6  ( 6  
A 6 (! (
! (!
 
 6X 
A j 6  
A j 6  A j$  
Aj( !  
Aj( !! 
(!"@@@ 
(L"E
  
(H!
 
 
A j"#A "(! (! ("@ Aj!$@  6  /6  
Aj6 Aj Aj( 6   ) 7 Aj" $A8 A j! Aj!# A k"$ @  Aj"( "
AkF@@ ("
/A
O@ Aj" ( Aj( !% (
!  (6h  
6d  
6`# A k"$  A j"&"("/!"
A ; 
A 6 Aj  
w 
/"
Aj!@@ 
A
I@   ("k"G
 
Aj At jAj At! ( !A !@@  Atj( " ;  
6  
O
    
Ij" 
M


 Aj AjA  A j 
6   6P  6  6  A j$ 

 A
A  
A A(A  
  %6h  A j Ar ( 6d  A j  ( 6` &   `  A 

    ` A 6
 A j$ 

AЃ A5A  
 (L"E
 (H!
  #A "(! (! ("
 

 A j A  ( "("
E
 ( !
" 
6 A ; A 6  6  
Aj"6  
A ; 
 6  6  6 Aj Aj( 6   ) 7 Aj"
 A jA8 Aj!@  Aj"( AkF@ ("/"A
M
A A A  
A A0A؂  
  Aj";  A
lj"
Aj Aj( 6  
Aj ) 7   A8lj 
A8  AtjAj 6   ;  6
   6  !6  "6  
Aj$ 

A A+A  
 ($ (( 
(" (Aj6
 A0j$  A 6,

  	( 	(A8lj"A8  A8
 	A@k$ @ ("E
  (E
  8
 Ak"
 
 (8A 
! 
Aj!
  6(  )07   Aj( 6   )7P Aj  A j A j (@ 

  
G
 

   ) 7  A 6   A
j Aj( 6 

 A@k
 A0j
  A6    '7 Aj

  A6    '7
 

  A6    '7
 Aj$ 
A A+ AjA A  

~# Ak"$  A A!	@@   ("M@ A)I@  Atj!
 E
 Aj!
 At!
@ 	 Atj!@ ! !  
F
 Aj! Aj! ( ! Aj"
! E
 
 !B ! 
! !  !@@@ A'K
   5 | 5  ~|">  B ! Aj! Aj! Aj! Ak"
 
 ! "E
  j"A'M@ 	 Atj 6  
!

 A(A  
 A(A  
   j"  I! 
!
 
 
 A(A  

-- Chunk 8 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1051-1200
 A)I@ At! Aj!
   Atj!  !@ 	 
Atj!@ 
!
 !  F
 Aj! 
Aj!
 ( ! Aj"
! E
 
 !B ! ! 
! !@@@ A'K
   5 | 5  ~|">  B ! Aj! Aj! Aj! Ak"
 
 ! "E
  
j"A'M@ 	 Atj 6  
!

 A(A  
 A(A  
   
j"  I! 
!
 
 
 A(A  
A !@  
F
 Aj! (  Aj!E
   Ak"  I!
 
 
   	A 6 	Aj$ 
 @A+A   ("	Aq"!
  j

  (!	A-!
 Aj
!@ 	AqE@A !

@ AO@  <!

 E@

 Aq!
@ AI@ !

 A|q! !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 
E
 @  ,  AJj! Aj! 
Ak"

 

  j!
@@  (E@A!  ( "  Aj( "  
  


@@@@   A
j( "I@ 	Aq
  k"!A  -  " AF"Ak
A!  ( "  Aj( "  
  


A ! !

 Av! AjAv!
 Aj!  Aj( !  (
!  ( ! @@ Ak"E
    (  E
 
A
A! A F
    
  
     (
 
A !@   F
 Aj!    (  E
 
 Ak
 I!

  (
!
  A06
  -  !
A!  A:    ( "  Aj( "	 
  
   kAj!@@ Ak"E
 A0 	(  E
 
A
A!    	(
 
    
:     
6
A 
 
     (
 
	@ E
  Ak"A   O!	 AjA|q k"
AF!
A !@@@@@@@@@@  j-  ""A N@ 
 
 kAqr
  	I


A!A!@@@@@@@@ A j-  Ak 
 Aj" I
A !


A ! Aj" O

  j,  ! Ak"E
 A
F


  Aj"M@A !


  j,  !@@@ Ak    
 AjAqAM
	A!


 A jAqA0I
	


 AJ


 A`qAG
	

 AN



-- Chunk 9 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1201-1350
@ AjAqA
O@ A~qAnF
A!


 AJ


A! A@N

A ! Aj" O
  j,  AL
A!A!

  j,  AJ


 Aj!

@  j"( Axq
 Aj( Axq
 	 Aj"K
 


A! A@N

  Aj"M@A !

  j,  AJ@A!A!

A ! Aj" O
  j,  AL
 A!A!

 Aj!

A!
   6  A	j :    Aj :    A6 
  M
 @  j,  A H
  Aj"G
 


  K
 

   6  Aj 6   A 6 
~# Ak"$  A j A  A(j Aj )h! A j" Aj-  "j"A:    "B; B	"	 B"BB( BB BB BB BB BB 	B87 A j Aj A?s ($" ( "G@ A   k
 A j!@ A8qA8G@ AjA AjAAԶ  Aj  A j ( (


 Aj  A j" ( ( Aj" AjA AjAAĶ  Aj   ( (

 A :  AjB 7  A 6  Aj"6  Aj6 Aj! A j! ("E@A AA  
 A 6  6  6   ) 7 A
j Aj) 7  A$j Aj( 6   ( n"6    kAv"  I6
@ (" (O
  Aj!@  Aj6  ("6  (   lj6  ( "E
 (!  ( Atj( "At AqAtr AvAq Avrr6   AjAA  (" (I
 

 A(jA  AjA A   Aj A@k) 7    Aj A8j) 7    Aj A0j) 7     )(7   Aj$ 
|# A0k"$ @@@@@@@@@@@@@@@@@@  -  Ak	



 
   - :  A
jA6  A$jA6  A 6 A 6 A 6,  A(j6   Aj6(  Aj

   )7 A
jA6  A$jA6  A 6 A 6 A6,  A(j6   Aj6(  Aj

   )7 A
jA6  A$jA6  A 6 A 6 A 6,  A(j6   Aj6(  Aj

  +! A
jA6  A$jA6  A 6 A 6 A 6
  9(  Aj6   A(j6  Aj

   (6 A
jA6  A$jA6  A 6 A 6 A 6,  A(j6   Aj6(  Aj


   )7 A
jA6  A$jA6  A 6 A 6 A 6,  A(j6   Aj6(  Aj


 A A



 A A



 A A

	
 A A

 A A

 A A

 A A

 A A


 A A

 A A


 A A

   (  Aj( 
 A0j$ 
# Ak"$  ("@A   (   (
 

A  A
j( "E
  (" A
lj! A
j!	@@@@@ / Ak 
@ ("A O@ A
j( !@A  A A   
 A@j"A K
 


 E

@ A?M@ A j,  AL

  A   A
j(  E
A

A A A  A  
   ( Aj(  A
j(  E
A

 /! 	A :   A 6@@@@@ / Ak 
 Aj

-- Chunk 10 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1351-1500

 /"AO@AA A I!

A! A
I
AA A I!

 Aj
( "AI@ 
A !

 AA  
 Aj j!@ AqE@ !

 Ak"  A
n"A
lkA0r:  
 AF
  Ak!@  Aq"A
n"
A
pA0r:   Aj  
A
lkA0r:   A n!  AjF Ak!E
 

   Aj  A
j(  E
 A

 A
j" G
 
A 
 Aj$ 
|# Ak"$ @  ( "A@A!A ! 

AA 	"AFA  "AG@A ! 

 A j 
 Aj (  +( (@A! +!	A ! 

 Aj 
@@ ("E@ A 6T

 (
!  6t  6x  6p  A j A j (  ( (TE
  A8j A j( "6   )P70A! A! (4!

 A j!# A k"$ @@  E@  ( *
 A 6

 Aj   Aj Aj( 6   )7 

   ( /6
 Aj A
j Aj Aj( 6   )7  (
"AI
  
 A j$  (d"@ A@kAr! A j" !   A j( 6   )`7@A

 A0j"Ar! A8j! A jA6  AjA6  A 6x A 6p A 6   6  Aj6  A jOA
! A G! ( ! ( ! E!  (TE
  A j
 !	
  	9x  6t  : q  : p# A0k"$   6  6  AjA6  A
jA6  A,jA6  A 6 A 6 A6$  A j6   A j6  6( Aj A0j$  @ A@k
  @ A0j
 Aj$ 

# A0k"$  A: ( B7  A 6 A 6  6
   6@@ ( "
E@ Aj( " E
 (!  At!  AkAqAj! (! @  Aj( "@ (  (   (
(
 

 (  Aj Aj(   
 Aj!  Aj!  Ak"
 


 (" E
   At!
  AkA?qAj! (! @  Aj( "@ (  (   (
(
 

   
j"A
j-  : (  Aj) 7  Aj( ! (!A !	A !@@@ A
j( Ak 
 At j"
Aj( AG
 
( ( !
A!
  6  6 Aj( !@@@ Aj( Ak 
 At j"Aj( AG
 ( ( !
A!	
  6
  	6  ( Atj"(  Aj (  
  Aj!  
 A j"G
 

 A
j(  K@ ( ( Atj" (   ( (
(
 

A 

A
 A0j$ 
	# Ak"$ @@@  (@  A
j( ! A
j A
j( "6   ("6  ("6  ( "6   -  !	  (
!
  - Aq
 
! 	! 

  (   Aj(  F!

  (     ((
 
A!  A:  A0!  A06
 A 6 A 6   k"A   M!A 
! @ A
l!@@@@ / Ak 
 Aj( 

 Aj( 

 Aj/ "AO@AA A I

A A
I
 AA A I
! A
j!  j! A
k"
 

@  I@  k"!@@@ Aq"Ak  
A ! !


-- Chunk 11 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1501-1650
 Av! AjAv!
 Aj!  Aj( !  ( !@ Ak"E
   (  E
 


  (   Aj(  F

   F
A !@A   F
 Aj!   (  E
 
 Ak I
!   	:     
6


A!
 Aj$  
~# Ak"$  1 ! 1 ! 1 ! 1 ! 1 
! 1 ! 1 
! 1 
! 1 
! 1 	! 1 !
 1 !
 1 ! 1 !
 1 ! 1 !  1 !! 1 !" 1 !# 1 
!$ 1 
!% 1 
!& 1 !' 1 !( 1 !  5   1 B  1 B( 1 ")B0B7   (B B 'B &B  %B( $B0 #B8B
B7    !B "B  B B  
B( B0BB7  ) 
B 
B B B  B( B0BB7   B B B B  B( B0 B8BB7 A8jB 7  A@kB 7  A jB 7  B 70 B7( A j" A: A j" )  A(j") }B?|"B ) )}B?|"B3|7   B ) )}B?|"B3|7  B ) )}B?|"B3|7  B )  ) }B?|"B3|7  B3B~ B|7  Aj A 7A !@ Aj j" )  A(j j) |7  Aj"A(G
 
# Ak"$  Aj" Aj"
A: Aj"  
7  A: A0j"	  
7 Aj" A j"
 7 Aj"
 
 	7# Ak"$  Aj" 
A: Aj"	 A: A0j"
 	A: A j" 
 
7 Aj"
  7 Aj" 
A: Aj"  7 Aj" A: Aj"  7 Aj" A
: Aj"  7 Aj" A: Aj"  7 Aj" A
: Aj"  7 Aj" A2: Aj"  7 Aj" A : Aj"  7 	 A2:  	 7 A(j 
A( Aj$  Aj" A(  A: Aj" 
 7 A j"	  7  	A: 
 
 7 
 
  
A( B? )}"BB? )}"B3|7  BB? )}"B3|7  BB? )}"B3|7  BB? )}"B3|7  B3B~ B|7 
 !
  
A( B? )}"BB? )}"B3|7  BB? )}"B3|7  BB? )}"B3|7  BB? )}"B3|7  B3B~ B|7  A 7 
 !
 A  	7 B  
 
rB}" )p" ) "7p  )x" )  "7x  )X" )  "7X  )`" )  "7`   )h" ) "7h  	K  B  - AqB}" B? }"BB? }"B3|7x    BB? }"B3| 7p  BB? }"B3|   7h  BB? }"B3|   7`  B3B~ B|   7X 
r! Aj"Aj 	A(  :   Aj$  - ! Aj AjA(  ~ AF@ B  - AvB}" )"B? }"BB? )"}"B3| 7    BB? )"}"B3| 7    BB? )"}"B3| 7    BB? )"}"B3| 7    B3B~ B| 7 Aj" Aj"A( Aj A( Aj A(jA( Aj  7  Aj AB

B 
7  Aj$ 
~   ) "B3B~ ) "B|"B|B3 )"B B3|"|B3 )"B B3|"|B3 )"B B3|"|B3 B B3|"|B3B~ |"<     B(<    B <    B<    B<    B<    B3 |"B%< 
   B
< 
   B< 	   B
<    B<    B0B B<    B3 |"B*<    B"<    B<    B<    B
<    B< 
   B BB-< 
   B3 |"B'<    B<    B<    B<    B<    B BB2<    B3 |"B$< 
   B
< 
   B< 
   B
<    B<    BB,<    B BB/< 
   !@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  i

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
 @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
 " j!@ AO@ i

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

 AO@   k
 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6
# Ak"$ @ AM@  At"j! !@@ E@ Aj AjA :   AjA ) 7  AjA ) 7  AjA ) 7  B 7 A ) 7 Aj AjA  @@ Aj (  Aj(  Aj" G
 

 AjA6  A 6 A 6  6 Aj" Aj"A  A  A j D Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )x7 Aj" Aj  J )PE
   )x7   A :    Aj Aj) 7    Aj Aj) 7    A	j Aj) 7  

 Ak! ( Aj!A!I
 
  A;  

  A;  

  A;  
 Aj$ 
 ("@ ( !@@ Aj!   j-  ""	A N
 @@@@@@@ A j-  Ak 
A   j  O-  AqAG
 Aj

A   j  O,  ! Ak"E
 A
F


A   j  O,  !@@@@ Ak    
 	AjAqAK A@Nr


 A jAqA0O


 AJ


-- Chunk 12 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1651-1800
A   Aj"j  O-  AqAG
A   Aj"j  O-  AqAG
 Aj

 A`qAG


 AN


 	AjAqA
O@ 	A~qAnG A@Nr


 AJ

A   Aj"j  O-  AqAG
 Aj
"" I


   6   6    k6   j6     k6
    j6
  A 6 
# A0k"$ @@ A
j( "E
  (! AkAq"Aj"Aq! AI@A ! 

 A<j! Aq!A !@ (  Ak(  Ak(  Ak(  A k(  A(k(  A0k(  A8k(  jjjjjjjj! A@k! Ak"
 
 A<k
! @ Aj!@ (  j! Aj! Ak"
 

 Aj( @A!A ! A H
 (E AIq
 At!
 E
 @ A N@ A"E
 !

 
 A 
A!A !
  A 6   6   6  A j Aj) 7  Aj Aj) 7   ) 7   6
 A
jA  AjH@A A3 A(jA A  
 A0j$ 

~# A k"$ @@@@@ ("AO@ A8j ( " - 8
 ( 9!  Ak6  Aj6 

 A8jAA̎ A )8" BBR
  B !
 B 7
@ @@ A8j > )<! @ (8E@  (D60   7( ("AI
 A8j ( " - 8E
A A+ A jA A  
  A6     7

 ) 9!   Ak6  Aj6  A@k A0j( 6   )(78 Aj!B !!# A@j"
$  A8j!A !	# A0k"$ @ Aj"("
E@ 
A 6 
 6 
 ) 7
 
Aj Aj( 6 

 Aj! ( !# A k"$   
6
  6 Aj Aj  (!
@ (@@ E@ A 6 A
j 
6  Aj 
6 A!	

  
 
AtjAj( "
6
  Ak"6 Aj Aj  (
!
 (
 

  6 A
j 
6  Aj 
6 
  	6  A j$  (@ A j" Aj( 6  A,j Aj( 6  
 )
7  
 6  ) 7$ 
Aj ) 7  
Aj A(j) 7 

 
 )
7  
A 6 
 6
 
Aj Aj( 6  
 A0j$ ~ 
(@ 
A8j 
Aj( 6  
A0j 
Aj) 7  
A(j 
Aj) 7  
 
) 7 # A0k"$ @ 
A j"
(E@ 
(!"A ; A 6X  6 A 6 A(j 
Aj( 6   
)
7  A j!# Ak"$ @ Aj("
/"A
M@ 
 Aj; 
 A
lj"
A j Aj( 6  
A j ) 7  Aj 
 ( Atj  7  Aj$ 

A A A  
 A6  6 A 6 

 Aj 
Aj( 6   
) 7  Aj 
Aj( 6   
)
7 A j! Aj! 
Aj!# A k"$  Aj!
# A k"$ @ ("/A
O@ Aj" ( Aj( ! (
!	 ( !
  (6H  6D  
6@"A ; A 6X Aj A@k"
 y A$j 6  A 6   
) 7  A,j Ar 	( ! A(j  	( !	  6H  6D  	6@ A0j 
    (0! (4! (8!	 
 A(

 Aj     

-- Chunk 13 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1801-1950
A 6 (!	 (
! (!
 
 6( 
A0j 	6  
A,j 6  A j$  A j( ! A j( !
 (@!
@@@ (
"E
  (! Aj" A(j) 7   ) 7 )0!  (8! (<!
 (X"	@ A j!@  	6T  /6X  Aj6P A j ( 6   )7` Aj! A j!# A@j"$ @  A j"( "	AkF@@ ("/A
O@ Aj" ( Aj( !
 (
!  (68  64  	60# A k"	$  A0j""("/!"A ; A 6X 	Aj  y /"
Aj!@@ 
A
I@   ("k"G
 Aj At jAj At! ( !A !@@  Atj( " ;  6X  
O
    
Ij" 
M


  	)7  6   6  6  A$j 6  Aj 	Aj) 7  Aj 	Aj) 7  	A j$ 

 A
A  
A A(A  
  
68  A,j Ar ( 64  A(j  ( 60     
h  A(

     
h A 6
 A@k$ 

AЃ A5A  
 (
"E
  Aj) 7   ) 7 (! )0!  (8! (<!
 (X"	
 

 ( "("E
 ( !	" 6 A ; A 6X  6  	Aj"6  A ;  6X  6d  6` A j Aj( 6   )7 Aj!	# Ak"$ @  A j"( AkF@ ("/"A
M
A A A  
A A0A؂  
  Aj";  A
lj"
A j 	Aj( 6  
A j 	) 7  Aj  ( Atj  7   AtjAj 
6  
 ; 
 6X Aj$ 
  6  
6  
6  A j$ 

A A+A  
 ($ (( 
(" (Aj6
 A0j$ B 

 
( 
(Atj") !!   7 B
!   !7   7  
A@k$  Ak"
 

   )7  A 6   A
j A j( 6 

 A8jAA̎ A )8!   A6     7 A(j

A A+ A jA A  
 Aj

  A6     7
 A j$ 
~# A@j"$  A0jB 7  A(jB 7  A jB 7  B 7@@@ ("A O@ AjA  ( "A A   A k6  A j6 

 A8jAA A )8"BBR
 BB R
  ( !@@ @  Ak"6  Aj"6  -  ! !

 A8jAA A )8"BBR
 B!A !
 Aj j :   Aj"! A G
 

   /;   Aj - :   A
j" A0j)  7   Aj" A+j)  7   ) #"7  ) !	  Aj )  7    Aj ) 7    A
j 7    Aj 	7    A :  

  A:     7
 A@k$ 
@@@@ A	O@AA K


  6!

AA!
AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K k  M
  A  AjAAAk  KA"jAAjAk6"E
  ! @ Ak" qE@  !

  jA  kq!AA!    A    k Mj"  k"k!  E@        L

  ( !   6    j6 
 
 "AA jM
  !       k"   L

 
  
@@@@@@@  V@  } X
   }T  B} BZq
  V@   }"} X





  I


  I
 !
@@  	F
 	Aj!	 
Ak"
 j"
-  A9F
 
 
 
-  Aj:    	kAj O
 
AjA0 	Ak

A1 E
  A1:  A0 AF
  AjA0 AkA0
!	 Aj" L  Mr
  j 	:   Aj!

  A  

-- Chunk 14 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:1951-2100
  A  
  O
   A  
   ;   6   6 
  A 6 
A!@ ( "A' (("  
 A !A0!@@@@@@@@  ( " ( 
  A F

  ]E
  ArgAvAs

A !

A !

A !

  !

A !  @  !

  ArgAvAs
!  !
A!@ ! ! A !A !@@@@@A  A k" AOAk 
A !A !  !@@@ AqAk 
A!A !

A!A !

A!A !

A ! ! A G

 A'   !

 A !A0A    AtvAq"A
I j!  ! Ak" A    M!
     E
 
A
 
# A k"$  Aj  (! (!	  6@  6<  68 Aj A8j" (
! (!   (!
 ( !# A0k"$ # A k"$  Aj"
@@ A M@ A
jA AE
 A
jA 6  Aj 6   6  6 A 6
  	6# Ak"$  Aj AjA :   A jAغ ) 7  AjA ) 7  AjA ) 7  B 7 Aк ) 7p  A jA " AjA A j A  
Aj A jD Aj$ A 

 
A : 

 
A: 
A
:   A j$   - E@  ) 	7  Aj A!j)  7   Aj Aj)  7   A	j Aj)  7  A 

  - 	6A
:   A0j$  A6j - ;:   A j A j) 7  A(j A j) 7  A0j A j( 6   / 9;4  )@7 - 8!	 (<! 
 
( Ak6  @ 8
  ( Ak6    	A A j A j) 7   A j A(j) 7   A j A0j-  :    /4;8  6 ;  )7 ?  A6j-  : :A ! A8j!A 
6   6   6  A j$ 

# Ak"$   (!  ( !	  (!
@@ 
@@  I
 @  j!  k"AO@ AjA
  e (
!  (

A ! A  E
 @A   j-  A
F
   Aj" G
 
 ! A 
AG@ !

   j" Aj!@   O
    j-  A
G
 A ! ! ! 

  O
 

A! "  "F

@ 
-  @ 	A A (
 

  j!
   k!
 
   G 
 
jAk-  A
F 
:   ! 	 
 
 (
 E


A!

 Aj$  

@@@ @ -  A1I
 A; @ "A J@  6 Aq" O
 A; A;
  6 A j  k"6  A
j  j6  AjA6  AjA 6 A!  O
  k!

 A; A ;
 A6 A 6 A j 6  A
j 6  AjA  k"6 A!  O
  k" M
  j!

 A ;
  6 Aj  k6  E@A!

 A; A jA6  A
jA 6 

A A!A  
A A!A  
 A ;$ A(j 6 A!
   6   6 
  ("Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7   Atj   Atj At
   Atj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6 Aj!   G
 


# A k"$   ("E@A!A 

 A0j 6  A,j ( "6   6   6

-- Chunk 15 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:2101-2250
A ! (
68  6(  6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj Aj ("E
 (!  6l  6X A j!# Ak"$  Aj A@k" A j Aj" (@ (
!A

# A k"$  (! A 6@@ @  A
j( "6 Aj ( ( "( ( (
!@@ (E@  6 ( E@ Aj Aj Aj"AO@ 
 ("AO@ 
 ("AI
 

  6
 A
j! (
! 
! AO@ 
 AI
 

 AI
 

 Aj  
A 

A A 
 !
A
!  6  6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!   6   6  A j$ 
A!	@@ E
   Atj!
  AqAv!
  Aq!
@ Aj!
  - "j! 
 -  "G@  
K
 ! 
" 
F


@@  M@  I
  j!@ E
 Ak! -   Aj! 
G
 
A !	

  A  
  A  
 ! 
" 
G
 

 E
   j!  Aq!@@ Aj!  -  ""A N     F
 -  A qAtr! Aj
!  k"A H
 	As!	  G



A A+AЂ  
 	Aq
# A0k"$   ("/" ("Asj"; Aj Aj" A
lj"	Aj( 6  Aj  Atj"Aj) 7  A j Aj) 7  A(j Aj) 7   	) 7   ) 7@ A
I@  Aj"k G
 Aj  A
lj A
l   Atj At  ;   ) 7   Aj Aj( 6    )7  Aj Aj) 7   A j A j) 7   A(j A(j) 7  A0j$ 
 A
A  
A A(A  
  ("Aj"  (" A
l"	j!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
l"
j    kA
l" Aj Aj( 6   ) 7  Aj" 
j  	j 
   A
lj"Aj Aj( 6  Aj ) 7  Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6  Aj!   G
 


  A
t!A!!A!!@@@@A Av j"AtA j( A
t" G  I"AF@ !

 AqAG
 Aj!
  k!  I



 Aj!
@ A M@ At"A j( Av!A!@ A F
  A j( Av! 
 A 

 A j( A q!A
!  AsjE
A !   A  k!A  AM! Ak! @@  G@  A j-  j" M


 AA  
   Aj"G
 
  !

 A!A  
 Aq
~# A@j"$ A!@  - 
   - !	  ( "("AqE@ ( A A  	AA 	 ((
 
 (    ((
 
 ( A A ((
 
   (
  !

 	E@ ( A A ((
 
 (!
 A:  A 6
  ) 7  Aj6 )!
 )!
  -  : 8  (
64  60  
7(  
7   Aj"6   V
  AjA AV
   Aj (
  

-- Chunk 16 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:2251-2400
  (A A (
(
 !
  A:    :  A@k$   
  ("Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7   A0lj   A0lj A0l
   A0lj A0 Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6 Aj!   G
 


  ("Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7   A8lj   A8lj A8l
   A8lj A8 Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6 Aj!   G
 


# Ak"$   ( ! @ A M@  ("  ( F@# A k"$ @@ Aj"E
 A  ( "At"   I" AM"AsAv!@ @ A6  6   Aj( 6

 A 6
    Aj (! ( E@   6    6

 Aj( "AxF
 E
    
 
 A j$   (!
   Aj6  ( j :  

 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ A 
# A k"$   6@  6<  68 Aj A8j" (! (! Aj  (
! (!# A k"$   6  6 A8j   (8!@ (<"@  (@"6   6
  6 Aj  A 60  )7( A(j  A
lj  A8j (, (0 M@ - 8E@  ) 97  Aj A j)  7   Aj A j)  7   A	j A j)  7  

  - 96A!	
  	:   ((@ (,8
 Aj E
 8

 A:    6
 Aj A j$  A6j" - ;:   A j" A j) 7  A(j" A j) 7  A0j" A j( 6   / 9;4  )@7 - 8! (<!  ( Ak6    A A j ) 7   A j ) 7   A j -  :    /4;8  6 ;  )7 ?  -  : :A ! A8j!A 
6   6   6  A j$ 
  ("Aj"  (" A
lj!@  Aj" /"K@  ) 7  Aj Aj( 6 

  A
lj    k"A
l Aj Aj( 6   ) 7  Aj" j   j 
   jAj :   Aj!  Aj" Aj"I@  Atj  Atj   kAt
  Atj 6   Aj;  K@ Aj!  At jAj!@ ( "  Aj" ;  6  Aj!   G
 


~# A0k"$ A'!@  B T@  !

@ A	j j"Ak    B "B ~}"AqA n"AtA j/  ;   Ak  A lkAqAtA j/  ;   Ak!  B/V ! 
 

 "A K@ Ak" A	jj " AqA n"A lkAqAtA j/  ;  
@ A
O@ Ak" A	jj AtA j/  ;  

 Ak" A	jj A0j:  
  A A  A	j jA' kB A0j$ 
@@@@@@ AjA|q" F
   k"   K"E
 A ! Aq!A!@  j-   F
  Aj"G
 
  Ak"K


 Ak!A !
 AqAl!@@  j"(  s"As AkqAxq
  Aj(  s"As AkqAxq
  Aj" M


  I

A !  F
 Aq!@   j-  F@ !A!

 Aj" G
 


  A  
 !
   6   6 
# Ak"$ A A"E@A A 
  )  7 " A jA;    )  7   A:j Aj)  7   A2j Aj)  7   A*j Aj)  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A;   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A@k Aj)  7  A j Aj)  7  A j Aj)  7   70  7( A :    )  78    A j"  Aj   Aj$ 
# Ak"$ @@@@ ("AqE@ A q
  5 A d! 

  ( ! A !@  jA jA0A   Aq"A
I j:   Ak!  AK  Av! 
 
 Aj" AO
 AA A  jAjA  kB! 

  ( ! A !@  jA jA0A7  Aq"A
I j:   Ak!  AK  Av! 
 
 Aj" AO
 AA A  jAjA  kB! 

  AA  
  AA  
 Aj$   
# Ak"$   ("A j! /"Aj!	   (" Aj"O@  A
lj   A
lj   kA
l
   A
lj" ) 7  Aj Aj( 6  Aj  ( 	    Aj!  Aj" Aj"
I@  Atj  Atj   kAt
  Atj 6   	;  
I@ Aj!  At jAj!@ ( "  Aj" ;  6X Aj!   G
 

 Aj$ 

-- Chunk 17 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:2401-2550
  (!@@    (
F@  AA  Aj"( "j( "
A !

  ("  (
"6
  6

   Aj !@ ! "Aj" Aj ( "! AA j( "
 
 A 6 
@ E
 @    (
AtAܗ j"( G@ AA (  Fj 6  E


  6  
 A A ( A~  (
wq6 
  6  ("@  6  6
  Aj( " E
  Aj  6    6

~# A@j"$     - @  ( !A

  ( !  Aj( "("AqE@A ( A A  AA  ((
 
   (
  

 E@ ( A A ((
 @A !A

 (!
 A:  A 6
  ) 7  Aj6 )! )!  -  : 8  (
64  60  7(  7   Aj6A  Aj (
  
  (A A (
(
 
:    Aj6  A@k$   
  B 7  A  AI
 A AK
  A Avg"kvAq AtkA>j
"6
 AtAܗ j!@@@@A ( "A t"q@ ( ! !  G
 !

A   r6    6 

  t!@  A
vAqjAj"( "E
 At! " G
 

 ("  6
   6   6
   6  A 6
   6 
   6    6    6

# Ak"$   ( ! @ A M@  ("  ( F     ( 
  (j :      (Aj6

 A 6
   A
j AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

 Aj$ A 
# Ak"$   ( ! @ A M@  ("  ( F     ( 
  (j :      (Aj6

 A 6
   A
j AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

 Aj$ A 
# Ak"$   ( ! @ A M@  ("  ( F     ( 
  (j :      (Aj6

 A 6
   A
j AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

 Aj$ A 
# A k"$   ("/" ("Asj"; Aj Aj" A
l"j"	Aj( 6  Aj  Aj"j"
Aj( 6   	) 7   
) 7@ A
I@  Aj"k G
 Aj  A
l"j A
l" Aj  j   ;   ) 7   Aj Aj( 6    )7
  Aj Aj( 6  A j$ 
 A
A  
A A(A  
`
A ( "@Aܘ !@ "(! (! ( ! A
j(  ! Aj! 
 

A A  AM6  
# Ak"$ @ A M@  ("  ( F     ( 
  (j :      (Aj6

 A 6
   A
j AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A


-- Chunk 18 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:2551-2700
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

 Aj$ A 
# Ak"$ @ A M@  ("  ( F     ( 
  (j :      (Aj6

 A 6
   A
j AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

 Aj$ A 
# Ak"$ @ A M@  ("  ( F     ( 
  (j :      (Aj6

 A 6
   A
j AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

 Aj$ A 
# Ak"$   ( !  ( (r@ A 6
  A
j  AO@  AO@  AO@   A?qAr:    AvAr: 
   AvA?qAr:    A
vA?qAr: 
A

   A?qAr:    A
vAr: 
   AvA?qAr: 
A

   A?qAr: 
   AvAr: 
A

   : 
A
;

 (    ((  
 Aj$ 
   ( (
 ("Aw Aws Avsjj ("Aw A
ws A
vsj"6
   (  ("Aw Aws Avsjj ( "Aw A
ws A
vsj"6   (   ( "Aw Aws Avsjj Aw A
ws A
vsj6   (
  (
" Aw  Aws  Avsjj Aw A
ws A
vsj6 
# A k"$ "! ( " #! Aj (  ("!@@@@@ E@ 
AF
  A:  AI


  A:    6 

  $! Aj (
  ("!@@ E@  6
A !@ A
j( "AG
  
"
AF! AI
  
 
  A:  AI
 

  A:    6 
 AO


  A :    6  AO@ 
 AK


 
 AM

 
 A j$ 
# A k"$   ("/" ("Asj"; Aj Aj" A
lj"Aj( 6   ) 7 Aj  A8ljA8@ A
I@  Aj"k G
 Aj  A
lj A
l   A8lj A8l  ;   )7   Aj Aj( 6   Aj AjA8 A j$ 
 A
A  
A A(A  

~# A@j"
$ @  (E@  (!"A 6   Aj( !  )
!
 A;  
7 A
j 6   ) 7 Aj Aj( 6  A6  6 A 6 

 
Aj  Aj( 6  
  ) 7 
A(j  Aj( 6  
  )
7  
A0j! 
A j!  Aj!# Ak"$  A j!
# A@j"$ @ 
Aj"("/A
O@ Aj" ( Aj( ! (
!	 ( !  (68  64  60"A ; A 6  Aj A0j" o A$j 6  A 6   ) 7  A,j Ar 	( "Aj"
 A
l"
j! A(j  	( !@ Aj" /"	K@  ) 7  Aj Aj( 6 


-- Chunk 19 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:2701-2850
 
 A
l"j  	 kA
l"
 Aj Aj( 6   ) 7  Aj" j  
j 

  A
lj"Aj Aj( 6  Aj ) 7   	Aj; 
 AjA(

 Aj!	 ("Aj"
 ("A
l"j!@ Aj" /"
K@  ) 7  Aj Aj( 6 

 
 A
l"j  
 kA
l"
 Aj Aj( 6   ) 7  Aj" j  j 

  A
lj"Aj Aj( 6  Aj ) 7  	 6 	 6 	 ( 6   
Aj; 
A 6 (! (
! (!
 
 6( 
A0j 6  
A,j 6  A@k$  A j( ! A j( ! (H!@@@ ($"E
  ( ! Aj"
 A8j) 7  Aj" A0j") 7   )(7 (@! (D! ( "@ A(j!	 Aj!
@  6\  /6`  Aj6X A j ( 6   )7p Aj 
Aj( 6   
) 7 A j! A j! Aj!# A@j"$ @  A j"( "AkF@@ ("/A
O@ Aj" ( Aj( !
 (
!  (68  64  60# A k"$  A0j"
"("/!"A ; A 6  Aj  o /"
Aj!@@ 
A
I@   ("k"G
 Aj At jAj At! ( !A !@@  Atj( " ;  6   
O
    
Ij" 
M


  )7  6   6  6  A$j 6  Aj Aj) 7  Aj Aj) 7  A j$ 

 A
A  
A A(A  
  
68  A,j Ar ( 64  A(j  ( 60 
   \  A(

    \ A 6
 A@k$ 

AЃ A5A  
 ($"E
  	Aj) 7  
 	Aj) 7   	) 7 ( ! (@! (D! ( "
 

  
) 7  A(j ) 7   )7  ( "("E
 ( !" 6 A ; A 6   6  Aj"6  A ;  6   6l  6h A j Aj( 6   )7p Aj A4j( 6   ),7 A j! Aj!@  A j"( AkF@ ("/"A
M
A A A  
A A0A؂  
  Aj";  A
lj"Aj ) 7  A
j Aj( 6  Aj ) 7  Aj Aj( 6   AtjAj 6   ;  6 
  6  6  6  Aj$ 

A A+A  
 
(4 
(8  ("   (Aj6
 
A@k$ 
~# A k"$   ("/" ("Asj"; Aj A j" A
lj"Aj( 6   ) 7 Aj @ A
I@  Aj"k G
 ( Atj) !	 A j  A
lj A
l   (  Atj!@   At
 
  ;   	7   )7   Aj Aj( 6  A j$ 
 A
A  
A A(A  
# A@j"$   ("/" ("Asj"; Aj Aj" A
lj"Aj( 6   ) 7  Aj  A0ljA0@ A
I@  Aj"k G
 Aj  A
lj A
l   A0lj A0l  ;   ) 7   Aj Aj( 6   Aj AjA0 A@k$ 
 A
A  
A A(A  
~|# A k"$  A(j!# Ak"$   6D A8j 
@@@@@@ (8"E@ A 6L

 (<!  6  6  6 A0j Aj A j (0 (4 (LE
  A j A j( "6   )H7X Aj! (\!# A k"$ @@@ A,M@ A 6   6
  6 A j Aj (H@A!

 A:j" - O:    / M;8 - L! A j( "	E
 A j( !  /8; 	  -  : 
  	6
  :   6 A F
 A;   Aj

 A;  

 A@k Aj( 6   )78 A j A8j  - HE@ A0j A j)  "
7  A(j A j)  "
7  A j A j)  "
7   ) I"
7 Aj 
7   Aj 
7   A	j 
7    
7 A 

 A#j A j( "6    )L"
7  A j 6   
7H A j A: A
:  

 A:    A G: 
 A j$   - E@  ) 7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7  A 

  - !# A k"$   :  A 6 B7 A j" AjAԝ  Aj-  E@ A A

 A A
@A A7 A jA A  
 ( ( Aj A j$ 6A
:   A j

@ A j@ Aj" A j Aj   - E@ A j Aj)  "
7  A j Aj)  "
7  A j Aj)  "
7   ) "

-- Chunk 20 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:2851-3000
7X Aj 
7   Aj 
7   A	j 
7    
7 A 

 A j Aj"( "6    )"
7 [ Aj 6   
7 A6  AjA6  A 6 A 6 A86  Aj6  Aj"6 Aj" AjO ( (!    6A
:  

@@@@ A j@ A 6 B7  A j6X Aj A jv (! - "Ak
 (DAF
A A! A:    6

A A  
 (X"AO@ 
  A G:   6 A(j Aj (("AF
 (,!@@@ E@  6T Aj 
 Aj ( + @ (E
  +"D        f"E
  D     o@e

 AjA6  AjA6  A 6 A 6 A 6  Aj6  A j6 A j" AjO (\ (`!  A:    6 (T"AI
 

 A:    6
 ("AI
 

 D      Ac D        fq@ 

A 
! (" (F Aj  ( 
 (jA A   D     o@d:    (Aj6 (T"AO@ 
  Aj (! ( "AG
 


 Aj A :  

 ("AO@ 
 Aj Aj( 6   )7 Aj Aj  - E@ A j Aj)  7   A j Aj)  7   A j Aj)  7    ) 7 YA 

 A j Aj( 6   )7\A
: X# A@j"$   A j"-  E@  ) 7  Aj Aj)  7   Aj Aj)  7   A	j A	j)  7  A 

 Aj A
j( 6   )7  A,jA6  A4jA6  A 6( A 6  A86<  A8j60  68 Aj" A jO ( (!    6A
:   A@k$ 
 (LE
  A j
 (D"AK


 A:    6 (X"AI
  
 Aj A j (D"AM

 
 Aj$  A&j" - +:   Aj" A8j) 7  Aj" A@k) 7  A j" A j( 6   / );$  )07 (,!   - (A A7j ) 7   A?j ) 7   A j -  :    /$;(  6 +  )7 /  -  : *A ! A(j!A 
6   6   6  A j$ 
|# A k"$  A(j!# Ak"$   6L A@k 
@@@@@@@@ (@"E@ A 6T

 (D!  6d  6h  6` A8j A j A j (8 (< (TE
  Aj A j( "6   )P7 (!# A0k"$ @@ A j"@ A,M@ A 6(  6$  6  Aj A j (@A!

 Aj"	 - :    / ;
 - ! Aj( "E
 A
j( !  /
;   	-  :   6  :    6 A G
  )  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7  A 

 A;  

 A : A
:   

 A:    A G: 
 A0j$   - `E@  ) a7  Aj A j)  7   Aj A j)  7   A	j A j)  7  A 

  - a!# A k"$   :  A 6 B7 A j" AjAԝ  Aj-  E@ A A%

 A A 
@A A7 A jA A  
 ( ( Aj A j$ 6A
:   Aj

@@ A j@ A j A j (hA G
 (d! A :    )  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7   A j

@@@@ A j@ A 6 B7  A j6 A j Ajv (`! - d"Ak
 (LAF
A A! A:    6

A A̽  
 ("AO@ 
  A G:   6 A0j Aj (0"AF
 (4!@@@ E@  6 A j 
 Aj (  +(@ (E
  +"
D        f"E
  
D     o@e

 A jA6  A jA6  A 6h A 6` A 6  Aj6p  Aj6 Aj" A jO ( (!  A:    6 ("AI
 

 A:    6
 ("AI
 

 
D      Ac 
D        fq@ 


A 
! (" (F Aj  ( 
 (jA A   
D     o@d:    (Aj6 ("AO@ 
 Aj Aj (
! ("AG
 


 Aj A :  

 ("AO@ 
 (A G
 (! A :    )  7  Aj Aj)  7   Aj Aj)  7   A	j Aj)  7   Aj
 (TE
 A j



 (L"AK


 A:    6 ("AI
  
 Aj A j (L"AM

 
 Aj$ 

A A+ AjAܸ A  
 A&j" - +:   Aj" A8j) 7  Aj" A@k) 7  A j" A j( 6   / );$  )07 (,!   - (A A7j ) 7   A?j ) 7   A j -  :    /$;(  6 +  )7 /  -  : *A ! A(j!A 

-- Chunk 21 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3001-3150
6   6   6  A j$ 
   (
 (
 ("Aw Aws Awsjj (" (
"s q sj" (j"6
    ( " ( "	 ("sq  	qs A
w Aws A
wsjj"6   	  (j    sqsj Aw Aws Awsj"j6   A
w Aws A
ws   sq  qsj j6 
# Ak"$   (  A 6
 A
j AO@ AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

  : 
A
V Aj$ 

# A k"$  A j   ($!
 ( !
 Aj  (
! (! Aj  (! (!   6h  6d  6` Aj A j (
! (!   (! ( !
# Ak"	$ A A"
E@A A 
 
  )  7 D 
A jA;   
 
)  7   
A j  Aj")  7   
A j  Aj")  7   
A j  Aj")  7   
Aj 
Aj)  7   
Aj 
Aj)  7   
Aj 
Aj)  7   
A;   
A jA;   
 )  7 " 
A*j Aj)  7   
A2j Aj)  7   
A:j Aj)  7   	A6 	 
6 	A6 	AjB 7  	AjB 7  	AjB 7  	B 7  	A j"Ar   	A j )  7  	A j )  7  	A j )  7  	A j 
Aj)  7  	A j 
Aj)  7  	A j 
Aj)  7  	 78 	 70 	  )  7@ 	 
)  7` 	A:   A(j 	  	Aj  	Aj$   ( Ak6  @ 8
  ( Ak6   ( Ak6  
 
( Ak6  A(j A j$ 
# Ak"$  A 6
   A
j AO@ AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

  : 
A
V Aj$ 
 @  A I
 @A  A I
   AI
@  AO@  A
kAк+I  A˦
kAIr
  A
kA
I  A
kAIr
  A~qA
F  A
kAIr
  A`qA
G


  A A,Aֈ AA AZ
A   A
kAI
   A kAtI

  A A(A AAυ AZ
A 
# A k"$ @  ( "-  E@ ( A A ((
 ! 

A!   Aj6
  ( A A ((
 :   6 A :  A 6 Aj A
jA j - !( "E@ A G! 

 
  (!@ AG
  - E
  - Aq
  ( A A ((
 

 ( A A ((
 ! 
 A j$   
# Ak"$   A(j!@@ A   A j-  "k"O@ @  j   A  Aj  (!    )  (
"|7       k!  j!
 A?q!  A@qj! A?M
    )  Av"|7     

  j   A   j!

    A 
   : h Aj$ 
# A k"$   7 @   BZ@ A4jA6  A<jA6  A jA 6  A 60 A 6( A 6H A6D  A@k68  6@ Aj A(jO Aj A j( 6    )7 
AA"E
 A:    ) 	7  Aj Aj)  7     6A

   >A 
6  A j$ 
AA 
# Ak"$   ("/" ("Asj"; Aj Aj" A
lj"Aj( 6   ) 7 @ A
I@  Aj"k G
 Aj" j-  !	 Aj  A
lj A
l Aj  j   ;   	: 
   ) 7   Aj Aj( 6  Aj$ 
 A

-- Chunk 22 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3151-3300
A  
A A(A  
# A0k"$ @ ("E@  A 6   6   ) 7
  Aj Aj( 6 

 Aj (    (@ A j" Aj( 6  A,j Aj( 6    )
7    6  ) 7$  Aj ) 7   Aj A(j) 7 

   )
7   A 6   6
  Aj Aj( 6  
 A0j$ 
# A k"$  A j   ($!	 ( !  Aj  (
!
 (!  6h  6d  6` Aj A j"  ( ( Aj  (
!
 (   (!
 A(j!
 !! ( !# Ak"$ A A"E@A A 
  )  7 D A jA;     )  7   A j Aj)  7   A j Aj)  7   A j Aj)  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A;   A jA;    )  7 " A*j Aj)  7   A2j Aj)  7   A:j Aj)  7   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A,j Aj( 6  A@k Aj)  7  A j Aj)  7  A j Aj)  7   70 A
:    ) 7$  )  78 
  A j"  Aj   Aj$  
 
( Ak6  
 
( Ak6  
 
( Ak6  	 	( Ak6  
 A j$ 
# A0k"$ @  ) B D      cE@ A$jA6  A,jA6  A 6  A 6 A 6
   6  Aj6(  Aj! 

 A :   6  A 6
   6  6A!  A6, A6$ A 6  A 6  Aj6( AjA  AjH
  - E@ A A

A ! 
 A0j$   
~# A@j"$       (@ A8j Aj( 6  A0j Aj) 7  A(j Aj) 7   ) 7  A j xA 

 ( (A
lj"Aj") !  ) 7    7 Aj"( !  Aj( 6   A
j 6 A
6  A@k$ 
	# A k"$  A j   ($!
 ( ! Aj  (
!
 (!   6h  6d  6` Aj A j (!
 (!
 Aj  (
! (!	# Ak"$ A A"E@A A 
   )  7 " A jA;    )  7   A:j  Aj")  7   A2j  Aj")  7   A*j  Aj")  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A;   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A j"Ar 
 
 A j )  7  A j )  7  A@k )  7  A j 	Aj)  7  A j 	Aj)  7  A j 	Aj)  7   70 A	:     )  78  	)  7X A(j   Aj  Aj$   ( Ak6  
@ 
8
 
 
( Ak6  
 
( Ak6  A(j A j$ 
# A k"$   6
  6 Aj Aj  (!@ (@@ E@  A 6  A
j 6   Aj 6 A!

   AtjAj( "6
  Ak"6 Aj Aj  (
! (
 

   6  A
j 6   Aj 6 
   6  A j$ 
	# A k"$  A j   ($!	 ( ! Aj  (
!
 (!   6h  6d  6` Aj A j (!
 (!
 Aj  (
!
 (!# Ak"$ A A"E@A A 
   )  7 " A jA;    )  7   A:j  Aj")  7   A2j  Aj")  7   A*j  Aj")  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A;   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A j"Ar 
 
 A j )  7  A@k )  7  A8j )  7  A j Aj)  7  A j Aj)  7  A j Aj)  7  A
:     )  70  )  7P A(j   Aj  Aj$  
 
( Ak6  
@ 
8
 
 
( Ak6  	 	( Ak6  A(j A j$ 
# A k"$   A   j" I
 A ( "At"   I" AM"At! AIAt!@ @ A6  At6  (6

 A 6
    Aj (! ( @ Aj( 

  6   6Ax
6   6  A j$ 
# A k"$   6
@@@ A
j"A  "@ ( ! Aj" 6  6 A 6  A 6
# A0k"$  Aj# A k"$  Aj ( (" ( k"A   OA 
"6  A6  6 Aj!A ! Aj"( Aj( " ( FA 
!  6  6  )7  A j$  AjA  (" A OA  (A  A 6   )7 A(j @@ - (E@@ - )E
 - *! ( " (F Aj  (  
 (
j :    ( Aj6  A(j  - (E
 

  A 6   (,6  Aj

   )7   Aj A j( 6 
 A0j$ 

 Aj A
jv (!@@@ - "Ak 
  A 6   6  (
" AI


# A0k"$   A G:   6 AjA A  A 6   )7 A(j Aj@@@ - (E@@ - )E
 - *! ( " (F Aj  (  
 (
j :    ( Aj6  A(j Aj - (E
 

  A 6   (,6  Aj (" AI


   )7   Aj A j( 6  (" AM

  
 A0j$ 

 A
j AjA܊ G!  A 6   6 
 (
" AM

  
 A j$ 
# A k"$    6
  ( A A ((
 :   6 A :  A 6 Aj A
jA j! - !   A G ( "E
 A  
  (! @ AG
  - E
   - Aq

-- Chunk 23 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3301-3450
 A  ( A A  ((
 

  ( A A  ((
 
 A j$ 
~# A@j"$    @ (@ A8j Aj( 6  A0j Aj) 7  A(j Aj) 7   ) 7  A j x  A 6

 ( (A
lj"Aj") !  ) 7    7  Aj"( !  Aj( 6   Aj 6 
 A@k$ 
# A k"$ @@   j"K
 A  ( "At"   I" AM"AsAv!@ @ A6  6   Aj( 6

 A 6
    Aj (! ( E@   6    6

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@   j"K
 A  ( "At"   I" AM"AsAv!@ @ A6  6   Aj( 6

 A 6
    Aj (! ( E@   6    6

 Aj( " AxF
  E
     
 
 A j$ 
# A0k"$  ( !A!
  ("A ( !
 Aj! ("! (!A !@@ "
E
   
j! - ! !
@@@@@@ 
,  "A N@  Aq"j-  "AF@  6  	6 
	
  K
 ! ! 


 A 6  	6 

  A  
@  -  A:l j":   Aj! Av! Ak"
 

 @  O
  j :   Aj!
 	Aj!	 
Aj"
 G
 
 
E
    K!@ -   G
  G@ Aj!  jA :   Aj! 
Ak"




 B7 

 B7 

  M@ AI
 Av!  jAk!@ -  !  -  :    :   Ak! Aj! Ak"
 


  A  
 A 6  6 
  6  6  
6@ (
A F@ (! A(j" 6   6$  
6  A j   A
j ( 6    ) 7A !


   )7 Aj
   
6  A0j$ 
~# A k"$ @A A (  "@ ( 
 A6   ( !
  (!# Ak"$  Aj"(
"A
k! ( " 
  
"q!  "BB~! @@   j)  " "B B}B!@ P@  BBPE
   Aj"j q! 

 z! B} ! A  Av  j qk"A
lj"(  
G
  ( G
 

 Aj 6  Aj 
6  A
jA6  Aj 6    A
lj6A 

 (E@ Aj!A ! A !A !# A k"
$ @ ("
Aj" 
I@ 
(!  
( !

@@ ( " Aj"AvAl AI"
Av I@  
Aj"    I" AI
  AI@A!  At" AI
A  AnAkgvAj!

 
(! 
(
" AxG


 (
!@@ Aq@  Aj"  I  Or
  Aj

   I"E
  !   j
!   j" ) "BBB B߿ |7 A!


@@ AO@  j )  7  

 Aj   E

 A
k! !A ! @@   "j"-  AG
   Atlj!  AsA
lj!@@ ( "  (  " q"	!  	j)  B"P@A! @   j!  Aj!    q"j)  B"P
 

  zAv j q"j,  A N@ ) BzAv!
 !  	k  	ks qAI
  j" -     B":   Ak q jAj :  AG@At!   Atlj!@   j"-  !	    j"-  :    	:    Aj" 
 

-- Chunk 24 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3451-3600



 A:   Ak q jAjA:    AsA
lj" Aj Aj(  6     )  7  

  B" :   Ak q jAj  :  
 Aj!  A
k!  G
 

  
 
k6Ax! 

AA  AI!
 
Aj! # A k"$ @@@ B
~"B 
  "Aj" I
   Axq"jAj" I
 

 )!  A 6
   7 

 A N@  AA
"
@  A 6    
j6
   Ak"6     AvAl AI6

 A 
 )!  A 6
   7 
 A j$  
(! 
(!  
(
"E
  A A	j!   
k!
@ E@  
6  6  (
!  6


 (
"A
k!
@  	j,  A N@  
 	Atlj" ( "  ( " q"j)  B"P@A! @   j!  Aj!    q"j)  B"P
 

  zAv j q" j,  A N@ ) BzAv! 
   j Av":    Ak q jAj :     AsA
lj" Aj  	AsA
lj"Aj(  6     )  7  
  	F 	Aj!	E
 
  6
  
6  6  
 Ax! 

Ax!   A
lAjAxq"jAwF
   k8
   6  6  
A j$ 
  7 Aj 6  Aj 6  Aj 
6 A
6  Aj$  ( E@ (

 Aj( ! Aj) ! )!  
 6  7  (
" ( " "q" j)  B"P@A!@   j!  Aj!    q" j)  B"P
 

  zAv  j q"j,  " A N@  ) BzAv"j-  ! 
  j Av":   Ak q jAj :    (  Aqk6  (Aj6  Atlj" A
k" ) 7  Aj Aj( 6   
Ak(   ( Aj6  A j$ 
A A  A A̗  
A A A A  
# A k"$   A   j" I
 A ( "At"   I" AM"AsAv!@ @ A6  6  (6

 A 6
    Aj (! ( @ Aj( 

  6   6Ax
6   6  A j$ 
~# A k"$  (E@ (
! Aj"A 6  B7  Aj6
 A
jA  H Aj ( 6   )7 
 ) ! B7  Aj" Aj"( 6  A 6   7 A
A"E@A
A 
  ) 7  Aj ( 6   A 6   6  A j$ 
# A k"$ Aؗ Aؗ ( "Aj6 @@ A H
 A A ( Aj"6  AK
   :   6  6 A 6
 A 6Aȗ ( "A H
 Aȗ  Aj6 Aȗ AЗ (     (   ) 7AЗ (  AjAԗ ( ( Aȗ ( Ak 
6  AK
  

 
 
# Ak"$    (     ((
 :    6  E: 	 A 6    j!  - ! A G  ( "E
 A 
  (!@ AG
  - 	E
  - Aq
 A ( A A ((
 

 ( A A ((
 
 Aj$ 
 @ @@@@@ A N@ (
 
A!



 ("E@ E@A!

 A

 (  A 

 A
"E

   6  Aj 6   A 6 
   6  AjA6   A6 
   6
  AjA 6   A6 
# A@j" $ @ A(j( "A ( K
   A$jA6   A,jA6   A 6   A 6  A 64   6<    A0j6(    A<j60  Aj"  Aj"O  (
  (!    6  AtA j(    ("AI
  
  A@k$ 
# Ak"
$   (     ((
 ! 

-- Chunk 25 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3601-3750
A : 
 
 : 
 
  6 
Aj    ^ A  	^!  
- 
"A G 
- 
E
 A 
   ( " - AqE@  ( A A  ((
 

  ( A A  ((
 
 
Aj$ 
# Ak"$  ("A j! ("Aj"	 /"M@  	A
lj  A
lj  kA
l
  A
lj" ) 7  Aj Aj( 6  Aj  ( Aj"    ;   6   6   ( 6  Aj$ 
  @@ @@@@ A N@ (E
 ("
 


  AjA 6 

 (    

 E

  

   6  AjA 6 

 
"@   6  Aj 6 A 

   6  Aj 6 
A
6 
@ @@@@ A N@ (E
 ("
 
 

  AjA 6 

 (    

 
  

  
"@   6  Aj 6   A 6 
   6  Aj 6 

   6  AjA 6 
  A6 

# Ak"	$ # A0k"$  B 7  A(j6  Aj"~@@@@@@@@@@@@@ -  Ak
	


 
 ) B4|


 ) B$|


 ) B
|


 )  A
j5 |B |
	
 ) B|

 ) B
|

 ) B$|

 ) B$|

 ) B
|

 )  A
j5 |B |

 )  A
j5 |B |

 )  A
j5 |B4|

 ) B|
7 @  (A  A 6  ) 7  Aj6 Aj!# Ak"$ @@@@@@@@@@@@@@ -  Ak



	 
 A 6 ( " Aj"A  )7  A  )7  A Aj !


 A6 ( " Aj"A  )7  A


 A6 (  AjA


 A6 ( " Aj"A  )7  A
	
 A Aj!

 A Aj!

 A6 ( " Aj"A  )7  A

 A
6 (  AjA

 A
6 ( " Aj"A  )7  A  Aj(  A
j( "
 Aj !

 A
6 ( " AjA Aj!
@   
j-  :   AjA Aj"A G
 
  Aj(  A
j( "
 A0j !

 A	6 ( "
 AjA Aj!@   j-  :  
 AjA Aj"A G
 
  Aj(  A
j( "
  )7 

-- Chunk 26 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3751-3900
 AjA A8j !

 A6 ( "
 AjA A j!@   j-  :  
 AjA Aj"A G
 
  Aj(  A
j( "
  )7 
 Aj"A  )7 
 A A@k !

 A6 ( " AjA Aj!@   j-  :   AjA Aj"A G
 

 Aj$  E@ 	 )7  	Aj Aj( 6 

 	A 6 	 6  Aj
 
 A0j$  	(E@ 	 	( 6
A A+ 	A
jAģ AĤ  
   	) 7,  A4j 	Aj( 6   Aj Aj)  7    Aj Aj)  7    Aj Aj)  7     )  7     ) 7   A(j Aj( 6  	Aj$ 
# A k"$   A   j" I
  ( ! Aj"  A At"   K" AM" AsAv  (! ( @ Aj( 

  6   6Ax
6   6  A j$ 
 ("/"A
l!A! A j! (! (!A!@@ E@ !

 Aj! A
k! "A
j!   ( (Aq"AF
 
 AF
 A !
   6   6 
 ("/"A
l!A! Aj! (! (!A!@@ E@ !

 Aj! A
k! "A
j!   ( (Aq"AF
 
 AF
 A !
   6   6 
 ("/"A
l!A! Aj! (! (!A!@@ E@ !

 Aj! A
k! "A
j!   ( (Aq"AF
 
 AF
 A !
   6   6 
 ("/"A
l!A! Aj! (! (!A!@@ E@ !

 Aj! A
k! "A
j!   ( (Aq"AF
 
 AF
 A !
   6   6 
 ("/"A
l!A! Aj! (! (!A!@@ E@ !

 Aj! A
k! "A
j!   ( (Aq"AF
 
 AF
 A !
   6   6 
 ("/"A
l!A! Aj! (! (!A!@@ E@ !

 Aj! A
k! "A
j!   ( (Aq"AF
 
 AF
 A !
   6   6 
# A k"$   A   j" I
  ( ! Aj"  A At"   K" AM" AsAv  (! Aj(  ( 
   6   6Ax
6   6  A j$ 
# A0k"$   7@ - E@ BT
 A
jA6  A$jA6  A 6 A 6 A6,  A(j6   Aj6( Aj!A

 !A 

 !A 
!   6   6  A0j$ 
# A@j"$  B 78 A8j  ( 3 AjA6  A
jA6   (<" 60  (86,   6( A6$ A 6 A 6  A(j6   A j6  Aj ((@ (,8
 A@k$ 
# Ak"$   -  !A ! @   jA jA0A7 Aq"A
I j:    Ak!  "Av! AK
 
  Aj"AO@ AA  
 AA A   jAjA   kB Aj$ 
# Ak"$   -  !A ! @   jA jA0A  Aq"A
I j:    Ak!  "Av! AK
 
  Aj"AO@ AA  
 AA A   jAjA   kB Aj$ 
# Ak"$   ( ! @  jA jA0A   Aq"A
I j:   Ak!  AK  Av! 
 
 Aj" AO@  AA  
 AA A  jAjA  kB Aj$ 
# Ak"$   ( ! @  jA jA0A7  Aq"A
I j:   Ak!  AK  Av! 
 
 Aj" AO@  AA  
 AA A  jAjA  kB Aj$ 
~# A k"$ @@ ("AO@ Aj ( " - 
 ) 	!  Ak6  Aj6    7  A 6 

 AjAA̎ A  A6    )7
 A j$ 
A A+ AjA A  

# A0k"$   6(  6$  6  Aj A j (
! (! Aj  (!
 Aj!
 (!# Ak"$   6  6 A8j   (8! (<"@  (@"6   6
  6 Aj  A 60  )7( A(j  A
lj  (,! (0!# A@j"$ # A k"$  A:  At! A(jAr!	@@ Aj   (
"6
  (6     6  " (F@# Ak"$  Aj Aj A@@ (
"
AxG@ 
E
 ( 
 
 Aj$ 

 
 ( !
 (
 Atj"A6  Aj6   ( Aj"6  A(j (
  M - (E@ A:    	)  7  A!j - :   Aj 	Aj)  7   Aj 	Aj)  7   A	j 	Aj)  7   (E

-- Chunk 27 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:3901-4050
 (
8

 - ) (@ (
8
AF@  - Ak:  
Aj"
AqAG


 A :  
 A j$  -  E@ A4jA6  A<jA 6  A 60 A 68 A 6( A(jA  
 A8j" ArA! A@k$  A j A j) 7  A j A j) 7  A j A@k) 7   )87` - X! A&68 A  A j A  (8! ((@ (,8
 Aj @ 8
A 

 !A
! Aj 
 6 
 6  Aj$  (
! (! 
 
( Ak6    A G6   A  6   6  A0j$ 
# A@j"$  A 6( A0j"A 6  Aj6  A(j6  (4" (0"G@ A   k
   )7    Aj A j) 7    Aj Aj) 7    Aj Aj) 7   A@k$ 
# A k"$  Aj   (!  (! Aj  (
! (!   (! Aj"     ( f  ( Ak6   ( Ak6     ( Ak6   A j$ 
# A k"$  Aj   (! (!  Aj  (
! (!   (!	 Aj!
 ( !# Ak"$ AA"E@AA 
  )  7  AjA;     )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A;   A jA;    )  7 " A*j Aj)  7   A2j Aj)  7   A:j Aj)  7   A )  7 D A jA )  7   A jA )  7   A jA )  7   A jA ;   AjA ;   A jA )  7   A jA )  7   A jA )  7   A )  7 f A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A:    7( 
  A j"  Aj   Aj$  	 	( Ak6   ( Ak6   ( Ak6  
 A j$ 
# A k"$  Aj   (! (!  Aj  (
! (!   (! Aj!	 ( !# Ak"$ A A"E@A A 
  )  7 " A jA;     )  7   A:j Aj)  7   A2j Aj)  7   A*j Aj)  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A;   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A9j Aj)  7   A1j Aj)  7   A)j Aj)  7   A:    )  7 ! 	  A j"  Aj   Aj$   ( Ak6   ( Ak6   ( Ak6  	 A j$ 
# Ak"$ @@ (@ "( " (OA   Aj6  ((  !A
!  6  6  ( 

  A ; 

 (!A!  (
Aj6
 Aj @ - E@  A:   Aj - 	:  A !

   (
6
   :  
 Aj$ 
# A@j"$   6
   6  6  6 A$jA6  A,jA6  A<jA6  A 6  A 6 A64  A0j6(  Aj68  Aj60 Aj  

~# A k"$ @@ ( "E@ ( ! A6  (! (!@@@@ Ak 
 A 6

 @@ (! Ak"
 

 A 6  6 A 6 

  (
6  6  6 
 (@ Aj Aj( 6   ) 7 Aj"(! ( !@ (AA @ 8
 Aj!"
 

  A 6

  Ak6  "	E
# A@j"$  A j 	Aj"
( 6   	) 7 A(j! Aj"( !@@ (" ("/I@ ! !

@ ("@ /! Aj!
AA @ 8
 E@ A 6

 !  "/O
 

 Aj!
@ E@ !

  
AtjAj( !A !
 Ak"E
 @ (! Ak"
 

  6  6  6
  
6  6 A 6 
 (,E@A A+A  
 Aj A8j) 7  Aj A0j) "
7   )("
7  
 
>  	 
7    )
7   Aj Aj( 6  A@k$ 
 A j$ 
A A+A  

~# A k"$ @@ ( "E@ ( ! A6  (! (!@@@@ Ak 
 A 6

 @@ (! Ak"
 

 A 6  6 A 6 

  (
6  6  6 
 (@ Aj Aj( 6   ) 7 Aj"(! ( !@ ( AA @ 8
 Aj!"
 

  A 6

  Ak6  "	E
# A@j"$  A j 	Aj"
( 6   	) 7 A(j! Aj"( !@@ (" ("/I@ ! !

@ ( "@ /! Aj!
AA @ 8
 E@ A 6

 !  "/O
 

 Aj!
@ E@ !

  
AtjAj( !A !
 Ak"E
 @ (! Ak"
 

  6  6  6
  
6  6 A 6 
 (,E@A A+A  
 Aj A8j) 7  Aj A0j) "
7   )("
7  
 
>  	 
7    )
7   Aj Aj( 6  A@k$ 
 A j$ 

-- Chunk 28 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4051-4200
A A+A  

~# A k"$ @@ ( "E@ ( ! A6  (! (!@@@@ Ak 
 A 6

 @@ (! Ak"
 

 A 6  6 A 6 

  (
6  6  6 
 (@ Aj Aj( 6   ) 7 Aj"(! ( !@ ( AA @ 8
 Aj!"
 

  A 6

  Ak6  "	E
# A@j"$  A j 	Aj"
( 6   	) 7 A(j! Aj"( !@@ (" ("/I@ ! !

@ ( "@ /! Aj!
AA @ 8
 E@ A 6

 !  "/O
 

 Aj!
@ E@ !

  
AtjAj( !A !
 Ak"E
 @ (! Ak"
 

  6  6  6
  
6  6 A 6 
 (,E@A A+A  
 Aj A8j) 7  Aj A0j) "
7   )("
7  
 
>  	 
7    )
7   Aj Aj( 6  A@k$ 
 A j$ 
A A+A  

~# A k"$ @@ ( "E@ ( ! A6  (! (!@@@@ Ak 
 A 6

 @@ (! Ak"
 

 A 6  6 A 6 

  (
6  6  6 
 (@ Aj Aj( 6   ) 7 Aj"(! ( !@ (AA @ 8
 Aj!"
 

  A 6

  Ak6  "	E
# A@j"$  A j 	Aj"
( 6   	) 7 A(j! Aj"( !@@ (" ("/I@ ! !

@ ("@ /! Aj!
AA @ 8
 E@ A 6

 !  "/O
 

 Aj!
@ E@ !

  
AtjAj( !A !
 Ak"E
 @ (! Ak"
 

  6  6  6
  
6  6 A 6 
 (,E@A A+A  
 Aj A8j) 7  Aj A0j) "
7   )("
7  
 
>  	 
7    )
7   Aj Aj( 6  A@k$ 
 A j$ 
A A+A  

~# A k"$ @@ ( "E@ ( ! A6  (! (!@@@@ Ak 
 A 6

 @@ (! Ak"
 

 A 6  6 A 6 

  (
6  6  6 
 (@ Aj Aj( 6   ) 7 Aj"(! ( !@ (AA @ 8
 Aj!"
 

  A 6

  Ak6  "	E
# A@j"$  A j 	Aj"
( 6   	) 7 A(j! Aj"( !@@ (" ("/I@ ! !

@ ("@ /! Aj!
AA @ 8
 E@ A 6

 !  "/O
 

 Aj!
@ E@ !

  
AtjAj( !A !
 Ak"E
 @ (! Ak"
 

  6  6  6
  
6  6 A 6 
 (,E@A A+A  
 Aj A8j) 7  Aj A0j) "
7   )("
7  
 
>  	 
7    )
7   Aj Aj( 6  A@k$ 
 A j$ 

-- Chunk 29 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4201-4350
A A+A  

~# A k"$ @@ ( "E@ ( ! A6  (! (!@@@@ Ak 
 A 6

 @@ (! Ak"
 

 A 6  6 A 6 

  (
6  6  6 
 (@ Aj Aj( 6   ) 7 Aj"(! ( !@ (XAA @ 8
 Aj!"
 

  A 6

  Ak6  "	E
# A@j"$  A j 	Aj"
( 6   	) 7 A(j! Aj"( !@@ (" ("/I@ ! !

@ (X"@ /! Aj!
AA @ 8
 E@ A 6

 !  "/O
 

 Aj!
@ E@ !

  
AtjAj( !A !
 Ak"E
 @ (! Ak"
 

  6  6  6
  
6  6 A 6 
 (,E@A A+A  
 Aj A8j) 7  Aj A0j) "
7   )("
7  
 
>  	 
7    )
7   Aj Aj( 6  A@k$ 
 A j$ 
A A+A  
# Ak"$   A ! (!@@@@@@ ( Ak 
   6

 Aj  - 
 - 	!A!
   :   Aj :  

   (
6
A!
   :   Aj$ 

# A k"$  Aj   (
!
 (!  Aj  (!
 (!	 Aj  (
!
 (!# A k"$  Aj!# Ak"$ @@A A"@ A jB 7  A jB 7  A jB 7  B 7@ Aj   	 B  A@kf A jB 7  A jB 7  A jB 7  B 7` Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A:   )  7 A A" E
  A jA )  7    A jA )  7    A jA )  7    A )  7 D  A jA ;     	)  7    Aj 	Aj)  7    Aj 	Aj)  7    Aj 	Aj)  7    A;    A jA ;    A:jA )  7    A2jA )  7    A*jA )  7    A )  7 " A6   6 A6 A8j A j Aj" Aj  AjA8!  A6   6 A6   Aj$ 

A A 
A A 
  (" 6
   6  (6     (A8lj6 6# A k"$  Aj Aj) "7   ) 7@ (
" "F
  A@k"Aj!	@  A8j" 6
 ($"E
 Aj"
 A$ 	 A0j) 7   )(7   6<  

6 (  
( ) ("AO@ 
  " G
 

 Aj"("  ("kA8n!   G@ A,j! @  A
k( @  Ak( 8
    A8j!  Ak"
 

 ( @ (
8
 A j$  ( A j$  
 
( Ak6  
 
( Ak6  
 
( Ak6  A j$ 
# A k" $   A36
  A 6  A 6  B7  A j"  AjA   Aj"(  ( @A A7  A jA A  
  (  (   Aj  A j$ 
   (A F@ A 6   (")  7   A	j Aj)  7    Aj Aj)  7    Aj Aj)  7   A 

   ) 7  A
j Aj( 6 A
:  
~# A0k"$ @ @ ( 
 A 6  Aj A$  Aj A$j) 7    Aj A
j) 7    Aj Aj) 7     )
7   8 A0j$ 
 
 
t@  ( "-  "AkAI
  @ Aj

 - AG
  Aj( "(  ((   ("(@ ( ( 8
 (8
  ( 8
o@ E@A!

@@ A K
  At"A H
  AIAt! E
  

 
 
"
    
   6   6 
# Ak"$ # A0k"$ @@   Atj"
G@@@ E@ A 6$

 A j  ($"

 A j Aj" 
G
 

 A 6 B 7 

 ( ! ((!A0A"E@A0A 
 Aj"	 6 	A6  (!	 (
" 6  6  6  Aj"A6   6  	6 Aj!# A k"$ @@ Aj" 
F
 @@@ E@ A 6


-- Chunk 30 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4351-4500
 Aj  (

 Aj Aj" 
G


 Aj" Aj"
( 6   )7  (E
 Aj! 
 ( 6   ) 7 ("	 ( F@@# Ak"
$ # A k"$  
Aj"A  	 	Aj"K
 A ( "At"
   
I" AM"
A
l! 
Aժ IAt!@ @ A6  A
l6  (6

 A 6
    Aj (! ( @ Aj( 

  
6   6Ax
6  6  A j$ @ 
(
"AxG@ E
 
(  
 
Aj$ 

 

 ( 	A
lj" )7  Aj 
( 6   	Aj6  
G
 

 A 6
  A j$  Aj ( 6   )7 
 A0j$ @  (F@   ) 7   Aj Aj( 6 

AԤ A
!  A 6   6   ( E
  (8
 Aj$ 
# A k"$    :  A 6 B7 A j"  AjAԝ @@@ Aj-  Ak 
  Aı A5

  A A/

  A A

@A A7 A jA A  
 ( ( Aj A j$ 
b~   B" B"~"  B "~"  B "~|"B |"7     T  ~  TB  B ||7
  kA
n"  (   ("kK@# Ak"$  Aj    @@ (
"AxG@ E
 (  
 Aj$ 

 
  (!
  G@  ( Atj!@  Aj) 7  Aj! Aj! A
j" G
 

   6
# Ak"$  Aj ( ( "( ( (
! ("E@@ (E
  A
j( "AI
  
 A6 A
j 6 
   6    6 Aj$ 
# A k"$  Aj"B 7  Aj"B 7  Aj"B 7  B 7  A  A A   Aj ) 7    Aj ) 7    Aj ) 7     ) 7   A j$ 
y# A0k"$   6   6  AjA6  A
jA6  A,jA 6  A 6 A 6 A 6$  A j6  6(  Aj6  Aj  
# Ak"$    ( "E@  A : A 

  Ak6  Aj! (!# Ak"$  A : @ ("@ AjA ( "AAԥ   Ak6  Aj6   - : 

 B 7  Aj6A!
  :   Aj$  - E@  Aj - 	:    A: A 

   (
6A
:   Aj$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
ljAj     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
lj"Aj Aj     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
ljA j     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
ljAj     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
lj"Aj Aj     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
lj"Aj Aj     ("

-- Chunk 31 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4501-4650
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
lj"Aj Aj     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   ("A
ljAj  AtjAj     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   ("A
ljAj  A8lj"((@ A,j( 8
     ("
 

  Aj$  A0j$ 
# A0k"$   ("E@A ! A

 A j 6  A
j  ( "6   6  6
  (! A 
!   6(  6  6# Ak" $    Aj"  ("@@   (A
lj"Aj Aj     ("
 

  Aj$  A0j$ 
n# A k"$ @  @  ( AF
 Aj  A
j)  7  Aj  Aj)  7  Aj  A
j)  7    ) 7   A j$ 
 
 
t# A k"$ @  @    ( 
   )  7   A
j Aj)  7    Aj Aj)  7    A
j Aj)  7    A 6  A j$ 
 
 
g# A@j"$    K A j KA!A ! @ A j  j-     j-  s"A  krA N q!  Aj" A G
 
  A@k$ 
# A k"$  Aj   (! (!  Aj  (
! Aj! (!# Ak"$ A A"E@A A 
  )  7 " A jA;     )  7   A:j Aj)  7   A2j Aj)  7   A*j Aj)  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A;   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A:    7(   A j"  Aj   Aj$   ( Ak6   ( Ak6   A j$ 
x  - !  - E@ A G
A! E@  ( "- AqE@   ( A A ((
 " :   
 ( A A ((
 !
   :  
# A k"$  Aj   (! (!  Aj  (
! Aj! (!# Ak"$ A"A"E@A"A 
 A;     )  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A6  6 A6 AjB 7  AjB 7  AjB 7  B 7  A9j Aj)  7   A1j Aj)  7   A)j Aj)  7   A:    )  7 !   A j"  Aj   Aj$   ( Ak6   ( Ak6   A j$ 
# A k"$  Aj   (! (!  Aj  (
! Aj! (!# A0k"$ A A"E@A A 
  )  7 D A jA;     )  7   A j Aj)  7   A j Aj)  7   A j Aj)  7   Aj  Aj)  7   Aj  Aj)  7   Aj  Aj)  7   A;   A jA ;   A:jA )  7   A2jA )  7   A*jA )  7   A )  7 " A6(  6$ A6  AjB 7  AjB 7  AjB 7  B 7   A  A j A0j$   ( Ak6   ( Ak6   A j$ 
r# A k"$ A   g
  (! ( ! A 6
 A 6 A6 A 6 A 6A   AjH
   Aj g
 A j$ 
# Ak"$ @ ( "  Ak6  "E
 Aj! ( !@@@ (" ("/I@ !

@ ( "E
 Aj! /!  "/O
 

 Aj!@ E@ !

  AtjAj( !A ! Ak"E
 @ (! Ak"
 

  6  6 A 6    A
lj"Aj6  Aj6 

A A+A  
 (
! (A 
!   6   6  Aj$ 
A A+AĆ  
# Ak"$ @ ( "  Ak6  "E
 Aj! ( !@@@ (" ("/I@ !

@ ( "E
 Aj! /!  "/O
 

 Aj!@ E@ !

  AtjAj( !A ! Ak"E
 @ (! Ak"
 

  6  6 A 6    A
lj"Aj6  Aj6 

A A+A  
 (
! (A 
!   6   6  Aj$ 
A A+AԆ  
s # A0k"$ A -  @ AjA6  A
jA6  A 6 A 6 A 6$   6,  A j6  A,j6  AjA  
 A0j$ 
y# Ak"$  (E@ (
! Aj"A 6  B7   6
 A
jA  H Aj ( 6   ) 7 
  A 6   6  Aj$ 
l# A@j"$  A 6 B7  Aj" A    @A A7 A8jA AĚ  
 ( (   A@k$ 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjAܗ  AjH A j$ 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  AjH A j$ 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  AjH A j$ 
j# Ak"$  @      (  (" ( I@   (!
 (!   6   6  Aj$ 
A A2 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  AjH A j$ 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  AjH A j$ 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  AjH A j$ 
k Aj( !@@@ Aj( "E@A!

 A H
 A"E

   !   6   6   6 
 
 A 
]# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  AjH A j$ 
m# Ak"$  Aj A  (! (

-- Chunk 32 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4651-4800
  !A
A"E@A
A 
  6  6  6     A  Aj$ 
^  ( "@  AjA  AG
  Aj( !  ("@@ (! Ak"
 

  A 6
   6  B7   Aj
^  ( "@  AjA  AG
  Aj( !  ("@@ (! Ak"
 

  A 6
   6  B7   Aj
^  ( "@  AjA  AG
  Aj( !  ("@@ (! Ak"
 

  A 6
   6  B7   Aj
^  ( "@  AjA  AG
  Aj( !  ("@@ (! Ak"
 

  A 6
   6  B7   Aj
^  ( "@  AjA  AG
  Aj( !  ("@@ (! Ak"
 

  A 6
   6  B7   Aj
^  ( "@  AjA  AG
  Aj( !  ("@@ (! Ak"
 

  A 6
   6  B7   Aj
S# A k"$   (!  (  Aj Aj) 7  Aj Aj) 7   ) 7  AjH A j$ 
V# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjAܗ  AjH A j$ 
# A@j"$ # A@j"$ @@  @  ( 
  A 6     A "ArA<  8 A@k$ 

 
 
 ( @ A$j( 8
 A,j" ("@  (! @    A
j  A
j!  Ak"
 

 (,@ A0j( 8
 A@k$ 
V# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  AjH A j$ 
V# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  AjH A j$ 
\# Ak"$   (!  (!    @@   6
  A
jA   Aj!  Ak"
 

  Aj$ 
g# A0k"$  A6
   6 A
jA6  A$jA6  A 6 A 6 A6,  A(j6   Aj6( Aj  
V# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  AjH A j$ 
~# A k"$ # A0k"$ # A k"$ @@ B 7 ("AM@ B 7 Aj

 AjA ( "AA   Ak6  Aj6  Aj ) (E
 (
! A 6  6 

@ (" ("I@ AjA%A A  )!AA"
AA 
   k6  ( " j6  Aj A  (! (
  !  6  6  6 

  7 A :   A 6  6 
 A j$  ( !@@ ("@   ("C@ ( @ )"BB R

  6  6

  6  6
  6  7  A(j ) 7  A:   )(7
 Aj! Aj A 6  6 

 A 6
  6 
 A0j$  ( !@ ("@  (6  6  6   Aj") 7   Aj Aj( 6 

  A 6   6 
 A j$ 
c# Ak"$  (! Aj ( -   (
! ("E@     (Aj6
   6    6 Aj$ 
]# Ak"$  Aj   (
!  (   (! ( A E  ( Ak6     ( Ak6  Aj$ 
Z# Ak"$   6  ( "  AjAA !@   j-  :    AjA Aj"A G
 
 Aj$ A 
[A!@ AI
  !@@ Ak 
 Ak!A!A!

A !A!A!
   6   6   Aj 6 
\A$A"E@A$A 
 A 6    )  7  A
j  Aj)  7   Aj  Aj)  7   A
j  Aj)  7   
J# A k" $   AjA6   A
jA 6   A 6  A 6  A 6  AjA  
M# A@j"$ @ @ ( 
 A 6     A<" ArA8 8  A@k$ 
 
 
	# A@j"$ @  @  ( 
  A6  Aj"   Aj"(" ( F@# Ak"$ # A k"$  Aj"	A   Aj"K
 A ( "At"   I" AM"A8l! AɤIAt!
@ @ A6  A8l6  (6

 A 6
   
 Aj (! ( @ Aj( 

  6   6Ax
6 	 6  A j$ @@ (
"AxG@ E
 (  
 Aj$ 

 
 (!
 ( A8lj A8  (Aj6  A 6  A@k$ 
 
 
L@  ("E
   ( !@ ( "AO@ 
 Aj! Ak"
 
  (E
   ( 8

`# Ak"$  Aj" 6   Atj6  (
" ("G@@   (  Aj(  Aj" G
 

 Aj$ 
Y# Ak"$  Aj ( ( ( (

-- Chunk 33 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4801-4950
! ("E@    
   6    6 Aj$ 
O# Ak"$     (!  Aj" (  Aj J (    ( Ak6  Aj$ 
m @ E@A!

 A N@ E@ A

@ AR"E
  
  A  
 
"
 A 
 
   6   6 
# Ak"$  Aj! (!# A@j"$  A0j @ (8@ A(j A8j( 6   )07  Aj  (
! (!@  F@ A8j A(j( 6   ) 70 Aj A0j (
! (

 Aj A j  Aj! (E
 
 (! ( "AI
 

 (0!
A
!  6  6  A@k$  (
! ("E@    
   6    6 Aj$ 
# A k"$  Aj  (
! (!# A0k"$  Aj"A 6 B7   A # A k"$  A j Aj)  7  A j Aj)  7  A@k Aj)  7  A 6X  )  78 A(j" A8j AjA6  A
jA6  A76$ A 6 A 6  6   A j6  Aj  A j$ @Aج A7 A(jA A  
 A0j$   ( Ak6      ) 7  A j$ 
# A k"$  Aj  (
! (!# A0k"$  Aj"A 6 B7   A # A k"$  A j Aj)  7  A j Aj)  7  A@k Aj)  7  A 6X  )  78 A(j" A8j AjA6  A
jA6  A=6$ Aػ 6 A 6  6   A j6  Aj  A j$ @A A7 A(jA A  
 A0j$   ( Ak6      ) 7  A j$ 
e# Ak"$  ( Aj"AA -  6 A 6  (
! ("E@    
   6    6 Aj$ 
T# Ak"$  Aj ( )  (
! ("E@    
   6    6 Aj$ 
 # Ak"$  Aj! (!# A k"	$  	 ("E@A!A 

 	A0j 6  	A,j ( "6  	 6  	 6
A ! (
68 	 6( 	 6 	A j @@ 	(XAG@ 	A j 	A j( 6  	A j 	A j) 7  	 	)X7@@ 	Aj 	Aj 	("E
 	(! 	 6l 	 6X 	A j!# Ak"$  Aj 	A@k" 	A j 	Aj"
 (@ (
!A

# A k"$  (! A 6@@ @  A
j( "6 Aj! (!
 ( !# A k"$   ("E@A!A 

 A0j 6  A,j ( "6   6   6
A ! (
68  6(  6 A j 
@@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj!
# Ak"$ @@ Aj"( "  Ak6  "
E
 Aj!
 
( !@@@ 
("
 
("/I@ !

@ ("E
 Aj! /!
 
 "/O
 

 
Aj!@ E@ !

  AtjAj( !A ! Ak"E
 @ (! Ak"
 

 
 6 
 6 
A 6  
  
A8lj6 
  
A
ljAj6 

A A+A  
 (
! (A 
! 
 6 
 6  Aj$ 

A A+AĆ  
 ("E
 (!  6l  6X A j!# Ak"$  Aj A@k" A j Aj" (@ (
!A

# A k"
$  (! A 6@@ @ 
 A
j( "6 
Aj! ( !
 (!# A0k"$  A(j  ((!@ (,"
E
   
6$  6  Aj A jA͔ A
 
@ (@ (
!

 Aj A jAה A 
A j (@ (!

# Ak"$  Aj!
 A j" (!
# A0k"
$  
A(j"(! (!! 
A j"
 
6 
A 6 
 6 @@ 
((@ 
Aj"! 
A(j""( 6  
 
) 7 E
 A0l!
@@ 
 6 # Ak"$  
Aj"(!# Aj!
 
A j( ! (!
# A0k"$  A(j 
 ((!
@ (,"$E
   $6$  
6  Aj A jA A A(j@ (@ (
!


 Aj A jA A  (@ (!

-- Chunk 34 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:4951-5100


 Aj A jAה A A j (@ (
!


  (  ($ (!
 ( 

 ( "AI
  
A
! 
 
6 
 6  A0j$  (
! ("
E@  #   (Aj6
 
Aj" 
6   6 Aj$  
(
  A0j! 
A0k"




 
(
!
 
("AI
 

 
( !

A

 " !( 6  
 
)7  
 
A j 
(!
 
( 
! 
 
6 
 6  
A0j$  (
! ("
E@  A۔ A 
 Aj"
 
6  
 6 Aj$  (@ (
!

  (  ($ (! ( 

 ( "
AI
  

A
!
  6  
6  A0j$  
(
!@@ 
(E@ 
 6 ( E@ Aj 
Aj 
Aj"AO@ 
 
("AO@ 
 
("AI
 

 
 6
 
A
j! 
(
! 
! AO@ 
 AI
 

 AI
 

 Aj  
A 

A A 
 !
A
!  6  6  
A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!  6  6  A j$  (
!@@ (E@  6 ( E@ Aj Aj Aj"AO@ 
 ("AO@ 
 ("AI
 

  6
 A
j! (
! 
! AO@ 
 AI
 

 AI
 

 Aj  
A 

A A 
 !
A
!  6  6  A j$  (! ( 
6  
 6 Aj$  	(E
 
 	(
! 	A@k

 	(\!
A

 	A j 	A j( 6  	A j 	A j) 7  	 	)@7X 	 	A j 	(! 	( 
!  6  6  	A j$  (
! ("E@    

-- Chunk 35 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:5101-5250
   6    6 Aj$ 
	
# Ak"$  Aj! (!
# A k"$   ("
E@A!A 

 A0j 
6  A,j ( "6   
6   6
A ! (
68  6(  6 A j 
@@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj!
# Ak"$ @@ Aj"( "  Ak6  "
E
 Aj!
 
( !
@@@ 
(" 
("/I@ !

@ (X"E
 
Aj!
 /!  "/O
 

 Aj!	@ 
E@ !

  	AtjAj( !A !	 
Ak"
E
 @ (! 
Ak"

 

 
 	6 
 6 
A 6  
  Atj6 
  A
ljA j6 

A A+A  
 (
! (A 
! 
 6 
 6  Aj$ 

A A+AĆ  
 ("E
 (!  6l  6X A j!# Ak"$  Aj A@k"	 A j Aj"
 (@ (
!A

# A k"$  	(! 	A 6@@ @  	A
j( "6 Aj 	( ( )  (
!@@ (E@  6 	( E@ 	Aj Aj Aj"AO@ 
 ("AO@ 
 ("AI
 

  6
 A
j! (
!
 
! 
AO@ 

 AI
 

 AI
 

 	Aj 
 
A 

A A 
 !
A
!  6  6  A j$  (! ( 
6  
 6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!  6  6  A j$  (
! ("E@    
   6    6 Aj$ 
8# A@j"$  Aj   ((@ A,j( 8
 A4j A@k$ 
# Ak"$  Aj!@ ( "1"E@A!

 A N"@  "
   
 
  6  6  (!   (
"6   6 5"."/! AO@ 
  (  0 AO@ 
 AO@ 
   16 Aj$ 
R# A k"$  A
jA6  AjA 6  A 6 A 6   6
   6  Aj6   
K# Ak"$  Aj   A@ (
" AxG@  E
 (   
 Aj$ 
 
K# Ak"$  Aj    @ (
" AxG@  E
 (   
 Aj$ 
 
I# Ak"$  ( !A !@    j-  :   AjA Aj"A G
 
 Aj$ A 
K# Ak"$  Aj   A@ (
" AxG@  E
 (   
 Aj$ 
 
K# Ak"$  Aj   A@ (
" AxG@  E
 (   
 Aj$ 
 
<  Aj"K@   Atj   Atj As jAt
   Atj 7 
E @@@@@  -  Ak	 
  Aj

  Aj

  Aj

  Aj


-- Chunk 36 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:5251-5400

# A@j"$     (! Aj! ( !# Ak" $ A"A"E@A"A 
 A;    )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7    A6   6  A6  AjB 7   AjB 7   AjB 7   B 7   A:     7(     A j"  Aj   Aj$   ( Ak6   A@k$ 
	~# Ak"
$   A 6  B7 A8!# A0k"$  Aj  "
Aj" ( 6   A 6  
) ! 
B7   7# Ak"$ @ Aj""	(" A8O@ 	A86

A8  k"
 	(  	("kK@ 	  
 	(!
 	(" j! @@ 
AO@  A  
Ak"     j"j! 

 
E

  A :   Aj!
 	 6
 Aj! (!
 (! ( !	# A k"$  Aj A @@@@@@ (
" ("
G@@@@  M@ -  ! Aj 
  (" ("G


  A  
@  -  At j"   A:n"A:lk:   Aj" G
 

@ E
     K!@  F
  G@  
j  A:n" A:lk:   Aj! A:I  !



  A  
 Aj" 
G
 

 Aj A @ (
" (" F
     K!@ -  
  F
  F
  
jA :   Aj! Aj"  G
 

  K
  
  (" ( " G@@ -  "A9K
   	jAj-  :   Aj"  G
 

A ! AI
 Av!  
jAk!@ 
-  !  
 -  :     :   Ak! 
Aj!
 Ak"
 


A!
  6  6  A j$ 

  A  
 A:A  
  A  
 (" E@  (
"
  6   6  Aj$ @@@ ( " E@ (! (! Aj (
" ("C (@ )
"BB R

 
 
 6 
 6 
 6 

 Aj
 
 6 
  6  A0j$ 

  6(  6$  6   7A A+ AjA̸ A̹  
 
( @A A+ 
AjA A  
 
Aj$ 
K# Ak"$  Aj A  (!   (
"6   6       6 Aj$ 
E  -  AF@  ("(  ((   ("(@ ( ( 8
  (8

~# Ak"$  Aj  (
! (!A A"E@A A 
  )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj)  7   A 6  6  ) !  ( Ak6    7  Aj$ 
H   ( " (   ("kK@      (!
  ( j      j6A 
H   ( " (   ("kK@      (!
  ( j      j6A 
9@  ( "-  "AkAI
  @ Aj

 Aj
  ( 8
C   (   ("kK      ( 
  (j      ( j6
   (   ("kK# Ak"$  Aj    @@ (
"AxG@ E
 (  
 Aj$ 

 
  ( 
  (j      ( j6
   (   ("kK@# Ak"$  Aj    @@ (
"AxG@ E
 (  
 Aj$ 

 
  (!
  ( j      j6
J# A k" $   AjA6   A
jA 6   A 6  A 6  A 6  AjA  
G# Ak"$    6
 A A
A A  AjA A  A
jA  Aj$ 
<@ @ ( "AF
  Aj6    6   Aj6 
 
 
F (! ( !AA"E@AA 
  6  6   A 6   6 
# Ak"$ # Ak"$ @@  @  ( 
  A 6  Aj  Aj) 7    ) 7   )7  Aj A
j( 6   8 Aj$ 

 

-- Chunk 37 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:5401-5550
 
 ("@ (A,j! @  A
k( @  Ak( 8
    A8j!  Ak"
 

 ( @ (8
 Aj$ 
AA
A"E@A
A 
  ) 7  Aj Aj( 6     A 
# Ak"$  Aj!# Ak"$ @ Aj"-  @A!

 ( ! Aj (
! ("@A! A:  

   " @ A:  A

 !!A 
! AI
  
  6  6  Aj$  (
!   (6    6 Aj$ 
# Ak"$  Aj!# A k"$ @@   ( "M@Ax! 


 AjA6  A
jA 6  A 6 A 6 A 6 AjA  
 At!  (!@ E@A! 8

A!  A At""E

   6    6Ax!
  6  6  A j$  (
" AxG@ (   
 Aj$ 
<A
A"E@A
A 
  :   6  6    B B7 
9 @ A G@A    (  

 
A 

     (
 
x$~| (Aq!  + !>@ (@ ! Aj( !# Ak"	$  >!)@ > >b@A!

 )B"'B )BB )B4Aq""+B!(A!@@@AAA )B "&P"  &B QAA   'PAk 
A!

 Ak! (P!B!,

B  +B +BQ" !+BB  !,AwAw   j! (P!
 	 ; 	 ,7 	B7 	 +7 	 : @@A AkAq"   AO" @A A A   )B S!A! )B? r!@@@  Ak 
AtA " A H  l" A K
 	Aj! 	Aj!  AvAj!
A~A  k AO!@@@@@@@ 	Aj" ) "&PE@ &BV
 
E
A  /" A k   &BT"" Ak   &B  & "&B T"" Ak   &B & "&BT"" Ak   &B & "&BT"" Ak   &B & "&B T"  &B &  "'B Yk" kA lAjAm"A O
 At"A j/ !@@ A j) "&B"* ' 'BB?")B "'~"(B  ' &B "&~| & )B"'~"&B | (B ' *~B | &B|B|B |"&A@   A j/ jk"A?q"*"A O@ A=I
 A/I
AA	 AI" !A/A  

 A O@AA AI" !A A  

A
A A	K"

AA AI" !A A  

AA AI" !A=A  
!B *!)@  kAj" " J@ & )B}"(!& Aq!
  k 
   k 
I"Ak!A !@  n!   
F
    lk!  j  A0j:    F
  F
 Aj! A
I A
n!E
 
A AA  
   
A    &B
  * )S

 Aj! 
AkA?q!'B!,@ , 'PE@ A 6 
	
  
O
  j &B
~"& *A0j:   ,B
~!, & (!&  Aj"G
 
   
    & ) ,S

A A
A  
A A$A  
 A A  
A A!A  
 
 
A  
   
     * &|  * )S

  
A  
 !@ 	(E@ 	Aj! 	Aj!# Ak"$ @@@@@@@@@@@@@@@@ 	Aj" ) "(PE@  )"'P
  )"&P
 & (| (T
 ' (V
  /!  (> AA (BT" 6 A  (B   6
 AjA A AjArA A A6 A6  (B}y}B~B͠|B "!@ " A N@ Aj 9

 AjA   k9
@ A H@ AjA  k?

 Aj Aq?
  ("6 Aj AjA@ 
"A
I
 @ A(K@ !

 Aj! !@@ E
  AkAq"Aj" Aq At! E@B !& Aj j

  Aq!  j!B !&@ Aj"   5  &B "'B"&>   5  ' &B~}B "'B"&>  ' &B~}!& Ak! Ak"
 
 Aj
! E
   Ak"   5  &B B> 
 A	k"A	M
 ("A)I
 



@ AtA j( "@ ("A)O
A  E
 AkAq"Aj" Aq! At! !( 
B !+ Aj j

-- Chunk 38 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:5551-5700

A AA  
  Aq!  jAj!B !+@ Aj"   5  +B "' ("&>   5  ' & (~}B "' ("&>  ' & (~}!+ Ak! Ak"
 
 Aj
!  @  Ak"   5  +B  (> 
 (
" ("    I"A(K
 E@A !

 Aq! AF@A !

 A~q!A ! Aj! Aj!@  ( " ( j" Aqj"
6  Aj" ( " Aj( j" 
 I  Krj"6   I  Ir! Aj! Aj!  Aj"G
 


A A
A  
A A
A  
A A
A  
A A6A  
A A7A  
  At" Ajj"  ( " Aj j( j"j"6   I  Kr 
AqE
  A'K
 Aj AtjA6  Aj!
  6    K"A)O
 At!@@ @A Ak" Ajj( "  Ajj( "G  I"E



AA  !
 AM@ Aj!

  A)O
  E@A ! 

  AkAq"Aj"Aq! AI@ Aj!B !&

 Aq! Aj!B !&@  5 B
~ &|"&>  Aj" 5 B
~ &B |"&>  Aj" 5 B
~ &B |"&>  A
j" 5 B
~ &B |"&>  &B !& Aj! Ak"
 


 A(A  
 @@  5 B
~ &|"&>  Aj! &B !& Ak"
 

 &"E
   A'K
 Aj  Atj 6   Aj! 
   6
A !@ "  "N@  k 
   k 
I"

A !

  6 Aj"  Aj"A  A9!   (6 Aj"  A  A9!!  (6 Aj"  A Aj!" Aj!
 Aj!# Aj!$  A9!% (! (! (!
 (!
 (!
A !@@ !
@@@@@ A)I@ 
Aj! At!A !@@@@  F
 Aj j Aj!( E
 
  
  
K" A)O
  At!@@ @A  $j( " Ak" Ajj( "G  I"E



AA  !
A !
 AI@  @A!A !  AG@  A~q! Aj! Aj!@  ( " ( Asj" Aqj"6  Aj" ( " Aj( Asj"  I  Irj"6   I  Ir! Aj! Aj!  Aj"G
 

  Aq At" Ajj" ( "  %j( Asj" j"6   I  Ir 
AqE

   6A!
  !
  
  
K"A)O
 At!@ E
A  #j( " Ak" Ajj( " G   I"E
 


  
I
  
K
  
F

 
 jA0  
k


AA  !
@ AK@ !

 @A!A ! AG@ A~q! Aj! Aj!@  ( " ( Asj" Aqj"6  Aj"   ( " Aj( Asj"  I  Irj" 6   I   Ir! Aj! Aj!  Aj"G
 

 Aq At" Ajj"   ( "  !j( Asj" j" 6    I  Kr 
AqE

  6 
Ar!

  
  
K" A)O
  At!@@ @A  
j( " Ak" Ajj( "G  I"E



AA  !
@ AK@ ! 

  @A!A !  AG@  A~q! Aj! Aj!@  ( " ( Asj" Aqj"6  Aj" ( " Aj( Asj"  I  Irj"6   I  Ir! Aj! Aj!  Aj"G
 

  Aq At" Ajj" ( "   j( Asj" j"6   I  Ir 
AqE

   6 
Aj!

      K"A)O

 At!@@ @A  "j( " Ak" Ajj( "G  I"E



-- Chunk 39 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:5701-5850

AA  !
@ AK@  !

 @A!A !  AG@ A~q! Aj! Aj!@  ( " ( Asj" Aqj"6  Aj" ( " Aj( Asj"  I  Irj"6   I  Ir! Aj! Aj!   Aj" G
 

 Aq  At" Ajj"   ( " Aj j( Asj" j" 6   I   Ir 
AqE

  6 
Aj!

 
 
G@ 
 j 
A0j:   A)O

 E@A !

 AkAq"Aj" Aq! AI@ Aj!B !&

  Aq! Aj!B !&@  5 B
~ &|"&>  Aj"   5 B
~ &B |"&>  Aj"   5 B
~ &B |"&>  A
j"   5 B
~ &B |"&>  &B !& Aj! Ak"
 


 
 
A  



 
 A  
  
A  
 A(A  
 @@  5 B
~ &|"&>  Aj! &B !& Ak"
 

 &" E
  A'K
 Aj Atj  6  Aj!
  6  G
 
A!

 A(A  
  A(A  
@@ A)I@ E@A !

 AkAq"Aj" Aq! AI@ Aj!B !&

  Aq! Aj!B !&@  5 B~ &|"&>  Aj"   5 B~ &B |"&>  Aj"   5 B~ &B |"&>  A
j"   5 B~ &B |"&>  &B !& Aj! Ak"
 


 A(A  
 @@  5 B~ &|"&>  Aj! &B !& Ak"
 

 &" E
  A'K
 Aj Atj  6  Aj!
  6 ("     K"A)O
 At!@@ @A Ak" Ajj( "  Ajj( " G   I"E



AA  !
@@@@@ Aq 
 E
 Ak"  
O
   j-  AqE

  
K
A ! !@@  F
 Aj! Ak" j" -  A9F
 
    -  Aj:    kAj O
  AjA0 Ak

A1 E
  A1:  A0 AF
  AjA0 AkA0
!  Aj" L  
Or
  j  :   Aj!

   
A  
  
A  
  
M
   
A  
  ;  6  6  Aj$ 

 A(A  
 A(A  
A AA  
 	Aj 	Aj( 6  	 	)7
  	." H@ 	Aj 	( 	(    	AjW 	(
! 	(

A! 	A; @ 	Aj 6  	A ; 	A6 	A 6 	Aj

A! 	A6 	A 6 	Aj

A! 	A; @ 	Aj 6  	A ; 	A6 	A 6 	Aj

A! 	A6 	A 6 	Aj

 	A6 	A 6 	A; 	Aj

 	A6 	A 6 	A;A!A ! 	Aj
!  	Aj 6  	  6 	 6 	 6  	AjI 	Aj$ 

A A%A  
  A(A  

 # Ak"
$  >!*@ > >b@A! 

 *B"'B *BB *B4Aq""+B!)A! @@@AAA *B "&P" &B QAA  'PAk 
A! 

 Ak!
 )P! B!(

B  +B +BQ" !+BB  !(AwAw   j!
 )P! 
 
 
;x 
 (7p 
B7h 
 +7` 
  : zA  AkAq"   AO"@A A A   *B S!

-- Chunk 40 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:5851-6000
A!  *B? r!#@@@ Ak 
 
A j! 
Aj!# A0k"
$ @@@@@@@ 
A j" ) "(PE@  )"'PE@  )"&PE@ ( & (|"&X@ ' (X@@@ &BX@ 
  /"; 
 ( '}"*7   A k  &BT"" Ak   &B  & "&B T"" Ak   &B & "&BT"" Ak   &B & "&BT"" Ak   &B & "&B T"  &B &  ",B Y"k"k" A H
 
B  "&"' *7 ' *T

 
 ; 
 (7  
 ' (7 ' (T

A kA lAjAm" A O
  At" A j) "'B"1 ( &B?")"&B "9~"(B ". 'B "3 9~| 3 &B"'~"&B "4| (B ' 1~B | &B|B|B !:BA    A j/ jkA?q"-"0B}!2 1 * )"&B "(~"'B 1 &B"&~B | & 3~"&B|B|B !5 ( 3~!+ &B !* 'B !)  A j/ !@@ 3 , "&B ";~", 1 ;~"(B "<| 3 &B"'~"&B "=| (B ' 1~B | &B|B|B "1|B|"7 -"A O@ A=I
 A/I
AA	 AI" !A/A  

 A O@AA AI" !A A  

A
A A	K"

AA AI" !A A  

AA AI" !A=A  
!
 :|!8 2 7!'  kAj! 7 ) +| *| 5|"+}B|"/ 2!*@  
n!@@ AG@  j"  A0j":   /   
lk" -"6 '|"&V

  G
 Aj!B!&@ &!) *!( AO
  j 'B
~"' -A0j"
:   Aj! )B
~!& (B
~"* ' 2"'X
 
 * '}"+ 0Z! & 7 8}~", &|!4 + 0T

 , &}"/ 'X

  jAk!  (B
~ ' 0|}!5 0 /}!+ / '}!,B !.@ ' 0|"& /T , .| ' +|ZrE@A!

   
Ak"
:   . 5|"( 0Z! & /Z
 . 0}!. &!' ( 0Z
 


AAA  
 AA  
 Aj! 
A
I 
A
n!
E
 
A AA  
A A-A  
  A A  
A A
A  
A A7A  
A A6A  
A A
A  
A A
A  
A A
A  
 Aj!@ AI@ / &}") 
 -"-Z! 7 8}"(B|!2 ) -T (B}"5 &Xr
 ' -|"& .| 4| :| 3 9 ;}~| <} =} 1}!. < =| 1| ,|!*B  8 ' 6||}!,B + & 6||}!)@ & 6|"( 5T * ,| . 6|ZrE@ ' 6|!&A!

   Ak":   ' -|!' ) *|!+ ( 5T@ & -|!& - .|!. * -}!* + -Z


 + -Z! ' 6|!&

 AA  
@@ E & 2ZrE@ & -|"' 2T 2 &} ' 2}Zr

 & /B}X &BZq
 A 6 

 A 6 

  ;  6

 '!&
@@ E & 4ZrE@ & 0|"' 4T 4 &} ' 4}Zr

 & )BX~ *|X & )B~Zq
 A 6 

 A 6 

  ;  6
  6 
 
A0j$ 

 
A 6 # A k"$   
6  
Aj6  Aj 
Aj" Aj) 7  Aj  Aj) 7    ) 7# A k"$  A 6
  6 A 6  Aj6 A 6 A6
@ Aj" (E@ A jA6  A jA6  A jA6  A jA6  A 6` A 6X A6<  A8j6h

 A0j  Aj) 7  A(j  Aj) 7    ) 7  A jA6  A jA6  A jA6  A jA6  A jA6  A 6` A 6X A6<  A8j6h  A j6P
  Aj6H  Aj6@  Aj68 A jA  
@ 
( E@ 
A j! 
Aj!# A
k"$ @@@@@@@@@@@@@@@ 
A j" ) ")PE@  )"(P
  )"'P
 ' )|"& )T
 ( )V
  , !
  /!  )>  AA )BT" 6 A  )B   6 AjA A  (> AA (BT" 6 A  (B   6 AjA A  '> AA 'BT" 6 A  'B   6 AjA A AjArA A A6 A6  &B}y}B~B͠|B "!
@ " A N@  9 Aj 9 Aj 9

 AjA   k9
@ 
A H@ A  
k" ? Aj  ? Aj  ?

 Aj Aq?
  ("6
 A	j A  ("  K"A(K

 E@A !

 Aq! AF
 A~q!
 A	j!  Aj!@   
  ( " ( j"j"
6   Aj" ( " Aj( j" 
 I  Krj"6   I  Ir!

-- Chunk 41 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6001-6150
 Aj!  Aj!  
 Aj"G
 


A A
A  
A A
A  
A A
A  
A A6A  
A A7A  
  At" A	jj"   ( " Aj j( j" 
j" 6    I  Kr 

E
  A'K
 A	j AtjA6  Aj!
  6
 ("   I" A)O
  At! @@  @A  Ak"  A	jj( "   Ajj( "G  K"E



AA   !
  
N@ A)O
	 E@A !

 AkAq"Aj" Aq! AI@ ! B !&

  Aq!
 ! B !&@    5 B
~ &|"&>   Aj" 5 B
~ &B |"&>   Aj" 5 B
~ &B |"&>   A
j" 5 B
~ &B |"&>  &B !&  Aj!  
Ak"

 


 
Aj!


 A(A  
 @@    5 B
~ &|"&>   Aj!  &B !& Ak"
 

 &" E
  A'K

  Atj  6  Aj!
  6 ("A)O
@@@@ E@A !

 AkAq"Aj" Aq!@ AI@ Aj! B !&

  Aq!
 Aj! B !&@    5 B
~ &|"&>   Aj" 5 B
~ &B |"&>   Aj" 5 B
~ &B |"&>   A
j" 5 B
~ &B |"&>  &B !&  Aj!  
Ak"

 

 @@    5 B
~ &|"&>   Aj!  &B !& Ak"
 

 &" E
  A'K
 Aj Atj  6  Aj!
  6 A)O
 E@ A 6

 AkAq"Aj" Aq! AI@ Aj! B !&

  Aq!
 Aj! B !&@    5 B
~ &|"&>   Aj" 5 B
~ &B |"&>   Aj" 5 B
~ &B |"&>   A
j" 5 B
~ &B |"&>  &B !&  Aj!  
Ak"

 


 A(A  
 A(A  
 @@    5 B
~ &|"&>   Aj!  &B !& Ak"
 

  &"  A'K
 Aj Atj  6  Aj 
6
  6 Aj"  Aj"A  A9!$  (6 Aj"  A  A9!%  (6	 Aj"  A  A9!@ (" (	"  K"A(M@ Aj! Aj! Aj! (! (!  (!!A !@ At! @@  @A   j( "
  Ak"  j( "G 
 K"E



AA   !
A ! AM@ @A!
A ! AG@ A~q!
 " Aj!@   
  ( " ( Asj"j"
6   Aj" ( " Aj( Asj"  I  
Krj"6   I  Ir!
 Aj!  Aj!  
 Aj"G
 

 Aq  At"j"   ( "  j( Asj" 
j" 6    I  Kr 

E

  6A! !
  !  !K"A)O
 ! At! @@  @A   j( "
  Ak"  j( "G  
I"E



AA   !
@ AK@ !

 @A!
A ! AG@ A~q!
 " Aj!@   
  ( " ( Asj"j"
6   Aj" ( " Aj( Asj"  I  
Krj"6   I  Kr!
 Aj!  Aj!  
 Aj"G
 

 Aq  At"j"   ( "  %j( Asj" 

-- Chunk 42 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6151-6300
j" 6    I  Kr 

E

  6 Ar!
@@@@@@@      K"A)I@ At! @@  @A   j( "
  Ak"  j( "G  
I"E



AA   !
@ AK@ !

 @A!
A ! AG@ A~q!
 " Aj!@   
  ( " ( Asj"j"
6   Aj" ( " Aj( Asj"  I  
Krj"6   I  Kr!
 Aj!  Aj!  
 Aj"G
 

 Aq  At"j"   ( "  $j( Asj" 
j" 6   I   Ir 

E

  6 Aj!
    K"A)O
 At! @@  @A  Ak"  Ajj( "
   j( "G  
I"E



AA   !
@ AK@ !

 @A!
A ! AG@ A~q!
 " Aj!@   
  ( " ( Asj"j"
6   Aj" ( " Aj( Asj"  I  
Krj"6   I  Kr!
 Aj!  Aj!  
 Aj"G
 

 Aq  At"j"   ( " Aj j( Asj" 
j" 6   I   Ir 

E

  6 Aj!
 AF
  j A0j:    ("  K" A)O

 Aj!  At! @@  @A  Ak"  Ajj( "
   j( "G  
I"E



AA   !
  6
 A	j A  ("  K"A(K
@ E@A !

A !
A ! AG@ A~q! A	j!  Aj!@   
  ( " ( j""j"
6   Aj"
 
( " Aj( j"
 
 "I  "Krj"
6  
 I 
 
Ir!
 Aj!  Aj!   Aj"G
 

 Aq At" A	jj"  
  ( "
 Aj j( j"j" 6    I 
 Kr 

E
  A'K
 A	j AtjA6  Aj!
  6
    I" A)O

  At! @@  @A  Ak"  A	jj( "   Ajj( "
G 
 I"E



AA   !
  
H  
HrE@ A)O
 E@A !
	
 AkAq"Aj" Aq! AI@ ! B !&

  Aq!
 ! B !&@    5 B
~ &|"&>   Aj" 5 B
~ &B |"&>   Aj" 5 B
~ &B |"&>   A
j" 5 B
~ &B |"&>  &B !&  Aj!  
Ak"

 


  
N
  
H@ A9 (" ("    I" A)O
  At!  Ak!
 Aj!@@  @   
j!
   j!  Ak! A ( " 
( "G  K"E



AA   !
 AO

 AO
 ! A!@@  AF
 Aj!   j  Ak! -  A9F
 
   j"Aj" -  Aj:    Aj K
 AjA0 

 A1:   @ AjA0 
 AI@  jA0:   
Aj!
 Aj!

 AA  

-- Chunk 43 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6301-6450
 A(A  
 A(A  
AAA  
 AA  
 A(A  
 AM@  
;  6  6  A
j$ 


 AA  
 @@    5 B
~ &|"&>   Aj!  &B !& Ak"
 

 &" E
  A'K
  Atj  6  Aj!
  6@@@@@@ A)I@ E@A !

 AkAq"Aj" Aq! AI@ Aj! B !&

  Aq!
 Aj! B !&@    5 B
~ &|"&>   Aj" 5 B
~ &B |"&>   Aj" 5 B
~ &B |"&>   A
j" 5 B
~ &B |"&>  &B !&  Aj!  
Ak"

 


 A(A  
 @@    5 B
~ &|"&>   Aj!  &B !& Ak"
 

 &" E
  A'K
 Aj Atj  6  Aj!
  6 A)O
 E@A !

 AkAq"Aj" Aq! AI@ Aj! B !&

  Aq!
 Aj! B !&@    5 B
~ &|"&>   Aj" 5 B
~ &B |"&>   Aj" 5 B
~ &B |"&>   A
j" 5 B
~ &B |"&>  &B !&  Aj!  
Ak"

 


 A(A  
 A(A  
 @@    5 B
~ &|"&>   Aj!  &B !& Ak"
 

 &" E
  A'K
 Aj Atj  6  Aj!
  6    K"A(M
 



 A(A  
 A(A  
 A(A  
  A(A  
A AA  
 A(A  
 
A j 
A(j( 6  
 
) 7P
 
 
(P 
(T 
/XA  
A jW 
(!  
( 

 
A;  
A6( 
A 6$ 
A j

 
A6( 
A 6$ 
A;  
A j

 
A6( 
A 6$ 
A; A! A !
 
A j
! 
A j  6  
 6X 
 #6T 
 
6P 
A jI 
Aj$ 
 A(A  
~|# Ak"$   6
# A0k"$  Aj!# A k"$  Aj A
j"( 
  ( +@ ( E
  +!	 ( -E
  	D      f!B ~ 	D      Cc@ 	

B
B  	DCdB  	 	a!B!
  7  7  A j$ @@ (AF@ )"B Y

  A(jA G!  A:     6

   BZ@ A:   7   # A0k" $   A 6   A(j6   AjA6   A
jA6   A,jA6   Aĉ 6  A 6  A6$   Aj6     A j6    6(  Aj  A0j$ 6A

   < A 
:  
 A0j$  (
" AO@  
 Aj$ 
< - E@
!A 

%!A
!   6  A 6   6   6 
8# Ak"$   7  ( "  AjA     Aj$ A 
/ @ iAGAx k  Ir
   @   "E


-- Chunk 44 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6451-6600
 
 
6# Ak"$   6
  6   Aj6  A 6  Aj$ 
# A k"$  A:   6   6 A 6
 A 6# Ak" $ @ Aj"(
"@ ("E
   6   6   6 # Ak"$   ( "Aj( !@@@ A
j(  
 
A !A 

 
 ("(! ( 
!  6  6  A   ("(  ( -  
 A 6  6
 A   ("(  ( -  
A A+A  
A A+A  
5  ("AO@ 
@  (E
   A
j( " AI
   

8 (!@ (E
  A
j( "AI
  
   6  A 6 
-  ("@  (! @    A
j!  Ak"
 


* A       I"   k  " A G  A H
5AA"E@AA 
   ) 7  Aj  Aj) 7  
. @ iAGAx k IrE@     " 

 
  
*# Ak"$   6
   6 Aj Aj$ 
1# Ak"$    6
 A A A
jA  Aj$ 
1# Ak"$    6
 A A A
jA  Aj$ 
2   ( !  E@ E@   
   
   
2   ( !  E@ E@   
   
   
,# Ak" $   Aj" A A
   Aj$ 
/A<A"E@A<A 
 A 6  Aj  A8 
   (" ( I# Ak"$  Aj!# A k"$ @  ( M@ Aj @ ("@ (
! (! E@ @ 8
 

    
"E
  6   6
Ax!
  6  6  A j$ 

 AjA6  A
jA 6  A 6 A 6 A 6 AjA  
 (
"AxG@ (  
 Aj$  ( 
6   (6 
2   (" ( I   ( 
6   (6 
*# Ak"$  A :     ) 7  Aj$ 
. ( "@  A6   6   (6 
  A 6
2A!  -    ( " ( A A  Aj( (
 

, @ E@ 
   
   
   
_# Ak" $   A 6  B 7 AA"E@AA 
 A 6    ) 7 A
j  Aj( 6   Aj$  
A @ E@ 
  ( " B   }  A N"    d
   
   
'     (Aq rAr6   j"   (Ar6
'   B 7    AjB 7    AjB 7    AjB 7  
:A -  !A A :  A ( !A A 6    6   6 
1   A:    B7  A 6  A 6   6   6 
-  (    ((
 !  A :    :    6 
2 ( A A ((
 !  A :    :    6 
 @  Aj( "E
   ( E
  8

    (  6   A :  
    )  7   A :  
1   ( "  A.F  - A Gr:   ( " (    ((  
   F@    
# A0k" $    6   6   AjA6   A
jA6   A,jA 6   A 6  A 6  A 6$    A j6    6(    Aj6   Aj  
#   (A~q6   Ar6   j 6 
%   E@A A2 
       (	 
~  ) " B?" } B Y d
#   E@A A2 
      ( 
#   E@A A2 
      (# 
#   E@A A2 
      (
 
#   E@A A2 
      (% 
#   E@A A2 
      (' 
%    -  At" A j(   A j( 

    Ar6   j"   (Ar6

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 


-- Chunk 45 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6601-6750
AA" @  
AA 

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 

AA" @  
AA 
!   E@A A2 
     ( 
   ( @  Aj( 8

"   -  E@ A A;
 A A;
# A k"$     A j$ 
   E@A A2 
    (  

!   6  A 6   6 
~A ( A # A k"$ A !A   E
   ( !  A 6 A  E
   (!  (
!  (!  (!  (
!A ) !A  6 A A6  AjA ) 7  Aj" A ) 7 A  6 A  6 A  6 A  6   7 @  ( @  ("@  (
"Aj! ) BB!@ P@@ A k! )  Aj!BB"P
 

 Ak!  zAvAtljAk( "AO@ 
 B} ! 
 

  ( " A
lAjAxq"jA	j@  (
 k8


 A j$ A 

   ( @  (8


   ( " (    Aj( (
  
  ("   Aj( 

    Aq6  A 6 
 A  AvkA   AG
    Ar6   j 6 
   (@  

   ( " AO@  

    (M@   6

    6   6   6 
    9   A G7 
    jAkA  kq
  !@@@ A	O@  R"
A 

AA! AA!AA!A AAAtk"A|    jjkAwqAk"    K M
A AjAAAk KA! "   "!@@@@@@@  E@  M
 A ( F
 A ( F
 
 " j" I
  k! AI
 i

  ! AI
  kAI Aj Mq
   ( "jAj! AjA!

AA  k"K
   !       L

A (  j" M
   !      k"Ar6A  6 A  6 

A (  j" I
@AA  k"K@   A !A !

   " !       (A~q6
A  6 A  6 

 A
j( "	 Aj( "G@  	6
 	 6

A A ( A~ Avwq6 
AA M@   !       L

   
  

 6"E
    AxA|  j"     I 8

      I 8
 

    

%!   6   6 
     6  A 6 
    6   A j6 
# Ak"  :  - 
    6    j6 
   ( " (  ( =

  @  8

   At" A   kr
  ( A A ((
 
    ( " (   (;
   (     ((
 
  ( Aď A ((
 
    ( 6  A 6 

   Aj
   (  (  ( ,
  (  (  ( H
   (    ((
  
	# A k"$   6
  6@@ AO@A  , AJ
 A  , AJ
 A  , AJ
 A
"  j,  AL
  6   6A!A !

  6   6A !

   A    
  6
  6@@@@  I"  IrE@@@  M@@@ E
   M@  F

-- Chunk 46 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6751-6900


   j,  A@H

 !
  6   "I@ Aj" Ak"A   O"I
@  F
    j   j"k!   j"	,  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  Ak",  AJ@ Ak!

  F
  Ak",  AJ@ Ak!

  F
  Ak!
  j!
@ E
   M@  F

	
   j,  AL

  F
@   j",  " A H@ - A?q!  Aq!  A_K
 At r!

   Aq6$A

 - A?q Atr!  ApO
  A
tr!

 A jA6  A jA6  A jA 6  A<jA6  A jA6  A 68 A 60 A 6L  A j6@  Aj6`  Aj6X  A
j6P  Aj6H

 AtA q - A?q Atrr"A F

  6$A AI
 A AM
 AA AI
!   6(    j6, A<jA6  A jA6  A jA6  A jA6  A jA6  A jA6  Aā 68 A 60 A 6L  A j6@  Aj6h  Aj6`  A(j6X  A$j6P  A j6H

    6( A<jA6  A jA6  A jA6  A jA6  A 68 A 60 A 6L  A j6@  Aj6X  Aj6P  A(j6H

  A  
A A+  
       
 A0j  
    R
    6  A 6 
   (   A 
    6   6 
   A
6   6 
   (  ( 
   (   A 
   A6   6 
   (   A 
   (   ( =
\  (!  (!# Ak" $     @@   6
    A
jA  Aj! Ak"
 

    Aj$ 
 A   6 A A:  
   (  ( =
   A 6   6 

   - AqAv
    (   (;
  (  (  H

   - AqAv

   - A qAv

     A 

   (   


     A 
  (A ( M

     A 

   A A 

   (   '

   ( (A G

   ( 2A G

   ( AF
  ( !# Ak"$ @ AO@ AjA.  e (AF!

 E
  Ak! ! @  -  A.F"
  Aj!  "Ak! 
 

   - A Gr:  (    Aj$ 

 A   k  q

   - AqE

    Ar6

   (   (j
  ( ! # Ak"$ @ A M@  ("  ( F@# A k"$ @@ Aj"E
 A  ( "At"   I" AM"AsAv!@ @ A6  6   Aj( 6

 A 6
    Aj (! ( E@   6    6

 Aj( "AxF
 E
    
 
 A j$   (!
   Aj6  ( j :  

 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ A 
   ( @
 

-- Chunk 47 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:6901-7050
 
y# A0k"$   6   6  AjA6  A
jA6  A,jA 6  A 6 A 6 A 6$  A j6  Aj6(  6  Aj  
y# A0k"$   6   6  AjA6  A
jA6  A,jA 6  A 6 A 6 A 6$  A j6  Aj6(  6  Aj  
y# A0k"$   6   6  AjA6  A
jA6  A,jA 6  A 6 A 6 A 6$  A j6  Aj6(  6  Aj  

   5 A d

   1  A d
~# A@j"$ A!@  - 
   - !@@@  ( "("AqE@ 


 
A! ( A A ((
 
 (!

A! ( A A ((
 E


A! A:  A 6
  ) 7  Aj6 )! )!  -  : 8  (
64  60  7(  7   Aj6  Aj (
  
 (A A (
(
 !

   (
  !
  A:    :  A@k$ 

   (   V

   ) A d

   # j$ # 
   
  AЊ A

  ( !# Ak" $ @@@@@@@@@ -  Ak 
   Aj6
 A A  A
jA 

   Aj6
 A A  A
jA 

   Aj6
 A A  A
jA 

 A A

   Aj6
 A A  A
jA 

 A A

 A A	

 A A

   Aj6
 A A  A
jA 
  Aj$ 

   (  
  A A
5*# Ak"$  A A !  (
!(  (!)  (!$  (!%  (
!*  (!+  (!&  ( !' @  Atj!,@A !@  j  j(  "At AqAtr AvAq Avrr6  Aj"A G
 
 (<! (8! (4! (0! (,! ((!
 ($!
 ( !
 (
! (!  (!! (!" (
!# (! (! ( !  +6`  *6d  )6h  (6l  $6|  %6x  &6t  '6p  Aߨj"6  A݉j"6  Ak"6  #AȨk"6 A j" A j" A j"
 Aj"
} (P! (T!	 (X!
 (\!
  $6l  %6h  &6d  '6`  
6|  
6x  	6t  6p  6  6  6  6   
 
} (P! (T! (X! (\!  
6l  
6h  	6d  6`  6|  6x  6t  6p  "Aۄj"6  !Aj"6   Ak"6  Ak"6   
 
} (P! (T!	 (X!
 (\!
  6l  6h  6d  6`  
6|  
6x  	6t  6p  6  6  6  6   
 
} (P! (T! (X! (\!  
6l  
6h  	6d  6`  6|  6x  6t  6p  
Ak"6  
Aj"6  
Aơj"6  Aj"6   
 
} (P! (T!	 (X!
 (\!
  6l  6h  6d  6`  
6|  
6x  	6t  6p  6  6  6  6   
 
} (P! (T! (X! (\!  
6l  
6h  	6d  6`  6|  6x  6t  6p  Aj"6  Ak"6  Ak"6  Ak"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  6\  6X  6T  #6P  "6l  !6h   6d  6`  
6|  
6x  
6t  6p  6  6  6  6 A@k"#   
 
u (@! (D! (H! (L!  6l  
6h  
6d  	6`  6|  6x  6t  6p  Ak"6  Ak"6  Aƻ j"6  Aòj"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  "6\  !6X   6T  6P  
6l  
6h  
6d  6`  6|  6x  6t  6p  6  6  6  6 #   
 
u (@! (D!  (H!! (L!"  6l  
6h  
6d  	6`  6|  6x  6t  6p  "Aؤj"6  !Aj"6   Aj"6  Aڑj"6   
 

-- Chunk 48 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7051-7200
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  
6\  
6X  
6T  6P  6l  6h  6d  6`  6|  6x  6t  6p  "6  !6   6  6 #   
 
u (@! (D!
 (H!
 (L!
  6l  
6h  
6d  	6`  6|  6x  6t  6p  
A݆k"6  
Ak"6  
Ak"6  Ak"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  6\  6X  6T  6P  6l  6h  6d  6`  "6|  !6x   6t  6p  
6  
6  
6  6 #   
 
u (@! (D! (H! (L!  6l  
6h  
6d  	6`  6|  6x  6t  6p  Ak"6  Ak"6  AƩ6j"6  AҤj"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  6\  6X  6T  6P  "6l  !6h   6d  6`  
6|  
6x  
6t  6p  6  6  6  6 #   
 
u (@! (D! (H! (L!  6l  
6h  
6d  	6`  6|  6x  6t  6p  Aܽj"6  Aj"6  A۱j"6  Aj"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  "6\  !6X   6T  6P  
6l  
6h  
6d  6`  6|  6x  6t  6p  6  6  6  6 #   
 
u (@! (D!  (H!! (L!"  6l  
6h  
6d  	6`  6|  6x  6t  6p  "A橨j"6  !Aj"6   Ak"6  Ak"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  
6\  
6X  
6T  6P  6l  6h  6d  6`  6|  6x  6t  6p  "6  !6   6  6 #   
 
u (@! (D!
 (H!
 (L!
  6l  
6h  
6d  	6`  6|  6x  6t  6p  
A߮k"6  
Ak"6  
Ak"6  Ak"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  6\  6X  6T  6P  6l  6h  6d  6`  "6|  !6x   6t  6p  
6  
6  
6  6 #   
 
u (@! (D! (H! (L!  6l  
6h  
6d  	6`  6|  6x  6t  6p  A篴k"6  Ak"6  A k"6  Aj"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  6\  6X  6T  6P  "6l  !6h   6d  6`  
6|  
6x  
6t  6p  6  6  6  6 #   
 
u (@! (D! (H! (L!  6l  
6h  
6d  	6`  6|  6x  6t  6p  Aj"6  Aj"6  Aj"6  A¥j"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  "6\  !6X   6T  6P  
6l  
6h  
6d  6`  6|  6x  6t  6p  6  6  6  6 #   
 
u (@! (D!  (H!! (L!"  6l  
6h  
6d  	6`  6|  6x  6t  6p  "Aj"6  !Aj"6   Aϔj"6  A߹j"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  
6\  
6X  
6T  6P  6l  6h  6d  6`  6|  6x  6t  6p  "6  !6   6  6 #   
 
u (@! (D!
 (H!
 (L!
  6l  
6h  
6d  	6`  6|  6x  6t  6p  
Aj"6  

-- Chunk 49 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7201-7350
Aƕj"6  
Ak"6  Ak"6   
 
} (P!	 (T!
 (X!
 (\!  6l  6h  6d  6`  6|  
6x  
6t  	6p  6  6  6  6   
 
} (P! (T! (X! (\!  6\  6X  6T  6P  6l  6h  6d  6`  "6|  !6x   6t  6p  
6  
6  
6  6 #   
 
u (@!# (D! (H! (L!  6l  
6h  
6d  	6`  6|  6x  6t  6p  Ak"6  Ak"6  Ak"6  #Ak"6   
 
} (P!# (T! (X! (\!  6l  6h  6d  6`  6|  6x  6t  #6p  6  6  6  6  (j!(  )j!)  *j!* # +j!+   
 
} (\ $j!$ (X %j!% (T &j!& (P 'j!' A@k" ,G
 

   (6
   )6   $6   %6   *6
   +6   &6   '6  Aj$ 

  A A;

   (  

   (  
  ( !# Ak" $    Aj6 ( Aɏ A	 ((
 !  A : 
   : 
   6  AjAҏ A
 A ^Aݏ A	  AjA ^!  - 
"A G  - 
E
 A 
  ( "- AqE@ ( A A ((
 

 ( A A ((
 
  Aj$ 
	    4 

 A A 
 A A  

   (Axq

   (Aq

   (
Aq

   (
Av
    Aė ( " A    

    )7 

     ;

    ) 7 

    )7 
  ( ! # Ak"$ @@@@ ("AqE@ A q
  1  A d!

  -  ! @  jA jA0A   Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO
 AA A  jAjA  kB!

  -  ! @  jA jA0A7  Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO
 AA A  jAjA  kB!

  AA  
  AA  
 Aj$  

  A A;
~  ( ! # Ak"$ @@@@ ("AqE@ A q
  ) A d! 

  ) !A ! @   jA jA0A  Aq"A
I j:    Ak!  BV B!
 
  Aj"AO
 AA A   jAjA   kB! 

  ) !A ! @   jA jA0A7 Aq"A
I j:    Ak!  BV B!
 
  Aj"AO
 AA A   jAjA   kB! 

 AA  
 AA  
 Aj$   
@@@ "   kK@  j!   j! AK
  

 AM@  !

  A   kAq"j! @  ! ! @   -  :    Aj!  Aj" I
 

   k"A|q"j!@  j"Aq" @ A L
 A|q"Aj!A   At"kAq!	 ( ! @    v ( "  	tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!

 A|q! A  Aq"k! @  jAk!@ Ak" -  :   Ak!   I
 

    k"A|q"k!A  k!@  j"Aq"@ A N
 A|q"Ak!A  At"kAq!	 ( !@  Ak"   	t ( " vr6  Ak!   K
 


 A N
   jAk!@  Ak"  ( 6  Ak!   K
 

 Aq" E
  j!   k
!  Ak!@ Ak" -  :   Ak!   I
 


 E
   j! @  -  :   Aj! Aj"  I
 


C@ E

-- Chunk 50 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7351-7500
 @  -  " -  "F@  Aj!  Aj! Ak"



  k!
 
 !@ AM@  !

  A   kAq"j! @  !@  :   Aj" I
 

   k"A|q"j! A J@ AqAl!@  6  Aj" I
 

 Aq!
 @  j!@  :   Aj" I
 

  
@ "AM@  !

  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq"@ A L
 A|q"Aj!A  At"	kAq! ( !@   	v ( " tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 @  j!@  -  :   Aj! Aj" I
 

  
  A A
	   ( 
	   ( 
	   ( 
	   ( 
	   ( 
	   A 6 
	   ( +

 A ( E
# A0k"$ @@@@@@  -  Ak 
   (6
 Aj"  A A  A A A
jA ^ A(: A A AjA ^AA" E
  AjA (  6    AjA )  7    A )  7   A6(   6$ A6 A A A jA ^!  ( E
 ($8

   - :  A j"  ( A A ((
 :    6  A : 	  A 6    AjA j" - "A G  ( "E
 @ E@@ AF@  - 	

  (!

  Aj( "- Aq
 ( A A ((
 E

  A: A

   ( A A ((
 " :   
! 

  (!  A j" A A A A  AjA ^A A  A ^! 

   (" 6  A AA A  AjA A  A jA ! 
 A0j$   

AA 

    j
    k
   Aj
   Ak
!# Ak"$  Aj  @@ (@ A8j Aj( " 6   )70 (4!# A0k"$  Aj    Aj ( (  )7 A j!
# A k"$ @@ B 7@ Aj"	(" AM@ B 7@ A@k

 A@kA 	( "AA  	  Ak6 	 Aj6  A0j )@ (0E
 (4
!  
A6  
  6

 (4!
 B 7 
@ A@kAr!@ A@k 	 (@! @ (D"@  (H"68  64   60 A@k!
# A k"$ @@ B 7@ 	("AM@ B 7@ A@k

 A@kA 	( "AA  	 Ak6 	 Aj6  A0j )@ (0E
 (4
! 
A6  
 6

 (4! B 7 @@ A@k 	 (@!@ (D"@  (H"68  64  60 A@k!# Ak"
$ @@@A "
  
B 7 	("AM@ 
B 7 
Aj!

 
AjA 	( "AA  	 Ak6 	 Aj6  
 
) 
( E
 
(!
 A 6  6 

 
(!# A0k"$   	6  6 Aj" Aj"( 6 A6  A  (
" A OA  (A  A 6   ) 7 A(j @@ - (E@@ - )E
 - *! ( " (F Aj  (  
 (
j :    ( Aj6  A(j Aj - (E
 

 A 6  (,6  Aj

  )7  Aj A j( 6 
 A0j$ 
 
Aj$  (@! (D"
 A0j !
 
A6  
 6 

 Ak!  6  6  6  (H6(  6$  6  A@k  Aj A j (D@ A@k
 
 

 
 ) 7 
A 6  
A
j Aj( 6 
 A j$  (D! (@E
 A0j ! 
 
A6  

-- Chunk 51 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7501-7650
  6 

 
Ak!
  6  6   6  )H7$  6  A@k  Aj A j (@@ 
 

 

 
 ) 7 
A 6  
A
j Aj( 6 
 A j$  Aj"  ( E@ ($!  Aj A(j) 7    6A 

   ($6A
6  A0j$  (
 A j Aj( 6   )7@ B 7T (D"  A j  6  A j (@"6    6h  6d (H!A A
!   6   6p   6` A(j A j (("	E
 (,! @  ("E@A !A

  (!  ( ! !A 
!   6  6  6   6  6  6   6 A j Aj ( "@ ($! @A !A !@  ("  (!@@  j-  E
  Aj"G
 
A !

A! AjA 
!  F
   k!  ( j!@@ -  "E@ Aj!

  k :  
 Aj! Ak"
 

    k6 Aj!  (!  (!A !
# A k" $   A(j      )(70  A j  A0jN@  (P@  A j  A j) 7     )P7`  A j  A j"  ($!  ( !  Aj   (
E@  6 A 6  Aj 6 

@@@ E@A!

 A H
 A"E

  A 6@   6<   68  I  A8jA    (@!
  (< 
 
j      
j"6@  (8 kAM@  A8j A  (@!
  (<" j"A /  ";   AjA -  ":     Aj"6@    )07H  A j  A jN  (P@@  A j  A j) 7     )P7`  Aj  A j  (!
  ("  (8 kK@  A8j    (<!  (@!
  j 
     j"6@  Aj  A j  (
@  (8 kAM@  A8j A  (@!
  (<" j" ;   Aj :     Aj"6@
  A j  A jN  (P
 

   )87 A6  A
j  A@k( 6 

 A 
 
 A 6 A 6  AjA 6 
  A j$  Aj" 	 Aj"  Aj" ("  ( (" (    Aj!# Ak" $    A j @  (@  A8j  Aj( 6   A0j  Aj) 7   A(j  Aj) 7     ) 7   B 7D  A j Aj( 6    ) 7`  A j" Aj( 6    ) 7p  A j"  A@k  A j  A j"    A j( 6     )@7p  A j x

  (  (A
ljAj!# Ak"$  ("  (   A  Aj(  A
j( A
ljAj ( A 
 Aj$ @  A j Aj( 6    ) 7`  A j Aj( 6    ) 7p  A j"   A j  A j 

  A 

A 
! A*6  6   Aj$  (" @   (

 Aj" ( @  Aj
 Aj Aj (!  ("
 

 Aj A j (
!  ("	
 


  (6`Ä A+ A jA A  
  (6`Ä A+ A jA A  
 A ; A :  Aj!# A k"$   A j" ("E@A!A 

 A0j 6  A,j  ( "6   6   6
A !  (
68  6(  6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj Aj (" E
 (!   6l  6X A j!# Ak"$  Aj A@k" A j Aj" (@ (
! A

# A k"$  (!  A 6@@  @  A
j( " 6 Aj ( ( Y (
!@@ (E@  6 ( E@ Aj Aj Aj"AO@ 
 ("AO@ 
 ("AI
 

   6
 A
j!  (
!	  
!  	AO@ 	
 AI
 

  AI
  

 Aj 	 
A 

A A 
 ! 
A
!   6  6  A j$  (!  ( 
6    6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!   6   6  A j$  (!  ( E@ A j A@k A0j Aj$   

   6Ä A+ AjA A  

,~# Ak"$  Aj  @@ (@ Aj Aj( " 6   )7 Aj! (!# Ak"$    6
  6 Aj!# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Aj"(" E@ AjAA̎ A

   Ak"
6  ( " Aj6    -  "):  )AI
 AjA6  AjA6  A 6 A 6 A6  Aj6  Aj6 Aj"  Aj"O A  
 )"-BBR
 -B!) (!

@@ 
E@ AjAA̎ A

  
Ak6  ( " Aj6    -  "
:  

-- Chunk 52 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7651-7800
AI
 AjA6  AjA6  A 6 A 6 A6  Aj6  Aj6 Aj"  Aj"O A  
 )"-BBR
 -B!

 Aj > (
  )7x  Aj" ( 6 Aj > (
  )7   ( 6 Aj Q - 
 Aj"  Aj)  7   Aj" Aj) 7  Aj - :   Aj ) 7  Aj  )  7    / ;  Aj" ) "-7  -7 )!/ Aj > (
  )7   ( 6 Aj Q - 
 Aj"  Aj"	)  7   Aj" Aj"
) 7  Aj - :   Aj ) 7  Aj  )  7    / ;  Aj") "-7  -7 )!0 Aj!# A0k"$  A jB 7  AjB 7  AjB 7  B 7@@ ("A O@ AjA  ( " A A   A k6   A j6 

 A(jAA̎ A@ )("-BBR
  -BB R
 ( ! @@ @  Ak"6   Aj"6   -  ! ! 

 A(jAA̎ A )("-BBR
 -B!A !
 Aj j :   Aj"! A G
 


 A:    -7

  )7  A :   Aj A j) 7   Aj Aj) 7   A	j Aj) 7  
 A0j$  - 
 Aj"  	)  7   Aj" 
) 7  Aj - :   Aj ) 7  Aj  )  7    / ;  ) "-7  -7 )!1 Aj! # Ak"$ @ ("E@ AjAA̎ A   )7 

  A:    Ak6  ( "Aj6    -  : 
 Aj$  - AF@ - 

 )"-BBR
	 -B
!, Aj!A ! # Ak"$ @@@@@ ("AO@ A j ( " - p
 ( q!  Ak6  Aj6 

 A jAA̎ A )p"-BBR
 -B !
 B 7@@@@@ @ A jAr!% Aj!& A j! A j!@ A j > )t!- (p
  (|6  -7@ ("AO@ A j ( " - p

 ( q!  Ak6  Aj6 

 A jAA̎ A )p"-BBR
 -B !
 B 74 @ A j > )t!- (p
  (|6H  -7@ A j!# A0k"$  Aj >@@@@@@@ (E@  )
7  A$j( 6 ("AI
 Aj ( " - E


 )
!- A 6  -7 

 ) !-  Ak"	6  Aj"
6  	AI
 Aj 
 - E


 AA̎ A A 6 Aj

 ) !.  Ak6  Aj6   )7 Aj Aj( 6   .7  -7 

 AA̎ A A 6 Aj
 A0j$ 

A A+ A(jA A  
 )p!- ("E
  ) 7  Aj Aj( 6   )7h  6d  -7P Aj A j( 6   )@7 A j!
 Aj! A j!
# A@j"
$ # A0k"$ @ A0j"("E@ 
A 6 
 6 
 ) 7
 
Aj Aj( 6 

 Aj! ( !	A !# A k"$   6
  	6 Aj Aj  (!
@ (@@ 	E@ A 6 A
j 
6  Aj 6 A!

   
AtjAj( "6
  	Ak"	6 Aj Aj  (
!
 (
 

  	6 A
j 
6  Aj 6 
  6  A j$  (@ A j" Aj( 6  A,j Aj( 6  
 )
7  
 6  ) 7$ 
Aj ) 7  
Aj A(j) 7 

 
 )
7  
A 6 
 6
 
Aj Aj( 6  
 A0j$ @ 
(@ 
A8j 
Aj( 6  
A0j 
Aj) 7  
A(j 
Aj) 7  
 
) 7 # A@j"
$ @ 
A j"(E@ (!"A 6 Aj( ! )
!- A;  -7 Aj 6   
) 7  Aj 
Aj) 7  Aj 
Aj) 7  Aj 
Aj) 7  A6  6 A 6 

 
Aj Aj( 6  
 ) 7 
A(j Aj( 6  
 )
7  
A0j! 
A j!	 Aj!'# Ak"$  A8j!# A k"$ @ 
Aj"("/A
O@  ( Aj( ! (! ( !  ( 6H  6D  6@"A ; A 6  A@k" [ A<j" 6  A 68  ) 70  A4j ( "Aj"
 A
lj! A8j A0j ( !@ Aj" /"
K@  	) 7  Aj 	Aj( 6 

 
 A
lj  
 k"
A
l Aj 	Aj( 6   	) 7   Atj  Atj 
At

-- Chunk 53 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7801-7950
  Atj"	Aj 
Aj) 7  	Aj 
Aj) 7  	Aj 
Aj) 7  	 
) 7   
Aj;  A 

 ("Aj"
 ("A
lj!@ Aj" /"
K@  	) 7  Aj 	Aj( 6 

 
 A
lj  
 k"
A
l Aj 	Aj( 6   	) 7   Atj  Atj 
At
  Atj"	Aj 
Aj) 7  	Aj 
Aj) 7  	Aj 
Aj) 7   6  6  ( 6  	 
) 7   
Aj; A 6 (! (! ( !
  6@ A j 6  A j 6  A j$  Aj( !( A j( ! (x!"@ (<E
  Aj A8jA0 (t!	 (p! (l"("@ (h! Aj!
@  6  /6  Aj6 Aj Aj( 6   )7 Aj 
Aj) 7  Aj 
Aj) 7  Aj 
Aj) 7   
) 7 A8j! Aj! Aj!
# A k"$ @  Aj"( "AkF@@ ("/A
O@  ( Aj( !* (!
  ( 6H  6D  6@# A0k"$  A@k"#"("$/! "A ; A 6   [ /"Aj!!@ A
I@ !   (" k"+G
9 Aj  At $jAj +At!  ( !!A !@@   Atj( "+ ; + 6  O
    Ij" M


  A0"A<j 6   !68 A4j $6   !60 A0j$ 

 !A
A  
  *6H  A<j A4j 
( 6D  A8j A0j 
( 6@ #  
 	X  A 

   
 	X A 6
 A j$ 


5
 (<E
 Aj A8jA0 (t!	 (p! (h! (l"("
 

 A8j AjA0 '( "("
E
5 ( !" 
6 A ; A 6  6  Aj"6  
A ; 
 6  6  6 Aj Aj( 6   )7 Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7 Aj!
 Aj!@  Aj"( AkF@ ("/"A
M

5

5
  Aj";  A
lj"Aj 
Aj( 6  Aj 
) 7   Atj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   AtjAj 	6  	 ; 	 6
  (6  6  "6  Aj$  
(4 
(8 (" (Aj6
 
A@k$  
A 6

 
( 
(Atj") !-  
) 7  
 -7  Aj") !-  
Aj) 7  
Aj -7  Aj") !-  
Aj) 7  
Aj -7  Aj") !-  
Aj) 7  
Aj -7 
 
A@k$  (@ &
 Ak"
 
 (8A 
!  Aj!   6(  )07   Aj( 6   )7P A j  A j A j (p@ %
   G
 

  ) 7 A 6  A
j Aj( 6 

 A@k
 A0j
 A6   -7 Aj

 A6   -7
 

 A6   -7
 Aj$ 

A A+ AjA A  
 (
	  )7  Aj" ( 6 Aj @ (
  )7   ( 6 Aj  (

 )!. Aj  (

 )!2 Aj Q - 

 Aj"  Aj)  7   Aj" Aj) 7  Aj - :   Aj ) 7  Aj  )  7    / ;  Aj) "-7  -7 )!3 Aj  (
 )!4 Aj  (
 )!5 Aj P (
  )7  Aj" ( 6 Aj P (
  )7   ( 6 Aj!# A k" $ @@@@@@@ ("AO@  A j ( "  -  
  ( !!  Ak6  Aj6 

  A jAA̎ A  ) "-BBR
 -B !
  B 7 @@  A j >  )$!-  ( 
    (,6   -7  A j >  )$!-  ( 
    (,68   -70  A(j  Aj( 6     )7   A@k    A j  A0j  (D@  A@k
 Ak"
 

   ) 7 A 6  A
j  Aj( 6 

 A6   -7

 A6   -7

 A6   -7  Aj

A A+  A@kA A  
  

-- Chunk 54 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:7951-8100
  A j$  (
  )7  Aj( 6 Aj  (
 )!6 Aj  (
 )!7 Aj  (
 )!8 Aj  (
 )!9 Aj > (
  )7  Aj"
( 6 Aj!# Ak"$ @@@@@ ("AO@ Aj ( " - 
 ( !   Ak6  Aj6 

 AjAA̎ A )"-BBR
 -B ! 
 B 7
@@@@@  @ AjAr!
 A jAr!$ Aj!!A !@ Aj > )!- (
  (6   -7@ ("AO@ Aj ( " - 

 ( !  Ak6  Aj6 

 AjAA̎ A )"-BBR
 -B !
 B 7< @ Aj > )!- (
  (6P  -7H Aj!# A k"$  A j Q@@@@@@@@ -  E@ A j - #:   Aj A4j) 7  Aj A9j)  7    / !;D  A,j) 7 ("AI
 )$!- A j ( " -  E


 )$!-

 ) !!:  Ak"	6  Aj"
6  	AI
 A j 
 -  E


 A jAA̎ A ) !-

 A jAA̎ A ) !-

 ) !!;  Ak6  Aj6   /D;  A
j A j-  :   Aj )7   Aj Aj) 7   A j Aj)  7   A0j ;7  A(j :7  A
j -7   A 6 

 A6   -7
 A j$ 

A A+ A jA A  
 (
 (! $ !A,  6X Aj A j( 6   )H7 A j!# A@j"$  Aj!
A !
# A0k"$ @ A8j"
("E@ A 6  
6  
) 7
 Aj 
Aj( 6 

 Aj! 
( !	# A k"$   6
  	6 Aj Aj 
 (!
@ (@@ 	E@ A 6 A
j 
6  Aj 6 A!


   
AtjAj( "6
  	Ak"	6 Aj Aj 
 (
!
 (
 

  	6 A
j 
6  Aj 6 
  
6  A j$  (@ A j" Aj( 6  A,j 
Aj( 6   )
7   
6  
) 7$ Aj ) 7  Aj A(j) 7 

  )
7  A 6  
6
 Aj Aj( 6  

 A0j$  Aj"~ (@ A8j Aj( 6  A0j Aj) 7  A(j Aj) 7   ) 7 # A0k"
$ @ A j"(E@ (!"A 6 
A(j Aj( "6  )
!- A;  -7 Aj 6  
 -7   A0! A6  6 A 6 

 
Aj Aj( 6  
 ) 7  
Aj Aj( 6  
 )
7 
A j! 
Aj!	 Aj!%# Ak"$  A j!
# A k"$ @ 
("/A
O@  
( Aj( !
 (! 
( !
  ( 6X  6T  
6P"A ; A 6  A j"
 z A j" 6  A 6H  
) 7@  A j ( "Aj" 
A
lj!
 A j A@k ( !@ 
Aj" /"K@ 
 	) 7  
Aj 	Aj( 6 

  A
lj 
  
k"A
l 
Aj 	Aj( 6  
 	) 7   A0lj  
A0lj A0l
  
A0lj A0  Aj; 
 A 

 
("Aj" 
("
A
lj!
@ 
Aj" /"K@ 
 	) 7  
Aj 	Aj( 6 

  A
lj 
  
k"A
l 
Aj 	Aj( 6  
 	) 7   A0lj  
A0lj A0l
  

-- Chunk 55 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:8101-8250
A0lj A0  Aj;  
6  6  
( 6  
A 6 (!
 (! ( !
 
 6P 
A j 
6  
A j 6  A j$  Aj( !& Aj( !' (!(@ (LE
  Aj A jA  (!	 (!
 ("("@ (!
 Aj!@  6  /6  
Aj6 Aj Aj( 6   )7 Aj" A0 A j! Aj!# A k"$ @ 
 Aj"( "
AkF@@ ("
/A
O@  ( Aj( !" (!  ( 6X  
6T  
6P# A@j"
$  A j"*"("/!#"
A ; 
A 6 
  
z 
/"
Aj!@ 
A
I@  # ("#k" G
9 
Aj #At jAj  At!# ( !A !@@ # Atj( "  ;   
6  
O
    
Ij" 
M


  
A "A j 
6   6H A j 6   6@ 
A@k$ 

 A
A  
  "6X  A j A j ( 6T  A j A@k ( 6P *   	_  A 

    	_ A 6
 A j$ 


5
 (LE
 Aj A jA  (!	 (!
 (!
 ("("
 

 A j AjA  %( "("
E
5 ( !
" 
6 A ; A 6  6  
Aj"6  
A ; 
 6  6  6 Aj Aj( 6   )7 Aj"
 A jA0 Aj!
@ 
 Aj"( AkF@ ("/"A
M

5

5
  Aj"
;  A
lj"Aj 
Aj( 6  Aj 
) 7   A0lj 
A0  
AtjAj 	6  	 
; 	 6
  &6  '6  (6  Aj$  
($ 
(( (" (Aj6
 
A0j$ B 

 Aj ( (A0lj"A0  A0B
7  A@k$  Ak"
 
 (@A 
! Aj!  60  )87( A j A j( 6   )7X Aj Aj A j A(j (@ 

   G
 

  )7 A 6  A
j Aj( 6 

 )!- A j
 A8j
 A6   -7 Aj

 A6   -7
 Aj

 A6   -7
 Aj$ 

A A+ AjA A  
 (
  )7  
( 6 Aj @ (
  )7  Aj"( 6 Aj!# A0k"$ @@@@ (" AO@ A j ( " -  
 ( !!   Ak6  Aj6 

 A jAA̎ A ) "-BBR
 -B !
 B 7 @@ A j > )$!-@@@ ( E@  (,6  -7 A j!# A@j" $ @@   ("@  Ak6  ( "Aj6  -  

  A jAA̎ A  ) "-BBR
 -B
":  AqAO@  A,jA6   A4jA6   A 6(  A 6   A6<    A8j60    Aj68  Aj"  A j"O A    ) 7 

 A:    : 

  -7 
  A@k$  -  AF@ - !! 

 ) "-BBR
 -B! 

 A6   -7

 A6   -7 Aj
 

 A(j Aj( 6   )7 # A@j"
$  A j!A !	# A0k"$ @ ("E@ 
A 6 
 6 
 ) 7
 
Aj Aj( 6 

 Aj!
 ( !# A k"$   6
  6 Aj Aj  (!
@ (@@ E@ 

-- Chunk 56 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:8251-8400
A 6 
A
j 
6  
Aj 6 A!	

   
AtjAj( "6
  Ak"6 Aj Aj  (
!
 (
 

 
 6 
A
j 
6  
Aj 6 
 
 	6  A j$  (@ A j" Aj( 6  A,j Aj( 6  
 )
7  
 6  ) 7$ 
Aj ) 7  
Aj A(j) 7 

 
 )
7  
A 6 
 6
 
Aj Aj( 6  
 A0j$ @ 
(@ 
A8j 
Aj( 6  
A0j 
Aj) 7  
A(j 
Aj) 7  
 
) 7 # A@j"$ @ 
A j"(E@ (!"A 6  Aj( ! )
!- A;  -7 A
j 6    :  A6  6 A 6 

 Aj Aj( 6   ) 7 A(j Aj( 6   )
7  A0j! A j!	 Aj!
# A k"$  Aj!
# A0k"$ @ Aj"("
/A
O@  ( Aj( ! (!
 ( !  ( 6(  
6$  6 "A ; A 6   A j"
  A
j" 6  A 6  
) 7  Aj 
( "Aj" A
lj!
 Aj Aj 
( !
@ Aj" /"K@ 
 	) 7  
Aj 	Aj( 6 

  A
lj 
  k"A
l 
Aj 	Aj( 6  
 	) 7  Aj"	 j  	j 
  jAj  :   
 ) 7  
Aj Aj) 7  
Aj Aj) 7  
Aj Aj) 7   Aj;

 ("Aj" ("
A
lj!
@ 
Aj" /"K@ 
 	) 7  
Aj 	Aj( 6 

  A
lj 
  
k"A
l 
Aj 	Aj( 6  
 	) 7  Aj"	 j 	 
j 
  
jAj  :    
6  6  ( 6   Aj; 
A: 
 (! (! ( !

 
 
6  
A(j 6  
A$j 6  A0j$  A8j( !
 A4j( !$ (0!!@ - 
"	AF
  Aj" Aj"%( 6   )7  ((! (,! ($" ( "
@ ( !@  
6D   /6H  Aj6@ A j ( 6   ) 7P Aj!
 A j!# A0k" $ @  A@k"( "
AkF@@ ("/A
O@   (  Aj"&( !'  (!    ( 6(   6$   
6 # Ak"
$   A j"("("/!"A ; A 6  
   /"
Aj!@ 
A
I@   ("k""G
1 Aj At jAj "At! ( !A !@@  Atj( "" ; " 6   
O
    
Ij" 
M


   
) 7    6   6  A
j 6   Aj 6   Aj 
Aj) 7  
Aj$ 

 A
A  
   '6(    A
j  Aj ( 6$    Aj"  Aj" ( 6  (  	 c 
Aj ) 7  
Aj ) 7  
Aj &) 7  
  ) 7 

   	 c 
A: 

  A0j$ 


-
 - 

-- Chunk 57 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:8401-8550
"	AF
  %( 6   )7  ( ! ((! (,! ($" ( "

 

 
( "("
E
- ( !
"  
6  A ;  A 6    6  
Aj"6  
A ; 
  6    6T  6P Aj Aj( 6   ) 7 Aj!@  A j" ( AkF@  (" /"A
M

-

-
   Aj"
;   A
lj"
A
j Aj( 6  
Aj ) 7    jAj 	:     
AtjAj 6   
;   6 
  
6  $6  !6  A j$  (4 (8 ("   (Aj6
 A@k$ 

 
( 
(jAj"-     :  
 
A@k$  Ak"
 

  ) 7 A 6  A
j Aj( 6 

A A+ AjA A  
 A6   -7
 A0j$  (
  )7  ( 6 Aj > (
  )7  Aj" ( 6 Aj > (

  )7   ( 6 Aj!# A@j" $ @ ("E@  A jAA̎ A   ) 7 

  Ak6  ( "Aj6    -  ": @@@  
 A; 

 A; 

  A,jA6   A4jA6   A 6(  A 6   A6<    A8j60    Aj68  Aj"  A j"O A    ) 7 
  A@k$  - AF@ - 

 )"-BBR

 -B
!  Aj > (

  )7  Aj( 6 Aj  (E@ )!-  )x7  /;    )7 
 Aj Aj( 6  A0j" Aj( 6  Aj Aj-  :   Aj Aj) 7   Aj Aj)  7    )7( Aj Aj( 6   )7 A"j Aj-  :    /;   A8j Aj)  7   A3j Aj) 7    )7 + A j Aj-  :    /; @ A j Aj)  7   A j Aj) 7    )7 K Aj Aj( 6   )7 A j" Aj( 6   )7h A j Aj-  :    /; ` A j Aj)  7   A j Aj) 7    )7 k Aj Aj( 6   )7 A j" Aj( 6   )7X Aj Aj( 6   )7 A j" Aj( 6   )7 A j" Aj( 6   )7H Aj Aj( 6   )7 A@k" Aj( 6   )78 Aj Aj( 6   )7 Aj"	 Aj( 6   )7 Aj Aj( 6   )7  -7  97  87  77  67  57  47  27  .7  37 c  17 C  07 #  /7   )h7 Aj ( 6   )X7 Aj ( 6  Aj ( 6   )H7 Aj ( 6   )87 Aj ( 6   )(7 Aj ( 6   )7 Aj 	( 6   )7   :   
:   ):   ,: 
 
 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j

 A:   -7 


 A:   -7 


 )!- A:   -7 


 )!- A:   -7  A j

 )!- A:   -7  Aj A j

 )!- A:   -7  Aj A j

 )!- A:   -7  Aj Aj A j

 )!- A:   -7  Aj Aj A j

 A:   -7  Aj Aj A j

 )!- A:   -7  Aj Aj A j

 )!- A:   -7  Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj A j


 )!- A:   -7  Aj Aj Aj Aj Aj Aj A j


 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj A j


 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj A j


 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj A j
	
 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j

 A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j

 )!- A:   -7  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj A j
 Aj$ 

A A(A  
AЃ A5A  
A A A  
A A0A؂  
A A+A  
 )!-@ - " AG@ Aj AjA   :   -7  /; (
E@  AjA

 AA A A:  Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj

 A:   -7 
 Aj$  - AF

-- Chunk 58 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:8551-8700
 A j" Aj" A A ; A :  Aj!# Ak"$  Aj   (! @@@@@ ("E
   6   6 Aj AjA A Aj@ (@ (! 

 Aj AjA A	 Aj (@ (! 

 Aj AjA A	 Aj (@ (! 

 Aj AjAȐ A Aj (@ (! 

 Aj AjAؐ A
  (@ (! 

 Aj AjA A Aj (@ (! 

 Aj AjA A A j (@ (! 

 Aj! A@k! # A@j"$  A0j Aj"(@@@ (8@ A(j A8j( 6   )07  Aj   (
! (! @   F
 Aj A j  Aj! (E
 
 (! ( " AI
  

 (0!
A! 

 A8j A(j( 6   ) 70 Aj A0j (
! (" 
  A A 
  6   6  A@k$  (@ (! 

# Ak" $   Aj Aj"( Aj-    (
!  ("E@ A A 
 Aj" 6   6  Aj$  (@ (! 

# Ak"
$  
Aj! Aj"(!# A k"$   Aj" ("E@A!A 

 A0j 6  A,j  ( "6   6   6
A !  (
68  6(  6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj Aj (" E
 (!   6l  6X A j! # Ak"$  Aj A@k" A j Aj" (@ (
!A

# A k"	$  (! A 6@@ @ 	 A
j( "6 	Aj!
 (!  ( !# A k"$   (" E@A! A 

 A0j  6  A,j ( "6    6   6
A !  (
68   6(   6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj!# Ak"
$  Aj" ( "   Ak6   "E
 
Aj!
 ( !@ (" (" /I@  !

@  ("E
 Aj!  /!  " /O
 

 Aj!
@ E@ ! 

  
AtjAj( ! A !
 Ak"E
 @  (!  Ak"
 

  
6   6 A 6  
  Atj6 
  A
ljAj6  
(
! 
(A 
!   6   6  
Aj$  (" E
 (!   6l  6X A j!# Ak"
$  
Aj A@k" A j Aj"
 
(@ 
(
!A

# A k"$  (!  A 6@@  @  A
j( " 6 Aj! ( !
 (!# A0k"$  A(j  ((!@ (,"E
   6$  6  Aj A jA A 
Aj@ (@ (
!

 Aj A jAה A 
 (@ (!

 Aj A jA A 
Aj (@ (
!

  (  ($ (! ( 

 ( "
AI
  

A
!
  6  
6  A0j$  (
!@@ (E@  6 ( E@ Aj Aj Aj"AO@ 
 ("AO@ 
 ("AI
 

   6
 A
j!  (
!  
!  AO@ 
 AI
 

  AI
  

 Aj  
A 



 ! 
A
! 
  6 
 6  A j$  
(! 
( 
6  
 6 
Aj$  (E
 
 (
! A@k

 (\!
A


-- Chunk 59 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:8701-8850
 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!  
 6 
  6  A j$  	(
! @@ 	(E@ 	  6 ( E@ Aj 	Aj 	Aj" AO@  
 	(" AO@  
 	(" AI
  

 	 6
 	A
j! 	(
! 
! AO@ 
  AI
  

 AI
 

 Aj   
A 



  !
A
!   6   6  	A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!   6   6  A j$  
(
!  
("E@ A A
  
 Aj" 6    6 
Aj$  (@ (! 

 Aj AjA A Aj (@ (! 

 Aj AjAǑ A Aj (@ (! 

 Aj AjAڑ A Aj (@ (! 

 Aj AjA A
 A j (@ (! 

 Aj AjA A Aj (@ (! 

 Aj AjA A Aj (@ (! 

 Aj AjA A Aj (@ (! 

 Aj AjA A
 Aj (@ (! 

# Ak" $   Aj Aj"( AjY  (
!  ("E@ A A 
 A j" 6   6  Aj$  (x@ (|! 

 A j AjA̒ A
 Aj (p@ (t! 

 A j AjA֒ A
 Aj (h@ (l! 

 A j AjA A
 Aj (`@ (d! 

 A j AjA A Aj (X@ (\! 

 A j AjA A Aj (P@ (T! 

# Ak"
$  
Aj! Aj"(!# A k"$   Aj" ("E@A!A 

 A0j 6  A,j  ( "6   6   6
A !  (
68  6(  6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj Aj (" E
 (!   6l  6X A j! # Ak"$  Aj A@k" A j Aj" (@ (
!A

# A k"	$  (! A 6@@ @ 	 A
j( "6 	Aj!
 (!  ( !# A k"$   (" E@A! A 

 A0j  6  A,j ( "6    6   6
A !  (
68   6(   6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj!# Ak"
$  Aj" ( "   Ak6   "E
 
Aj!
 ( !@ (" (" /I@  !

@  ("E
 Aj!  /!  " /O
 

 Aj!
@ E@ ! 

  
AtjAj( ! A !
 Ak"E
 @  (!  Ak"
 

  
6   6 A 6  
  A0lj6 
  A
ljAj6  
(
! 
(A 
!   6   6  
Aj$  (" E
 (!   6l  6X A j!# Ak"
$  
Aj A@k" A j Aj"
 
(@ 
(
!A

# A k"$  (!  A 6@@  @  A
j( " 6 Aj! ( !
 (!# A0k"$  A(j  ((!@ (,"E
   6$  6  Aj A jA A 
@ (@ (
!

 Aj A jAה A 
A j (@ (!

 Aj A jA A 
A(j (@ (
!

  (  ($ (! ( 

 ( "

-- Chunk 60 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:8851-9000
AI
  

A
!
  6  
6  A0j$  (
!@@ (E@  6 ( E@ Aj Aj Aj"AO@ 
 ("AO@ 
 ("AI
 

   6
 A
j!  (
!  
!  AO@ 
 AI
 

  AI
  

 Aj  
A 



 ! 
A
! 
  6 
 6  A j$  
(! 
( 
6  
 6 
Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!  
 6 
  6  A j$  	(
! @@ 	(E@ 	  6 ( E@ Aj 	Aj 	Aj" AO@  
 	(" AO@  
 	(" AI
  

 	 6
 	A
j! 	(
! 
! AO@ 
  AI
  

 AI
 

 Aj   
A 



  !
A
!   6   6  	A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!   6   6  A j$  
(
!  
("E@ A A  
 A j" 6    6 
Aj$  (H@ (L! 

 A@k AjA A Aj (@@ (D! 

# Ak"	$  	Aj!
 Aj"
(!# A k"$   Aj" ("E@A!A 

 A0j 6  A,j  ( "6   6   6
A !  (
68  6(  6 A j @@ (XAG@ A j A j( 6  A j A j) 7   )X7@@ Aj!# Ak"$  Aj" ( "   Ak6   "E
 Aj! ( !@ (" ("/I@ ! 

@ ( " E

 Aj! /!   "/O
 

 Aj!@ E@  !

   AtjAj( !A ! Ak"E
 @ (! Ak"
 

  6  6 A 6     jAj6    A
ljAj6  (
! (A 
!   6   6  Aj$  (" E
 (!   6l  6X A j! # Ak"$  Aj A@k" A j Aj" (@ (
!A

# A k"$  (! A 6@@ @  A
j( "6 Aj!  ( ! (# A k" $ @@@ -  Ak 
  AjA A
  (!  (


  AjA A  (!  (

  AjA A
  (!  (

!  6   6  A j$  (
! @@ (E@   6 ( E@ Aj Aj Aj" AO@  
 (" AO@  
 (" AI
  

  6
 A
j! (
! 
! AO@ 
  AI
  

 AI
 

 Aj   
A 



-- Chunk 61 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:9001-9150

  !
A
!   6   6  A j$  (! ( 
6   6 Aj$  (E
 
 (
! A@k

 (\!
A

 A j A j( 6  A j A j) 7   )@7X  A j (! ( 
!  
 6 
  6  A j$  	(
!  	("E@ 
Aѓ A  
 A8j" 6    6 	Aj$  (8@ (<! 

 A0j AjA A
 Aj (0@ (4! 

 A(j AjA A	 Aj ((@ (,! 

 A j AjA A
 Aj ( @ ($! 

 Aj AjA A
 Aj (@ (
! 

 Aj AjA A
 Aj (@ (! 

 Aj ( ( (
!  (

 ("AI
  
A
!   6  6  Aj$ 

A A+A  
A A+AĆ  
A A 
 (
!  (
 Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj Aj$   

  (6 Ä A+ A jA A  
  )7 Ä A+ A jA A  
   6Ä A+ AjA A  

~@# A k"$  A 6 B7 A(j" AjA # A@j" $ A!@ ( "A A
 ("(
 
 @ ("@   6
  A6    A
j6A!  A6<  A64  A 60  A 6(    Aj68    A(jHE


 ( " (A
j( 
 B̓AR
    6
  A6    A
j6A!  A6<  A64  A 60  A 6(    Aj68    A(jH

 (
!  A$jA 6   A
jA 6    A
j6    Aj6  A6   6  A6<  A64  A 60  A 6(    Aj68    A(jH!
  A@k$  E@ Aj" AԿ A
 "  ("6   ( "6
  6      A޿ A A0j Aj( "6   )"
7(  
I@# Ak"$  Aj!# A k" $ @  A(j"( M@  Aj @  ("@  (
!  (!	 E@ @ 	8
 

 	   
"E
  6   6
Ax!
  6  6   A j$ 

  AjA6   A
jA 6   A 6  A 6  A 6  AjA  
 (
" AxG@ (   
 Aj$  (0!
 (,  Aj AO@ 
 A j$ 

A A7 AjA AĿ  

# Ak"$ A -  AG@ A: 
  A
j6
 A
j! # A k"$ @@@@@@@@A -  Ak 
A A:   A 6   ( " -    A :  E
# A k" $ @@@Aؗ ( Aq@E

Aȗ ( Aȗ A6 
@@Aؗ ( AqE@Aԗ ( !Aԗ A 6 AЗ ( !AЗ A6 

Aԗ ( !Aԗ A 6 AЗ ( !AЗ A6 E

Aؗ ( AqE
 
 A̗ A:  
Aȗ A 6 @ E
   (   Aj( E
  Aj(  8
  A j$ 

  AjA6   A
jA 6   A 6  A 6  A 6  AjA  
 
A A ( " A  6   E@  @  AG
@A ( AF
 


A A 6 A A 6 A A6 

A A+ AjA A  
 A
jA6  AjA 6  A 6

A A6  A:  (  - :  
 A j$ 

 A
jA6  AjA 6  A 6

A A+A  
 A 6 A 6  A  

 Aj$ 

 B̩ 
 A 

 B̓A

 B˅ԛ


-- Chunk 62 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:9151-9300
 Bݜ

 
 
 

ѕ
 A 

called `Option::unwrap()` on a `None` value/rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/collections/btree/map/entry.rs +  `   p  6   assertion failed: idx < CAPACITY/rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/collections/btree/node.rs   [     	   assertion failed: edge.height == self.height - 1  [     	     [     	   assertion failed: src.len() == dst.len()  [   
       [          [        assertion failed: edge.height == self.node.height - 1     [     	   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/collections/btree/navigate.rs  _   Y  0    _     /    _   1  /   called `Option::unwrap()` on a `None` value/rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/collections/btree/navigate.rs   _      '    _      $    _      $   Error on Parsing Data: Duplicate key exist     
               a Display implementation returned an error unexpectedly              /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs  K   	     called `Result::unwrap()` on an `Err` value 	         
   
         
   
            invalid value: , expected        
   src/lib.rs   
   +   =    
   ,   [    
   9   /    
   >   =    
   ?   B    
   A   6                a sequence               `unwrap_throw` failed/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/de/read.rs   a   N   
   /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/borsh-0.9.3/src/de/mod.rs     
               a Display implementation returned an error unexpectedly              /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs  K   	     called `Result::unwrap()` on an `Err` value              Unexpected length of input   ^   e   
    ^          ^         Invalid bool representation:     
   Not all bytes readUnexpected variant index:     PayoutFailedPayoutSuccessfulUninitializedPayoutStateis_allowlistedis_activetask_nametask_descriptiontask_managertask_audit_programstake_pot_accountstake_pot_seedstake_pot_bumpsubmissionssubmissions_audit_triggertotal_bounty_amountbounty_amount_per_roundtoken_typetotal_stake_amountminimum_stake_amountavailable_balancesstake_listip_address_listround_timestarting_slotaudit_windowsubmission_windowtask_executable_networkdistribution_rewards_submissiondistributions_audit_triggerdistributions_audit_recordtask_metadatatask_varsis_migratedmigrated_toallowed_failed_distributionsTaskStateAuditTriggerStatetrigger_byslotvotesTaskVoteStateis_validvoterTaskSubmissionsubmission_valueroundDistributionSubmissionMap key is not a string and cannot be an object key   can't be represented as a JavaScript number
     
 ,   cannot access a Thread Local Storage value during or after destruction               /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/std/src/thread/local.rs |
 O                  
   
   
   already borrowed             /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-wasm-bindgen-0.4.5/src/lib.rs
 h   5      
     !   "   
      #   $   %   a Display implementation returned an error unexpectedly &             /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs 
 K   	     invalid type: , expected    T
    b
 
   Error   &         '   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/collections/btree/node.rsassertion failed: src.len() == dst.len() 
 [   
          A 
@SystemInstructionAuthorizeNonceAccountInitializeNonceAccount(   
      )   *      a Display implementation returned an error unexpectedly +             /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs 4 K   	     /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/wasm/mod.rs  k      
   /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bs58-0.4.0/src/encode.rs   
 ]   U     
 ]   ^  
   
 ]   h  	   
 ]   l     
 ]   m      	






 !"#$%&'()*+,-./0123456789123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz  
 ]          called `Result::unwrap()` on an `Err` value ,          -   .            /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/instruction.rs   n     $   Invalid Array of Uint8Arrays/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bincode-1.3.3/src/de/read.rs   p a   N   
   ,V_sҗ\1ED.@  ,\Q!L=JXDي     	






 !"#$%&'()*+,-./0123456789123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz  /          /           0   1   2   /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs   Z   /  1   one-time initialization may not be performed recursivelyt 8   Once instance has previously been poisoned   *   called `Option::unwrap()` on a `None` value/rustc/90c541806f23a127002de5b4038be731ba1458ca/library/std/src/sync/once.rs  L      2   called `Result::unwrap()` on an `Err` value /          3   /          4   5   6   /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/wasm/mod.rs  k      8   9   
      :   ;      a Display implementation returned an error unexpectedly <             /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs  K   	     Unexpected length of input/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/borsh-0.9.3/src/de/mod.rs ^   e   
       g	jgrn<:ORQhك[     /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/pubkey.rsProgramDerivedAddressUnable to find a viable program address bump seed . 1    i         Provided owner is not allowedProvided seeds do not result in a valid addressLength of the seed is too long for address generationInvalid Base58 stringString is the wrong sizeUnsupported argument/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/wasm/pubkey.rsarray to be iterable: n   )   ?   Invalid array argument:     Invalid Uint8Array pubkey:      Invalid Array pubkey:       /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/digest-0.10.7/src/core_api/ct_variable.rs  0 n   |   $   /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/block-buffer-0.10.4/src/lib.rs  c      %    c           c          c   5      c   8  
   >   
      ?   @      a Display implementation returned an error unexpectedly A             /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs  K   	     called `Result::unwrap()` on an `Err` value B         C   A             /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bs58-0.4.0/src/encode.rs   l
 ]   Q   +   /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sha2-0.10.8/src/core_api.rs
 `   B          g	jgrn<:ORQhك[/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/hash.rs  
     p
 g   }   7   failed to decoded string to hashstring decoded to wrong size for hashUnsupported argument/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/solana-program-1.17.34/src/wasm/hash.rsarray to be iterable   I
 l      ?   Invalid array argument: 
    
     E   F   G   H   I   J   
      K   L   M   a Display implementation returned an error unexpectedly N             /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/string.rs x K   	     

Stack:



O         P   Q   R   Tried to shrink to a larger capacity $   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/raw_vec.rs$  L     	   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/core/src/slice/iter.rs    N        attempt to divide by zero       xYM n;( )` <c9 6  /home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/curve25519-dalek-3.2.1/src/edwards.rs  (! j   e  
       J'   `
^ L 
H2 S   
      T   S   
      U   T   ! V   W   X   V   Y   Z         [   \   ]   BufferTooSmall/home/ghazanfer/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bs58-0.4.0/src/decode.rs 2" ]         2" ]         ^   
      T   ^   
      U   T   " _   `   X   _   a   ()  b          b          " c   d   e   SetLoggerError  b         f   Tried to shrink to a larger capacity8# $   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/alloc/src/raw_vec.rsd# L     	   closure invoked recursively or after being droppedCustoms         t   SequenceMustHaveLengthSizeLimitDeserializeAnyNotSupportedInvalidTagEncoding s         u   InvalidCharEncodingInvalidBoolEncoding  s         v   InvalidUtf8Encoding s         w   Io  s         x   Invalid size : sizes must fit in a usize (0 to )$ 
   $ "   %                      struct varianttuple variantnewtype variantunit variantenummapsequencenewtype structOption valueunit valuebyte arraystring   %    character ``% 
   %    floating point `%    %    integer `   % 	   %    boolean `   & 	   %    8%     .0u8         v   JsValue()   L&    T&    null pointer passed to rustrecursive use of an object detected which would lead to unsafe aliasing in rust                    called `Option::unwrap()` on a `None` valueAccessErrorErrorkind             message             KindOscode                 
         memory allocation of  bytes failed  '    ' 
   library/std/src/alloc.rs'    U  	   cannot modify the panic hook from a panicking thread' 4   library/std/src/panicking.rs( 
      	   ( 
   A  
   ( 
   @        
                                                                UnsupportedCustomerror              UncategorizedOtherOutOfMemoryUnexpectedEofInterruptedArgumentListTooLongInvalidFilenameTooManyLinksCrossesDevicesDeadlockExecutableFileBusyResourceBusyFileTooLargeFilesystemQuotaExceededNotSeekableStorageFullWriteZeroTimedOutInvalidDataInvalidInputStaleNetworkFileHandleFilesystemLoopReadOnlyFilesystemDirectoryNotEmptyIsADirectoryNotADirectoryWouldBlockAlreadyExistsBrokenPipeNetworkDownAddrNotAvailableAddrInUseNotConnectedConnectionAbortedNetworkUnreachableHostUnreachableConnectionResetConnectionRefusedPermissionDeniedNotFoundoperation successful                      
   	      
   
   
   
   
   
               
   
      	   
   
      
   
            
         
   
   
   
      
   * * * * * * * * x* h* ]* S* F* <* /* #* *  * ) ) ) ) ) ) ) ) ) {) o) ]) U) G) ;) ,) ) ) ( ) ( ( ( Hash table capacity overflowT, 
   /cargo/registry/src/index.crates.io-6f17d22bba15001f/hashbrown-0.12.3/src/raw/mod.rsx, T   Z   (                                 library/alloc/src/raw_vec.rscapacity overflow    -    - 
   
     a formatting trait implementation returned an error              library/alloc/src/fmt.rs-    d      �byteserror               FromUtf8Error      
         assertion failed: edelta >= 0library/core/src/num/diy_float.rs  . !   L   	   . !   N   	      
   d     '   @B    ʚ;            N  @
 
  -1 
 5w  o#     ﬅ[Am- A 
jd8n헧?O A 
&>.	8/t#ڰͼ3&N A 

|.[Ӿr؇/PkpnJؕnq&fƭ$6
ZB<TcsUe(U܀n_S library/core/src/num/flt2dec/strategy/dragon.rsassertion failed: d.mant > 0 / /   u      assertion failed: d.minus > 0   / /   v      assertion failed: d.plus > 0/ /   w      assertion failed: d.mant.checked_add(d.plus).is_some()  / /   x      assertion failed: d.mant.checked_sub(d.minus).is_some() / /   y      assertion failed: buf.len() >= MAX_SIG_DIGITS   / /   z      / /      	   / /      T   / /      
   / /     3   / /   
     / /   
     / /   
     / /   
     / /        / /   K     / /   e  
   / /   q  $   / /   v  T   / /     3   E=    ƚp    Oܼw    
kAV    <Ѝ,    U1(\QF    ɦqa    ˋ#w"{    mSx@I̮
    Wζ]y<    7VM6
    OH8oꖐ$    :%˅t ,    φ4    *
45<    5*g8PD    ;?ȄkL    'DŅT    %Οk\    b}$lۺd    _
Xfl    &ޓt    
|    J|l_b%    S04`?    U&NZ    ~)p$wt    帟ߦ    }t_    ϛpD    k    11eU%    {?    ;+*\.    Ӓsi$$I     c    d~    ̈Po	̼    ,eXѳ A 
@ A 

       bx      	x9?
 
     {Η8 $     p\{2~S ,     h髤8m 4     E"&'O <     '1c D     Ȍ8eް L     eǃ T     

-- Chunk 63 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:9301-9450
qB
] \     X,iM
d     pd'l     JwmBt     k}{x	\|     wyTw     ś[[     =]S5Ȭ     \*     _F     %94     \r     ξTSܷ1     A"L     x\ӛ f     S!{Z     :0ܵ     \S٨     <D|     DLLv     @     ,W     )1;
    
U    );b (p
    ϧz^KD$    -ݬ@!,    D^/g4    A3<    㴒D    wߺnL    library/core/src/num/flt2dec/strategy/grisu.rs  6 .   }      6 .         6 .         6 .         6 .         6 .         6 .         assertion failed: d.mant + d.plus < (1 << 61)   6 .         6 .   
   A 
attempt to divide by zero   6 .   
  	   6 .     B   6 .   @  	   assertion failed: !buf.is_empty()called `Option::unwrap()` on a `None` value6 .        assertion failed: d.mant < (1 << 61)6 .        6 .        6 .   #     6 .   &  	   6 .   \  	   6 .     G   6 .     K   6 .     G   library/core/src/num/flt2dec/mod.rs <9 #         assertion failed: buf[0] > b\'0\'   <9 #         assertion failed: parts.len() >= 4  <9 #         0..-+   0infNaNassertion failed: buf.len() >= maxlen<9 #     
   ).. 
:    BorrowMutError  9     :[  9     @:    @:    panicked at '', h:    i:                 index out of bounds: the len is  but the index is   :     :                matches!===assertion failed: `(left  right)`
  left: ``,
 right: ``:    :    ;    ; 
   ";    `   :    ;    ; 
   H;    :   9     l;       
                    {
,
,  { } }(
(,
              ]library/core/src/fmt/num.rs;    e      0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899                    library/core/src/fmt/mod.rs <    p  
   0000000000000000000000000000000000000000000000000000000000000000<    j  -   truefalse   <    	  
   <    	     ()library/core/src/slice/memchr.rs  z=     q   '   range start index  out of range for slice of length =    = "   range end index =    = "   slice index starts at  but ends at  >    &> 
   source slice length () does not match destination slice length (D>    Y> +   
:     A 
3 A 
incomplete utf-8 byte sequence from index   ? *   invalid utf-8 sequence of  bytes from index ?    ?     [...]byte index  is out of bounds of ` @ 
   
@    H;    begin <= end ( <= ) when slicing `  L@    Z@    ^@    H;     is not a char boundary; it is inside  (bytes ) of `@ 
   @ &   @    @    H;    library/core/src/str/mod.rs @      
   library/core/src/unicode/printable.rs   A %   
   
   A %      6    	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~
FGNOXZ\^~rstu&./ߚ@0NOZ['/no7=?BESgu  _"D	/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1M<<8+/-!!
/;	"t


7	\
;
8F
t

ZY	

	L
1&
 *L
 	




$jk
	 
';>NO{	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_ZbST./'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юno^"{-f/.
1
$	
+D*$$(4
NC7	
;E9c	0!@8K/
	@ '
	6:
PI73
3.
&RK+*&
	N$	D

H'	u
B>*;
Qb
H
^"E


:
6,<dS
H	
FEHS
I
F

GI7
9
6;
V2
fu
ĊLc
0G9*\&
F
([eK9@
*	3
k
	`G	t<
spFz

W	GBP+>!p-@:*)L
DL=<U4,d
V
8

,	
w_

8
("NT

	6		%
library/core/src/unicode/unicode_data.rslibrary/core/src/num/bignum.rs  G 
        assertion failed: noborrowassertion failed: digits < 40assertion failed: other > 0              TryFromSliceErrorSomeNone               ErrorUtf8Errorvalid_up_toerror_len              F (   P   (   F (   \           ` ]  
 `,+*0 ,o,`-
`.  6`66
!7$
7a9/90

-- Chunk 64 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/bincode_js_bg.wasm:9451-9497
aH
L@4aPjQOo!RR aSeѡS !T UaW!YY  YZ p  -H
0e#
[
:			+<* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
I7
$	f
  


@
	-u"v	:
010(	
 8:
@ ! `  i 
 P 
&
.0'C
/3*     (  PF
1{6)
1=$>
4	
_9QUje 	
 
(	.
 RzH 
4  ; ?Q  . 
 72 d =  m ` A 
# " {	producerslanguageRust 
processed-byrustc
1.70.0 (90c541806 2023-05-31)walrus0.19.0
wasm-bindgen0.2.87 (f0a8ae3b9) ,target_features+mutable-globals+sign-ext

=== File: node/documentation/worker/tests/wasm/bincode_js_bg.wasm.d.ts ===

-- Chunk 1 --
// bincode_js_bg.wasm.d.ts:4-4
function bincode_js_deserialize(a: number): number;

-- Chunk 2 --
// bincode_js_bg.wasm.d.ts:5-5
function borsh_bpf_js_deserialize(a: number): number;

-- Chunk 3 --
// bincode_js_bg.wasm.d.ts:6-6
function __wbg_message_free(a: number): void;

-- Chunk 4 --
// bincode_js_bg.wasm.d.ts:7-7
function __wbg_get_message_recent_blockhash(a: number): number;

-- Chunk 5 --
// bincode_js_bg.wasm.d.ts:8-8
function __wbg_set_message_recent_blockhash(a: number, b: number): void;

-- Chunk 6 --
// bincode_js_bg.wasm.d.ts:9-9
function solana_program_init(): void;

-- Chunk 7 --
// bincode_js_bg.wasm.d.ts:10-10
function systeminstruction_createAccount(a: number, b: number, c: number, d: number, e: number): number;

-- Chunk 8 --
// bincode_js_bg.wasm.d.ts:11-20
function systeminstruction_createAccountWithSeed(
  a: number,
  b: number,
  c: number,
  d: number,
  e: number,
  f: number,
  g: number,
  h: number,
): number;

-- Chunk 9 --
// bincode_js_bg.wasm.d.ts:21-21
function systeminstruction_assign(a: number, b: number): number;

-- Chunk 10 --
// bincode_js_bg.wasm.d.ts:22-22
function systeminstruction_assignWithSeed(a: number, b: number, c: number, d: number, e: number): number;

-- Chunk 11 --
// bincode_js_bg.wasm.d.ts:23-23
function systeminstruction_transfer(a: number, b: number, c: number): number;

-- Chunk 12 --
// bincode_js_bg.wasm.d.ts:24-32
function systeminstruction_transferWithSeed(
  a: number,
  b: number,
  c: number,
  d: number,
  e: number,
  f: number,
  g: number,
): number;

-- Chunk 13 --
// bincode_js_bg.wasm.d.ts:33-33
function systeminstruction_allocate(a: number, b: number): number;

-- Chunk 14 --
// bincode_js_bg.wasm.d.ts:34-41
function systeminstruction_allocateWithSeed(
  a: number,
  b: number,
  c: number,
  d: number,
  e: number,
  f: number,
): number;

-- Chunk 15 --
// bincode_js_bg.wasm.d.ts:42-42
function systeminstruction_createNonceAccount(a: number, b: number, c: number, d: number): number;

-- Chunk 16 --
// bincode_js_bg.wasm.d.ts:43-43
function systeminstruction_advanceNonceAccount(a: number, b: number): number;

-- Chunk 17 --
// bincode_js_bg.wasm.d.ts:44-44
function systeminstruction_withdrawNonceAccount(a: number, b: number, c: number, d: number): number;

-- Chunk 18 --
// bincode_js_bg.wasm.d.ts:45-45
function systeminstruction_authorizeNonceAccount(a: number, b: number, c: number): number;

-- Chunk 19 --
// bincode_js_bg.wasm.d.ts:46-46
function __wbg_instruction_free(a: number): void;

-- Chunk 20 --
// bincode_js_bg.wasm.d.ts:47-47
function pubkey_constructor(a: number, b: number): void;

-- Chunk 21 --
// bincode_js_bg.wasm.d.ts:48-48
function pubkey_toString(a: number, b: number): void;

-- Chunk 22 --
// bincode_js_bg.wasm.d.ts:49-49
function pubkey_isOnCurve(a: number): number;

-- Chunk 23 --
// bincode_js_bg.wasm.d.ts:50-50
function pubkey_equals(a: number, b: number): number;

-- Chunk 24 --
// bincode_js_bg.wasm.d.ts:51-51
function pubkey_toBytes(a: number, b: number): void;

-- Chunk 25 --
// bincode_js_bg.wasm.d.ts:52-52
function pubkey_createWithSeed(a: number, b: number, c: number, d: number, e: number): void;

-- Chunk 26 --
// bincode_js_bg.wasm.d.ts:53-53
function pubkey_createProgramAddress(a: number, b: number, c: number, d: number): void;

-- Chunk 27 --
// bincode_js_bg.wasm.d.ts:54-54
function pubkey_findProgramAddress(a: number, b: number, c: number, d: number): void;

-- Chunk 28 --
// bincode_js_bg.wasm.d.ts:55-55
function __wbg_instructions_free(a: number): void;

-- Chunk 29 --
// bincode_js_bg.wasm.d.ts:56-56
function instructions_constructor(): number;

-- Chunk 30 --
// bincode_js_bg.wasm.d.ts:57-57
function instructions_push(a: number, b: number): void;

-- Chunk 31 --
// bincode_js_bg.wasm.d.ts:58-58
function hash_constructor(a: number, b: number): void;

-- Chunk 32 --
// bincode_js_bg.wasm.d.ts:59-59
function hash_toString(a: number, b: number): void;

-- Chunk 33 --
// bincode_js_bg.wasm.d.ts:60-60
function hash_equals(a: number, b: number): number;

-- Chunk 34 --
// bincode_js_bg.wasm.d.ts:61-61
function hash_toBytes(a: number, b: number): void;

-- Chunk 35 --
// bincode_js_bg.wasm.d.ts:62-62
function __wbg_pubkey_free(a: number): void;

-- Chunk 36 --
// bincode_js_bg.wasm.d.ts:63-63
function __wbg_hash_free(a: number): void;

-- Chunk 37 --
// bincode_js_bg.wasm.d.ts:64-64
function __wbindgen_malloc(a: number, b: number): number;

-- Chunk 38 --
// bincode_js_bg.wasm.d.ts:65-65
function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;

-- Chunk 39 --
// bincode_js_bg.wasm.d.ts:66-66
function __wbindgen_add_to_stack_pointer(a: number): number;

-- Chunk 40 --
// bincode_js_bg.wasm.d.ts:67-67
function __wbindgen_free(a: number, b: number, c: number): void;

-- Chunk 41 --
// bincode_js_bg.wasm.d.ts:68-68
function __wbindgen_exn_store(a: number): void;

=== File: node/documentation/worker/tests/wasm/zstd.wasm ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1-150
 asm   #`````` ` `` `` ` `
``
` `~`~~~`~` `~~`~` `	`~`~~`~ `~```  `
 `
`~~`~aa 
ab ac 
 	
	
                                    	             
 			




  	



 	      
	   
	
 
 	 		 
  


 
!"  



 
p77	A
Od e f g h i j k l m n o p q r s 	r A
6

~ )  !   ) 7    7  
*  Ak"q@A A AA   
   qE
8         kj"   K"jF   j   j 

   AK
@   Ak"O@  !

 (    (  s"E@  !@ Aj! Aj" O
 (   (  s"E
 
  j  k
 
@  AkO
  /   /  G
  Aj! Aj!
  K  -   -  Fj 
  k
 A  gk
@  K@  M@   kAkAaO
    k"j!    AN@  Aj! @   Aj  Aj A j"  A j"  I
 

 ! ! 
@  OE@   -  :    Aj!  Aj!



AA AA
  
A A A A
  
   )    
   )    
   (    
A  ("  (I@A
    ("Aq6    Avk"6   (  6 A 
   (   A 

    A t"k     k K 
   )   B 
   )   B 

    tA  kv
   )  Bȕ˛O~A  k
   )   B 
  "E@  B hA j
 h
   Aq
   (  " At   AF
"  ( !    ("  j6    
3 @  !@  -  :   Aj! Aj! Ak"
 

  
J   I@    
 @   j!  j!@ Ak" Ak"-  :   Ak"
 

  
) @  !@  :   Aj! Ak"
 

  
   )    

    )  7  

    sAqE
    %
    
@ AO@   rAq
@  (  ( G
 Aj!  Aj!  Ak"AK
 

A 

A
!@@ E@ 
A 
@  -  " -  "F@ Aj!  Aj!  Ak!

  k
A !

A!
 
 
    x
   A  kAqt   AqvrAq
 E@  B 7   A 6  B 7A
   6
   Aj6@ AO@    j"Ak"6   (  6  Ak-  "E@  A 6A
  A k6

   6   -  "6 @@@ Ak 
   - At r"6 
   - At j6 
  jAk-  "E@  A 6Al
  A(  Atjk6
 
    1
S  (!  (
  (     (Aq6    (  Axqv6     ("  (
 Avj"    K6

!  BӾǫB~  |BBޛ~
	    7  
# Ak"
$ @@@@@@  ("A!I@  (\!@@@@@ Ak 
  

  

-- Chunk 2 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:151-300

  

  

  
!  (!  (d!  (
!
  (!  Atj"	( !  (  (   (!   ("k" K
 Ak I
  (!  	 6  E
A  A AktAs"k"  K!   qAtj"
Aj!	  
j! 
 j! A	j! Aj!A  t!A!
@@ E  Ir
  O
 A      K" j" 
IE@  
I
	   j  j  j   j"  j! 

     j  j  j     j"  j" 
I
!      kK    
K"!   
 !
   j" F
   qAtj!@@@  j  j-   -  I@ 
 6   K
 
A
j!


 	 6   M
  ! !	

  ! Aj"
!
 Ak! ( !


 
A
j!	
 	A 6  
A 6   M
 
Aj$  
Ak" A  AIA  
AK"   k"   K
A A AA  
AA AA   
A A AA   
A A AA   
A A AA   
AA AA   
A A AǂA   

   AjAt
8  Aj"" AjAO@A A AA  
  At At  vj
1    (" j6    (  AtAj(  q tr6 
   A~q

    (  6  
   @ @     
  

	    ;  
	    6  

   F  A Fq

   A 
.    A A" A?q@A A AلA   
  
@@  AO
 (8AF@ @  +

  *

  AF@ Aj!A! 


  " Aj-  At (,j! (  Atj( !   @  +

  *
k
 j
A A AɀA   
# Ak"$  B 7  A 6@@@@@@@@@  A k 
 B7

 B7

 B7

 B7

 B 7

 A6

 B7

 AX6 
 ( ! (! (!  Aj$  E   Lq  Lq
  (" (j"6   AtAj(  ( A  kvq6 @ A K
  (" (O@ 


  (
"F
     k Av"  k I"k"6   Atk6  (  6 
   Aj6
@@@@@@@  ( "  ("M@   (
"K
   ("K
   ("K
  I
   ("K
  ("  K
   I

A A AA
  
A A AA
  
A A AA
  
AA AA
  
AA AA
  
A A AA
  
AA AA
  
AA AA
  
+~# Ak"$  Aj  A )! Aj$  
%# Ak"
$ @@@@@@  ("A!I@  (\!	@@@ Ak 
  

  

  

-- Chunk 3 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:301-450
!  (  (   ("k"  (!
 Ak I
A !A  A  (AktAs"k"  K"
 
 
 
I!
  (d!A  (t"! 	 Atj"!!@@ ( "	 
M
  	 qAtj"("
AG AIrE@  6 Ak! 	!


 
AG
  B 7 
 Aj!#@ @ #  qAtj( !	 !A !A !# Ak"$ @@@@ 
 "M@  ("  ("  (
" K"" j"  j"$  "" O
  (d"%A  (AktAs"& qAtj"( !
 A  (t"k  ("
  
k K!'  j!( Aj!
 AF!)@@ E 
 'Mr
  
M
@ )    I" 
j"
 Iq"  OqE@A  
 I "
  j    
j" j   j!

 
 j"
 
 j  j  
j   $ ( j" 
j I!
  j"*  F
 % 
 &qAtj!
@@@  j-   *-  I@  
6  
 
K
 A
j!

 
 
6  
 
M
 
!
 !

 
Aj"
! !
 Ak! 
( !



 A
j!

 
A 6  A 6  Aj$ 

AA AA   
A A AA   
A A AA   
A A AA   
 Aj! 	!


  (!
  (
!
 !( ! ! 6  A	j! Aj! 
 j! 
 
j!   qAtj"Aj!
 AG!A !
A !A !	@@@ A G E  
Mr
 E 
  
 I" j 
IqE@  j  j j  j! 

 
   j  
j j    j" j 
I
!@  	M
   k"Aj ( k  	kAtH@ E
  Aj6  !	
  j    kK!  j G
 A AG
 
A 6  A 6 

   qAtj!@@@  j j-    j-  I@  6   
K
 
A
j!

 
 6   
M
 ! !


 !
 Aj"!
 Ak! ( !


 
A
j!

A
! 
A 6  A 6  AO
 AF qE
  ! !@@  ("("A!I@ (\!@@@ Ak 
  

  

  
! ( "
 ("k"
A (AktAs"
k (" 
 k 
K!  Atj!  ("  (
j!  ( 
k j! (d!A !A !@@ E
  ( " M
   j!
 	     K"j  j" j  
  j"I@  

-- Chunk 4 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:451-600
k"Aj ( Ajk  	kAtH@ E
  Aj6  !	
  j F

   
qAtj!@  
  j 
I j-    j-  I@  M
 Aj! ! !

  M

 Ak! !


 	AO@ ( AM

 	




A A AA0  
AA AA0  
!	
  M
   Ak6
 	AO@ ( AM

 
Aj$  	


A A AA0  
A A AA0  
AA AA0  
A A AA0  
A݂A AA0  
A A AA  
	@@  AjO@  (
"  (
I
A  (AktAs!  (d!  (\!    ("	k"  K!
  ("A!I!
 Ak!@  
G@ 
E
  	j! @@@  
  

  

  
Atj"( !
  6    qAtj"A6  
6  Aj!


   6

A A AA   
AA AA   
A A AA  
# B  '  Bޛ~Bꃱ }
       
    Aq0   Av: 
Y  Aj! A A NAj!A ! A !@  FE@    At" j(    j( lj!  Aj!


  Av
A!
@@@  j"
   kK
 Al!
  ( "
k I
  
A L
  
N
   j" k!
   A k"  
 A    
j6 @@   kM@ 
!

  k I
 	 	 
 k"j" jO@   

  j!  A  k k!
     A
 
!

 

A/A AA   
A0A AA   

    A
G        (  ( Atj" ("Aj"A|q k Avu  ( jAtj/ 6 
W  (  ( Atj"- ! / !  - " (j"6    AtAj(  ( A  kvqj6  
/  (  ( Atj"- !   /   - j6  

   AO@  A$j
  Aj-  
@@@ AO@    ) 7 Ak!

 E
@@  jAk" 
  ( "Ak

  ( !   Atj( 
!  AA AKj( !   6   6
   6 

AA AÍA$  
#	# A k"$ @@@@@@@@@@@@A  AI
  ( ! B 7    6   6 B 7    jAk6A A 
  Aj!@ A
I   lAvAjOqE@ AxqAF@A ! (! ( ! @@ Aq
   Ak"j-  Atj( ""A
O
   j"6  -   vr" 6 A! AqA!I
 


  Aq6 Aq"E
 A!O
 (" ("K
   A  kv    Avj"    K6
 Aq
 Aq@  jAk!A ! (! ( ! @@ Aq
  -  Atj( ""	A
O
   j"6    	v r" 6 A! AqA!I
 


   Ak"j-  Atj( ""A
O

  -   vr"6   j"Aq" A!O

  Aq6  E
 (" ("K
  A   kv     Avj"    K6
 Aq
 (! (! ( !  (!	@ A J@  j"Ak!

-- Chunk 5 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:601-750
A !@@ Aq
  
-  Atj( ""
A
O
   j"6    
v r" 6 A! AqA!I
 


  Ak-  Atj( ""
A
O

 -!
  j"
Aq"A!O
 E
  	K
  
   
vr"
A  kv 	  Avj"    	K! Ak!A !A ! A !@@ Aq
  -  Atj( ""
A
O
   j"6
    
v r" 6A! AqA!I
 


   Ak"j-  Atj( ""A
O

   j"6
  -   vr"6 Aq" A!O
  A F

   
  vr" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv  	  Avj"  	K"6


 E


@@@ Ak 
 AxqAF@A ! (! ( ! @@ Aq
   Ak"j-  Atj( ""A
O
   j"6  -   vr" 6 A! AqA!I
 


  Aq6 Aq"E
 A!O
 (" ("K
   A  kv   Avj" 6   K

 Aq
 Aq@  jAk!A ! (! ( ! @@ Aq
  -  Atj( ""	A
O
   j"6    	v r" 6 A! AqA!I
 


   Ak"j-  Atj( ""A
O

  -   vr"6   j"Aq" A!O
  Aq6  E
 (" ("K
  A   kv    Avj" 6   K

 Aq
	 (! (! ( !  (!	@@ A L
  j"Ak!
A !@@ Aq
  
-  Atj( ""
A
O
   j"6    
v r" 6 A! AqA!I
 


  Ak-  Atj( ""
A
O
 -!
  j"
Aq"A!O
 E
  	K
  
   
vr"
A  kv  Avj" 	K
 Ak!A !A ! A !@@ Aq
  -  Atj( ""
A
O
   j"6
    
v r" 6A! AqA!I
 


   Ak"j-  Atj( ""A
O
   j"6
  -   vr"6 Aq" A!O
  A F

   
  vr" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv   Avj"6  	M
 


 E


 AxqAF@A ! (! ( ! @@ Aq
   Ak"j-  Atj( ""A
O
   j"6  -   vr" 6 A! AqA!I
 


  Aq6 Aq"E
 A!O
 (" ("K
   A  kv   Avj" 6   K

 Aq
 Aq@  jAk!A ! (! ( ! @@ Aq
  -  Atj( ""	A
O
   j"6    	v r" 6 A! AqA!I
 

-- Chunk 6 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:751-900


   Ak"j-  Atj( ""A
O

    v r"6   j"Aq" A!O

  Aq6  E
 (" ("K
  A   kv    Avj" 6   K

 Aq
 (! (! ( !  (!	@@ A L
  j"Ak!
A !@@ Aq
  
-  Atj( ""
A
O
   j"6    
v r" 6 A! AqA!I
 


  Ak-  Atj( ""
A
O

  j"
Aq"A!O
 E
  	K
    
v r"
A  kv  Avj" 	K
 Ak!A !A ! A !@@ Aq
  -  Atj( ""
A
O
   j"6
    
v r" 6A! AqA!I
 


   Ak"j-  Atj( ""A
O

   j"6
    v r"6 Aq" A!O
  A F

  
  v r" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv   Avj"6  	M
 


 E


 Ao"A J@ (! ( ! @@ A L
   Ak"j-  Atj( ""	A
O

   j"6  -   	vr" 6  Ak! AqA!I
 



  Aq6 Aq"E

 A!O
 (" ("K
   A  kv   Avj" 6   K

 Ao
 Ao@ (! ( ! A!@@ AF
    kj-  Atj( ""	A
O

   j"6    	v r" 6  Aj! AqA!I
 



   Ak"j-  Atj( ""A
O

    v r"6   j"Aq" A!O

  Aq6  E

 (" ("K
  A   kv    Avj" 6   K

 Ao
 (! (! ( !  (!	@@A! A L
@@ AF
    kj-  Atj( ""
A
O
   j"6    
v r" 6  Aj! AqA!I
 


   Ak"
j-  Atj( ""
A
O

  j"
Aq"A!O

 E
  	K
    
v r"
A  kv  Avj" 	K
A!A !A ! @@ AF
   
 kj-  Atj( ""
A
O
   j"6
    
v r" 6 Aj! AqA!I
 


   Ak"j-  Atj( ""A
O

   j"6
    v r"6 Aq" A!O

  A F
  
  v r" 6   
Aqj"Aq"A!O

  Aq"6 E
   A  kv   Avj"6  	M
 



-- Chunk 7 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:901-1050
 

  	K
# Ak" $   A
j"A A  (
!  Aj$  " "A
I@   - (  vr"6   (  j"6 Aq" A!O

  Aq6  E

 (" (K
  A   kv  (" (  Avj"    K"6   I  (k - A GjA 






!  A j$   
A A A A
  
A A A A#  
AA A A  
A A A A  
A A A A#  
A A A A#  
A A A A   
A A A A   
A A A A  
A A A A  
A A A A  
AA A A  
6 A
M@     ~
A! AqA     A  

N ( Atj"( ! (!   ( "    (jAv" ,    (   ujAtj/ 6 
~# Ak"$ @@@@@@@@@@@@@  (AI@  ("AO
  ("(Ak"A!O
  (!   ("
k!  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !@  (E@@   (
"kAI
  A j"   I! 
Aj!
 Aj"A!I!@  G@ E
   
j   (P
"
AvA q"AtjA E
  	jAE
   AqAtj"
(,! 
 
6, 	 AvA q"j"
A A 
-  AkAq"
 
j"
:    
j   (P
 G
 
 
j :    Atj 
Atj 6  Aj!


 A k" A  Aj"  
j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  
j   (P
"AvA q"AtjA E
 
 jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 6,  AvA q"j"A A -  AkAq"
 
j"
:    j 
  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

   
jAj  

"AvA q"AtjA E

  	jAE
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
A t! 
 j!
 At!    (X j6X AqAl! 	 AvA q"
j"	-  !B !
A!@  	 Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
AsAq Aq#!
  
Atj!A !@@ E 
Pr
  
 jAq"@ AO
  Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



-- Chunk 8 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1051-1200

A ! 	A A AkAq" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 
j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 (\! ( !
 (!	 (
!
A !@ AG@ Aj!


 A AI!
  	 jk 
j!  AtA
rj( "Av!  (d!A !@@@@@@  
G@   jAtj( "E
  
I
  	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq"  
k"  K!A !A !@@@  F@@@  F
	   Atj( " 
I
   	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AM
  ("(Ak"A!O
  (!   ("k!
  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !
  (!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"

-- Chunk 9 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1201-1350
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

  
 jAj  

"AvAq"AtjA E

  	jA E
   
AqAtj"(,!  6,

 Aj"A!O

   

!   
6

  
A t"k  
 k K !
  j!A AktA  AK!
 
At!    (X j6X AqAl! 	 AvAq"j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
  Atj!A ! 
B 	A?q !
A !@@ E 
Pr
  
 	jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 
B} 
!



A ! A A? 	AkA?q"	 	j"	:   	 j :      (
" Aj6
  	Atj  6  Ak!	 Aj!A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     	j(  G
    "  M
  
 k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\! ( ! (! (
!	A !@ AG@ Aj!


  
j"A AI!
 
  jk j!  AtA
rj( "
Av!  (d!A !@@@@  
G@   jAtj( "
E
 	 
K
 
 j"Aj"
 K
@ (   (  G
   
   Aj" M
   
k"E
  Aj6  " j F

 Aj!


 
Aq"  
k"  K!
A !A !@@@  
F@@@  
F
   Atj( " 	I
   j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AG

-- Chunk 10 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1351-1500
  ("(Ak"A!O
  (!   ("k!
  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !
  (!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

  
 jAj  

"AvAq"AtjA E

  	jA E
   
AqAtj"(,!  6,

 Aj"A!O

   

!   
6

  
A t"k  
 k K !
  j!A AktA  AK!
 
At!    (X j6X AqAl! 	 AvAq"j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
As 	Aq"!
  Atj!A !A !@@ E 
Pr
  
 	jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 
B} 
!



A ! A A 	AkAq"	 	j"	:   	 j :      (
" Aj6
  	Atj  6  Ak!	 Aj!A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     	j(  G
    "  M
  
 k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\! ( ! (! (
!	A !@ AG@ Aj!



-- Chunk 11 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1501-1650
  
j"A AI!
 
  jk j!  AtA
rj( "
Av!  (d!A !@@@@  
G@   jAtj( "
E
 	 
K
 
 j"Aj"
 K
@ (   (  G
   
   Aj" M
   
k"E
  Aj6  " j F

 Aj!


 
Aq"  
k"  K!
A !A !@@@  
F@@@  
F
   Atj( " 	I
   j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  ("AO
  ("(Ak"A!O
  (!   ("k!
  (!  (!
  (
!  )P!  ($!  ((!
  (\!  !
  (!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"	AvA q"AtjA E
  
jAE
   AqAtj"(,!  	6, 
 AvA q"
j"	A A 	-  AkAq" j":    j 
  )P
 G
 	 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"	A!I! !@  
F
 E
 
  j 	  )P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvA q"AtjA E
  jAE
   AqAtj"	(,! 	 
6,  AvA q"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :   
 Atj 	Atj 6  Aj!


   6
 Aj"A!O

  
 jAj  
"AvA q"AtjA E

  
jAE
   
AqAtj"(,!  6,

 Aj"A!O

   
!   
6

  
A t"k  
 k K 
!
A t!  j!A AktA  AK!
 
At!    (X j6X AqAl! 
 AvA q"j"-  !
B !A!@   Ak"j(  s"	AxrAk 	rAxqAlA
v B! 
 
 AsAq 
Aq#!  Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 

-- Chunk 12 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1651-1800
I
  Atj 6  Aj! Ak!
 B} !


A ! A A 
AkAq"
 
j"
:   
 j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 (\! ( ! (! (
!
A !@ AG@ Aj!


  
j"A AI!
 
  jk j!  AtA
rj( "
Av!  (d!A !@@@@@@  
G@   jAtj( "
E
 
 
K
 
 j"Aj"	 K
@ (   (  G
   	   Aj" M
   
k"E
  Aj6  " j F

 Aj!


 
Aq"  
k"  K!
A !A !@@@  
F@@@  
F
	   Atj( " 
I
   j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  ("	AM
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!
  ($!  ((!  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"
A!I!@  G@ E
 
  
j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"A!I!
 !@  
F
 
E
 
  j   )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!

-- Chunk 13 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1801-1950
 
 
  K
  ("Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"AvAq"AtjA E
  
jA E
   AqAtj"
(,! 
 6, 
 AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  )P
 G
 
 j :    Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  

"AvAq"AtjA E

  jA E
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
  j!A 	AktA  	AK! At!
    (X j6X AqAl!  AvAq"
j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
 
Atj!
A ! 
B 	A?q !
A !@@ E 
Pr
  
 	jA?q"@ A O
 
 Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



A ! A A? 	AkA?q"	 	j"	:   	 j :      (
" Aj6
 
 	Atj  6  Ak!	 Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     	j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\!	 ( ! (!
 (
!
A !@ AG@ Aj!


  j"A AI!  
 jk j! 	 
AtA
rj( "
Av!  (d!A !@@@@  G@ 	  
jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F

 Aj!


 
Aq"  k"  K!A !A !@@@  F@@@  F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  

-- Chunk 14 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:1951-2100
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  (AG
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!  ($!  ((!	  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
 
  
j   )P
"
AvAq"AtjA E
  	jA E
   AqAtj"
(,! 
 
6, 	 AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 
  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  
"AvAq"AtjA E

  	jA E
   AqAtj"(,!  6,

 Aj"A!O

   
!   6

  A t"k   k K !
  j!
 At!    (X j6X AqAl! 	 AvAq"
j"-  !B !A !@   Ak"j(  s"	AxrAk 	rAxqAlA
v B! 
 
 As Aq"! 
 
Atj!
A !A !	@@ 	E Pr
   jAq"@ A O
 
 Atj( " 
I
  Atj 6  	Ak!	 Aj!
 B} !


A ! A A AkAq" j":    j :      (
" Aj6
 
 Atj  6  Ak! Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ 	AI@ (\! ( ! (!
 (

-- Chunk 15 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:2101-2250
!
A !@ AG@ Aj!


 	A 	AI!
  
 jk j!  AtA
rj( "Av!  (d!A !@@@@  
G@   jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq" 	 
k"  K!	A !A !@@@  	F@@@  	F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  ("AO
  ("(Ak"A!O
  (!   ("
k!  (!  (!  (
!  )P!
  ($!  ((!	  (\!  !@  (E@@   (
"kAI
  A j"   I! 
Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvA q"AtjA E
  	jAE
   AqAtj"
(,! 
 
6, 	 AvA q"j"
A A 
-  AkAq"
 
j"
:    
j   )P
 G
 
 
j :    Atj 
Atj 6  Aj!


 A k" A  Aj"  
j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  
j   )P
"AvA q"AtjA E
 
 jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 6,  AvA q"j"A A -  AkAq"
 
j"
:    j 
  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

   
jAj  

"AvA q"AtjA E

  	jAE
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
A t! 
 j!
 At!    (X j6X AqAl! 	 AvA q"
j"	-  !B !
A!@  	 Ak"j(  s"AxrAk rAxqAlA

-- Chunk 16 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:2251-2400
v 
B!
 
 
 
AsAq Aq#!
  
Atj!A !@@ E 
Pr
  
 jAq"@ AO
  Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



A ! 	A A AkAq" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 
j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 (\! ( !
 (!	 (
!
A !@ AG@ Aj!


 A AI!
  	 jk 
j!  AtA
rj( "Av!  (d!A !@@@@@@  
G@   jAtj( "E
  
I
  	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq"  
k"  K!A !A !@@@  F@@@  F
	   Atj( " 
I
   	j"Aj" 
K
@ (   (  G
     
 
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  ("	AM
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!
  ($!  ((!  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"
A!I!@  G@ E
 
  
j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"A!I!
 !@  
F
 
E
 
  j   (P

-- Chunk 17 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:2401-2550
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"AvAq"AtjA E
  
jA E
   AqAtj"
(,! 
 6, 
 AvAq"j"A A? -  AkA?q"
 
j"
:    j 
  (P
 G
 
 j :    Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  

"AvAq"AtjA E

  jA E
   AqAtj"(,!  6,

 Aj"A!O

   

!   6

  A t"k   k K !
  j!A 	AktA  	AK! At!
    (X j6X AqAl!  AvAq"
j"-  !	B !
A !@   Ak"j(  s"AxrAk rAxqAlA
v 
B!
 
 
 
 
Atj!
A ! 
B 	A?q !
A !@@ E 
Pr
  
 	jA?q"@ A O
 
 Atj( " 
I
  Atj 6  Ak! Aj!
 
B} 
!



A ! A A? 	AkA?q"	 	j"	:   	 j :      (
" Aj6
 
 	Atj  6  Ak!	 Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     	j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@ AI@ (\!	 ( ! (!
 (
!
A !@ AG@ Aj!


  j"A AI!  
 jk j! 	 
AtA
rj( "
Av!  (d!A !@@@@  G@ 	  
jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F

 Aj!


 
Aq"  k"  K!A !A !@@@  F@@@  F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!



-- Chunk 18 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:2551-2700
A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  (AG
  ("(Ak"A!O
  (!   ("k!  (!  (!  (
!  )P!  ($!  ((!	  (\!
  !@  (E@@   (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
 
  
j   (P
"
AvAq"AtjA E
  	jA E
   AqAtj"
(,! 
 
6, 	 AvAq"j"
A A 
-  AkAq"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


 A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!
  ($Aj"A!I!
 !@  F
 
E
 
  j   (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"
A!I!@  G@ E
 
  j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 
  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O

 
  jAj  
"AvAq"AtjA E

  	jA E
   AqAtj"(,!  6,

 Aj"A!O

   
!   6

  A t"k   k K !
  j!
 At!    (X j6X AqAl! 	 AvAq"
j"-  !B !A !@   Ak"j(  s"	AxrAk 	rAxqAlA
v B! 
 
 As Aq"! 
 
Atj!
A !A !	@@ 	E Pr
   jAq"@ A O
 
 Atj( " 
I
  Atj 6  	Ak!	 Aj!
 B} !


A ! A A AkAq" j":    j :      (
" Aj6
 
 Atj  6  Ak! Aj!A! @  F@  !


   Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
   
k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  

-- Chunk 19 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:2701-2850
A A AA0  
@@ 	AI@ (\! ( ! (!
 (
!
A !@ AG@ Aj!


 	A 	AI!
  
 jk j!  AtA
rj( "Av!  (d!A !@@@@  
G@   jAtj( "E
  
I
  
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F

 Aj!


 Aq" 	 
k"  K!	A !A !@@@  	F@@@  	F
   Atj( " 
I
   
j"Aj" K
@ (   (  G
      
Aj" M
   k"E
  Aj6  " j F


  Aj!  Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
 !
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@@  (AI@  ("AO
  ("($Aj"A!O
  (!  (!  (!	  (!
  (
!  )P!   ($!
  ((!  (\! ((! (\  "
AvA q"Atj"
A E
  j"AE

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"
AvA q"AtjA E
  
jAE
   AqAtj"(,!  
6, 
 AvA q"j"
A A 
-  AkAq" j":    j 
  (P
 G
 
 j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   (P
"
AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 
6,  AvA q"j"
A A 
-  AkAq"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj   
"AvA q"AtjA E

  jAE

   AqAtj"(,!  6,

 
Aj"A!O

    
!   6

 	 A t"k 	  	k K 

-- Chunk 20 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:2851-3000
!
A t!  j! 
AqAl!
    (X j6X AqAl!  AvA q"
j"	-  !
B ! A!@  	 Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq 
Aq#!   
Atj!A !@@ E  Pr
    
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
  B}  ! 


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 -  ! ( !  (! (
!	B ! A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq Aq"#! A !@@ E  Pr
    jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
  B}  ! 


  j  k!A !@@@@@@  F@ !

 	  Atj( "M@  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!


A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AM
  ("
($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!  ((!  (\! 
((! 
(\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P

-- Chunk 21 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3001-3150
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A? AkA?q" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! 
( !  
(! 
(
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
A ! B A?q" !@@ E Pr
   jA?q"
@ 
 
Atj( "
 	I
  Atj 
6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( "
 	I
 
 O
 
 j"Aj"  K
@ (   (  G
       Aj" M
   
 j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AK@  (AG
  ("($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!
  ((!  (\! ((! (\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"

-- Chunk 22 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3151-3300
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 
Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !
B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As 
Aq"!  Atj!A !A !@@ E Pr
   
jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! ( !  (! (
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq""!A !@@ E Pr
   jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( " 	I
  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A

-- Chunk 23 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3301-3450
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  

~# Ak"$ @@@@@@@@@@@@@  (AK@  ("AO
  ("($Aj"A!O
  (!  (!  (!	  (!
  (
!  )P!   ($!
  ((!  (\! ((! (\  "
AvA q"Atj"
A E
  j"AE

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj"(,!  
6, 
 AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 
6,  AvA q"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj   
"AvA q"AtjA E

  jAE

   AqAtj"(,!  6,

 
Aj"A!O

    
!   6

 	 A t"k 	  	k K 
!
A t!  j! 
AqAl!
    (X j6X AqAl!  AvA q"
j"	-  !
B ! A!@  	 Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq 
Aq#!   
Atj!A !@@ E  Pr
    
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
  B}  ! 


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A

-- Chunk 24 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3451-3600
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 -  ! ( !  (! (
!	B ! A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq Aq"#! A !@@ E  Pr
    jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
  B}  ! 


  j  k!A !@@@@@@  F@ !

 	  Atj( "M@  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!


A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  (AM
  ("
($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!  ((!  (\! 
((! 
(\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A? AkA?q" j":    	j :      (

-- Chunk 25 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3601-3750
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! 
( !  
(! 
(
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
A ! B A?q" !@@ E Pr
   jA?q"
@ 
 
Atj( "
 	I
  Atj 
6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( "
 	I
 
 O
 
 j"Aj"  K
@ (   (  G
       Aj" M
   
 j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AF@  (AG
  ("($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!
  ((!  (\! ((! (\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  )P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


-- Chunk 26 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3751-3900

   6
 
Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 
Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !
B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As 
Aq"!  Atj!A !A !@@ E Pr
   
jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! ( !  (! (
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq""!A !@@ E Pr
   jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( " 	I
  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  

~# Ak"$ @@@@@@@@@@@@@  (AF@  ("AO
  ("($Aj"A!O
  (!  (!  (!	  (!
  (
!  )P!   ($!
  ((!  (\! ((! (\  "
AvA q"Atj"
A E
  j"AE

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj"(,!  
6, 
 AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
 
 j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  

-- Chunk 27 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:3901-4050
F
 E
 
  j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   )P
"
AvA q"AtjA E
  jAE
   AqAtj"
(,! 
 
6,  AvA q"j"
A A 
-  AkAq"
 
j"
:    j   )P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj   
"AvA q"AtjA E

  jAE

   AqAtj"(,!  6,

 
Aj"A!O

    
!   6

 	 A t"k 	  	k K 
!
A t!  j! 
AqAl!
    (X j6X AqAl!  AvA q"
j"	-  !
B ! A!@  	 Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq 
Aq#!   
Atj!A !@@ E  Pr
    
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
  B}  ! 


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 -  ! ( !  (! (
!	B ! A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v  B!  
 
  AsAq Aq"#! A !@@ E  Pr
    jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
  B}  ! 


  j  k!A !@@@@@@  F@ !

 	  Atj( "M@  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!


A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  (AM
  ("
($Aj"A!O
  (!  (!  (!	  (!  (

-- Chunk 28 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4051-4200
!  )P!  ($!  ((!  (\! 
((! 
(\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A? 
-  AkA?q" j":    j 
  (P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A? 
-  AkA?q"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A? AkA?q" j":    	j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  F@  !


   Atj( "	M
 	 
I
 	 I
@ 	 j"  jAk(     j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! 
( !  
(! 
(
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
A ! B A?q" !@@ E Pr
   jA?q"
@ 
 
Atj( "
 	I
  Atj 
6  Aj! Ak!
 B} !


  j  k!A !@  F@ !


-- Chunk 29 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4201-4350
  Atj( "
 	I
 
 O
 
 j"Aj"  K
@ (   (  G
       Aj" M
   
 j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  
~# Ak"$ @@@@@@@@@@@@@  (AI@  (AG
  ("($Aj"A!O
  (!  (!  (!	  (!  (
!  )P!  ($!
  ((!  (\! ((! (\  "
AvAq"Atj"
A E
  j"A E

  k!@  (E@@   ("k"  (
"kAI
  A j"   I! Aj!  ((!
  (\!  ($Aj"
A!I!@  G@ E
   j 
  (P
"
AvAq"AtjA E
  
jA E
   AqAtj"(,!  
6, 
 AvAq"
j"
A A 
-  AkAq" j":    j 
  (P
 G
 
 j :    
Atj Atj 6  Aj!


 A k" A  Aj"  j"
kAj  
I"A AIj"  K!
  ((!  (\!
  ($Aj"
A!I! !@  
F
 E
 
  j 
  (P
"AvAq"AtjA E
  jA E
   AqAtj 6, Aj!
 
 
  K
  ("Aj!  ((!  (\!
  ($Aj"A!I!@  G@ E
 
  j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 
6,  AvAq"j"
A A 
-  AkAq"
 
j"
:    j   (P
 G
 
 
j :   
 Atj 
Atj 6  Aj!


   6
 
Aj"A!O
   jAj  
"AvAq"AtjA E

  jA E

   AqAtj"(,!  6,

 
Aj"A!O

   
!   6

 	 A t"k 	  	k K !
  j! 
AqAl!
    (X j6X AqAl!  AvAq"j"	-  !
B !A !@  	 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As 
Aq"!  Atj!A !A !@@ E Pr
   
jAq"@ A O
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 	A A 
AkAq"
 
j"
:   	 
j :      (
" Aj6
  
Atj  6  Ak!
 Aj!A! @  F@  !


   Atj( "	M
 	 
I

-- Chunk 30 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4351-4500
 	 I
@ 	 j"  jAk(     
j(  G
    "  M
   	k" E
   Aj6  "  j F


 Aj!
 
 
A A AA   
A A AA   
A A AA  
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
@@@@@@ AI@ -  ! ( !  (! (
!	B !A !@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq""!A !@@ E Pr
   jAq"@ 
 Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


  j  k!A !@  F@ !

  Atj( " 	I
  O
  j"Aj"
  K
@ (   (  G
   
    Aj" M
    j"M
  k"E
  Aj6  !  j F

 Aj!
 
 
A݈A AA0  
A
A AA0  
A A AA0  
A A AA0  
A A AA0  
A A AA0  
 Aj$  
AA AA0  
A݃A AA0  
A A AA   
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  ("AO
  (!   ("k!  (!  (!  (
!  (!  )P!  ($!  ((!  (\!@  (E@@   (
"kAI
  A j"   K! Aj!
 Aj"	A!I!
@  G@ 
E
   
j 	  (P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 	  (P
 G
  
j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!	  (\!
  ($Aj"A!I!
 !@  F
 
E

 
  j   (P
"
AvA q"AtjA E
  	jAE
   AqAtj 
6, Aj!
 
 
  K
  ("Aj!
  ((!
  (\!  ($Aj"	A!I!
@  G@ 
E

   
j 	  (P
"AvA q"AtjA E
  
jAE
   AqAtj"(,!  6, 
 AvA q"j"
A A 
-  AkAq" j":    j 	  (P
 G
  
j :    Atj Atj 6  Aj!


   6
 Aj"A!O

   jAj  
"AvA q"AtjA E

  jAE

   AqAtj"(,!
  6,

 Aj"A!O
   
!
   6

  A t"k   k K !	A t!  j!
  j!    (X 
j6X 
AqAl!
  
AvA q"
j"-  !B !A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq Aq#!  
Atj!A !@@ E Pr
   jAq"@ AO
  Atj( " 	I
  Atj 6  Aj! Ak!

-- Chunk 31 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4501-4650
 B} !


A ! A A AkAq" j":    j 
:      (
" Aj6
  Atj  6  Ak!
 Aj!
A! @  F@  !


   Atj( "M
  	I
@  O@  j"  jAk(     
j(  G
   

  j"Aj" 
K
	 (   (  G
 
   
 Aj
"  M
   k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AK@  (AM
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A? 
-  AkA?q" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
  Atj!A !
 B A?q !A !@@ E Pr
   jA?q"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A? AkA?q" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  

-- Chunk 32 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4651-4800
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AK@  (AG
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
 As Aq"!  Atj!A !
A !@@ E Pr
   jAq"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A AkAq" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I

-- Chunk 33 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4801-4950
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  ("AO
  (!   ("k!  (!  (!  (
!  (!  )P!  ($!  ((!  (\!@  (E@@   (
"kAI
  A j"   K! Aj!
 Aj"	A!I!
@  G@ 
E
   
j 	  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!	  (\!
  ($Aj"A!I!
 !@  F
 
E

 
  j   )P
"
AvA q"AtjA E
  	jAE
   AqAtj 
6, Aj!
 
 
  K
  ("Aj!
  ((!
  (\!  ($Aj"	A!I!
@  G@ 
E

   
j 	  )P
"AvA q"AtjA E
  
jAE
   AqAtj"(,!  6, 
 AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


   6
 Aj"A!O

   jAj  
"AvA q"AtjA E

  jAE

   AqAtj"(,!
  6,

 Aj"A!O
   
!
   6

  A t"k   k K !	A t!  j!
  j!    (X 
j6X 
AqAl!
  
AvA q"
j"-  !B !A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq Aq#!  
Atj!A !@@ E Pr
   jAq"@ AO
  Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


A ! A A AkAq" j":    j 
:      (
" Aj6
  Atj  6  Ak!
 Aj!
A! @  F@  !


   Atj( "M
  	I
@  O@  j"  jAk(     
j(  G
   

  j"Aj" 
K
	 (   (  G
 
   
 Aj
"  M
   k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   

-- Chunk 34 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:4951-5100
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AF@  (AM
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A? 
-  AkA?q" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
  Atj!A !
 B A?q !A !@@ E Pr
   jA?q"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A? AkA?q" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  

-- Chunk 35 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:5101-5250
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AF@  (AG
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   )P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
 As Aq"!  Atj!A !
A !@@ E Pr
   jAq"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A AkAq" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

-- Chunk 36 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:5251-5400

~# Ak"$ @@@@@@@@@@@@  (AF@  ("AO
  (!   ("k!  (!  (!  (
!  (!  )P!  ($!  ((!  (\!@  (E@@   (
"kAI
  A j"   K! Aj!
 Aj"	A!I!
@  G@ 
E
   
j 	  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


 A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!	  (\!
  ($Aj"A!I!
 !@  F
 
E

 
  j   )P
"
AvA q"AtjA E
  	jAE
   AqAtj 
6, Aj!
 
 
  K
  ("Aj!
  ((!
  (\!  ($Aj"	A!I!
@  G@ 
E

   
j 	  )P
"AvA q"AtjA E
  
jAE
   AqAtj"(,!  6, 
 AvA q"j"
A A 
-  AkAq" j":    j 	  )P
 G
  
j :    Atj Atj 6  Aj!


   6
 Aj"A!O

   jAj  
"AvA q"AtjA E

  jAE

   AqAtj"(,!
  6,

 Aj"A!O
   
!
   6

  A t"k   k K !	A t!  j!
  j!    (X 
j6X 
AqAl!
  
AvA q"
j"-  !B !A!@ 
  Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq Aq#!  
Atj!A !@@ E Pr
   jAq"@ AO
  Atj( " 	I
  Atj 6  Aj! Ak!
 B} !


A ! A A AkAq" j":    j 
:      (
" Aj6
  Atj  6  Ak!
 Aj!
A! @  F@  !


   Atj( "M
  	I
@  O@  j"  jAk(     
j(  G
   

  j"Aj" 
K
	 (   (  G
 
   
 Aj
"  M
   k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AI@  (AM
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   (P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 

-- Chunk 37 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:5401-5550
 AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A? 
-  AkA?q" j":    j 	  (P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
  Atj!A !
 B A?q !A !@@ E Pr
   jA?q"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A? AkA?q" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  
~# Ak"$ @@@@@@@@@@@@  (AI@  (AG
  (!   ("k!
  (!  (!  (
!  (!  )P!  ($!  ((!
  (\!@  (E@@ 
  (
"kAI
  A j"   I!
 Aj! Aj"A!I!@  
G@ E
   j   (P
"
AvAq"AtjA E
  
jA E
   AqAtj"	(,! 	 
6, 
 AvAq"j"
A A 
-  AkAq"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


-- Chunk 38 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:5551-5700

 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"
A!I! !@  F
 E

 	  j 
  (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"
AvAq"AtjA E
  jA E
   AqAtj"(,!  
6,  AvAq"j"
A A 
-  AkAq" j":    j 	  (P
 G
  
j :   
 Atj Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  
jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

  
A t"k  
 k K !
  j!	  j!
    (X j6X AqAl! 
 AvAq"j"-  !B !A !@   Ak"j(  s"
AxrAk 
rAxqAlA
v B! 
 
 As Aq"!  Atj!A !
A !@@ E Pr
   jAq"@ 
A O
  Atj( " 
I
  
Atj 6  Ak! 
Aj!

 B} !


A ! A A AkAq" j":    j :      (
" Aj6
  Atj  6  Ak! Aj!A! @  
F@  !


 
  Atj( "M
  
I
@  O@  j"  jAk(     j(  G
   

  j"Aj" 	K
	 (   (  G
    	 
Aj
"  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
A A AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  ("AO
  (!   ("k!	  (!  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 	  (
"kAI
  A j"   K!
 Aj! Aj"
A!I!
@  
G@ 
E
   j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 
  (P
 G
  
j :    Atj Atj 6  Aj!


 	A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!
  (\!
  ($Aj"
A!I! !@  F
 E

 

-- Chunk 39 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:5701-5850
  j 
  (P
"
AvA q"AtjA E
  
jAE
   AqAtj 
6, Aj!
 
 
  	K
  ("
Aj!  ((!  (\!  ($Aj"
A!I!
@  	G@ 
E

   j 
  (P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    
j 
  (P
 G
  
j :    Atj Atj 6  Aj!


   	6
 Aj"A!O

  	 jAj  
"AvA q"AtjA E

  jAE

   	AqAtj"(,!  6,

 Aj"A!O
   
!   	6

  	A t"k  	 k K !
A t!    (X j6X AqAl!  AvA q"
j"
-  !
B !A!@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq 
Aq#!  
Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 
A A 
AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!A! @  F@  !


 	  Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
  	 
k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  (AM
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P

-- Chunk 40 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:5851-6000
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  	Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A? AkA?q" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  (AG
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!

-- Chunk 41 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6001-6150


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq"!  	Atj!A !A !@@ E Pr
   jAq"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AK@  ("AO
  (!   ("k!	  (!  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 	  (
"kAI
  A j"   K!
 Aj! Aj"
A!I!
@  
G@ 
E
   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
  
j :    Atj Atj 6  Aj!


 	A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!
  (\!
  ($Aj"
A!I! !@  F
 E

 
  j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj 
6, Aj!
 
 
  	K
  ("
Aj!  ((!  (\!  ($Aj"
A!I!
@  	G@ 
E

   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    
j 
  )P
 G
  
j :    Atj Atj 6  Aj!


   	6
 Aj"A!O

  	 jAj  
"AvA q"AtjA E

  jAE

   	AqAtj"(,!  6,


-- Chunk 42 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6151-6300
 Aj"A!O
   
!   	6

  	A t"k  	 k K !
A t!    (X j6X AqAl!  AvA q"
j"
-  !
B !A!@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq 
Aq#!  
Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 
A A 
AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!A! @  F@  !


 	  Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M
  	 
k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AF@  (AM
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  

-- Chunk 43 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6301-6450
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  	Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A? AkA?q" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AF@  (AG
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   )P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A 
-  AkAq"	 	j"	:    j   )P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   )P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  )P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 	  )P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq"!  	Atj!A !A !@@ E Pr
   jAq"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A AkAq" j":    

-- Chunk 44 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6451-6600
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AF@  ("AO
  (!   ("k!	  (!  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 	  (
"kAI
  A j"   K!
 Aj! Aj"
A!I!
@  
G@ 
E
   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    j 
  )P
 G
  
j :    Atj Atj 6  Aj!


 	A k" A  Aj"  j"kAj  K"A AIj"  I!  ((!
  (\!
  ($Aj"
A!I! !@  F
 E

 
  j 
  )P
"
AvA q"AtjA E
  
jAE
   AqAtj 
6, Aj!
 
 
  	K
  ("
Aj!  ((!  (\!  ($Aj"
A!I!
@  	G@ 
E

   j 
  )P
"AvA q"AtjA E
  jAE
   AqAtj"(,!  6,  AvA q"j"
A A 
-  AkAq" j":    
j 
  )P
 G
  
j :    Atj Atj 6  Aj!


   	6
 Aj"A!O

  	 jAj  
"AvA q"AtjA E

  jAE

   	AqAtj"(,!  6,

 Aj"A!O
   
!   	6

  	A t"k  	 k K !
A t!    (X j6X AqAl!  AvA q"
j"
-  !
B !A!@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 AsAq 
Aq#!  
Atj!A !@@ E Pr
   
jAq"@ AO
  Atj( " 
I
  Atj 6  Aj! Ak!
 B} !


A ! 
A A 
AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!A! @  F@  !


 	  Atj( "
M
 
 
I
 
 I
@ 
 j"  jAk(     j(  G
    "  M

-- Chunk 45 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6601-6750
  	 
k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 Aj$  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  (AM
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A? 
-  AkA?q"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A? -  AkA?q"
 
j"
:    j 	  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
  	Atj!A ! B A?q !A !@@ E Pr
   jA?q"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A? AkA?q" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  

-- Chunk 46 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6751-6900
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~# Ak"$ @@@@@@@@@@@@  (AI@  (AG
  (!   ("k!
  (!
  (!  )P!  (
!  ($!  ((!  (\!@  (E@@ 
  (
"kAI
  A j"   I! Aj!
 Aj"A!I!@  G@ E
   
j   (P
"
AvAq"AtjA E
  jA E
   AqAtj"	(,! 	 
6,  AvAq"j"
A A 
-  AkAq"	 	j"	:    j   (P
 G
 	 
j :    Atj 	Atj 6  Aj!


 
A k" A  Aj"  j"kAj  I"A AIj"  K!  ((!
  (\!	  ($Aj"A!I!
 !@  F
 
E

 	  j   (P
"AvAq"AtjA E
 
 jA E
   AqAtj 6, Aj!
 
 
  
K
  ("Aj!  ((!  (\!
  ($Aj"	A!I!@  
G@ E

 
  j 	  (P
"AvAq"AtjA E
  jA E
   AqAtj"
(,! 
 6,  AvAq"j"A A -  AkAq"
 
j"
:    j 	  (P
 G
 
 j :   
 Atj 
Atj 6  Aj!


   
6
 Aj"A!O

  
 jAj  
"AvAq"AtjA E

  jA E

   
AqAtj"(,!  6,

 Aj"A!O
   
!   
6

 
 
A t"k 
 
 
k K !
    (X j6X AqAl!  AvAq"	j"
-  !B !A !@  
 Ak"j(  s"AxrAk rAxqAlA
v B! 
 
 As Aq"!  	Atj!A !A !@@ E Pr
   jAq"@ A O
  Atj( " 
I
  Atj 6  Ak! Aj!
 B} !


A ! 
A A AkAq" j":    
j :      (
" Aj6
  Atj  6  Ak!
A! @  F@  !


 
  Atj( "M
  
I
  I
@  j"  jAk(     
j(  G
    "  M
  
 k" E
	   Aj6  "  j F

 Aj!
 
 
A A AA   
A A AA   
A
A AA+  
A
A AA0  
A A AA0  
AA AA0  
AA AA0  
A A AA0  
 AI@ Aj$  
A݈A AA0  
A A AA   
AA AA0  
A݃A AA0  
A A AA'  

~@@ AqE@AT!  Aj"B |BB|B|T
   ;   Aj"Ak ;  AI@A t"Av Av" jAj!
   A Atj! Aj!

-- Chunk 47 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:6901-7050
  Atj!
 A ; A! Ak"
! @@@  
M@@  Ak"	At"j. "AF@  Atj  j/ Aj;    
j 	:    Ak! 

 A H
  Atj  j/  Aqj";  Aq G

 Aj!


  
Atj Aj; @@@   
G@A !A !

  
j!	A !A ! @  
G@  Atj. !   	j" (A!@  NE@  j ( Aj!


 A H
 B|! Aj!   j! 


 E
 
At!A !A ! @A !   OE@@ AFE@ 
  
l j 
qj 	   jj-  :   Aj!


  Aj!   j 
q!


A !  E
A A A A#  
@@  
G@A !  Atj. "	A  	A JAq!	@  	F
  
j :  @  
j 
q"  K
 
 Aj!
 
 
A !  E
A A A A#  
 Aj!
 
 
A A A A#  
A A A A#  
A A A A#  
A A A A#  
A A A A#  
A A A A#  
@@   F@@ At k"Aj!
A !A ! A !@  I
@@@@  Atj. "Aj 
  Atj 
6

  Atj" 6  A H
   Ak6   Aj! 

 AL
  Atj"   k6    Akk"At  tk6   j! 
 Aj!
 
 
    
j-  Atj" / "Aj;   Atj   j;   Aj! 


A A A A#  
A A A A#  
 
@@  ( j"E
   ("  (
"  K!@@  F
  (  A
lj"( (j" K@   6

   Aj"6  K!  k! 
 
 E

  G

  A 6

	@@@@@  (AI@  ("(Ak"
A!O
A    ("	k"A  ("
t"k"  K!  (" A  (t"k   k K  (! 	  (
"
j!A  (t! Ak!  (d!
  (
"   K!A 
tAs!  
At!
  (\!
  (! (\!  ("A!I!@@@  F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak! Aj! 
  Atj!A!@ E
 ( " I
  
I
@  	j"  jAk(    j(  G
     "  M
   k"E
  Aj6   !   j F

  M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
 ! 
@@ AI@ ( !	 (!
 (
!
A !@ AG@ Aj!


 A AI!  
 
jk 	j!
  
AtA
rj( "Av! (d!A !@@@@  G@   
jAtj( "E

-- Chunk 48 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7051-7200
  
I
  
j"Aj" 	K
@ (   (  G
     	 Aj"  M
  
 k" E
   Aj6  "  j F

 Aj!


 Aq"  k"  K!A !A !@@@  F@@@  F
  Atj( " 
I
   
j"Aj"
 	K
@ (   (  G
   
  	 Aj"  M
  
 k" E
   Aj6  "  j F


 Aj! Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
  !
 
A A AA  
	@@@@@  (AK@  ("(Ak"A!O
A    ("
k"	A  (t"k"  	K!  (" 	A  (t"k  	 k K  (! 
  (
"
j!A  (t! Ak!  (d!  !  (
"   ("k"  K!
 At!A  (tAs!  (\!
  (!  (d!  ("A!I!@@@  
F
 E
   qAtj 
  j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A!@ E
 ( " I
  
I
@  
j"  jAk(    
j(  G
     "  M
  	 k"E
  Aj6   !   j F

  M
 Ak!   qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
 ! 
@@ AI@ (\!
 ( ! (!
 (
!A !@ AG@ Aj!


 A AI! 	 
 
jk j!
 
 AtA
rj( "Av!	 (d!A !@@@@  G@ 
  jAtj( "E
  I
  
j"Aj"
 K
@ (   (  G
   
   Aj"  M
  
 k" E
   Aj6  "  j F

 Aj!


 Aq"  k"  K!A !A !@@@  F@@@  F
  	Atj( " I
   
j"Aj" K
@ (   (  G
      Aj"  M
  
 k" E
   Aj6  "  j F


 	Aj!	 Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
  !
 
A A AA  
	@@@@@  (AF@  ("(Ak"
A!O
A    ("	k"A  ("
t"k"  K!  (" A  (t"k   k K  (! 	  (
"
j!A  (t! Ak!  (d!
  (
"   K!A 

-- Chunk 49 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7201-7350
tAs!  
At!
  (\!
  (! (\!  ("A!I!@@@  F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak! Aj! 
  Atj!A!@ E
 ( " I
  
I
@  	j"  jAk(    j(  G
     "  M
   k"E
  Aj6   !   j F

  M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
 ! 
@@ AI@ ( !	 (!
 (
!
A !@ AG@ Aj!


 A AI!  
 
jk 	j!
  
AtA
rj( "Av! (d!A !@@@@  G@   
jAtj( "E
  
I
  
j"Aj" 	K
@ (   (  G
     	 Aj"  M
  
 k" E
   Aj6  "  j F

 Aj!


 Aq"  k"  K!A !A !@@@  F@@@  F
  Atj( " 
I
   
j"Aj"
 	K
@ (   (  G
   
  	 Aj"  M
  
 k" E
   Aj6  "  j F


 Aj! Aj!


 Aj!


A
A AA1  
A A AA1  
A A AA1  
A A AA1  
A A AA1  
A
A AA1  
A݈A AA0  
  !
 
A A AA  
@@@@@  (AI@A    ("	k"A  ("t"
k"  K!
  (" A  (t"k   k K  (!  (
"   K!
 	  (
"j!A  (t!A tAs! 
Ak!  (\!
  (!  (!  (d!
  ("A!I!@@@  
F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A! @ E
 ( " I
  I
@  	j"  jAk(     
j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
@@@@@ AI@ ("A!O
A  ( "	 ("
k" A (t"
k"
   
I!
   k! 
Ak!
 (
! (d!
 (\  Atj!@ E
 ( " I
  
j" Aj" 	K
@  (   (  G
     	 Aj"  M

-- Chunk 50 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7351-7500
    j"M
  k"E
  Aj6   !   j F

  
M
 Ak! 
  
qAtj!
 
 
A݈A AA0  
A A AA0  
A A AA0  
A A AA0  
 ! 
  
A A AA  
@@@@@  (AK@A    ("	k"A  ("t"
k"  K!
  (" A  (t"k   k K  (!  (
"   K!
 	  (
"j!A  (t!A tAs! 
Ak!  (\!
  (!  (!  (d!
  ("A!I!@@@  
F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A! @ E
 ( " I
  I
@  	j"  jAk(     
j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
@@@@@ AI@ ("A!O
A  ( "	 ("
k" A (t"
k"
   
I!
   k! 
Ak!
 (
! (d!
 (\  Atj!@ E
 ( " I
  
j" Aj" 	K
@  (   (  G
     	 Aj"  M
    j"M
  k"E
  Aj6   !   j F

  
M
 Ak! 
  
qAtj!
 
 
A݈A AA0  
A A AA0  
A A AA0  
A A AA0  
 ! 
  
A A AA  
@@@@@  (AF@A    ("	k"A  ("t"
k"  K!
  (" A  (t"k   k K  (!  (
"   K!
 	  (
"j!A  (t!A tAs! 
Ak!  (\!
  (!  (!  (d!
  ("A!I!@@@  
F
 E
 
  qAtj 
  	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj! 
  Atj!A! @ E
 ( " I
  I
@  	j"  jAk(     
j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
@@@@@ AI@ ("A!O
A  ( "	 ("
k" A (t"
k"
   
I!
   k! 
Ak!
 (
! (d!
 (\  Atj!@ E
 ( " I
  
j" Aj" 	K

-- Chunk 51 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7501-7650
@  (   (  G
     	 Aj"  M
    j"M
  k"E
  Aj6   !   j F

  
M
 Ak! 
  
qAtj!
 
 
A݈A AA0  
A A AA0  
A A AA0  
A A AA0  
 ! 
  
A A AA  
@@@@@  (AI@A    ("	k"A  ("t"k"  K!  (" A  (t"k   k K  (!  (
"   K!
  ("  (
"
j!
 	 
j!A  (t!A tAs!
 Ak!  (\!  (!  (d!  ("A!I!@@@  
F
 E
   
qAtj   	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj!
   Atj!A! @ E
 ( " I
@  
O@  	j"  jAk(     
j(  G
   

  j"Aj" 
K
 (   (  G
 
   
 Aj
"  M
   k" E
   Aj6  "  j F

  M
 Ak!   qAtj!
 
 
A A AA   
A A AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AK@A    ("	k"A  ("t"k"  K!  (" A  (t"k   k K  (!  (
"   K!
  ("  (
"
j!
 	 
j!A  (t!A tAs!
 Ak!  (\!  (!  (d!  ("A!I!@@@  
F
 E
   
qAtj   	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj!
   Atj!A! @ E
 ( " I
@  
O@  	j"  jAk(     
j(  G
   

  j"Aj" 
K
 (   (  G
 
   
 Aj
"  M
   k" E
   Aj6  "  j F

  M
 Ak!   qAtj!
 
 
A A AA   
A A AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AF@A    ("	k"A  ("t"k"  K!  (" A  (t"k   k K  (!  (
"   K!
  ("  (
"
j!
 	 
j!A  (t!A tAs!
 Ak!  (\!  (!  (d!  ("A!I!@@@  
F
 E
   
qAtj   	j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!
 Aj!
   Atj!A! @ E
 ( " I
@  
O@  	j"  jAk(     
j(  G
   

  j"Aj" 
K
 (   (  G
 

-- Chunk 52 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7651-7800
   
 Aj
"  M
   k" E
   Aj6  "  j F

  M
 Ak!   qAtj!
 
 
A A AA   
A A AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AI@A    ("
k"A  ("t"k"  K!
  (" A  (t"k   k K  (!
  (
"   K!	A  (t!A tAs! Ak!  (\!  (!  (
!  (d!
  ("A!I!@@@  	F
 E
 
  qAtj   
j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!	   Atj!A! @ E
 ( " 
I
  I
@  
j"  jAk(     	j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AK@A    ("
k"A  ("t"k"  K!
  (" A  (t"k   k K  (!
  (
"   K!	A  (t!A tAs! Ak!  (\!  (!  (
!  (d!
  ("A!I!@@@  	F
 E
 
  qAtj   
j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!	   Atj!A! @ E
 ( " 
I
  I
@  
j"  jAk(     	j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
@@@@@  (AF@A    ("
k"A  ("t"k"  K!
  (" A  (t"k   k K  (!
  (
"   K!	A  (t!A tAs! Ak!  (\!  (!  (
!  (d!
  ("A!I!@@@  	F
 E
 
  qAtj   
j Atj"( 6   6  Aj! E
 
   6


   6
 A!O

 Ak!	   Atj!A! @ E
 ( " 
I
  I
@  
j"  jAk(     	j(  G
    "  M
   k" E
   Aj6  "  j F

  
M
 Ak! 
  qAtj!
 
 
A A AA   
AA AA0  
A A AA0  
  !
 AI@ 
A݈A AA0  
A A AA  
(  E@A&A AA   
 AF  A Gq
4A!  Aj"O   At j>  Aj   A

  A  ( " AtAj!@@ @  j!@  O@@  "Ak!   Atj( E
 
  6 A !A !@  K
  Atj( "     K! Aj!
 
 

-- Chunk 53 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7801-7950
   -  "I
  Atj" ( Aj6  Aj!
 
 
 A 6 
 
A:A A A>  
PA( "  AjA|q"j! @ A    M
   I@  E

A  6  
AA06 A
>   /  "6
   Aj"6  A t6    A AktA Atj6
     ,  &
   A,!  @   (  Atj6    (  j6
@ ($E
   (("M  OqE@  A 6$

    (( k6(
   (  Atj6    ( " Atj6@  ( kAuF@  (
 (
F
AA AпA,  
    (  j6

    ( j6    ( j6    ( j6
     ) B 7 

     
  AF@  9
  ) 
 E@A
@  ("@  ("E
   ( " GrE@  (
!A!  (

   6    (
"6    k"6
    k6 !  kAM   6  

!    j"6    jM  j MrE@     k"    J6
 
A A AؑA;  
A A AّA;  
# Ak"$   (
!  (!
  ("
 !  (!   (
6|  (!  (!
 A 6x B 7p AI! 
AF!
  A j!  
j!  j!@  ("@  (6`  )7X  ) 7P

 A 6` B 7X B 7P
 A !AA 
! Ak! B 7d A 6l A jA     A A k!   Fj! !
@@@@@@@@@@@@@@  I@     A j     
k"
E   6@ A j  A@k  k  k (@"
@A !@ AFE@ 
 At"j  j( 6 Aj!


 
 
6
 
A 6 
 
 A5"6    
AkAtj"("I@ ( !A !

 A N@A!A  A5!@@@@@@  F@@  j!A ! !@  
G@  Atj"(! ( !	@  M@ 	! AM
 Ak!  (AF@ + AtjA j

  (  (| Atj( +k  (j  E"Aj-  jAtj  (x Atj( +kA3j
! 
 A
lj" 
6
  	6  6   j6  Aj!


 Aj!


 Ak!A!	@@  	I
  	A F
A! 
 	AkA
lj"(E@ (
Aj!
 (  	 j"
Ak Aj  A5j Ak A5k"
AN
@@ 
 	A
lj"(  
H@ 	 ("I
 E
 A@k 
 	 kA
ljAj ( (
E  (H6  )@7

 A 6  6
 A 6  
6 
  )7  (6
@ 
 K
   	F
 ( "A H
	A !
 ("A G! E@ (
!

A  A5!     A j 
  Aj    6@ A j  A@k 
 k  
k (@"E
   AkAtj"
(" K  	jA Or
  j!
A !@  F
  Atj"(! !
 @ Ak( Aj!

 ( !
  	j!@  
O@ 
! AM

 Ak!  	j!  (AF@ + AtjA j

  (  (| Atj( +k  (j  E"Aj-  jAtj  (x Atj( +kA3j
 
j!@  O@  
 A
lj( N

    K!@  FE@ 
 Aj"A
ljA6 


 

-- Chunk 54 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:7951-8100
 A
lj" 
6
  
6  6  6  !
 Ak! Ak!


 Aj!
 
 
 	Aj!	


 
 A
lj"(
!
 (! ( ! (!  (6x  )7p  )7(  )70  (68  ) 7 A !  A j"
M

  
k"A O



 
 A
ljA6  Aj!




A A AA   
A A AA   
A'A AՇA   
A A AA   
A A AA   
A A AA   
 Aj!

 Aj$   
k
A ! 
( !A  	 (A  (

k" A K!
 
(E@@ @ A@k 
 A
ljAj  
E  (H6  )@7 

  
 A
lj")7   (6
 AO
 
 Aj"
A
lj" 
6
  6  6  6   )p7  (x6 
!@ @  
 A
lj"Aj( 6  )7  )7  ) 7  !	 
 Ak"A
lj" (6  )7  )7  ) 7 A   	k"  K!


@  
M@ 
 A
lj"(
! ("	E@  
G
  
j

  
j" K
   
 (" 	 (
 ( ( kAuM
 ( "
AO
	 (
" j ( 
jK
@  M@  
 AI
 (
"Aj"
 
Aj"kAkAaO

 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


  
  	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	AM

 	Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 
  	jj"

! Aj!


 A


A A AA   
A A AA   
A A A׈A   
A A A܈A   
A"A AA"  
A A AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
A A AA   
lAV!@A   ( 6E
 A   (6E
 A   (6E
 A   (
6E
 A   (6E
 A   (6E
 A AVA   (6!
 
K@  ( "A   kAq"O   j"Aq
  kA 

-- Chunk 55 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:8101-8250
6  
A A A A   
CA! AqA ( AM@     A 
 A6       H


~@@@@@@ A5I@ A j! Aj!  Aj!
A AktAu!A !A!A t"
Ak"
!	@  G@@  At"j/ "
AF@ 
 	Atj 6 	Ak!	A!

 
AtAu"A H
 A  
 H!
  j ;  Aj!


   6   6  
Av 
AvjAj!
A !@ 	 
F@A !@  G@  Atj. !   j"	 (A!@   J@  	j ( Aj!


  A H
 B|! Aj!   j!


 E
 
At!A !A ! @A !   
I@@ AG@ 
  
l j 
qAtj    jj-  6 Aj!


  Aj!   j 
q!


A ! E
A A AA
  
A ! @  G@A !  Atj. "A  A JAq!@  G@ 
  Atj 6@   
j 
q"  	K
 
 Aj!


 Aj!


A !  

@  
G@  
 Atj" ("Atj" / "Aj;     k":     t 
k;   j-  "AF
   :     Atj( 6 Aj!




A!A AA
  
A A AA
  
A A AA
  
A A AA
  
A A AA
  
A A AA
  

   j!@@ AN@   k"AyH

@   O
   -  :    Aj!  Aj!
 
 
@ A k"  I AoKrE@      k"AN@  Aj!  !@   Aj  Aj A j"  A j"  I
 

  j!

  !
@  O
  -  :   Aj! Aj!
 
 

#   AO@A܁A A٭A.  
AA  
      B~
-   Akq@A A AA&  
   jAkA  kq
   A@q
"  (!  (!
  (\!
  (!  (  (   ("
k" j  ("  (
"	O@      
   	 	 I"j!
 
 j!  j! 
 
EjAj!   j"Ak! ( " A     k"I"	!
A    	!
 (" A    I"!	A    !! 
Aj!# A k! A!I!$ Ak! ! @@@@@@@@@@@     j"Aj"K@ $E
  Aj!@@@@  
   !
  

   !
  

   !
  

   !
  
!
  Aj!  
 
 
Atj( " I! 
 
j!%  !  !@  
  " %k"K"&!" 
E  kAIrE@  "j(  

 (  As
!' 
 
Atj  
k"6  ' (  F@  "j" F  Fr
AA Ak-   Ak-  F"
!  
k!  
k! 
  &!A!

-- Chunk 56 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:8251-8400

  O@  j(  

 (  As
 (  F@ !

 
 
Atj"( " I!@@@@  
  

  

  

  
!
  
 !   
k"6   O@  j(  

 (  As
 (  F@ 
!
 !

 ! 
 
Atj( !@@@@  
  

  

  

  
!
  j!   j"M@ Aj! Aj!
  
  I! !  I
 

  
 
 
6   	 
 ! 
 ! 
 	6   k
A A AA  
A A AA   
@  k"
@ 
   I"!   ! 
Aj!  j!A!@  M   Or
 Ak"-   Ak"	-  G
 Aj! 	! !
 
 
A A AA   
 ! 
!	 
!

@@@@ @  j  j   ! (
 ( ( kAuM
 ( "
AO
 (
"   k"j ( 
jK
  K
	@  M@    AI
 (
"
Aj"  Aj"kAkAaO
   A!H
  
j! 
A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   6    ;  j"AM
 Ak"AO@ ($

 A6$    ( kAu6(
   ;   Aj6  j"  K@ 
 
Atj  
k6 
   K
  #j" M
 Aj! 
@@@@  
 
  Atj 6   Ak" 

 
  Atj 6   Ak" 

 
  Atj 6   Ak" 

 
  Atj 6   Ak" 
Atj  
k6 @ 
! 	!
   K
  
   
k" 
k" I" j!	 
E  AsjAIr
 	(    (  G
  Aj 	Aj  
   !	 (
 ( ( kAuM
 ( "AO
 (
" ( jK
	   K
 	Aj!@   M@   

      	
 ("A6  A ; AM

 	Aj"	AO@ ($

 A6$   ( kAu6(
  	;  Aj6 
@@@@  
   

   

   

   
Atj 6    j!  !	
 
 

-- Chunk 57 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:8401-8550
A A AA   
A A A A
  
A=A AA"  
AA AA   
 
!	 !



A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
  (!
  (!  (d!  (\!@@@@@@@@@  (
"	  (  (  j"
  ("
k  ("K@  (" 	  	 K"j! 
 j!  j! 
Ak! 
A k! Ak!
 ( !	 (! 
A!I! Ak!@ ! @@@@@@@@   I@ E

@@@@  
   


   


   


   

! A!O

  Atj"( !    Atj"( !
    
k"6   6 @ 	 Aj" kK
  
  	k"kAI
   
  I" j"(    Aj"(  G
   Aj Aj 
  
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E



@ 
 M
   
 
 I" 
j")    )  R
   Aj Aj 
  
  Aj!   !  
k!  !@@  M  Or
  Ak" -   Ak"-  G
  Aj!  !


 E
 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ 	! !	

 	! !	 ($E



@  M
   
  I"
 j"
(    (  G
    Aj" Atj"( !  6 @  M
   
  I"
 j")   )  R
   A	j Aj 
  
 
 Aj!   
!  k!@  M  Or
 Ak" -   Ak"-  G
 Aj!  !
 
 
  Aj 
Aj 
  
 
 Aj!   
!  k!@   M  
Or
  Ak"-   
Ak"
-  G

-- Chunk 58 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:8551-8700
 Aj! ! 
 
 
   kAu  jAj! 


  6  	6  
 k
A A AA   
  !
 E
 (
 ( ( kAuM
 ( "AO
	 (
"   k"j ( jK
  
K

@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ 	! !	

 	! !	 ($E
 

 A6$    ( kAu6(
   ;   Aj6  j" K
  
 Aj" j" Atj  6   Ak" Atj  
k6  @@@@  
   
Atj  6  Ak"  


   
Atj  6  Ak"  


   
Atj  6  Ak"  


   
Atj  6  Ak"  

Atj   
k6 @ 	!  !	  K
  
  
k" 	k" I" j! 
 kAI 	  kKr
 (   (  G
 Aj Aj 
  
  ! (
 ( ( kAuM
 ( "AO
 (
" ( jK
	  
K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 @@@@  
  


  


  


  

Atj 6    Atj 6   j!  !
 
 
A A AA   
 	!  !	
 
 
      
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
+   Aj" v"AO    A 

   AG

   (  (
j

    ) 7    (6    F
@  (
"E
   ( O
    ("O@  K@    ko
    
@  ( K
   (" M
   k"AI
  ( "@  At jAk( M AKr

  (
" @  Atj 6  ( Atj  Aj6   ( Aj6 

A A AA1  


  / " (j"6   AtAj(  ( A  kvq6 @ A K
  (" (O@ 


  (
"F
     k Av"  k I"k"6   Atk6  (  6 
   Aj6
 @@A   6@   |@ E
 A
l  AtjAj

 A(l  AtjAj

-- Chunk 59 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:8701-8850
( " E
  
AրA AA   
A%A AA   
A A AA   

  ( !  A A,    /
  @     
  

   A O@  Aj
  Aj-  
# Ak"
$  
 6
 	 
A
j   	HA !@@@@@   
 
(
"  K
   	  !

  A~qAG
   	 
(
!
 
  j! @   K@ !	 @  -  j!	
 Aj!  	-  j!


 Av

AA AҜA<  
 A
l
!  
Aj$   
a   /"6    /"Aj6@ ((  ( kAuG
 @@ ($Ak 
   Ar6 
   Aj6

 @@@@@@@@@  
 A 6 A ;   Aq";  AtjB 7A !A 
 
A
  
 
A 
  	 
 
 A n" A   
   !   Ak"j-  Atj"( "	AO@  	Ak6  !
 AM
      "
 A H
      "
     A jAn"    
A A AA?  
   -  :  A!
 
A A AA?  
A$A AA?  
  F@  A 6  	E AKr
@@@@@@@@ 
AM@ 	E
 
E
A  ( AF AIq
A
 
k tAv K
	  Akv M

	
A!
A! 	@    !
  ( @   !

# Ak"$     "    "E@ A jA   !
 Aj$  !A !A !@ @@  O@  Atj( " O
 A At"
 n"
  
K 
 AtAj(  lj! Aj!


 Av

A A AA  
A(A AA  
!@ 	E
  
  ( AG
  


 
 At j"AO
  I  
KrE@ 	
	A A AA=  
  
O@A 
E
A A AA=  
  O

  A6 A

A A A՗A=  
A A AA=  
AA AA=  
A A AA=  
AA AA=  
AA AA=  
  A 6 A 
A k!A !@@@  M@A   Atj/ " AFAtAu t"E
 AO
 AtAj(   Atj( l j! Aj!


 Av
A A AA  
A A AA  
# Ak"$    A!@   / K
  (
"AtAj!	A !  (!
@   M@ 
  Atj("AvAj"AtA t k AtjAt vk!   Atj( "@  	O
  l j!
  Aj! 


 Av!
 Aj$  
2 A  6E@AA AƌA&  
   AkA AKvAj
A!  AKAA AKj" j"O@@@@@ Ak 
   AtArAq0

   AtA
r%

A A AA
  
   At:  

-- Chunk 60 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:8851-9000
   j   A

@  k"AJ@@  N
  "  J! Ak!   Atj"( !@  G@    Atj"( I@   Aj"Atj 
 Aj!


   Aj"Atj   k  kH@    Ak Aj!   Aj  Ak!

 
 
   Atj! A  A JAj!A!@  F
  Atj" (!  ( ! !@@ A L@A !

  Ak" Atj"(  O
   Atj ) 7   !


  Atj"  6   6  Aj!
 
 


# Ak"
$  
 6
  
A
j!A 
(
A&I
 AR AK
  Aj"! A A A jA A!	 Aj!@@@  G@  Atj( "AO
 	 Atj" / Aj;  Aj!


 	/E@A!A !@@@ @ 	 Ak"Atj"
 
/  j"; 
 ; 
@A !@  G@  Atj( "
At 	j" /"Aj;  O
  Atj" :   
6  Aj!


AAj!@ AM@ 	 Atj"/ / "k"AN@  O
  AtjA  Ak
 Aj!


A! A AK!A!@@  F
 At! Aj!  j"(  Ak( M
 
A !
 E




A A A A  
A A A A  
AA A A  
A A A A  
A A A A  
 !@ "Ak!  Atj( "E
 
   Atj"(  j6 A;  AtjA; Aj"A AJAj!	A!@  	G@  AtjA6  Aj!


 AkAx6  Ak!A!A!@  	G@  Atj    Atj( "
  Atj( "
I"k"
  
 
Oj"
  
Atj( "
  
Atj( "I"Atj"(     Atj"( j6   ;  ; 
 k! 
 
 Oj! Aj!


  AtjA :  Aj! AL A A NAj!A !@  G@  Atj"  /Atj- Aj:  Aj!


   Atj"  /Atj- Aj:  Ak!


"
!A !# A@j"
$ @ A
 "  Atj- "O
 A  k"	t! !@  Aq"
O@@  AqF@  Ak"Atj- !


  AkqE@  	u"	A J@ 
AA8!
 ! !@ A H@@@@@ 	A L@ 
(!

 	Aj"A G! !@@ "AO@ Ak! 
 Atj( "AÇF
 
 Atj( "AÇF
  Atj(   Atj( AtK



 
 Atr( AÇG@ !

 ! E

 A
 A
K!@@  G@ 
 Atj( "AÇG@ !
 Aj!

 

 
 Atj( "AÇF

  Atj" - Aj:  
 Ak"Atj"  ( " AÇF6 A t 	j!	 
 Atj  Ak"AÇ  Atj-   kFAÇ
6 


@@ 	E
 AÇG@  Aj"Atj" - Ak:  	Aj!	

 !@ "Ak!  Atj-  F
 
  Aj"Atj" - Ak:  	Aj!	 A N
 
A A A A  
 !

A A A A  
A(A A A    Atj- " I@ 
  kAtj 6  !
 Ak!

 

-- Chunk 61 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9001-9150
 
A A A A  
A A A A    Atj :   jA  
ktj!  Ak"Atj- !

 
 
 
A@k$ A A
K
 A !# A@j"$  A ;8 B 70 B 7( B 7  A ; B 7 B 7 B 7  
A 
A NAj!A !@  F@ !@ A L@A ! Aj"A  A J!  Aj!A !@  F@@  G@   Atj"( Atj" / "Aj;    Aj!


   6  A@k$    Atj"- Atj -  Aj!


  At"j ;  Ak!  A jj/  jAqAv!


 A j  Atj- Atj" / Aj;  Aj!


 
!  
Aj$   
?@  ( ""@  v
   A  kt r6 

A A A A:  
#  A
O@A A A A  
   6 
# Ak"
$  
 6
  
A
j!A!@ 
(
AI
 AR! AK
  Aj! A :  Aj"A AK!
 Aj!A!@  
F@ Aj!A !@  G@  j  Atj(  j-  :   Aj!


  Aj!
 Ak!
# Ak"$  A6
 A
6  A
j!A!@ (
AI
 A ! AI
 A! Aj" Aj  ~" F
 A ! AF
  Aj"	A  (""
   A "
  
 
 	  
""@ !

  	  
 AjAn"
  
A   j!A ! 
 
j k"	  AvjAjO!
# A@j"$ @ AI
  A(j  	
   jAk"-  !	@ Aq@ Aj"
  	B Aj  Ak-  B A(j 
 Ak"-  I 
@ A(j

 A(j&

 Aj  	B Aj  Ak"-  B
@  I@ A(j" Aj Ak-  I  Aj Ak"-  I 
@ A(j A(j&



 A(j" ( (  ( ($ !
 A@k$  "
  E@A !

  j 
k!
 Aj$  
 AI  AvOrE@   :   Aj!

A! AK
A!  AjAv"M
 Aj!   A j:  A !  jA :  @  M
 Av  j  Arj-    j-  Atj:  Aj!
 
   j  k:   Aj!

 
 
 
Aj$  
 ? At
A!
@@@  j"
   kK
    ( "
kK@Al
 
A L
  
N
   
K  
j"  Kq
    j" k!   
   6 @@   kM@ !

Al!
  	k I
 
 
  k" j" jO@   

   j!  A   k  k!
    A
 
!

 

A/A AA!  
A0A AA!  
   j!   k!@@@@@@@@@ E@   I AjAMq
 AL


 A H
 AN

@   O
   -  :    Aj!  Aj!
 
 
   I
@ AM@   -  :     - :    - :    - :   Aj  At"Aj( j".  Aj( k!

-- Chunk 62 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9151-9300

   

  Aj"  Aj"kAL
 Ak!
 A G!  O@   j!    k"AHq@@   
 Aj!  Aj"  I
 

 
 AkAaO
    AI
  Aj! @   Aj  Aj A j"  A j"  I
 


@   K@  !

   k!@   k"AH q@ !@   
 Aj!  Aj"  I
 


 AkAaO
    AH
   Aj!  !@   Aj  Aj A j"  A j"  I
 

  j!
@  O
  -  :   Aj! Aj!
 
 
AߊA AA
  
A$A AA   
A A AA   
 

A A A A
  
# Ak"$   6|@@@@@@  
 E@A!	

Al!	 -  " K
  Atj( !  j-  !  B 7   A ;  A : 
 AF@A A AA=  
   6
   : 
   6 A!	

 
E@Al!	

A !	 
E 
AHr
A tAj! A !@   M
 A@k!
 
 
Al!	  A j A j  ="
 (x" K
    (|    
   6  !	

A A AA?  
  	6 A !	
 Aj$  	
     AjK@   Aj"6  j!A

 AO@    j" k"Aj"  6  jAk  !A

    Aj"6  j!A 
6   6
   /    - Atr
W  ("@ (  Aj( " Aj( " Aj( "/    /
  A 6  B 7
    BB ~
h    ErA   (
!  (!  8   k"M@  ( K@   6
   6 

A'A AσA   


@@@@@  ($E@  A

 Aq
  (
!  (!  8   j"I
   6
 A?q
 A?q

 
A A AA>  
A#A AA>  
A A AA>  
A A AA>  
 A!@  ("AqE@ Aq
  8@  ($E@  j"  (M

  A: 
A 
   6   6
   6 
A A AA  
A A AA  
4  @A 
 A   AF
    |E

A%A AA?  
 Am!@ AqE@ A H
 Aj!A !@  FE@ Aj!@  FE@   Atj"A  ( " k  I6  Aj!


 Aj! !



A A AA+  
AϊA AA+  
~  AqA G!Bٲ'! A O~   jAk!Bɡ !BӾǫB!B !@    '!   Aj '!   Aj '!   Aj '!   A j" K
 
 B B| B
| B| < < < <Bٲ'
 |    
s# A k"$   j"-  !  )7  )7  ) 7    Aj Atj  B 7   AjA (tAsq:   A j$ 
9@@   M  Mr
   Ak" -   Ak"-  G
  Aj!


 
# Ak"
$  
 6
 	 
A
j   	HA !@@@@@   
 
(
"  K
   	  !

  A~qAG
   	 
(

-- Chunk 63 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9301-9450
!
 
  j! @   K@ !	 @  -  j!	
 Aj!  	-  j!


 Av

AA AA<  
 A
l
!  
Aj$   

   ( Aj(  Aj Aj" ("   (!  (!	  (!
  (  ( kAu!  ("!
  (
 k! (! (! (AF!# Ak"$  A6
@@@@ " (   
  A
j 
  
   (
?! @  ( j!
 A KAA AKj  Aj AIj!

A A AA(  
A!
 Aj$   (  A Aj"A AAA
  AKAA A Kjj  ( 	 A# AjAAAA# j  ( 
 A4 AjAAAA4 j  (j jAj

\  (  ( "kAu!@  FE@   Atj/j!  (( F@ Aj   ($AF!
 Aj!


 
@ AF
   -  Al!@ Aq"@  Aj     j AkG

@  F
   j!A !@@ AK
  j! Aj!  (  F
 


 Aj!
 
 
A 
A
!4~# A k"$ @@@@ AI@ A@k  (6    )78   )70   )7(   Aj) 7   Aj) 7   Aj( 6    Aj) 7 A(j Aj@ AM@  Aj!  (AO@  oA!

    (A!

  Aj"  Aj  ("6   Aj  (6   Aj( @  Aj(   Aj( G

   Aj( k"  Aj( "AjK@     kAk"A AIk6
  Aj"!  Aj( !A !@ AG@  At"jA#j  jA#j( 6  Aj!


@  Aj(   Aj( I@  (AG
AW!  (
  Aj   A#j  (  !  (  (M
A6A AA<  
  Aj"
( AF@ A 6T B 7LAW!  (
   (6H   (6X A j!	A !# A k"$ @@@@  j"'  Aj"( M@ 	(
" 	(I
  	(K
 A?qA G!/A 
(t!( A
j!0@@@  /F
   	(O
  At" N
 '  j"A@k ' kA I" k!  )7  )7  ) 7 Aj @ 
(!
 A  ( ! (!A 
t!A !
@ 
 G@  
Atj"A  ( " k"
 
 K6  
Aj!



 A 6

   ( 0A  !A !# Ak"
$  
 )7` 
 )7X 
 ) 7P 
(
! (
"
! 
A j" @ (! (!
@  I
  
(!
 
(!  
jA   !)  jA   !! A$j!1  j"
Ak!* ("" 
j!# 
A j  
(A  k!2  j!A  
ktAs!3A 
tAt!4@  *I@A ! 
A 6l  2j! 
A j  * k 1 
A j!$ 
(l!+@  +F@  $j!5A !
@@@ 
 +G  
Atj"(" "k!% (!, (!&  K
 (" 4j!6A !A !
A !A !@  6I@@ ( &G
  ( " M
   @   "  
I"
 j" 
 ) 
 
 #" I
 ! ! # 
"-F -     -"
kGr 
  
k  ) ! 
j


   "j"
 
" I
   
 #
!
 
 j" M
  ! !
 
! !
 Aj!



-- Chunk 64 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9451-9600
 
E
 	(
" 	(F@A!
	
 
( ! 	(  A
lj"
  j6 
  k k6 
 % k6  	 Aj6
 ( ! (! 
 
)70 
 
)7( 
 
) 7    , % & 
A j  j" 5M
  $k 
 $j!

 ( ! (!
 
 
)7 
 
)7 
 
) 7 
  , % & 
Aj
 
Aj!

 
    Atj($j" !7  Atj"
 6 
 7B > 
 7 3q"6 (! 
 
)7H 
A@k 
)7  
 
) 78 
   
A8j6 Aj!

 
 

 
 k!
 
Aj$  "E
 !
 A j$  

 	(
" K@ 	(  A
lj" ( .j6 

  G
  .j
!. Aj! !
 
 
A9A AA  
A5A AA  
AA AA  
A A AA  
A9A AA  
"
 A j    (A#j  (  ! (L (TF
A6A AٺA<  
  (@  A
j( " I
  A
j( "E
  (
  A
j"(    A A   (A  (t  ! ( !A!@  (
" Ak"	M
    	Atj"	(  	(rE
  F
   Atj"B 7  B 7 Aj!
 
"E@ A 6P B 7HA!  (
!
A !A !A !@  G@ 
 Atj"	( j! 	( j! Aj!


   jI
 !  (!
# Ak"$   "j! (H!  "(" @  Aj

A  (E
 Aj
( 
!  (" A#j( 6   )#7     K! A k! 
AG! ! @@@@@@@@@@@@@@@@@   G@ 
  Atj"("
 ( 
  !
 
E
  K
  F 
AGr
 Ak"  AjI
  At 
j"A0k( 6  A k( 6  
  Atj( 6 

 (!	@ E@ ( "E
 Aj!

  	E"! ( "@ E@A (  F

A k  (F
A k  (F
 Aj"
 E
 A 
 ( Ak F


A A AA;  
" F
 (@  (P  	jj"6P (! (!
A (t"  j  K"E@A A AA   
AAA AAA 
 AF K Aj I"

 ("   (HkM@A!

 ( (kAu O
 ("AO
 (" 	j ( jK
  	j" K
@  M@   	AI
 ("Aj"
 Aj"kAkAaO

 
  	A!H
  	j!
 A j!@  Aj Aj A j" A j" 

-- Chunk 65 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9601-9750
I
 


    	
  ( 	j6@ 	AM@ (!

 (

 A6  (" (kAu6
  6   	; AM

 Ak"AO@ (

 A6   (kAu6
  ;  Aj6  Aj!    	jj!


 Aj  F@  ( 6  At 
jA k( 6  
  Atj( 6 

   G

  ) 7  
 Atj( 6 
 Aj( "  ) 7#  A#j (6 A! 
 Atj" (" Aj     ("  (Pj6P   j 
 G
   Aj6HA !
 Aj$  


A A AA'  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
A%A AA'  
A
A AA'  
A
A AA'  
"
A ! AjA 6 

 !  (E
  (  ( !  AjA 6     (A#j    !

  (  ( !  AjA 6     (A#j    !
   j k A !
 A j$  
A A AA<  
AA AA<  
A>A AA<  
AA AݺA<  
A A A޺A<  
8  O@A !@  K@A
 At! Aj!   j/ 
 

A

   AnAj
~A!@@ A
 "AI
 AT! A
K
 A!   K
 AA !	  v!
A t!B  !A> k"
B}!A !@@  M@   Atj( "F@A !
@ E@   AtjA ; 

  
M@   Atj 	;  Ak!

  ~" 
""Aq"
AM@  B 
} 
AtAj5  V j!
   Atj ;    Aq" AqK"
!  
 
!
  k!
 Aj!

 

A  k   
Atj". "AuH
A !A ! Al "Ajv!  v!
@  M@@  Atj( "E@   AtjA ; 

@@  
M@   Atj 	; 

   Atj!
  K
 
A; 
  k! Aj!

 
A; 
 Aj!


@A t"	 k"E
    nI@ Al Atn!A !@  M@@   Atj"/ AG
   Atj( "
 K
  A;   
k! Aj!
 Aj!


 	 k!
  Aj"F@A !A !A !@  M@  Atj( "	   	I"	!   	! Aj!


   Atj"   /  j; 

 E@A !@ E
   Atj". "A J@  Aj;  Ak!
 Aj p!
 
 
 A> k"
B 
B}B"| !A !@@  K
    Atj"/ AF@  
!   Atj5 ~ |" 
 k"E
  ; 
 Aj!


AA   M

A 
"E


-- Chunk 66 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9751-9900
 !
 
   j;  

     A

AT A
K
 A AI
  !  Aj" lAjAvAjA O!
 Aj!
 Ak!   "jAk!
A t"Aj!	A!A !  !@@@ 	AH   Or
@@ E@ !  !

      K!  !@@  G@  Atj/ E
 !
  F@ ! 

A t!
@  Aj" M@ 
E  
Kq
   
j" ;    Av! Aj! ! 


@  Aj" M@A t j! Aj! ! 


   k t j! AH@ Aj!

 
E  
Kq
  ;   Ak! Av! Aj!

 Aj!
 
 
A 	  Atj. "   Au"j sk"
A L
  
jA  	As Atj"  Aj"  H  j"  Hk!  AF!   t j! Aj! @  
J@ Au! 
Ak!



 
!	 AH
 
E  
Kq
   ;   Ak! Av! Aj!


A

A 	AG
    K
 
E@A  
K

  ;    AjAmj k


A7A A A   


z ( !  ! @    k"  I!@  FE@    j Atj 6  Aj!


  6   Atj( 
A A AÁA   
+@  FE@   Atj(  j! Aj!


 
    Atj(AjAv
~  A@k( @  (!   @ +

 *
6(
  (
!   @   +6,    ( +60  ($+

   *6,    ( *60  ($*
64
@  (
"@  (" I

  B7
  ("  (  A
lj"(" ("jM@ A   k"  I"M@  B7   o
   ( 6
    j"6    A   k"  Kk"j"6  j" I@   6   o
    jo
A/A AՅA<  
P  (AI@   (  (
jO    A;     AA:A 

A A AA   
P  (AK@   (  (
jO    A;     AA:A 

A A AA   
P  (AF@   (  (
jO    A;     AA:A 

A A AA   
P  (AI@   (  (
jO    A;     AA:A 

A A AA   
P  (AK@   (  (
jO    A;     AA:A 

A A AA   
P  (AF@   (  (
jO    A;     AA:A 

A A AA   
~  !
 ! !A! @ E
  ,  "Aq!@ A H@ A kAv" O
Al!  A k"AK
 Aj!A ! @   O@ !  !
   
j   Avj"-  Av:   
  Arj -  Aq:    Aj! 

 
 
  O
# A0k"$  A6 @   Aj Aj" "@ ! 

AT!  ("AK
  ( "AtAjB A t"AjB||B|B|BV
  Aj! At"  jAj!AR AKA  k Aj"AtB |B|Tr
  Aj!  AtjAj!
A AktAu!A!
A t"Ak"!
@ 	 G@@  	At" j/ "AF@  
Atj 	:  
Ak!
A!

 

-- Chunk 67 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:9901-10050
A   AtAuJ!

   j ;  	Aj!	


  
;  ; @ 
 F@ Av!A !
@  F@  AvjAj"At! A !
A !A !
@A !	 
 O
@ 	AG@   	l j qAtj 
 	 
jj-  :  	Aj!	


 
Aj!
   j q!
 
   Atj. ! 
 
j"  (A!	@  	J@   	j ( 	Aj!	


 B|! Aj!  
j!


 
 
 Av AvjAj!A !	@  G@A !
  Atj. " A   A JAq! @   
G@  	Atj : @  	j q"	 
K
 
 
Aj!



 Aj!


A 	
A !

 
 FA    
Atj"- Atj"   / "Aj;    k" :     t k;  
Aj!




" 
   k!  j!  /@ Aj   $" 
 Aj Aj"   Aj   A !@@@ (
"A K
 @ ( " ((O@ Aj
! 

  ($"F
    k Av"    k I" "k"6    Atk6
  (  6
 AK  r
   
j" Aj Aj" D:    Aj  D: @ (
"A K
 @ ( " ((O@ Aj
!

  ($"F
    k Av"    k I""k" 6    Atk6
   (  6
 E

 Ar!
@@@A!  AK
  
j" Aj AjD:   Aj!A! Aj! (
"A K
@ ( "
 ((I@ 
 ($"F
  
 
 k Av" 
 k I"k"6    Atk6
  (  6

 Aj
AF

 AK
  Aj AjD:  Aj! (
"A K
@ ( " ((O@ Aj
!

 ($" F@AA A I!

    k Av"    k I""k" 6    Atk6
   (  6
A! AG
 
  
j! Aj!

  
j!A! Aj!
   AjD:    j 
k! 

  Aj Aj" D:   Aj  D:  Aj!
 
 
 Aj   $" 
  Aj Aj"   Aj   A !@@@ (
"A K
 @ ( " ((O@ Aj
! 

  ($"F
    k Av"    k I" "k"6    Atk6
  (  6
 AK  r
   
j" Aj Aj" C:    Aj  C: @ (
"A K
 @ ( " ((O@ Aj
!

  ($"F
    k Av"    k I""k" 6    Atk6
   (  6
 E

 Ar!
@@@A!  AK
  
j" Aj AjC:   Aj!A! Aj! (
"A K
@ ( "
 ((I@ 
 ($"F
  
 
 k Av" 

-- Chunk 68 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10051-10200
 k I"k"6    Atk6
  (  6

 Aj
AF

 AK
  Aj AjC:  Aj! (
"A K
@ ( " ((O@ Aj
!

 ($" F@AA A I!

    k Av"    k I""k" 6    Atk6
   (  6
A! AG
 
  
j! Aj!

  
j!A! Aj!
   AjC:    j 
k! 

  Aj Aj" C:   Aj  C:  Aj!
 
 
 A0j$   

  !A !  A A4!A !@   G@   
j"-  "A
K@Al
  Atj" ( Aj6   Aj! A -  tAu j!

 

Al!  E
  Aj"A
K
   6 AA t k""t G
   
j Aj":    Atj" ( Aj6  ("AI Aqr
   Aj6  Aj! 
  

# Ak"$   (
!  (!
  (" !  (!   (
6|  (!  (!
 A 6x B 7p AI!
 AF!  A j!  
j!  j!@  ("@  (6`  )7X  ) 7P

 A 6` B 7X B 7P
 A 
!AA ! Ak! B 7d A 6l A jA     A  A k!   Fj! !@@@@@@@@@@@@@@@  I@     A j     k"E   6@ A j  A@k  k  k (@"
@A !@ AFE@ 
 At"j  j( 6 Aj!


 
 6
 
A 6 
  A 5"6    
AkAtj"("I@ ( !A !	

 A N@A!A  A 5!@  F@  j!	A ! !@@  
G@  Atj"(! ( !
@  M@ 
! AM
 Ak!
  (AF@ 
* AtjA j

  ( A	tA kA3 AKj  (| Atj( *k  (j  
E"
Aj-  jAtj  (x 
Atj( *k
! 
 A
lj" 6
  
6  6  	 j6  Aj!


 Aj!


 Ak!A!
@@@@ 
"
 K
 
A F
A! 
 
AkA
lj"
(E@ 
(
Aj!
 
(  
 j"
Ak A j  A 5j Ak A 5k"	AN
@@ 
 
A
lj"(  	H@ 
 ("I
 E
 A@k 
 
 kA
ljAj ( (
E  (H6  )@7

 A 6  6
 A 6  	6 
  
)7  
(6
 
 K@ 
Aj!


  
F
 
 
Aj"
A
lj(  ( "AjL
  A N@A ! ("	A G! 	E@ (
!
A  A 5!	     A j 
  Aj    6@ A j  A@k 
 k  
k (@"
E
  
AkAtj"
(" K 
 jA Or

  	j!

-- Chunk 69 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10201-10350
A !@  
F
  Atj"(! !
 @ Ak( Aj!

 ( !
  
j!@@  
I
 
! AK@ Ak!	  
j!  (AF@ 	* AtjA j

  ( A	tA kA3 AKj  (| Atj( *k  (j  	E"	Aj-  jAtj  (x 	Atj( *k
 
j!	  O@ 	 
 A
lj( N

    K!@  FE@ 
 Aj"A
ljA6 


 
 A
lj" 6
  
6  6  	6  Ak! Ak! !




 Aj!
 
 

A A AA   
A'A AՇA   
A A AA   
A A AA   

 
 A
ljA6  Aj!

 
 
A A AA   
 Aj!

 Aj$   k
 
 A
lj"(
! (! ( ! (!  (6x  )7p  )7(  )70  (68  ) 7 A !	  A j"M
  k"	A I
A A AA   
A ! 
( !A  
 (A  (

k" A K!	
 
(E@@ @ A@k 
 	A
ljAj  E  (H6  )@7 

  
 	A
lj")7   (6
 	AO
 
 	Aj"A
lj" 6
  6  6  6   )p7  (x6 !@ 	@  
 	A
lj"Aj( 6  )7  )7  ) 7  !
 
 Ak"A
lj"
 (6 
 )7 
 )7 
 ) 7 A  	 
k"  	K!	


@  O@ 
 A
lj"(
!
 ("
E@  G
 
 j

 
 j"
 K
  
  (" 
 (
 ( ( kAuM
 ( "	AO
	 (
" 
j ( 	jK
@ 
 M@   
AI
 (
"Aj"
 Aj"	kAkAaO

 
 	 
A!H
  
j!
 A j!@  	Aj Aj 	A j"	 A j" 
I
 


   
 	
  (
 
j6
@ 
AM@ (!

 ($

 A6$  (" ( kAu6(
  6   
; 
AM

 
Ak"
AO@ ($
 A6$   ( kAu6(
  
;  Aj6  
 
jj"
! Aj!


-- Chunk 70 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10351-10500

 A 


A A AA   
A A AA   
A A A׈A   
A A A܈A   
A"A AA"  
A A AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
A A AA   
P  (AI@   (  (
jO    A;     AA :A 

A A AA   
P  (AK@   (  (
jO    A;     AA :A 

A A AA   
P  (AF@   (  (
jO    A;     AA :A 

A A AA   
 

   AkAI
R@ AFE@   At"jA#j Aj( 6  Aj!


  A 6  A#jA 6   A#jB 7 

    AKk
W @  @  (
    Aj  (  (  (
A A AA  
A A AA  
"@ E
   (  K
   ( K!
 

# Ak"
$  AM@ 
B 7 
Aj"       A=" Al     K  

  A  ( Aj"At!AT (  "Aq" A
K
    Aj6   j"Ak! Ak!
  Aj!
A! Av!A   t"	Ar!A ! ! @@ @@ AsAxrh"AO@ A$j!   
M  Aj   
kAt jAq! 
" (   v!


  A~q"
jAj! AvAl j  
vAqj" O
 Au"  j K   
KqE@ Aq!   j

   kAt jAq! 
" (   v!
  	Akq" 	AtAk"
 k"I 
Ak  
q"A    	Hk! 

!
  Atj Ak";  Aj!  
j! 	A k  A J j"J@ AH
A "t!	 Aj!

  O
  E! Au"  j K   
KqE@ Aq!   j

    kAtjAq! 
" (   v!


Al AG
 AP  K
 Al A J
   Ak6    AjAuj k
!  
Aj$   
~  (  (  (  (/@  Aj( "E
  Aj" !  A&j( " A&j( " A&j( " 
     /
  AjA A$
@  @  A A
"A 6 A 6 A 6# A0k" $   B 7   B 7(    )(7    ) 7  (AvAq    )(7    ) 7   (AvAqA 
!  A0j$   6 (AD  A
jB 7  B 7
 A
j"   A A" A6   A6,A A



A A AA
  
AA AA
  
# Ak"
$  (! (!
 (!  A 6   ( ( "kAu" (
M@ (! (! (!@ 
 G@  
Atj"( ! /! 
 j /:   
 j :   
 j E:  A 
 AK!
 
Aj!



 ($"
AF  ((jA#:   ($ 

AF@  ((jA4:  
 


A"A AA
  
6@@@@  M@ E
 
A#6
  
A
j 
  	H!  (6   Aj"
  
(
"
  A	 Aj"AAA "6  AM@ 
( 

@@   k AjA	   
 

-- Chunk 71 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10501-10650
 AAA# A
 	"
E@ AF@   
6
  
j" M
A A AA  
   
6


 
A6  
Aj   	H!
 
(!
  (6   Aj"
  
 
 A AA 
A
I "
6 
AM@ 
( 

@   k A 
  
  AAA
 A 	"
E@ 
AF@   
6
  
j" M
A A AA  
   
6


 
A46  
Aj   	H!
  (6   Aj"
  
("
 
 A	 Aj"
AAA "6 AM@ 
( 

@   k AjA	   
  AAA4 
A
 	"E@ AF@   6
  j" M
A A AA  
   6


    k6

 
Aj$ 
A A AA  
A A AA  
A܅A AA  
AA AA  
AA AA  
G@@@@  (@ 
A
A A AҌA   
  (
AG
   (A G!
 
	 (
!  ("!  (
 k! !	 AKAt!
# Ak"
$  
A6
 (!
  A!@@ 	
 AA? (AF O
   
A
j   "
  F@ A6 A !

  AvAjM
  Aj!
@ 
AG@ 
(
!

   
(
"A G!

A
   
A= A A"	  
"A
I@ 	    
A="
 	  ?!
 AjA 	   
A=!@ 
E
    ?" O  
j I A
j Iqr
  	 A A6 A !

   
jM@ 	 A

 A6  	A6

A4A AA
  
A ! A 6 
 
Aj$   6    Aj! Aj! Aj!# A k"$ @  (  ( k"@ Aj   Au   A
j Aj (
  Aj

 B 7 B 7 B 7 B 7 A 6
 (! (! (
! (! (" E@  6  6  6  6 
 A j$   
6  A   

# A k"
$ A!
 
A8j   E@ 
A(j   	Ak" j"
-  B 
Aj    j"-  B 
Aj    j"-  B 
A8j"   Atj" / -  Aj-  , &   / 
-  Aj-  , &@ 
@ -  " A AI"k"@ 
A8j"  (  , &
 
A8j  (  v ,


-- Chunk 72 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10651-10800
 
A8j  (  -  ,
 	Ak!
 
A8j&@ 	 
K@  
j-  !  
j-  ! 
A8j"  
Aj  
j-  "I   
A(j I  &   
Aj I  &    
Atj" / Aj-  ",  Aj-  "jAO@ 
A8j&
 
A8j"  / , &@ 
@  A AI"k"@ 
A8j"  (  , &
 
A8j  (  v ,

 
A8j  (  ,
 
Ak!
 
A8j&


 
A8j"  
(( 
(4   
( 
($   
( 
(  " A  !

 
A j$  

   AK
V  @A!  -  !A!@@  F
   j! Aj! -   F
 
A !
 
A A AA,  
 @ AK@  E
@@@@@ AKAA AKj"Ak 
   AtArAq0

   AtA
r%

A A AܔA-  
   AtAr:  
   j -  :   Aj
A A A͔A-  
AA AΔA-  
s   k!@ E@     G

     
"  E@A 
  j"  I
   k" A    AkI

AA A A+  
# Ak"
$  
 6 
 6
  
Aj!A!@ 
(A6I
 A ! E Er
 A! AK
 AT! A
K
 AR! AK
  E@ 
A6
A!
   j!@ 
Av 
A Gq"
@ 
( AF

 
AqE AIrE@ 
 6  
Aj A ~"
 
 6  
Aj  jA kA ~"@ !

  j!A ! A I

  
A
j   Aj""
  F@   -  :  A!

  AvAjM!A ! 
@ 
E
  
( AG
  	  
(

  
A 6 
 
@ 
( 

 Aj"  
(
"
 A
   
 A&   
 A&"
 
At" jAjA A k     
  A"@ !

@ 
@@ 
( E@ A
j!

 	  
?   
? jM
 A
j" O

A !  M
 
A 6 

A ! A
j O

 	@ 	 A
     j     !

-- Chunk 73 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10801-10950

         	!
 
Aj$  
@ AK@ AqE@    A!

 Ak!
 Aj!
A~!	  ! Aj!
A !@  
G@   Atj( A Gj! Aj!


 Aj"
!@   I
@      "
   K  
Kq
 
 
     "
    ? j" 	AjK
    	I"
!  	 
!	
 Aj!
 
 
A A A A4  
 
@@@@@@ AI A
Ir
  AL
  Aj" Ak  AjAv" G"@ 
 AkA|I
    Aq0  j"   j"K
   k  j"  G"@ 
 AkA|I
   Aj Aq0  j" K
   k  j"  G"@ 
 AkA|I
   Aj Aq0  j" K
  j"  j"K
   k   k G"@ 
 AkA|I
   j  k!	
 	
A A A A,  
A A A A,  
A A A A,  
A A A A,  
A A A A,  
[  Aj! A A NAj!A ! A !@  FE@    At"j( A G  j( Eqr!  Aj!


  E

~  ) !   ) 7   7 

   AAjO  Aj  

 ( "AI@ AtAj!
 E@  A  
 A 6 A 
 Aj! Aj!	 Aj!
 A A !  j"
Ak!
 (  !@ 
 Aj"M@@  
O@A !A !@ AF@A!@ "Ak!  Atj( E
 
 @AP  ( K

  6     
 
  At"j"
 
(   j(   	j(   
j( jjj"6     I! Aj!

 
   -  Atj" ( Aj6  Aj!

 
  (  !  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6  ( !  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6  ( 
!  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6  Aj"(  !  AqAtj" ( Aj6  
 AvAqj" ( Aj6  	 AvAqj" ( Aj6   AvAqj" ( Aj6 

 
 
A A A A#  

@  E
   Ak"  Ak( "Axq" j!@ Aq
  AqE
  ( "k"A( I
   j!  A( G@ AM@ (" Av"AtAjF  (
"F@AA( A~ wq6 

  6
  6

 (!@  (
"G@ (" 6
  6

@ Aj"( "
  Aj"( "
 A !

@ ! "Aj"( "
  Aj! ("
 
 A 6 
 E
@  (
"AtAj"( F@  6  
AA( A~ wq6 

 AA ( Fj 6  E

  6 ("@  6  6
 ("E
  6  6

 ("AqAG
 A  6   A~q6   Ar6   j  6 
  O
  ("AqE
 @ AqE@ A( F@A 6 AA(   j" 6    Ar6 A( G
AA 6 AA 6 
 A( F@A 6 AA(   j" 6    Ar6   j  6 
 Axq  j! @ AM@ (" Av"AtAjF  (
"F@AA( A~ wq6 

  6
  6

 (!@  (
"G@ ("A( I  6
  6

@ Aj"( "
  Aj"( "
 A !

@ ! "Aj"( "

-- Chunk 74 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:10951-11100
  Aj! ("
 
 A 6 
 E
 @  (
"AtAj"( F@  6  
AA( A~ wq6 

 AA ( Fj 6  E

  6 ("@  6  6
 ("E
   6  6
   Ar6   j  6  A( G
A  6 
  A~q6   Ar6   j  6 
  AM@  Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6
A! B 7  AM@  Av" A?jAvAq"t" AjAvAq"t" AjAvAq"tAv  r rk"At   AjvAqrA
j!
  6
 AtAj!@@@A( "A t"qE@A  r6   6   6

  A A Avk AFt! ( !@ "(Axq  F
 A
v! At!  Aqj"Aj( "
 
  6  6
  6
  6

 ("  6
  6 A 6  6
   6
AA( Ak" A  6 

.
# Ak"
$ @@@@@@@@@@@  AM@A( "A  A
jAxq  A
I"Av" v"Aq@ AsAq  j"At"Aj( "Aj! @ (" Aj"F@A A~ wq6 

  6
  6
  At"Ar6  j" (Ar6


 A( "M
 @@A  t"A  kr   tq" A   kqAk"   A
vAq" v"AvAq"  r  v" AvAq"r   v" AvAq"r   v" AvAq"r   vj"At"Aj( "("  Aj"F@A A~ wq"6 

   6
   6
 Aj!   Ar6  j" At" k"Ar6  j 6  @ Av"AtAj!A( ! A t"qE@A  r6  

 (
!  6  6
  6
  6
A 6 A 6 


A( "
E
 
A  
kqAk"   A
vAq" v"AvAq"  r  v" AvAq"r   v" AvAq"r   v" AvAq"r   vjAtAj( "(Axq k! !@@ (" E@ (" E

  (Axq k"   I"!    !  !


 (!	  (
"G@ (" A( I   6
   6


 Aj"( " E@ (" E
 Aj!
@ !  "Aj"( " 
  Aj! (" 
 
 A 6 


A!  AK
   A
j" Axq!A( "E
 A  k!@@@A  AI
 A AK
   Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j
"AtAj( "E@A ! 

A !  A A Avk AFt!@@ (Axq k" O
  ! "
 A ! ! 

   ("   A
vAqj("F   !  At! 
 

   rE@A !A t" A   kr q" E
  A   kqAk"   A
vAq" v"AvAq"  r  v" AvAq"r   v" AvAq"r   v" AvAq"r   vjAtAj( ! 
  E

@  (Axq k" I!   !    !  ("   (
" 
 

 E
  A(  kO
  (!  (
"G@ (" A( I   6
   6
	
 Aj"( " E@ (" E
 Aj!
@ !  "Aj"( " 
  Aj! (" 
 
 A 6 

 A( "M@A( ! @  k"AO@A 6 A   j"6   Ar6   j 6    Ar6

AA 6 AA 6    Ar6   j" (Ar6
  Aj! 


 A( "I@A  k"6 AA( "  j"6   Ar6   Ar6  Aj! 


A !  A/j"A( @A( 

AB7 AB7 A 
A
jApqAتժs6 AA 6 AA 6 A 
"j"A  k"q" M
	A( "@A( " j"	 M  	Ir

A-  Aq
@@A( "@A! @   ( "O@   (j K

  (" 
 

-- Chunk 75 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:11101-11250

A "AF
 !A( " Ak" q@  k  jA   kqj!
  M AKr
A( " @A( " j" M   Ir

 "  G


  k q"AK
 "  (   (jF
 ! 
  AF A0j MrE@A( "  kjA  kq"AK@  !

 AG@  j!  !

A  k

  "AG


A !

A !

 AG

AA( Ar6 
 AK
A( " AjA|q"j! @@ E   Kr  O
  
A(  
! AA06 A!

A  6 
  I@  E

A  6  AF  AFr   Mr
   k" A(jM

AA(  j" 6 A(   I@A  6 
@@@A( "@A! @   ( "  ("jF
  (" 
 


A( " A    ME@A 6 
A ! A 6 A 6 AA6 AA( 6 AA 6 @  At"Aj Aj"6  Aj 6   Aj" A G
 
A A(k" Ax kAqA  AjAq"k"6 A  j"6   Ar6   jA(6AA( 6 

  - 
Aq  Kr  Mr
     j6A Ax kAqA  AjAq" j"6 AA(  j"  k" 6    Ar6  jA(6AA( 6 

A(  K@A 6 
  j!A!@@  ( G@A!  ("



A!  - 
Aq
   6   ( j6 Ax kAqA  AjAqj" Ar6 Ax kAqA  AjAqj"  j"k!@  F@A 6 AA(  j" 6    Ar6

 A( F@A 6 AA(  j" 6    Ar6   j  6 

 (" AqAF@  Axq!	@  AM@ ("  Av"AtAjF  (
" F@AA( A~ wq6 

   6
   6

 (!@  (
"G@ ("  6
   6

@ Aj" ( "
  Aj" ( "
 A !

@  ! "Aj" ( "
  Aj!  ("
 
 A 6 
 E
 @  (
" AtAj"( F@  6  
AA( A~  wq6 

 AA ( Fj 6  E

  6 (" @   6   6
 (" E
    6   6
  	j!  	j!
  (A~q6  Ar6  j 6  AM@ Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6

A!  AM@ Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j! 
   6
 B 7  AtAj!@@A( "A  t"qE@A  r6   6   6

 A A  Avk  AFt!  ( !@ "(Axq F
  A
v!  At!   Aqj"Aj( "
 
  6  6
  6
  6

 ("  6
  6 A 6  6
   6
 Aj! 

@@   ( "O@   (j" K

  (! 


A A(k" Ax kAqA  AjAq"k"6 A  j"6   Ar6   jA(6AA( 6   A' kAqA  A'kAqjA/k"    AjI"A6 A) 7 A) 7A Aj6 A 6 A 6 AA 6  Aj! @  A6  Aj!  Aj!   I
 
  F
   (A~q6   k"Ar6  6  AM@ Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6

A!  B 7 AM@ Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j! 
   6
  AtAj!@@A( "A  t"qE@A  r6   6   6

 A A  Avk  AFt!  ( !@ "(Axq F
  A
v!  At!   Aqj"Aj( "
 
  6  6
  6
  6

 ("  6
  6 A 6  6

-- Chunk 76 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:11251-11400
   6
A( "  M
 A   k"6 AA( "  j"6   Ar6   Ar6  Aj! 

A ! AA06 

@ E
 @ (
" AtAj"(  F@  6  
A A~  wq"6 

 AA ( Fj 6  E

  6 (" @   6   6
 (" E
    6   6
@ AM@   j" Ar6   j"   (Ar6

  Ar6  j" Ar6  j 6  AM@ Av"AtAj! A( "A t"qE@A  r6   

  (
!   6  6
   6
  6

A!  AM@ Av"   A?jAvAq" t" AjAvAq"t" AjAvAq"tAv   r rk" At   AjvAqrA
j! 
   6
 B 7  AtAj!@@ A  t"qE@A  r6   6 

 A A  Avk  AFt!  ( !@ "(Axq F
  A
v!  At!   Aqj"Aj( "
 
  6
  6  6
  6

 ("  6
  6 A 6  6
   6
 Aj! 

@ 	E
 @ (
" AtAj"(  F@  6  
A 
A~  wq6 

 	AA 	( Fj 6  E

  	6 (" @   6   6
 (" E
    6   6
@ AM@   j" Ar6   j"   (Ar6

  Ar6  j" Ar6  j 6  @ Av"AtAj! A( !A t" qE@A  r6   

  (
!   6  6
   6
  6
A 6 A 6 
 Aj! 
 
Aj$   
A    ("6  (!   6    j6     kj6
  E@A A AA&  
    (6  B 7  AjB 7   B 7  AjB 7   A j"A 6   A 6  B 7  B7  AjA) 7   AjA( 6    6
    A j6    A0j6    Aj6 
'~# Ak"#$ @@@@@@@@@@@@@@@@@@@@@@@@@@ A  E@ @ ! !
 !$@@@  ( M@@ AI
  (  ApqAԴG
 A AI
 Ar ( "
AwK
 A 
Aj"
  
I
"

  
I
  
k!  
j!

 # 6 # 6
@ @@  @ @ ! !    (  jG6
  A  ErE@@@  @ E
   (6   ("6   6    (j"6   6 (@  B7   A j6
   A j6   A0j6   A
j6   Aj Aj( 6   Aj Aj( 6   Aj Aj( 6 

  B 7

A A AA  
A A AA  



A A AA  
A !
A E


  A A 
  E ErE@Ab@@ AM
  (  A~G
    ( 6Ab  Aj!# Ak"$ Ab!
@@ A	I
  (  A~G
 A j Aj"
 Ak "	"
  A6|  A j A j 
A  	 j"	  j"
 	k="

  (|"AK
  (x"A	O
  A j  AA  Aj" A46|  A j A j 	 
j"	 
 	k="

  (|"A4K
  (x"
A
O
  A0j  AA 
  A#6|  A j A j 	 
j"	 
 	k="

  (|"A#K
  (x"
A
O
    AA 
  	 
j"A
j"	 
K
  
 	k!
A !
@ 
AG@ (  "	E 	 
Kr
  

-- Chunk 77 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:11401-11550
AtjAj 	6  
Aj!
 Aj!


  k!

 Aj$  


A A AA
  
"
  B7    j  k

    
A 


A 
"


 E  (" $FrE@   6   $6  (!   $6   $  kj6
 !*# Ak"'$ A!@ #("
AA	  ("I
  #(
"
AA  "@ !

 
 AjI
   Aj 
   ("@ 

A 
 @  (AG
   (E
 @@  (E
   ("E
 @  (E
   Aj( !	# Ak"$   	6
 A
jA!/ (! Aj$  / Akq! (Ak! ( !
@ 	 
 Atj( " (A 
"G@  qAj! 


 E
     A6   6    (6


AA AԮA  

  Aj( "@A`  ( G

@  Aj( E@  A 6

    ("E6 
   Aj
    ) |7A 

"
  $ *j!(  Aj!, 
 k!
  
j!
 $!@A!@ 
AI
  ' 
"Av"6 ' Aq6 ' AvAq"6 @@ Ak 
Al

 !
 
"!@ !!

 ! 
Ak"-K@A!

 
Aj"  (   (I (   M!Al!@@@ '(  
  k!A !# Ak"%$ A!
@ !AK
 @ !AI
 @@@@@@@  -  "
Aq"Ak 
  (
 Ab

 !AI
A!
  (  !  (!
A!	A @@@ 
AvAq"
Ak 
 AvAq! 
E! AvAq

 Av!A!
 AvA q

  - A
t Avr!A!
 AvAq
" 
 AK
 E@Ah!	 AI

  
j" !K
A!	 A AI"
 I
 
A G!	      
A @  (E AIr
 A !
@ 
AK
 
A@k!

 
 
 	At!	 AF@ @  (!	 
  j!
  (
!
# Ak"$  Aj 
( 1 - 	@# A k"
$  
Aj 
 $"E@ 
 
( 1 
Aj!
  	j!
 
- !
@@@ AO@ 
Ak! 
(
!@ A K
@ 
(" 
(O@ 
Aj
!


-- Chunk 78 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:11551-11700
  
("F
 
   k Av"  k I""k"6 
  Atk6
 
 (  6
 	 O r
 	 
 
(" 
(
" 
Atj"/ ;   	 - j" 
   - j" 
Atj"	/ ;   
  	- j"6
  	- j!	
 
 
 
(
"A K
 
(" 
(O@ 
Aj


  
("F
 
   k Av"  k I"k"6 
  Atk6
 
 (  6

 
 	k

 
AI
  
Ak! 
(
!@@ A K
 @ 
(" 
(O@ 
Aj
!

  
("F
 
   k Av"  k I""k"6 
  Atk6
 
 (  6
  	I r
  	 
 
( 
(
 
Atj"/ ;   
 
(
 - j"6
 	 - j!	


@  	I
 	 
 
( 
(
 
Atj"/ ;   
 
(
 - j6
 	 - j!	
 
 
@ 	 
O@ 
(
!	

 	 
 
( 
(
 
"
Atj"-  :   - AF@ 
(
 - j!	

 
(
"	AK
  	 
 
Atj- j"A  A I!	
 Al 	 
( 
(2!
 
A j$  

 	  
  

! Aj$  

 AM
  (!
 
  j!  (
!
# Ak"
$  
Aj 
( 1 
- 	@ 
    
 	

 
    
 	
! 
Aj$  

  Aj!
 
  j!
  A j!
  (! @ 
 
  
"	@ 	

  	K   	 
j  	k 
A



-- Chunk 79 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:11701-11850

A E
 Al E
  Av"  I At nA
At"
Aj( l 
Aj( j"Av j 
Aj(  
Aj(  ljI@ 
 
  
"
@ 


  
K   
 
j  
k 
 	A



 
 
  
"
@ 


  
K   
 
j  
k 
 	A



!  (AF@  Aj  (AkA  ("
Aj 
 Ak    (Aj6    (A k6
Al!	 
   6  A6    (6 AG
    A j6


A!@@@ 
AvAqAk  
A! 
Av

  /  Av

A! !AI
  Av
!A!	 E A Gq
 A AI"
 I
      
A !  j"
A jI@Al!	 
 !K
   j!  (!
@  (AF@ 
  Ak  Aj  jAkA

 
  
   6    (6 


  A 6   6     j"6    j6 


@@@ 
AvAqAk  
 
Av!
A

 !AI
  /  Av!
A

 !AI
  Av!
A
!A!	A  
 
 Al!	 
AK
 A!	 A AI" 
I
      
 A   j"	-  !  (!
@  (AF@ 
  
Ak  Aj 	-  A

 
  

   
6    (6 Aj!	
 	

A A AA-  
 

Al
"
"
     Aj( "  Kj  (k!
AAG@A A AA  
  (!  A  
 "j!
A!	@ ! k""E
  
-  "E@ %A 6
AA AF

 
Aj AtAu"
A N
  
AF@ AH
 
/ Aj! 
Aj

 AH
 
-  AtrAk! 
Aj
!
 % 6
 
Aj"
  
j"K
 Al!	  Aj   
-  "
AvA#A	 
  
kAAA  (  (   Aj"""
   A j  Aj 
AvAqAA 
A   j"

-- Chunk 80 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:11851-12000
  
kAAA  (  (  ""
   A0j  Aj 
AvAqA4A	 
A   j"
  
kAAA  (  (  "
   
j 
k!	
 	
"
@ 
!


 %(
! E Er@A!
 A J

 
AK"E@A   
AIr A	Hr

  (!A !	 %B 7 @@ @ ("
AK
 Aj!A !A !
@ 
 
vE@ %   
Atj- "  K"6 AO@ % 	Aj"	6 
 
Aj!



 % 	A 
kt6 


AA AA&  
  %( AK !  %(AKq
!  
k!
 
 
j!
  A 6 @ ! !# Ak"$   ("AF@  (

  j
!   ("	6  (!
@@@@@ E@ !


  (!  (!  (!  A6A !	@ 	AG@  	At"j   jAj( 64 	Aj!	


@@ @ 
A H
Al!
 Aj 
 
$
 A AH!  k!" A
j Aj"  ( 7 A$j   (7 A,j   (7 A4j! (
!A !@ A!O@ !
  N


@ (" (O@ Aj
!

 ("
 F@AA A I!

    
k Av"	  	k 
I""
k"	6   
Atk6
  	(  6
 AK  NrE@ (  (
Atj"
- "
AO
 (0 (,Atj"- "AO
 (( ($Atj"	- "A O

 	- ! - ! 
- ! 	/ !
 / !
 
/ !
 	(! 
(!	 (!
@@ AO@@ E AIrE@ Aj AkAt j!@ (
"A K
  (" (O@ Aj


  ("F
     k Av"&  &k I"k"6   Atk6
  (  6
 AjA j!

 Aj  j! (
"A K
  (" (O@ Aj


  ("F
     k Av"&  &k I"k"6   Atk6
  (  6
  (86<

 	E! E@ A4j" 	A GAtj!  Atj( !

 AjA  jj"AF@ (4Ak

 At j(4
"E j! AF
   (86<
 !
 ( !  64  68 @ Aj  
j!

@ 
 jAI
  (
"A K
  (" (O@ Aj


  ("F
     k Av"  k I"k"6   Atk6
  (  6
 
@ Aj 
 	j!	
@ (
"A K
  (" (O@ Aj
 (
!

  ("
F
     
k Av"  k 
I"k"

-- Chunk 81 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12001-12150
6  
(  6  Atk!
   j" j"6
  AtAj(  ("A  kvq 
j6
  AtAj(  A  kvq 
j6,@ A K
  (" (O@ Aj
 (
! (!

  ("
F
     
k Av"  k 
I"k"
6  
(  "6  Atk!
   j"6
  AtAj(  A  kvq 
j6$ A@k A
lj" 6  
6  	6  Aj! 	 "j 
j!"


 !
  H
A 

A A AA
  
A$A AA
  
A
!	@@ 	E@ (
!A!	

@@@ A!O@  L


@ (" (O@ Aj
!

 ("	 F@AA A I!

    	k Av"
  
k 	I""	k"
6   	Atk6
  
(  6
  L AKrE@ (  (
Atj"	- "
AO
 (0 (,Atj"- "AO
 (( ($Atj"- "A O

 - ! - !
 	- !
 / !
 / !& 	/ !) (! 	(! (!@@ AO@@ E AIrE@ Aj AkAt j!@ (
"	A K
  (" (O@ Aj


  ("F
     k 	Av"+  +k I"k"6  	 Atk6
  (  6
 AjA j!

 Aj  j! (
"	A K
  (" (O@ Aj


  ("F
     k 	Av"+  +k I"k"6  	 Atk6
  (  6
  (86<

 E! E@ A4j" A GAtj!	  Atj( !

 AjA  jj"AF@ (4Ak

 At j(4
"	E 	j! AF
   (86<
 !	
 	( !  64  68 @ Aj  j!
@ 
 jAI
  (
"	A K
  (" (O@ Aj


  ("F
     k 	Av"  k I"k"6  	 Atk6
  (  6
 
@ Aj 
 j!
@ (
"	A K
  (" (O@ Aj
 (
!	

  ("
F
     
k 	Av"  k 
I"k"
6  
(  6 	 Atk!	
  	 
j"
 
j"	6
  
AtAj(  ("A  
kvq )j6
  
AtAj(  A  	kvq &j6,@ 	A K
  ("
 (O@ Aj
 (
!	 (!

 
 ("F
   
 
 k 	Av" 
 k I"
k"6  (  "6 	 
Atk!	
  	 j"	6
  AtAj(  A  	kvq 
j6$@@@  (AF@ (" A@k Aq"
A
lj"
( "	j"
  ("K@  k"
@ 
  
kK
 
  

-- Chunk 82 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12151-12300
 
 	 
k"	6  
 
j!

   Aj")6  A 6 
E
$ A@k 
A
lj"
(!  Aj!
 
(!@@@ 	AJ
  
 	 j"
j"& A k"K
  
A j  
kM

 
  	   Aj 
   @!


 	A H
& 	 
N
'  &I
( 	 
j" K
) 
 )@ 	AI
  
Aj"  Aj"
kAkAaO
+  
 	AkAI
  
A j!@  
Aj Aj 
A j"
 A j" I
 

  k!  	 )j6  k I@  k I@Al!


    k"j"	 jO@  	 

  j!  	A  k k! !
  &K
+  I
, E
- AO@  kAkAaO
+   AH
  j! Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 


  K
.@ AM@  -  :    - :   - :   - :  Aj  At"	Aj( j".  	Aj( k!

  

 Aj"	 Aj"k"
AL
/ A	I
  	 &O
0  j! 
AM@@ 	 
 Aj! 	Aj"	 I
 

 
 	  AH
  Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 

 
@ 
!


 
 6  
 6 
 6 
 
j

 
E
 
A k"
 O
/ 
(! 
(!@@ 
 
I
  
 	 j"j"
 
K
  A j  
kM

 
  
 	   Aj 
   !

 	A H
0 	 N
1  
I
2 
 	 
j"
I
3 
 @ 	AI
  
Aj"
 Aj"kAkAaO
) 
  	AkAI
  
A j!	@ 	 Aj 	Aj A j" 	A j"	 
I
 

 
 k!  
6 
 k I@  
 kK
    k"j"	 jO@ 
 	 

  j! 
 	A  k k!
 !
 
 
K
4  I
5 E

-- Chunk 83 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12301-12450
6 AO@ 
 kAkAaO
) 
  AH
 
 j! 
Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 


  
K
,@ AM@ 
 -  :   
 - :  
 - :  
 - :  
Aj  At"	Aj( j".  	Aj( k!

 
 

 
Aj"	 Aj"k"
AL
- A	I
 	 
O
 
 j! 
AM@@ 	 
 Aj! 	Aj"	 I
 

 
 	  AH
 
Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 


 
E
" A@k AqA
lj"(! (!@@ ("
 ( "j"
 
K
  
  j"j"
 A k"
K
  A j  
kM

 
     Aj 
   @!

 A H
#  N
$  
I
% 
  
j"	I
& 
 
@ AI
  
Aj"
 
Aj"
kAkAaO
( 
 
 AkAI
  
A j!@  
Aj Aj 
A j"
 A j" 	I
 

  
6 	 k"  	 kM
  	 kM

Al!

    k"j"
 jO@ 	 
 

  j! 	 
A  k k!	 
! 	 
K
%  I
& E
' AO@ 	 kAkAaO
% 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
(@ AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  At"
Aj( j".  
Aj( k!

 	 

 	Aj"
 Aj"k"
AL
) A	I
  
 
O
 	 j! 
AM@@ 
 
 Aj! 
Aj"
 I
 

 
 
  AH
  	Aj!	@ 	 Aj 	Aj A j" 	A j"	 I
 

 @ !



 A@k AqA
lj" 6  6  6  
 j
!
 Aj!  "j j!"

  J

A~  k!
  Aj!  Aj!  Aj!" A k!  k!A !@@@@  L@@ AF

-- Chunk 84 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12451-12600
   At"jAj  j(46  Aj!
 
 
 A@k AqA
lj!  (AF@ (" ( "j"  ("
K@ 
 k"
@ 
  
kK

 
  
   
k"6  
 
j!

  "6  A 6 
E
" (!
 (!@@@ AJ
  
  j"
j"
 K
  
A j  
kM

 
    
 Aj    @!


 A H
$ 
 L
% 
 K
& 
 j"	 K
' 
 "@ AI
  
 
Aj"jAaO
)   AkAI
  
A j! !@  Aj Aj A j" A j" 	I
 

 	 
k!    jAj6 	 k 
I@ 	 k 
I@Al!


    k"j" jO@ 	  

  j! 	 A  k k!	 !
 	 
K
)  I
* E
+ 
AO@ 	 kAkAaO
) 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
,@ 
AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  
At"
Aj( j".  
Aj( k!

 	 

 	Aj" Aj"k"AL
- A	I
  
 M
. 	 j!
 AM@@  
 Aj! Aj" 
I
 

 
   AH
  	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 

 


 !
 
 
j

 
E

 A k" O
- (!
 (!@@ 
 I
  
  j"
j" K
  
A j  
kM

 
     
 Aj 
   !


 A H
. 
 L
/  I
0  
 j"	I
1 
 @ AI
  
Aj" Aj"kAkAaO
'   AkAI
  
A j!@  Aj Aj A j" A j" 	I
 

 	 
k!  6 	 k 
I@ 
 	 kK
    k"j" jO@ 	  

  j! 	 A  k k!	 !
 	 K

-- Chunk 85 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12601-12750
2  I
3 E
4 
AO@ 	 kAkAaO
' 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
*@ 
AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  
At"
Aj( j".  
Aj( k!

 	 

 	Aj" Aj"k"AL
+ A	I
  O
 	 j!
 AM@@  
 Aj! Aj" 
I
 

 
   AH
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


 
E
  (! (!@@ ("
 ( "j" 
K
  
  j"
j" K
  
A j  
kM

 
     Aj 
   @!


 A H
!  
N
"  I
#  
j"	 K
$ 
 
@ AI
  
Aj" 
Aj"
kAkAaO
&  
 AkAI
  
A j!@  
Aj Aj 
A j"
 A j" 	I
 

 	 k!  6 	 k I@  	 kK
    k"j"
 jO@ 	 
 

 	 
A  k k!	  j! !
 	 K
&  I
' E
( AO@ 	 kAkAaO
& 	  AH
 	 j!
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  	K
)@ AM@ 	 -  :   	 - :  	 - :  	 - :  	Aj  At"
Aj( j".  
Aj( k!

 	 

 	Aj" Aj"k"AL
* A	I
  O
+ 	 j!
 AM@@  
 Aj! Aj" 
I
 

 
   AH
 	Aj!	@ 	 Aj 	Aj A j" 	A j"	 
I
 


  (! (!	

Al!

 

 
 
j
!
 Aj!
 
 
A !	



#


 AF@A!
 
 	k"  
kK
 
 
 	  jA 
!
  Aj!
  Aj!	
A!
 
 	k"  
kK

-- Chunk 86 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12751-12900
 
 
 	  jA 
 k!


A!

 Aj$  


A A AA!  

&
!


  (AF@ 
!
 !	# A@j"$    ("6<  j!  (!@@@@@ "E@ !

  (!  (!  (!
  A6A !
@ 
AG@  
At"j   jAj( 6, 
Aj!



  
 
$
 Aj   ( 7 A
j   (7 A$j   (7 E
 ( (Atj"- "AO
 (( ($Atj"
- "
AO
 (  (
Atj"
- "A O
 
- ! 
- ! - ! 
/ ! 
/ ! / ! 
(! (!
 
(!@ AO@@ 	E AIrE@  AkAt j!@ ("A K
  (" (O@ 


  (
"
F
     
k Av""  "k 
I"k"
6   Atk6  
(  6 
 A j!


   j!
 ("A K
  (" (O@ 


  (
"F
     k Av""  "k I"k"6   Atk6  (  6 
  ),70

 
E! E@ A,j" Atj( !
   
A GAtj( 60

 A  jj"AF@ (,Ak

  Atj(,
"E j!
 AG@  (064
  (,60
  
6, 
@  
 j!
@ 
 jAI
  ("A K
  (" (O@ 


  (
"
F
     
k Av"  k 
I"k"
6   Atk6  
(  6 
 @   
j!

@ ("A K
  (" (O@ 
 (!

  (
"F
     k Av"
  
k I"k"6  (  6   Atk!
   j" j"6  AtAj(  ( "A  kvq j6  AtAj(  A  kvq j6$@ A K
  (" (O@ 
 (! ( !

  (
"
F
     
k Av"  k 
I"k"6  (  "6   Atk!
   j"6 AtAj(  A  kvq j! A,j! !@@@  6
 
 j"  ("K
  A k" O
&@@@  I
   
 j"
j" K
  
A j  kM

    
  
 A<j  
  !


 
A H
( 
 
L
)  I
*  
j" K

-- Chunk 87 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:12901-13050
+  @ 
AI
  Aj" Aj"kAkAaO
!   
AkAI
  A j!
@ 
 Aj 
Aj A j" 
A j"
 I
 

  
k!  6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K
,  
I
- E
. 
AO@  kAkAaO
!   AH
  j!
 Aj!
@ 
 Aj 
Aj A j" 
A j"
 
I
 


  K
$@ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
% A	I
  
 O
/  j! AM@@ 
 

 
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 

  
j! Ak"E
@ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"  k 
I"k"
6  
 Atk6  
(  6 
 ( (Atj"
- "AO
 (( ($Atj"
- "
AO
 (  (
Atj"- "A O
 - ! 
- ! 
- ! / ! 
/ ! 
/ !" (! 
(!
 
(!@@ AO@@ 	E AIrE@  AkAt j!@ ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
 A j!


   j!
 ("A K
  (" (O@ 


  (
"F
     k Av"
  
k I"k"6   Atk6  (  6 
  (064

 
E!
 E@ A,j" 
A GAtj!  
Atj( !


 A 
 jj"AF@ (,Ak

-- Chunk 88 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13051-13200

  Atj(,
"
E 
j!
 AF
   (064
 !
 ( !  
6,  60 
@  
 j!
@ 
 jAI
  ("
A K
  (" (O@ 


  (
"F
     k 
Av"  k I"k"6  
 Atk6  (  6 
 @   
j!

@ ("A K
  (" (O@ 
 (!

  (
"
F
     
k Av"  k 
I"k"
6  
(  6   Atk!
   j"
 j"6  AtAj(  ( "A  
kvq "j6  AtAj(  A  kvq j6$@ A K
  ("
 (O@ 
 (! ( !

 
 (
"F
   
 
 k Av" 
 k I"
k"6  (  "6   
Atk!
   j"6 AtAj(  A  kvq j! (<!


 A L
  k"@A!
   kK
    
 k!
  j!
   Aj"6<  A 6 E
 A k!  Aj!@@@ 
AJ
   
 j"
j" K
  
A j  kM

   
  
 A<j  
  @!


 
A H
 
 
L
  I

  
j" K

  @ 
AI
  Aj"  Aj"kAkAaO
   
AkAI
  A j!@  Aj Aj A j" A j" I
 

  
k!  
 j6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K
  
I
  E
! 
AO@  kAkAaO
   AH
  j!
 Aj!
@ 
 Aj 
Aj A j" 
A j"
 
I
 


  K
"@ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
# A	I
  
 O
  j! AM@@ 
 

 

-- Chunk 89 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13201-13350
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 

  
j! Ak"E
 @ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"  k 
I"k"
6  
 Atk6  
(  6 
 AH
 A,j!@ ( (Atj"
- "AO
 (( ($Atj"
- "AO
 (  (
Atj"
- "A O
 
- ! 
- ! 
- ! 
/ !" 
/ !
 
/ !
 
(!
 
(!
 
(!@ AO@@ 	E AIrE@  AkAt 
j!@ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"
  
k 
I"k"
6  
 Atk6  
(  6 
 A j!


   
j!
 ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
  (064

 
E!
 E@  
Atj( !
  
A GAtj

 A 
 
jj"AF@ (,Ak

  Atj(,
"
E 
j!
 AF
   (064
 
( !  
6,  60 @   j!
@  jAI
  ("A K
  (" (O@ 


  (
"
F
     
k Av"  k 
I"k"
6   Atk6  
(  6 
 @   
j!

@ ("A K
  (" (O@ 
 (!

  (
"F
     k Av"
  
k I"k"6  (  6   Atk!
   j" j"6  AtAj(  ( "A  kvq 
j6  AtAj(  A  kvq 
j6$@ A K
  (" (O@ 
 (! ( !

  (
"
F
     
k Av"  k 
I"k"6  (  "6   Atk!

-- Chunk 90 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13351-13500
   j"6  AtAj(  A  kvq "j6
@@@ (<" 
j" K
   
 j"
j" K
  
A j  kM

   
  
 A<j  
  @!


 
A H
 
 
L

  I

  
j" K

  @ 
AI
  Aj" Aj"kAkAaO
    
AkAI
  A j!
@ 
 Aj 
Aj A j" 
A j"
 I
 

  
k!  6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K
   
I
! E
" 
AO@  kAkAaO
    AH
  j! Aj!
@ 
 Aj 
Aj A j" 
A j"
 I
 


  K
#@ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
$ A	I
  
 O
  j! AM@@ 
 

 
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 

  
j! Ak"E
 ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
 
 
A !
@ ("A K
  ("
 (O@Al!
 
AO


 
 (
G
Al!
 A I

@ 
AG@   
At"jAj  j(,6  
Aj!



 (<!
@  (AG@ !


A!
  k"  kK

-- Chunk 91 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13501-13650
A !
 @    j!

  A 6  Aj!  Aj!
A!
  k"  
kK
 
 
   jA 
 k!


A A AA   
Al!

 A@k$  





!


 !	 !# A@j"$   (  (  j
!   ("
6< 
  (j!@@@@ 	E@ !

  (!  (!  (!
  A6A !
@ 
AG@  
At"j   jAj( 6, 
Aj!



Al!  
 
$
 Aj   ( 7 A
j   (7 A$j   (7 E
 A k! A,j! !@ ( (Atj"
- "AO
 (( ($Atj"
- "AO
 (  (
Atj"
- "A O
 
- ! 
- ! 
- ! 
/ !" 
/ !
 
/ !
 
(! 
(!
 
(!@@ AO@@ E AIrE@  AkAt j!@ ("
A K
  (" (O@ 


  (
"
F
     
k 
Av"
  
k 
I"k"
6  
 Atk6  
(  6 
 A j!


   j!
 ("
A K
  (" (O@ 


  (
"F
     k 
Av"
  
k I"k"6  
 Atk6  (  6 
  (064

 
E!
 E@ A,j"
 
A GAtj! 
 
Atj( !


 A 
 jj"AF@ (,Ak

  Atj(,
"
E 
j!
 AF
   (064
 !
 ( !  
6,  60 @   j!
@  jAI
  ("
A K
  (" (O@ 


  (
"F
     k 
Av"  k I"k"6  
 Atk6  (  6 
 @   
j!

@ ("A K
  ("
 (O@ 
 (!

 
 (
"F
   
 
 k Av" 
 k I"
k"6  (  6   
Atk!
   j"
 j"6  AtAj(  ( "A  
kvq 

-- Chunk 92 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13651-13800
j6  AtAj(  A  kvq 
j6$@ A K
  ("
 (O@ 
 (! ( !

 
 (
"F
   
 
 k Av" 
 k I"
k"6  (  "6   
Atk!
   j"6  AtAj(  A  kvq "j6
@@@ (<" 
j" K
   
 j"
j" K
  
A j  kM

   
  
 A<j  
  @!


 
A H
 
 
L
  I
  
j" K
  @ 
AI
  Aj" Aj"kAkAaO
   
AkAI
  A j!
@ 
 Aj 
Aj A j" 
A j"
 I
 

  
k!  6<  
k 
I@  k 
I@Al!


    
k"j"
 jO@  
 

  
A  k k!  j! 
!
  K

  
I

 E
 
AO@  kAkAaO
   AH
  j!
 Aj!
@ 
 Aj 
Aj A j" 
A j"
 
I
 


  K
 @ 
AM@  -  :    - :   - :   - :  Aj  
At"
Aj( j".  
Aj( k!

  

 Aj"
 Aj"
k"AL
! A	I
  
 O
"  j! AM@@ 
 

 
Aj!
 
Aj"
 I
 

 
 
 
 AH
  Aj!@  
Aj Aj 
A j"
 A j" I
 

 
@ 
!

  
j! (!
 	Ak"	@ 
A K
 (" (O@ 


  (
"
F
    
k 
Av"
  
k 
I"k"
6  
 Atk6  
(  6 


A !@ 
A K
  ("
 (O@ 

-- Chunk 93 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13801-13950
AO


 
 (
G 
A Ir

@ AG@   At"
jAj  
j(,6  Aj!


 (<!

A!  
k"  kK
    
  jA 
 k!
 A@k$  

A A AA
  


!

 %Aj$  


 ! ( kM     ! !AA  !
A


  -  !
 '("  kMAA   E
  
  A


"
  (@ ,  
 - !k!
   !j!
  j! '(E
 
  )"/BR@Al! /  $kR

 #  Aj( Aj! 
AI
  (E@ ,!/ 
(   /G

 
Ak!
 
Aj 

6
 # 
6  $k!
 'Aj$  .A  "
kA  A
Fq@A!


 

 
 *K
 * 
k! 
 $j!$A!. #(
! #(!


 # 6 # 6
A!
 
 $ k!


 # 6 # 6

 #Aj$  

A A AA=  
A9A AA=  
A	A A۴A=  
AA AA   
AA AA   
A5A AA   
A A AA   
A A AA   
A A AA   
A A AA   
AA AA   
A A A A
  
A A AA   
AA AA   
A A AA   
A$A AA   
A A AA   
A A AA   
A A AA!  
A A AA!  
A A AA!  
A A AA!  
AA AA!  
A A AA!  
AA AA!  
A A AA!  
A A AA!  
_A!  "O   jAk-  " AqAtAj(  j  AvA
qAj( j  A q"Ej Av  A IqjA

~# Ak"$  !@@ @A! E

  I@@ E AFr
  A
jAi% E
 A
j"     (  AiF
  A
j" AԴ%      (  ApqAԴF
 Av!

 !

  A A0! A!@ AF
  ! (  "AiF
 Av! ApqAԴG
A! AI
 ( !  A6   7 A !

   " K
    6Ar!  j"Ak-  "Aq
  A q"E@Ap! -  "AK
 AqB AvA
j"B~ |!	 Aj!
 Av! Av!@@@@ Aq"Ak 
  j-  ! Aj!

  j/  ! Aj!

  j(  ! Aj!
 Aq!~@@@@ Ak 
B E

-- Chunk 94 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:13951-14100
  j1  

  j3  B|

  j5  

  j)  
!   6    6
   7 A !  A 6    	 "7   B BT>
 Aj$  
A A AA   
  E@A 
A@!  (E@  Aj( !  Aj( !  (!    (   /A !  A 6  ("@ @ ( "@    /
    /
  A 6
     /
 
AA A "   A 6  A 6  A 6  A 6  B 7  A 6  A 6  B 7  A 6  A 6  A 6  B 7  A 6  (@AA A߭A  
  A 6  A 6  B 7  B 7  A 

   E@A A AA7  
  (
   E@A A AީA  
  (

# Ak"$  Aj  1 Aj$ 
 A qE@ ( 
  ! ! !# A k"$ Al!@ A
I
  /  !
 / ! / !	 Aj ( 1@  	 
 jjAj"
I
  AI  AjAv" j"  j"  j"   j"Kr
  - 
!
 A j Aj" 
$"
 A@k  
j" $"
 A(j  j" 	$"
 Aj  	j  
k$"
 Aj!
 Ak!@   kAI@  ! ! !

A!  ! ! !@   IqE
 
 (X"	 (\"
 
Atj"
-  !  
- :   
 (@"
 (D" 
Atj"-  !  - :   
 ((" (," 
Atj"-  !  - :   
 (" (" 
Atj"-  !  - :   
 	 
 j"	 
Atj"
- !  	 
-  j6\  :  
 
  j"	 
Atj"
- !
  	 
-  j6D  
:  
   j"	 
Atj"
- !
  	 
-  j6,  
:  
   j"	 
Atj"
- !
  	 
-  j6  
:  Aj! Aj! Aj! Aj!  A j
Eq A@k
Eq A(j
Eq Aj
Eq!
 
 
  I  Ir
 Al!   I
@  kAN@ Ak!
@ (\"	A K
@ (`" (hO@ A j
!

  (d"
F
    
k 	Av"  k 
I""
k"6`  	 
Atk6\  (  6X
  
O r
 
 (X (\" 
Atj"	- !
   	-  j6\  
:   
 (X (\" 
Atj"	- !
   	-  j6\  
:  Aj!
 
 
 (\"	A K
  (`" (hO@ A j


  (d"
F
     
k 	Av"
  
k 
I"k"
6`  	 Atk6\  
(  6X
@@ (\"	A K
 @ (`" (hO@ A j
!

  (d"
F
    
k 	Av"
  
k 
I""
k"
6`  	 
Atk6\  
(  6X
  M r
  
 (X (\" 
Atj"	- !
   	-  j6\  

-- Chunk 95 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:14101-14250
:   Aj!


@  K@ 
 (X (\" 
Atj"	- !
   	-  j6\  
:   Aj!


@  kAN@ Ak!	@ (D"A K
@ (H" (PO@ A@k
!

  (L"F
    k Av"
  
k I""k"
6H   Atk6D  
(  6@
  	O r
 
 (@ (D" 
Atj"- !   -  j6D  :   
 (@ (D" 
Atj"- !   -  j6D  :  Aj!
 
 
 (D"A K
  (H" (PO@ A@k


  (L"F
     k Av"	  	k I"k"6H   Atk6D  (  6@
@@ (D"A K
 @ (H" (PO@ A@k
!

  (L"F
    k Av"	  	k I""k"	6H   Atk6D  	(  6@
  M r
  
 (@ (D" 
Atj"- !   -  j6D  :   Aj!


@  K@ 
 (@ (D" 
Atj"- !   -  j6D  :   Aj!


@   kAN@  Ak!@ (,"A K
@ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
  O r
 
 (( (," 
Atj"- !   -  j6,  :   
 (( (," 
Atj"- !   -  j6,  :  Aj!
 
 
 (,"A K
  (0" (8O@ A(j


  (4"F
     k Av"  k I"k"60   Atk6,  (  6(
@@ (,"A K
 @ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
   M r
  
 (( (," 
Atj"- !   -  j6,  :   Aj!


@   K@ 
 (( (," 
Atj"- !   -  j6,  :   Aj!


@  kAN@@ ("A K
@ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  O r
 
 ( ("  
Atj"- !    -  j6  :   
 ( ("  
Atj"- !    -  j6  :  Aj!
 
 
 ("A K
  ("  ( O@ Aj


   (
"F
       k Av"   k I" k"6    Atk6  (  6
@@ ("A K
 @ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  O r
  
 ( ("  
Atj"- !    -  j6  :   Aj!


@  I@ 
 ( ("  
Atj"- !    -  j6  :   Aj!


 Al (\ (` (d2 (D (H (L2q (, (0 (42q ( ( (
2q!

Al!
 A j$  
 A qE@ ( 
  ! ! !# A k"$ Al!@ A
I
  /  !
 / !	 / ! Aj ( 1@   	 
jjAj"
I
  AI  AjAv" j"  j"  j"   j"Kr
  - 
!
 A j Aj" 
$"
 A@k  
j" 	$"
 A(j  	j" $"
 Aj  j  
k$"

-- Chunk 96 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:14251-14400
 Aj!
 Ak!@   kAI@  ! ! !

A!  ! ! !@   IqE
  
 (X"	 (\"
 
Atj"/ ;   - !
 - !  
 (@" (D" 
Atj"/ ;   - ! - !  
 ((" (," 
Atj"/ ;   - ! - !  
 (" (" 
Atj"/ ;   - !
 - !  j" 
 	 
 
j"	 
Atj"/ ;    	 - j6\ - !  j"	 
   j"
 
Atj"/ ;    
 - j6D - !  j"
 
   j"
 
Atj"/ ;    
 - j6, - !  j" 
   
j"
 
Atj"/ ;    
 - j6  j!  	j!  
j!  - j! A j
 A@k
r A(j
r Aj
rE!
 
 
  I  Ir
 Al!   I
@@  k"AO@ Ak!
 (\!@ A K
@ (`"	 (hO@ A j
!	

 	 (d"
F
  	 	 
k Av" 	 k 
I"	"
k"6`   
Atk6\  (  6X
  
O 	r
  
 (X (\ 
Atj"/ ;    (\ - j"	6\  - j"
 
 (X 	 
Atj"/ ;    (\ - j"6\ 
 - j!
 
 
 (\"
A K
 (`"	 (hO@ A j


 	 (d"
F
  	 	 
k 
Av" 	 k 
I"	k"
6`  
 	Atk6\  
(  6X

  k!
@ AI
  Ak!
 (\!@@ A K
 @ (`"	 (hO@ A j
!	

 	 (d"
F
  	 	 
k Av" 	 k 
I"	"
k"6`   
Atk6\  (  6X
  
K 	r
   
 (X (\ 
Atj"	/ ;    (\ 	- j"6\  	- j!


@  
K
  
 (X (\ 
Atj"/ ;    (\ - j6\  - j!
 
 
@  M
   
 (X (\ 
"Atj"-  :    - AF@ (\ - j

 (\"AK
  
 Atj- j"A  A I
6\
@@  k"AO@ Ak!	 (D!@ A K
@ (H" (PO@ A@k
!

  (L"F
    k Av"
  
k I""k"
6H   Atk6D  
(  6@
  	O r
  
 (@ (D 
Atj"/ ;    (D - j"6D  - j" 
 (@  
Atj"/ ;    (D - j"6D  - j!
 
 
 (D"A K
 (H" (PO@ A@k


  (L"	F
    	k Av"
  
k 	I"k"	6H   Atk6D  	(  6@

  k!
@ AI
  Ak! (D!@@ A K
 @ (H" (PO@ A@k
!	

-- Chunk 97 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:14401-14550

  (L"	F
    	k Av"
  
k 	I"	"k"
6H   Atk6D  
(  6@
  K 	r
   
 (@ (D 
Atj"/ ;    (D - j"6D  - j!


@  K
  
 (@ (D 
Atj"/ ;    (D - j6D  - j!
 
 
@  M
   
 (@ (D 
"Atj"-  :    - AF@ (D - j

 (D"AK
  
 Atj- j"A  A I
6D
@@   k"AO@  Ak! (,!@ A K
@ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
  O r
  
 (( (, 
Atj"/ ;    (, - j"6,  - j" 
 ((  
Atj"/ ;    (, - j"6,  - j!
 
 
 (,"A K
 (0" (8O@ A(j


  (4"F
    k Av"  k I"k"60   Atk6,  (  6(

   k!
@ AI
   Ak! (,!@@ A K
 @ (0" (8O@ A(j
!

  (4"F
    k Av"  k I""k"60   Atk6,  (  6(
  I r
   
 (( (, 
Atj"/ ;    (, - j"6,  - j!


@  I
  
 (( (, 
Atj"/ ;    (, - j6,  - j!
 
 
@   M
   
 (( (, 
"Atj" -  :     - AF@ (,  - j

 (," AK
   
 Atj- j" A   A I
6,
@@  k"AO@ (!@ A K
@ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  O r
  
 ( ( 
Atj" / ;    (  - j"6   - j" 
 (  
Atj" / ;    (  - j"6   - j!
 
 
 ("A K
 ("  ( O@ Aj


   (
"F
      k Av"   k I" k"6    Atk6  (  6

  k!
@ AI
  Ak! (!@@ A K
 @ ("  ( O@ Aj
!

   (
"F
      k Av"   k I"" k"6    Atk6  (  6
  I r
   
 ( ( 
Atj" / ;    (  - j"6   - j!


@  I
  
 ( ( 
Atj" / ;    (  - j6   - j!
 
 
@  O@ (!

  
 ( ( 
"Atj" -  :    - AF@ (  - j!

 ("AK
   
 Atj- j" A   A I!
 Al (\ (` (d2 (D (H (L2q (, (0 (42q  ( (
2q!

Al!
 A j$  
# A k"$   ( 1 - !	 Aj  $"E@ Aj!   j!
@ AN@ 
Ak! (
!@ A K
@ (" (O@ Aj
!

  ("F
    k Av"  k I""k"6   Atk6
  (  6
   O r
  (" (
" 	Atj"-  !   - :      j" 	Atj"- !   -  j"6
   :   Aj! 

-- Chunk 98 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:14551-14700
 
 
 (
"A K
  (" (O@ Aj


  ("F
     k Av"  k I"k"6   Atk6
  (  6
@@ (
"A K
 @ (" (O@ Aj
!

  ("F
    k Av"  k I""k"6   Atk6
  (  6
   
O r
   ( (
" 	Atj"- !   -  j6
   :    Aj! 


@   
I@  ( (
" 	Atj"- !   -  j6
   :    Aj! 


 Al (
 ( (2!
 A j$  

  At Atj    At j AFj
       6 
~# Ak"$ @@@@@@A  kt"	Ak 
@  F
 A
j -        (
6  Aj!  Aj! 
 
 
@  F
 Aj -        ("6   6  Aj!  Aj! 
 
 
@  F
   -     "7   7  Aj!  Aj! 
 
 
@  F
   -     "7   7   7   7  Aj!  A j! 
 
 
@  F
   	Atj! -     !@   FE@   7   7   7   7   A j! 


 Aj! ! 
 
 
 Aj$ 
	~# Ak"$  Aj  ( 1 - ! AjA A !	AT!@ A
K
  Aj"
 	 Aj A
j   A	j"E@ (
"
 K
 Aj! Aj!  Aj! 
!@ "Ak! 	 Atj( E
 
 Aj"
A 
AK!
A !A!@  
G@ 	 At"j( !  j 6  Aj!  j!


  6  
Atj 6  Aj!
A ! (!@  G@   
j-  Atj" ( "Aj6   
j :   Aj!


A ! A 6A
  A
K  
A
I" 
Asj!A!@  
G@ 	 At"
j( !  
j 6    jt j! Aj!


  
Aj"
 k"kAj!	@A!  	I@@  
G@ At"  A4ljj  j(  v6  Aj!


 Aj!


 Aj!	 
 k! 
 "k! A  A JAj!A!
@ 
 G@ 
 
k!  
At"j( !  j( !
  
Aj"
Atj( !   k"M@  j"A AJ!A t!  A4lj!@ 
 F
  Atj! 
 
j-  !@ "AH
   A A!
@@  k"Aq@  Atj( "A t"O
A !@@@ Ak 
  AF
A A AA   
 AN
  
7  Aj
 
7 

@  N
  Atj" 
7  
7  
7  
7  Aj!
 
 
A A AA   
A.A AA   
A A AŠA   
 	   	H!  
j!@  G@  k!   At"j( Atj 
  j( j 
  Aj"Atj( j   A


-- Chunk 99 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:14701-14850

 
Aj!
  j!
 
   Atj 
 
j 
 j  A A

 

 A:   :    (6 
 !
 Aj$  
	~# Ak"
$  
A 6
 
A 6@ A	j"  
Aj 
A
j   A j"
  
Aj  ( 1 
("!A ! 
- "	A
 	A
IAj" 
(
"O@  M
   k!@  F@ !@  M@@ E
  AtjA 6  Ak!
 
   Atj   kAtj( 6  Ak!

 
   j"
 A  
-  "
 
j:   Aj!

 
 
  
" 	AjM@  Aj!
A ! 
A :  
 :    
(6  A4j!  A A NAj!A !@  F@@ Aj! Ak!	A !@@A !  	N@    J!@  F
    j-  Atj" ( "Aj6   j :   Aj!
 
 @ AG@     j"
j-  Atj" ( "Aj6   j 
:   Aj!


 Aj!

 

 Aj"A AK! ( !A ! A!@  F
  k!	  Atj( !@@@@@@A tAu"
Ak 
A ! A  A J!  !@  F
 
 Atj"
   jj-  :  
 	:   Aj! Aj!
 
 
A ! A  A J!
  !@  
F
 
 Atj"   jj-  ":   :   	:    	:  Aj! Aj!
 
 
A ! A  A J!  !@  F
 
 Atj   jj-   	Aq( Aj! Aj!
 
 
A ! A  A J!  !@  F
 
 Atj"
   jj-   	Aq"( 
Aj ( Aj! Aj!
 
 
A ! A  A J!  !@  F
 
 Atj!A !   jj-   	Aq!@  
H@  Atj"
 ( 
Aj ( 
Aj ( 
Aj ( Aj!


  
G
 Aj!  
j!
 
 
 Aj!  j!  
l  j! 
 
 
  At"	j( !
   	j 6  Aj!  
j!


A-A AA#  
AT!
 
Aj$  
P1~# A0k"$ # A@j"	$  	 "; A  "|"9BT 9BTj 9BTjAlA "E
 A  A H
  A AI
A
lj"Aj( 68 	 Aj) 70 	 Aj) 7( 	 Aj) 7  A H@ 	A  Ax AxKk64
 	 	(86 	 	)07 	 	)(7 	 	) 7 # A k"$   	(6  	)7  	)7  	) 7 @@ E@ !:@ AK ;BVrE@A! ; j"A O@ AkAj!
 	( " M
 	 6  !

 	( !
 !@@ :P
  AO
B "9 : ;|Z
 A
! 9 :|"9BV
  9AkAj!
 

A A AҬA2  
! 	("
 	("
!! 	(" Aj"
K@ 	 
6 
!
  !I@ 	 
 j !k6
 A	M@ 	A
6 
@ 

-- Chunk 100 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:14851-15000
A|E
   	(
"A AI"A AK"I
  Ar"M
  	 6
  	) 7  	(6   	)7  	)7 A j$ 

A A AA)  
A2A AĭA)  
 	A@k$  A6$ B 7( ($AG@A A AA  
# A k"$   ( 6  )7  )7  )7  @AA AA)  
  Aj"
A A"
 ( 6
 
 )7 
 )7
 
 )7 
 )$7  
 (,6( 
 A "6, 
 ( AA (AKA
6 
 ( AOAA (AKA
6 
 ( AOAA (AKA
6T 
A 6 
AA A
H6 A j$   ! !:# A k"%$  % 
(
6 % 
)7 % 
)
7 % 
)7  %E@# A k"
$  
 
(
6H 
A@k 
)7  
 
)
78 
 
)70@@@@@@@@@@ 
A0jE@ A6 Aj 
A (E
 (E
 (" E
 ("
E
A!  AF@  ("
6 ("
E@ A6A!

 (E@ A 6
@@ ("E@  
Ak" A  AK"6 AO

 (E@ A  
 k"    
K6
  
   
K6

A A AA  
 ( (I
 (AK
 (!

 
B 5"9 : 9 :T" A  "    
K"& ( ("! 
 )7( 
 )7  
 )7 
Aj &! 
 Aj) 7 
 Aj) 7 
 Aj"
) 7  
(  
(kAyK AKrE@ (E!
 (A G! (!.# A0k""$  
"AB 5"9 : 9 :T :P"    K" ( "	At3! ( .A A (tAjA
! (! (AF@ (" A  AI!
A t!A3!!A3!
A3!
A3!A3!
A3! ( .| 3A 
!  .E@A%A AA:  
  AtjA tA  j  j 
 !j 
j j 
j jA  (AKj! " )7( " )7  " )7A "(
"
tAA  
 "( k"    
KtjA  "(AF! A !
A !
 (AF@ " )7 " )7 " )7  " A
l3!

 @ At3!

 "A0j$   j  j 
jA
A  j 
j j 	AljAj" @  !


 Aj!
 (E@ 
 
(
 
(A  
( AjA 
6 
A  ( (  O 
(
 
(   
( AJA 
E@ (
 
 ( ( ( (A@   ( ("E
  Aq@A A AA  
 
 6 
 6 
 6  
   j"6 
B 7$ 
 6 
 
A 6  
8A 
"

 ( (A E
  
A#"6 E
 Aj 
A#"6  E
  

-- Chunk 101 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15001-15150
A "
6A!A@! 
E


 
 Aj (6  Aj )7  Aj )7  Aj )7  B 7  :B|7 B 7  &6 Aj (AF6  Aj B 7 A6  (A !
A !
 ( ("A @A (t!

 (AF@ ("A AI!

@@ @ (!
 @ 
 

 
A 6 
 
6  
 
(  
(k"6 
 6
 
A 6 
A 6 
A 6 
 
(
6
 
- 

 
 
(6
 
8 
 
A 
t"
At6\ 
 
 
6d 
 
A 
tA  
6` 
- 
A@@@ 
("
 
(O@ 
 
(K
 
(
" 
K@ 
A   
k
 


A A AA
  
AA AA
  
 ( |@ 
 
 
A "
A"A?qE@@ E
   
("O
  
 A   k" 
  
I6
 

A A AA?  
6( 
 
)PB 
5XB7P ("
 ("A AI"A AK"I
 
 
 k6$
 (AO@ 
 
A46p 
 
A46t 
 
A46x 
 
A46| 
 
A46 
 
A46
 
 )7 
 (6 
 )7 
 )7A@A  
- 



A%A A԰A:  
AA A߰A:  
A2A AA:  
"
  
 At46 (AF@  
A (t"
4"6 A  
 
 A
l4!  6  6 Aj A 6
 (@ A
j &"6  A
j 
 At46 
 
 &A jA! A 6 A 6  &6  6 
A A! A 6  6  
A A6 (AF@  
A ( (kt"
A"6 A  

@ ( AG
  (AF
  B 7 AjA 6  AjB 7 
  6  
 A6  
 A6  
 A6 
(
 
(j 
(  
(jk"  AkO   OqE
 A6A !


-- Chunk 102 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15151-15300

AA AA)  
A%A AɱA)  
A$A AʱA)  
A%A A˱A)  
A A A̱A)  
A4A AбA)  
A A AѱA)  
AA AA)  
AA AA)  
A@!
 
A j$ @ 
  (! Aj!! Aj!  Aj!
 Aj! (! E AIrA   (  A~G@ !   
   A 

A !
 (  A~F@ ((E@ ( !

A !# Ak"$  A6| A6 A6 A6# Ak"$  A 6L A 6H# Ak" $  Aj A j A j A j Aj"
 Ak  !  Aj$  E@  (PA G6AT (L"A
K
AP (H"	 (AjK
 Aj!
  6 A!@  K@ Aj!A !@ 	 G@ 
 Atj  Aj j-  " kA   Aq Aj!


A ! A 68 B 70 B 7( B 7  A 6 B 7 B 7 B 7 @ 	 G@ A j 
 Atj( Atj"   / Aj;  Aj!


A ! At jA ;A !@ @  At" j ;  Ak!   A jj/  jAqAv!
@ 	 G@  
 Atj"( Atj"   / " Aj;     Aj!


  	Ak6

 A j Atj"( !   6    Akt j! Aj!



 
! Aj$  (E@ A6
Ab! @ A G (AIr"
  Aj A j Aj 
A   j"  j"	 k="

  ("A	O
  Aj AjA  A n"
  A46
 Aj A
j Aj A  
 j"
 	 
k="
  ("A	K
  Aj Aj (
"
  A n
  A#j Aj" 
A46  A#6
  A
j Aj 
 j"
 	 
k="
  ("
A	K
  Aj Aj (
" 
 A n
  A#j Aj A#6  
 j"A
j" 	K
   (  6# A#j ( 6  A#j ( 6 A! 	 k"
AwM@ 
Aj"A AI!
 A#j Aj (| 6 A !
@ 
AG@  
AtjA#j( "E
 
Aj!
  
M



  k! 
 Aj$      !A  
    j"   j  kA  
A 


A A AA	  


"
   6  6A !
 %A j$  

AA AA*  
" E@ ! "
!! "! AD!@@@@@@ "	(  
 !   	Aj 	)B} 	("*
   *I
 	A6  ! *j!!   *k! 
 E
 	Aj   	Aj( E@ 	A 6 	Aj 	Aj( 6 
 	(AF@ 	Aj  A 
  ! !@@ 	("AI@ 	(!  	(@ 	Aj  
 	Aj!.A t!
 	Aj!5 	Aj!0 	Aj! 	Aj!1 !!@@ @A AI
 1  .        K"
j"@@@ 0@ 5E
  1(k" 0( "I
@  
j O@  1(
F

 0A 6  5A 6 


A A AA  
A A AA  
A A AA  
 1  
 0 5 	(" 	(K@ 	 6
   O!@ 	(@@ 	  
" 
 @@  
 @ 	(
  	( 	(kAuAI 	( 	(kA
IqE
   
E
    -   
 

A !# Ak"6$  	Aj"# 	( 	Aj(  	Aj 6Aj 	("E@ 	(!7 	(!' 	(!+A !# A k"
$   j!
 
 "j!8 #(""Ak! 6Aj" ( AF!( 	(! #(!2 #(!3 #(!4 #(
!% #(!$A!, ! #( "-!
@@@@@@@@ " -G@ 
Aj # 
 Atj"  Aj! 

-- Chunk 103 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15301-15450
( j!A !/   G

 $ %K
  % $k" M!A!/  ! E

 ! # Ak"$  A6
@@@@  (   
 + A
j $   +
 ' + (
?!  (  (  j  
Aj! 

A A AA)  
A! 
 Aj$  /E    ( 2A  'Aj"A AAA
 +  ( 4A#  AjAAAA# +j  ( 3A4  AjAAAA4 +j! ,  ( j 
AjA
  jAjOq
 
A 6 
A 6A !# Ak"$  
"  Atj!A !
@   kA J@ Aj #    Aj!  (
 j! ( 
j!



@  
O@ /E  
Gq
 Aj$   j

A7A AA9  
A7A AA9  
!& 
 k!A !  Aj!A! (@  ( !
 Ak! 
A 6 E@   $A 

@@@@@@@  ( " 
   $ 

AA AA(  
 AAAAA  ("k KA k Mj"j!
 (E AGrE@ 
  Aj  (  (" j!

  j 
k!A ! AF@ 
  $  'G

 
  $  '
"E
 
 (A G   j"  IrE
    A KAA  AKjO
   M

   $ 

@@@@@ Ak 
   Atj  AtjAj%

   Atj  AtjA
j%   A
v: 

A A AA(  
  AGAt Atr j  Atj>
 
A6 
 j k!
 

A6A A֚A(  
"@ 

 A G /q!A !@ E
  'Aj!
  Aj!) 	(! 
A 6A! @  j  j"k"AH
  A O@ AM@  :   AvAs:   Aj

 A:   Aj AkAq0 Aj

  :  A!  E
 Aj
!  j! AK!  Aj!@ ,@  )(At )( Atj )(Atj:    )A
j )( )(j!

 A:  
   k 
Aj 3 
 2 
Aj 4 
   " 
 @ ,E
  )("E
    j"AK
 A !  AF
A A AߛA
  
   j!A !   kAH
  
A6  k! 
    
  E
      j k"AtjAk>
 
" 
  E   &Or
  &j" 8K
A  , 
(!,A  ( 
(!(  2j!2  3j!3  4j!4   j!  $j!$ 
 Atj!
A !A 

A A AӝA-  
AA AԝA-  
A A AA-  
 
! /E
 
 (@ ' 7A
 ,@A ! A!@  (AkAI
   (AkAI
   (AkAI!
 

@  8O
   
 k  8 k }" 
  E
   j! 
 "O
  
 7A#j( 6 
 7)#7@ 
 -K@ -( !  
 # - 
Aj   
( EF -Aj!-


 ' 
)7# 'A#j 

-- Chunk 104 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15451-15600
(6 
  k! 
 
A j$   

A A AA-  
!
 6Aj$  " AF
  
 	(!  
  E   
 kAjOr
  	Aj  

    
 }! 
  
" 
  	("A#j( AG
  A6#
  
  E
   
AjM
A8A AA,  
 	(" E@A$A AA   
  AF@ 	(AF@ 	  
"     AF@ 	(" A#j( AF@  A6#
    
 }

 ! ! ! 	( 	(kAu! A !A !A !
# A k"$ # Ak"
$  
A 6
 
 	Aj6  AO@ 
AjA    	 	Aj 
( 
(
"Atj  6 
 
Aj$   	("
A#j" ( 6  
)#7   ( 6  
)#7  	AjA A,! 	Aj!@@@ "
E@ 	  Aj     
 A " 
 	("AO
   AjM
A8A AA*  
 	Aj" A  	(A ! @ 
 O@ 
 A !A ! ( ( "kAu!@  G@   Atj/jAj! (( F@ Aj  ($AF!
 Aj!


 
j"j!
 
 F@ 
 j 
k! 

   	 Atj"Aj(  Aj( A 
! 	  Aj      A"@ ! 

  A,  	(AjK
 Aj!  j!  j!  k!   j! 


 	(" )7# A#j (6 
 A j$   

A A AA*  
A7A AA*  



A>A AA-  
" 
  
A !  	(AF
A A AA,  
 Aj! Ak!A ! @@@A 	 " 
"AFAt  
 	(@ 	 	AjA 

 	Aj 	( 	Aj(  	Aj   
 	( 	(!  	(  AKr
   
E
   -  :  A! 
    AIrE@ 	Aj
 	("A#j( AF@ A6#
  !
 
" 
 @@@   
    
 }" E


 
At!A

 !  At!A
  rr>  Aj! 
   K
 	A 6   k!  
k!   j! ! 
! 


  !K@ 	A6 
  !k! 
  

A A AA,  
A A AA,  
A:A AA,  
"
  	 	) |"97 	 	)  *j" |7 	(A  	)":P
A   9B| :V   :B R!
 

A	A AA*  
AA AA*  
 *
"@ 

  k!AD!  
j" !@@@@ 	(  
    	AjB A "
 	A6    j!  k!
A! AI
 A% Ak! Aj!
 	(@A! 	Aj!9 AI
  9% Aj!
 	A 6    k!
  
  	)!9@@ 	(@ 9B R
AA AA   
 9P

A 9 	)B|R

  j

! 

-- Chunk 105 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15601-15750
 A0j$   
=   A1     A Bьٟ~" B# |  Bьٟ~" B
  
   ($"O@A   M
 @ 
     ("6    ("6A@  A  kA?q"j"I
   6
   6 E
    6
   6$  8A 

A;A AA;  
K    ("Aj6    ( A tr6   &  (
"  (I   (k  (A GjA 

     Al

   A  
-@  (
AG
   (AG
   (   (kAF!
 
~# A k"	$  (T!
 	 (
6h 	 )7` 	 )
7X 	 )7P 	  )78 	A@k  )7  	  (6H 	  )70  j"Aj  AyK"! 
AF A Gq!
 	A j 	A0j@@@@@@Ay  "AO@ 	  )7( 	  )7  	  ) 7 	AjE
 
E
 	 )7 	 )7 	 ) 7  	E

    A  
E
   A   (0A   (k
6
# A0k"$  (! (\! (X!
 A j (`" (d A$j!
A  k!
  "j!A 
 ktAs!
@  I@A ! A 6
 A j   k 
 A
j! (
!@  G@    Atj($j"
M@ 
 
j" ! ( ! (!
  )d7  )\7  )T7  
   
q  k B  
 Aj!


  j!


 A0j$ 

    A 
 (
AM@A (
" ("  I"A
 A
It"   K"!  k  !
     ("k6
  A   k (06   (6h A	O@      @@@@@@ (
Ak	 
   

  (l@  (dE
 Ak!A !@  ("AI@   ("I@  (
"@   ("k"
A Ak"t"k   
I" 
A t"
k  
 
 kI"M@A  (tAk"A AI!  (\"
A t"Atj!  (d!  
  
K! A!I!@  F@A !
@@  G@A !A ! 
 Atj"!@ ( " I AKrE@ Aj!   Ij!   kAtj!


A ! AG
@  F@ !

  I@ E
 Aj"AK

  
Atj 6  Aj! 
Aj!
  I
   kAtj( !
 
 
@ 
 
M@@ @ 
 Ak"At"j( !A !@ AG@ 
  jAtjA 6  Aj!


 
 AtA
rj 6 


  (
" 
 
 I! A!I!@  G@ E
  j!A!@@@@@  (Ak 
  

  

  

  

  
At!@ @ 
  jAtj" Ak( 6  Ak!


 
 Atj 6  Aj!


   
6



A8A AA	  


  
 kAt jA  6  Aj!
 
 
 @  j!@@@@@  (Ak 
  


-- Chunk 106 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15751-15900
  

  

  

  
!  O@   kAtj 
 Atj( 6 
 
 Atj 6  Aj!




A&A AA	  
A A AA	  
A2A AA	  
A A AA	  


@@@ ( 
A%A AA  
  ((A A (
t@@@ Ak  ("
k"
  (
"O@A  ("A AI"A AK"tAs!  ((!  (\!  ($Aj"
A!I!  ("A AIAk!@  
G@ E
  
j!
  )P! @@@@  
 
 
 


 
 
 


 
 
 


 
 
 

"Av t"j"A   -  A j q" j":    )P!@@@@  
 
 
 


 
 
 


 
 
 


 
 
 

 G
  j :    Atj Atj 6  Aj!


   
6


A
A AA+  
A A AA   
A A AA'  


  (
" Ak"  ("k"  K!A  (tAs!
  (d!  (\!  ("
A!I!  ("Ak!@@  G@ E

  j!   
qAtj @@@@@  
  


  


  


  


  

Atj"( 6   6  Aj!


   6
 
A!O
	 AF@  


 


 Ak  ("k!  (!  (
!@@  O
     j   A ) j"I! ! 
 
AA AڂA,  
   6


A A AA  
   
     (k6

 	A j$ 
A A AA  
A A AA  
A A AA  
A A AA  
/   B 7
  A6  A6  A 6  A6 
:   A A " Bɡ 7   BӾǫB7  B 7
<    (6
  (!  A : 
   6  ($AO@  A6$
  8

     O
    k
  ( AF   (
nA 

   AAA  AFn

-- Chunk 107 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:15901-16050
@ Ak!  ("  (
j!  (\!  ("A!I!  (Ak!@@  " Aj"K@ E
   k! @@@@@  
   

   

   

   

   
Atj 6 




A A AA  

	@ Ak!  ("  (
j!  (!  (d!  (\!  ("A!I!	  (Ak! @@ Aj K
 	E
 @@@@@   
  

  

  

  

  
! A!I@  !
  Atj  k"6   
Atj 6  Aj!



A A AA  

     (tAtj
~  )!
  ) !	@@  Ar"M@    I!@  F@ !

  j! Aj! -  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
 


 Ar!@  j-  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
  !

 Ar!@  j-  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
  !

@  j-  AtAj)  	B|"	 
B R
   ( "Atj 6   Aj"6  A G
  !

 Aj!  j-  AtAj)  	B|"	 
B R
  ( "Atj 6   Aj"6  A G


   	7  
;   B7   B BB  A  A I"  k   IB  7
D @@@@  (Ak	 
   
A A AA
  
   

:   (k"  (
"AjK@     kAk" A  AIk6



   (  (
I
D  (!  (
  (     (
 Avj6
    (Aq6    (  Axqv6 
A @  jAk"AF@ E
  ( Ak
   Atj( 
A A AA  
-A! AO    AtjAj>   : AA

 Aj! Aj! Aj!@@  K
@  kAI
   (AK
          jAv"      !	  !
  !
 	
  

  
 
 
j 	Or
         (   ("Atj 6    Aj6 !



A
A AA   
# Ak"
$  
 (6 
 ) 7  	@@ ( ( kAu"! ($AF@ ((!
@@@ 
 G@ (  
Atj"( "
E
 /E 
 Gq!
@ 
"	AK
   
 
  
 
"	F@ ( !	

 	E
  	Aj"	6 
  	 
F  
 
F 
Aj!





A A AA
  
A A AA
  

A!	@ AI
    (  Aj(   Aj Aj Ak   (  ("	

-- Chunk 108 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16051-16200
   ( 	AKrE@A 	  !	
  Aj!  (@   A !	

@@@@ 	 
     }"	
  
) 7   
(6

   -    "	
  
) 7   
(6

    	AtjAj> 	Aj!	
 ( " A#j( AG
   A6#
 
Aj$  	
   (
      (
 j6


~# Ak"$  (!
 (  !
@@@@@@@@@@@@ (AO@   6      
 !   o

  ("  (
"K
   (K
  j"
A k!@@  M  
OrE@ 
 k!   (   ("A
lj") "7   (6@ @  (" (jO@   Aj6

@  K@   k"6  
O

 A 6 
    


A A AA   
 ( "E
  ("j"	 ("j" 
K
    A!      
 !@ @  Atj  Ak"Atj( 6 


  6  (
 ( ( kAuM
 ( "AO
 (
" j ( jK
	 	 
K
 	 k!@ 	 M@   AI
 (
"	Aj"
 Aj"kAkAaO

 
  A!H
  	j!
 	A j!@  Aj Aj A j" A j" 
I
 


   	 	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  (
!  (! !


 
 k!
          
 !
 Aj$  
A5A AA  
AA AA  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
A=A AA"  
^# A k"$    )7   )7   ) 7A Aj
 A   (" E
 AA  (l
!  A j$   
@ E
   ("  (
"  K!@  F
  ( " A
lj"(" O@   k6
 A 6  k" ("I@   k"6  O
  Aj"K@  A
lj"Aj ( j6 
   6
 A 6   Aj"6  k"
 


 @@@@@@  (  ( F@  ( (G
  ( (G
  (
 (
G
  ( (G
  ( (G
  ( (G

A2A AA  
A3A AA  
A3A AA  
A3A AA  
A1A AA  
A.A AA  
A
A AA  
m   (k!@   ( A 
 jM
   ("  k"I@   6 !
   (
K@   6

 @ A 6 
 E
  A 6 


-- Chunk 109 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16201-16350
@ E
     )  |7 @  (H" jAM@   jA(j    (H j!

  j! @  A(j" j A  k    ) 9'7    )  A0j9'7    )  A8j9'7    )   A@k9'7   (H!  A 6H  kA j!
  A jO@ A k!@    ) 9'7    ) Aj9'7    ) Aj9'7    )  Aj9'7  A j" M
 

  O
  A(j   k"
   6H

	@# A k"
$  Aj!  (
  ("
k!	  (  ( "k"Au!
 (
!  (!  (!  (!  	 
nAKA
! !
 ! 	! ! !	# Ak"$   A!@ 	
  (!	@ A N@ A
O
AAA	 k"A AIt 	AF

A A AA  
A A AA  
 K
 A A KAA AKj"	 O
  ("6
 	 
j  	k 
 AA
 A   A
j AKAt AIAtA  AIr A GAtr A GrAA AF 	AFq AIr"
 ! (
!@ E    kOrE@ E

  A

@ AG
  AM@ 
 E

  A 
  
 

 E@ A6
AA !
@@@@@ 	Ak 
 
 At Atj 
rAr%

 
 At Atj 
rA
r% 
 A
v: 

A A AޕA
  
 
AA   
r AtrAs Atj>
  	j

 
  
 
! Aj$ @@@@ "
   K
  
j!A! 
 j"
 kAH
  
 
A M@  
:   Aj

 
AM@  
:   
AvAs:   Aj

 A:   Aj 
AkAq0 Aj
"I
 Aj!	 E@ 	 AjA  
k!

 
Aj   
 Aj 	 Aj" 
    
("
   
(
At 
(Atj 
(Atj:   
(!   j" 
 k Aj  	  Aj   
 
(
"
   j" 
K
@  E
    j" AK
 A !  AF
A A AA+  
  
k!
 
A j$  

A	A AA+  
A A AA+  
A A AA+  
" E  AF  Mqr
   @  !

     (
kO
   "AI
 A A AA;  
 
# Ak"$   Aj!@@  ("  ("AjK@  ( ( "
kAu"	Aj"I
  ( Atj!
 (
 (k!
   ("A#j( 6  )#7 @  	G@ 
 Atj"( ! 
 Atj" /"6 /!
 A 6
  
Aj6 Ak!@@@@@  ((G
 @ ($Ak 
  
Aj6
 AO
  6
 
 AG
 ( Ak!


-- Chunk 110 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16351-16500
  Ar6 AK
  6

 At jAk( !

  Atj( !
  6    EF Aj! ( j!


  
K
 
 	Atj" 
 k6 B 7 A 6     ( j6 Aj$ 
A
A AA  
A A AA  
A A AܻA  
]@  ("  (O@   (K
   (
"I@   6
  8
A A AՅA'  
AA AօA'  
R@  ("  ("O@   (K
   6  8
A A AͅA  
AA A΅A  
@@@@@@@  AkqE@   ("k"A t"Ak"q"     Ij A AKA  AIj" qG
  O
  k"AM
    j6    ( j6  A  (" k  Aj"I"6  A  (
" k  K"6
  I
  kAM
  I
  I
    (Aj6 
A A AA  
AA AA  
AA AA  
A A AA  
AA AʐA  
A A AːA  
AA A͐A  
AA AΐA  
    (kAzK
# A k"$    )7   )7   ) 7 Aj @   ( (
A (t !   (\A (
t @ (
 (  (lE
 A (t!  (d! (
AF@ Am!	@ AqE@ A H
 Aj!
A !@  	G@ Aj!@  G@  Atj"AA  ( " k  
I AF6  Aj!


 Aj! !




A A AA+  
AϊA AA+  
   
  ( "@  (`A t 
   A 6  A 6  A   (
"  k"   I6

 A j$ 
 Aq"!@ AO@ Ak!B   '  BBޛ~Bꃱ }!  Aj!


  Aqk"AI  Ak! AF@# Ak"$  A
j A (
! Aj$  

 ( 
Bޛ~  BBӾǫB~B|!  Aj
!@ @ Ak! 1  Bٲ'~  B
Bޛ~!  Aj!


  B!  BӾǫB~" B
  B~" B   
/    6
   6  B 7     jAk6AA  AI
u~~  ) "B Z@  )"B  )"B|  )"B
|  ) "B| < < < <

  )Bٲ'|
!  |  A(j A 
 BV BVj BVjA  ( "! (!	 ((! ($!
 A  BQE@A!@ AI
 A  A G AKj AKj " 
A JAtjA A  A GA 	t Zq"r Atr!A ! ( E@  Ai%A!
   j :   Ar! E@   j 	AtA k:   Ar!
@@@@@  
A A AA!  
   j :   Aj!

   j Aq0 Aj!

   j % Aj!
@@@@@  
A A AA!  
 E
   j <   Aj
   j AkAq0 Aj
   j % Aj
   j ( Aj!
 
AA AA!  
>  ! !  AM@A A A A4  
 Aj"  Aj"   I
d Ak!  ! AM@A A A A*  
   k"  A
  "    K"    I" A  AK" A
  A
I

   A 6$    (6
    ( 6
3   (  !  A!O@A A AA   
  AlA  kv
   Bƕ˛O~ A  k
j A
M@ Aj!A !@  FE@   Atj" ( " v  rA Gj"6   j! Aj!


 
A A AA  
  A@k( @@  FE@  (   j-  Atj" ( Aj6  Aj!


    ( Atj6
  ( Atj" ( Aj6     (
Aj6
 "A O@A5A AA  
  (
 Atj" ( Aj6     ($Aj6$  ( AkEAtj" ( Aj6     ( Aj6 
@ A@k( E@A!

A
! (8AF
  (("AO@ Ak!A!@ AqE
 (   -  Atj( !  @ +

 *

-- Chunk 111 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16501-16650
" K  
k!A !
 
 
A A AA  
 
# Ak"$   A@k( !  A 68@@@@@@@@  (
E@ AM@  A68
  (<"E
 (AF@A !  A 68@ E
   ( E
A !  A 6@ AF
 AO@A A A A?  
  Atj("A
O
  (  AtjAA
 ktA "6     ( j6 Aj!  (<!
 
 
  Aj  A 6
 (!@ A$G@  "A
O
  ( AtjAA
 ktA "6     (
 j6
 Aj!


   (<AjA !  A 6  (!@ A5G@  "A
O
	  ( AtjAA
 ktA "6     (  j6  Aj!


   (<AjA !  A 6$ (!@ A F
  "A
O
	  (
 AtjAA
 ktA "6     ($ j6$ Aj!
 
 
  ( "E
 @ A6     ~    ( AAA 6
  (AA  AA$6
  (!A !@ A5G@  AtjA6  Aj!


  A56   (
AA  AA 6$

 @    ( AA
6
    (A#A
6
    (A4A
6     (
AA
6$
    Aj$ 
A A AA  
A A AA  
A5A AA  
A5A AA  
A5A AA  
A5A AA  
A A AA  
(  AtA   AkA  AI  AIAtjAj( 
   Ayl sA  kv
   B˛O~ A  k
   hAv
7  A O@A A AA   
  B˛O~ A  k
>@@@@@@@@@@@@@@  (Ak 
 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k! 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E
  !
 

A   k! Aj! 
 
 
Atj( "j!	A!@   Atj"( !   
k"6  
 
Atj 6  Aj" j(  !
  E 
 (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !
@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 
 
 
Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M

-- Chunk 112 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16651-16800
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 
Atj  
k6 
 E
	 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj"
6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 
 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  ! ! 


 !








 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k! 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E
  !
 

A   k! Aj! 
 
 
Atj( "j!	A!@   Atj"( !   
k"6  
 
Atj 6  Aj" j(  !
  E 
 (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !
@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 

-- Chunk 113 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16801-16950
 
 
 
 
Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 
Atj  
k6 
 E
 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  
K
@  M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj"
6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 
 ( kAuM

 ( "AO

 (
" ( jK

  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  ! ! 


 !








 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k!
 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E

  ! 


A   k! Aj! 
 
 Atj( "j!	A!@   Atj"( !   
k"6  
 Atj 6  Aj" j(  !  E  (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (

-- Chunk 114 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:16951-17100
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 
 
 Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 Atj  
k6 
 E
 (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  
K

@  
M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 ( ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  
M@  

    
	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  ! ! 


 !








 !  "(d! (\!
 " (
" ("  j"
 ("
k ("" 
j"F j" 
k! A  "( "        k"K"!  A  !A  ("  I"
! 
A k! 
Ak! ("A!I!
 ("A K!
@@@@@@@@  Aj"O@ 
E

  !
 


A   k! Aj! 
 
 
Atj( "j!	A!@   Atj"( !   
k"6  
 
Atj 6  Aj" j(  !
  E 

-- Chunk 115 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:17101-17250
 (  GrE@ Aj"  j 
!	 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; 	Aj"AM
 	Aj"AI
 ($E


  !
@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 
 
 
Atj( "j!	  I@ 
 j"(   (  F

  O@ Aj! Aj!
  "j" M
 

      6     A  
"     6 
 k

@  M
  	)   )  R
  Aj 	Aj 
Aj!  	k! !@ 	 M  Mr
 Ak"-   	Ak"	-  G
 Aj! !
 
 
 Aj Aj 
Aj!  k!@  M  Mr
 Ak"-   Ak"-  G
 Aj! !
 
 
 !
 AM@ 
 
Atj  
k6 
 E
 (
 ( ( kAuM
	 ( "AO
 (
"  k"j ( jK

  
K

@  M@   AI
 (
"Aj"	 Aj"kAkAaO
 	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM
 Ak"AI@  ! ! 

  ! !  ($

 A6$   ( kAu6(
  ;  Aj"
6  j"!  K
 
 
 Aj"j" Atj 6  
 Ak" Atj  
k6    Atj 6   Ak" Atj  
k6 @@  K
  "E (    k(  Gr
  Aj"  k 
!   Atj  
k"6  
  Atj 6  (
 
 ( kAuM
	 ( "AO
 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  ! ! 


 !








A A AA   
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A

-- Chunk 116 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:17251-17400
  
A=A AA"  
A A AA"  
b
@@@@@@@@@@@  (E@  (!  (AO@@@@@ Ak 
 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E

A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E
 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M
 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E

-- Chunk 117 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:17401-17550

A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E
 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M
 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E

A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 

-- Chunk 118 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:17551-17700
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"  ("
k  ("" 
j"Fj" 
k! "
( "A     	  k"K"!A   !A  
("  I"
!	  (" EjAj! 
Aj!
 A k! Ak!  ("A!I!
 !@@@@   j"Aj"K@ 
E
A  k! Aj!  ! Aj" ! 
 Atj( !
 !@ ! "  j"(  !  
 Atj  
k"6 @ A     (  FE@@@ 
 O@ 
 
j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   
k"6  
 O@ 
 
j(  

 (  As
 (  G
 AO

 
 Atj   
k6 
  
 
j"k"E

 Aj!A!

-- Chunk 119 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:17701-17850
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  
k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  !    j"M@ Aj! Aj!
 !  !  I
 

 
   6  
 	  A  
"      	6  k

 
!   
j  
j !	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  
k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k ! 
  Atj  
k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !



	




@@@@ Ak 
 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E

 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E
 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 

-- Chunk 120 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:17851-18000
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M
 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k 
! 
  Atj  k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E

 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	

-- Chunk 121 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18001-18150
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k 
! 
  Atj  k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


  !	 !








 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E
 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G

-- Chunk 122 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18151-18300
 Aj"   k 
! 
  Atj  k6  (
 ( ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj6  ! ! 
 
 


  !	 !



	




 !  (\!
  "  (
"  ("	  j"
  ("k  ("" j"Fj" k! "( "A     	  k"K"!A   !A  ("  I"!	 Aj!
 
A k! 
Ak!  ("A!I!
 !@@@@  Aj"K@ 
E
	 Aj!A  k!
 Aj!
A!  ! Aj" ! 
 Atj( !
@ ! "  
j"(  ! 
 Atj  k"6 @ A    (  FE@@@ 
 O@ 
 j(  

 (  As
 (  F@ !  ! !

 
 Atj"( !
   !   k"6  
 O@ 
 j(  

 (  As
 (  G
 AO

 
 Atj   k6 
  
 j"k"E

 Aj!A!
@  M  Mr
 Ak" -   Ak"	-  G
 
Aj!
 	!  !
 
 
 Ak-  !  Ak-  ! 
 Atj  k6 AA  F"!
  k!   k!A! ! 	

  j! 
 Atj( !
  ! 
   j"M@ 
Aj!
 Aj!
 !  !  I
 

    6   	  A  "      	6 
 k

 
!   
j  
j 
!	@ (
 ( ( kAuK@ ( "AO

 (
"  k"j ( jK
  
K
@  M@   AI
 (
"Aj" Aj"kAkAaO

   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    	
  (
 j6
@ AM@ (!

 ($

 A6$  (" ( kAu6(
  6   ; 	 
j"AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6 !  !	  j"!  K
  
j" M

 
  Atj Aj6  
 Ak" Atj  k6 A !	 !  E
@ !  K
 (     k(  G
 Aj"   k 
! 
  Atj  k6  (
  ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  j!  ;  Aj"6  ! ! 
 
 


-- Chunk 123 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18301-18450

  !	 !








A A AA  
A A AA   
A A AA  
A A A A
  
A=A AA"  
AA AA   
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
H@  E
 A@  (
  Aj  !   
     (  (  (/
A 


A
A A "     A 

8 @  AxM@  Av  jA  kA
vA   AIj" 

A! 
  
   

        A    	 


        A     	 

H~# A0k"$ ~B~    A 
 B  (AF
  ) 
! A0j$  B  
u"E@A@
      A A @@@@ (Aj 
A A AA  
 A 

 A 6
 (
!    
         A 
 
T# A
k"$  Aj" E@A A AA
  
      A A  !   A
j$   
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("  (
"j"kj"M@  ("
O@  (!
  (!	  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  j"k  K"A AIj"  I!A 
A 
AI"A AK"
t!  ((!
  (\!  ($Aj"A!I! 	A 	AI"A AK"
Ak!	 
Ak!@@  G@ E
  j!  )P!@@@@ 	 
   


   


   


   

!@    
  Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A  j"k!	@@@@@@  I@ Aj!A !@   	j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ 
Ak 
     
A
jR

     
A
jQ



@@@@ 
Ak 
     
A
jP

     
A
jO

     
A
jN



@@@@ 
Ak 
     
A
jM

     
A
jL

     
A
jK


-- Chunk 124 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18451-18600


     
A
jJ
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "	A{K
  Al 
kAj 	Aj"	AlN
 A!
 ! 	!
 
A6@@@@@  
@@@ 
Ak 
     
AjR

     
AjQ



@@@@ 
Ak 
     
AjP

     
AjO

     
AjN



@@@@ 
Ak 
     
AjM

     
AjL

     
AjK



     
AjJ
"	AI
  At 
kAj 	At 
("kN
  !
 	! "!

  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 
A6@@@@  
@@@ 
Ak 
     
AjR

     
AjQ



@@@@ 
Ak 
     
AjP

     
AjO

     
AjN



@@@@ 
Ak 
     
AjM

     
AjL

     
AjK



     
AjJ
"AI
  At 
kAj At 
("	kN
  	!
 ! "!


 
AI@ ! 


    
 jkAj" I"
 j! 
  
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 
Ak! 
! (
 ( ( kAuM
 ( "	AO
 (
"  k"
j ( 	jK
  K
@  M@   
AI
 (

-- Chunk 125 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18601-18750
"Aj"	 Aj"kAkAaO
 	  
A!H
  
j!	 A j!@  Aj Aj A j" A j" 	I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  j"k  K"A AIj"  I!
  ($Aj!  ((!
  (\!	@  
G@ A!O
  j!  )P!@@@@ 
Ak 
   


   


   


   

!@ 
Ak   
 	 Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ !
  K
    
 jk" I"
 j!  AsjAI
 (   (  G
 Aj Aj    
 ! (
 ( ( kAuM
 ( "
AO
 (
" ( 
jK
  K
 Aj!
@  M@  

    	
 ("A6  A ; 
AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  
j! ! 
!
 
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("	O@  (!
  (!
  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  
j"k  K"A AIj"  I!A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"
Ak!
 Ak!@@  G@ E
  
j!  )P!@@@@ 
 
   


   


   


   

!@    
  Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A 

-- Chunk 126 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18751-18900
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  
j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ Ak 
     
A
jR

     
A
jQ



@@@@ Ak 
     
A
jP

     
A
jO

     
A
jN



@@@@ Ak 
     
A
jM

     
A
jL

     
A
jK



     
A
jJ
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 
j 
 I"
"(   (  G
  Aj Aj    
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@@  
@@@ Ak 
     
AjR

     
AjQ



@@@@ Ak 
     
AjP

     
AjO

     
AjN



@@@@ Ak 
     
AjM

     
AjL

     
AjK



     
AjJ
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ 	! 

  
  
 
jkAj" I"	 j! 
  	!	@@  	M  Or
  Ak"-   Ak"-  G
  Aj! !


 ! 
Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"	j ( 
jK
  K
@  M@   	AI
 (
"Aj"
 Aj"kAkAaO

-- Chunk 127 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:18901-19050
 
  	A!H
  	j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   	; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  I!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!	  )P!@@@@ 
Ak 
 	  


 	  


 	  


 	  

!	@ Ak   
 
 	Av t"AtjA E
 
 j E
   AqAtj 	6, Aj!


  A 6
@ !	  K
  
  	 
jk" I" j!  AsjAI
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 	!
 
 
  	6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("O@  (!  (!  Ej!  j k!  A 6  (
"	 	A   j"
Ak"Aj"
 	 
j"k  K"A AIj"  	I!A A AI"A AK"t!  ((!  (\!  ($Aj"A!I! A AI"A AK"
Ak! Ak!
@@ 	 G@ E
 	 
j!  )P!@@@@  
   


   


   


   

!@ 
   
  Av t"AtjA E
  j E
   	AqAtj 6, 	Aj!	


  k! 
A k! 
Ak! Ak!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@ 
Ak 
@@@  
    
 
A
jR


-- Chunk 128 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19051-19200
    
 
A
jQ



@@@@  
    
 
A
jP

    
 
A
jO

    
 
A
jN



@@@@  
    
 
A
jM

    
 
A
jL

    
 
A
jK




    
 
A
jJ
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j! 
  !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO

 (
"  k"j ( 
jK

  
K

@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM
 	Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  	j!  (@  (
" A  
  
j"k  K"A AIj"  K!	  ($Aj!  ((!  (\!
@  	G@ A!O
  
j!  )P!@@@@  
   


   


   


   

!@    

 
 Av t"AtjA E
  j E
   AqAtj 6, Aj!


  A 6
@ !  K
  
   
jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(

-- Chunk 129 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19201-19350
  ;  Aj6  j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("  (
"j"kj"M@  ("
O@  (!
  (!	  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  j"k  K"A AIj"  I!A 
A 
AI"A AK"
t!  ((!
  (\!  ($Aj"A!I! 	A 	AI"A AK"
Ak!	 
Ak!@@  G@ E
  j!  )P!@@@@ 	 
   


   


   


   

!@    
  Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A  j"k!	@@@@@@  I@ Aj!A !@   	j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ 
Ak 
     
A
j[

     
A
jZ



@@@@ 
Ak 
     
A
jY

     
A
jX

     
A
jW



@@@@ 
Ak 
     
A
jV

     
A
jU

     
A
jT



     
A
jS
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "	A{K
  Al 
kAj 	Aj"	AlN
 A!
 ! 	!
 
A6@@@@@  
@@@ 
Ak 
     
Aj[

     
AjZ



@@@@ 
Ak 
     
AjY

-- Chunk 130 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19351-19500

     
AjX

     
AjW



@@@@ 
Ak 
     
AjV

     
AjU

     
AjT



     
AjS
"	AI
  At 
kAj 	At 
("kN
  !
 	! "!

  O
 @  Aj" k"	AsjAI
   	 kj 	 j 	 I"	"(   (  G
  Aj Aj    	 "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 
A6@@@@  
@@@ 
Ak 
     
Aj[

     
AjZ



@@@@ 
Ak 
     
AjY

     
AjX

     
AjW



@@@@ 
Ak 
     
AjV

     
AjU

     
AjT



     
AjS
"AI
  At 
kAj At 
("	kN
  	!
 ! "!


 
AI@ ! 


    
 jkAj" I"
 j! 
  
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 
Ak! 
! (
 ( ( kAuM
 ( "	AO
 (
"  k"
j ( 	jK
  K
@  M@   
AI
 (
"Aj"	 Aj"kAkAaO
 	  
A!H
  
j!	 A j!@  Aj Aj A j" A j" 	I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  j"k  K"A AIj"  I!
  ($Aj!  ((!
  (\!	@  
G@ A!O
  j!  )P!@@@@ 
Ak 
   


   



-- Chunk 131 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19501-19650
   


   

!@ 
Ak   
 	 Av 
t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ !
  K
    
 jk" I"
 j!  AsjAI
 (   (  G
 Aj Aj    
 ! (
 ( ( kAuM
 ( "
AO
 (
" ( 
jK
  K
 Aj!
@  M@  

    	
 ("A6  A ; 
AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  
j! ! 
!
 
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("	O@  (!
  (!
  Ej!  j k!  A 6  (
" A   j"Ak"Aj"
  
j"k  K"A AIj"  I!A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"
Ak!
 Ak!@@  G@ E
  
j!  )P!@@@@ 
 
   


   


   


   

!@    
  Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  k! A k! 
Ak!@A 
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  
j  I""
(   (  G
  Aj 
Aj     Aj!
 
A6
@@@@  
@@@ Ak 
     
A
j[

     
A
jZ



@@@@ Ak 
     
A
jY

     
A
jX

     
A
jW



-- Chunk 132 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19651-19800

@@@@ Ak 
     
A
jV

     
A
jU

     
A
jT



     
A
jS
"   K"
"AI
   
! 
(
A 
!
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 
j 
 I"
"(   (  G
  Aj Aj    
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@@  
@@@ Ak 
     
Aj[

     
AjZ



@@@@ Ak 
     
AjY

     
AjX

     
AjW



@@@@ Ak 
     
AjV

     
AjU

     
AjT



     
AjS
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ 	! 

  
  
 
jkAj" I"	 j! 
  	!	@@  	M  Or
  Ak"-   Ak"-  G
  Aj! !


 ! 
Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"	j ( 
jK
  K
@  M@   	AI
 (
"Aj"
 Aj"kAkAaO
 
  	A!H
  	j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   	; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  I!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!	  )P!@@@@ 
Ak 
 	  


 	  


 	  


-- Chunk 133 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19801-19950

 	  

!	@ Ak   
 
 	Av t"AtjA E
 
 j E
   AqAtj 	6, Aj!


  A 6
@ !	  K
  
  	 
jk" I" j!  AsjAI
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 	!
 
 
  	6  6  
Aj$   k
    k"AK6 Av jAj!



	
A A A A
  
A=A AA"  
 !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$ @@@@@@@@@@@ ( "  ("( " (" (
j"
k   ("
  (
"j"kj"M@  ("O@  (!  (!  Ej!  j k!  A 6  (
"	 	A   j"
Ak"Aj"
 	 
j"k  K"A AIj"  	I!A A AI"A AK"t!  ((!  (\!  ($Aj"A!I! A AI"A AK"
Ak! Ak!
@@ 	 G@ E
 	 
j!  )P!@@@@  
   


   


   


   

!@ 
   
  Av t"AtjA E
  j E
   	AqAtj 6, 	Aj!	


  k! 
A k! 
Ak! Ak!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@ 
Ak 
@@@  
    
 
A
j[

    
 
A
jZ



@@@@  
    
 
A
jY

    
 
A
jX

    
 
A
jW



@@@@  
    
 
A
jV

    
 
A
jU


-- Chunk 134 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:19951-20100
    
 
A
jT




    
 
A
jS
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j! 
  !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO

 (
"  k"j ( 
jK

  
K

@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM
 	Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  	j!  (@  (
" A  
  
j"k  K"A AIj"  K!	  ($Aj!  ((!  (\!
@  	G@ A!O
  
j!  )P!@@@@  
   


   


   


   

!@    

 
 Av t"AtjA E
  j E
   AqAtj 6, Aj!


  A 6
@ !  K
  
   
jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 



A.A AA   
A.A AA   
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"	$  (!
 ( !  A 6  (
" A   j"Ak"
   ("j"k  Ak"K"A AIj"  I!
A  ("A AI"A AK"t!
  ("  (
"j!   (j!   j" Fj!  ((!
  (\!

-- Chunk 135 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:20101-20250
  (!  ($Aj"A!I!  ("A AI"A AK"
Ak! Ak!@@@@@@@@@@@@  
G@ E
  j!  )P! @@@@  
    


    


    


    

!@    
 
 Av t"AtjA E

 
 j 
E

   AqAtj 6, Aj!


 A k! Ak! 
Ak!@@@@  I@  (  (  k"
Aj" !
 Aj!A !@   k"
kAI   
kKr
  (     
 I" 
j"
(  G
  Aj 
Aj     Aj!
 	A6
@@@@  

@@@ Ak 
     	A
jd

     	A
jc




@@@@ Ak 
     	A
jb

     	A
ja

     	A
j`


	
@@@@ Ak 
     	A
j_

     	A
j^

     	A
j]



     	A
j\
"   K"
"AI
   
! 	(
A 
!
@@  O
  
Aj!
 Aj!@ 
E@A !


  
 k"kAI  
  (  ( 
 kKr
  (       I"j"(  G
  Aj Aj     "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 	A6@@@@@  
@@@ Ak 
     	Ajd

     	Ajc




@@@@ Ak 
     	Ajb

     	Aja

     	Aj`




@@@@ Ak 
     	Aj_

     	Aj^

     	Aj]




     	Aj\
"AI
  At 
kAj At 	("kN
  
!
 !
 ! "!

  O
  
Aj!
 Aj!@ 
E@A !


  
 k"
kAI  
  (  ( 
 kKr

-- Chunk 136 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:20251-20400
  (   
   
 I"j"
(  G
  Aj 
Aj     "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 	A6@@@@  

@@@ Ak 
     	Ajd

     	Ajc




@@@@ Ak 
     	Ajb

     	Aja

     	Aj`




@@@@ Ak 
     	Aj_

     	Aj^

     	Aj]




     	Aj\
"AI
  At 
kAj At 	("
kN
  
!
 ! "!


 
AI@ 
!

    
 jkAj" I" j!   !
 
Ak!
@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  
6  6  	Aj$   k
    k"AK6 Av jAj!

 ! 
!
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
	  K
@  M@   
AI
 (
"Aj"
 Aj"kAkAaO
 
  
A!H
  
j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  j"k  K"A AIj"  K!
  ($Aj!  ((!
  (\!
@  
G@ A!O
  j!  )P! @@@@ 
Ak 
    


    


    


    

!@ Ak   	
 
 Av t"
AtjA E
 
 
j 
E
   AqAtj 6, Aj!


  A 6
@ !
  K
    k" 
k" I" j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO

-- Chunk 137 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:20401-20550
	 (
" ( jK
  K

 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"	$  (!
 ( !  A 6  (
" A   j"Ak"
   ("
j"k  Ak"K"A AIj"  I!
A  ("A AI"A AK"t!  ("  (
"j!   (j!
  
 j" Fj!  ((!
  (\!  (!  ($Aj"A!I!  ("A AI"A AK"
Ak! Ak!@@@@@@@@@@@@  
G@ E
  
j!  )P!@@@@  
   


   


   


   

!@    
  Av t"AtjA E

 
 j E

   AqAtj 6, Aj!


 A k! Ak! 
Ak!@@@@  I@  (  (  
k"Aj" !
 Aj!A !@   k"
kAI   
kKr
  (    
 
 I" 
j"
(  G
  Aj 
Aj     Aj!
 	A6
@@@@  

@@@ Ak 
     	A
jd

     	A
jc




@@@@ Ak 
     	A
jb

     	A
ja

     	A
j`


	
@@@@ Ak 
     	A
j_

     	A
j^

     	A
j]



     	A
j\
"   K""AI
   ! 	(
A !
@@  O
  Aj! Aj!@ 
E@A !


   k"
kAI    (  (  kKr
  (   
  
 
 I"j"
(  G
  Aj 
Aj     "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 	A6@@@@  

@@@ Ak 
     	Ajd

     	Ajc




-- Chunk 138 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:20551-20700

@@@@ Ak 
     	Ajb

     	Aja

     	Aj`




@@@@ Ak 
     	Aj_

     	Aj^

     	Aj]




     	Aj\
"AI
  At 
kAj At 	("
kN
  
!
 ! "!


 
AI@ 
!

  
  
 
jkAj" I" j! 
  !
 
Ak!
@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  
6  6  	Aj$   k
    k"AK6 Av jAj!

 ! 
!
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
	  K
@  M@   
AI
 (
"Aj"
 Aj"kAkAaO
 
  
A!H
  
j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  K!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!
  )P!@@@@ 
Ak 
 
  


 
  


 
  


 
  

!
@ Ak   	
 
 
Av t"AtjA E
 
 j E
   AqAtj 
6, Aj!


  A 6
@ !
  K
  
  
k" 
k" I" j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj     ! (
 ( ( kAuM
 ( "AO
	 (
" ( jK
  K

 Aj!@  M@  

    	
 ("A6  A ; AM


-- Chunk 139 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:20701-20850
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$  (! ( !  A 6  (
" A   j"	Ak"
   ("
j"k  	Ak"K"A AIj"  I!A  ("A AI"A AK"t!  ("  (
"j!   (j!
  
 j" Fj!  ((!  (\!
  (!  ($Aj"A!I!  ("A AI"A AK"
Ak! Ak!
@@@@@@@@@@@@  G@ E
  
j!  )P!@@@@  
   


   


   


   

!@ 
   
 
 Av t"AtjA E

  j E

   AqAtj 6, Aj!


 	A k! Ak! 
Ak! Ak!@@@  I@  (  (  
k"
Aj" !@   k"kAI   kKr
  Aj"(     
  I"j"(  G
  Aj Aj 	  	  Aj!A!


 
A6
@@@@ 
Ak 

@@@  
    	 
A
jd

    	 
A
jc


	
@@@@  
    	 
A
jb

    	 
A
ja

    	 
A
j`



@@@@  
    	 
A
j_

    	 
A
j^

    	 
A
j]



    	 
A
j\
"AM@    k"AK6 Av jAj!

 
(
"
AI@ !

  
 
 
kAj" I" j! 
  !
 
Ak!@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  6  6  
Aj$  	 k
 ! ! !
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"j ( 
jK
	  	K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO

-- Chunk 140 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:20851-21000
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A  
  
j"k  K"A AIj"  K!  ($Aj!  ((!
  (\!
@  G@ A!O
  
j!  )P!@@@@  
   


   


   


   

!@    	
 
 Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ !  K
  
  
k" k" I" j!  kAI   (  (  k Ir
 (   (  G
 Aj Aj 	  	  ! (
 ( ( kAuM
 ( "AO
	 (
" ( jK
  	K

 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! ! !
 
 


A A A A
  
A=A AA"  
 ! !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"	$   (!
  (!
   ("  (
"
j" Fj" k!
  (! (! ( !  (!  A 6  (
" A   j"Ak"  j"k  Ak"K"A AIj"  I!A    
 
  
 k"K"
!
 A  
!A    I"!
A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"Ak!
 Ak!@@@@@@@@@@@@  G@ E
  j!  )P!
@@@@ 
 
   



   



   



   


!@    
  Av t"
AtjA E

 
 
j E

   AqAtj 6, Aj!


 A k! Ak!@A  
k!@@@@@@  I@A ! 
E Aj" j(   (  GrE@ Aj"  j Aj!
 	A6
@@@@  
@@@ Ak 
     	A
jm

     	A
jl

-- Chunk 141 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21001-21150




@@@@ Ak 
     	A
jk

     	A
jj

     	A
ji




@@@@ Ak 
     	A
jh

     	A
jg

     	A
jf




     	A
je
"   K""AI
   ! 	(
A !
@@  O
  Aj!@ 
E@A !


 
E (    j(  Gr
  Aj"
 
 j "
A{K
  Al 
kAj 
Aj"
AlN
 A!
 ! 
!
 	A6@@@@@  
@@@ Ak 
     	Ajm

     	Ajl



@@@@ Ak 
     	Ajk

     	Ajj

     	Aji



@@@@ Ak 
     	Ajh

     	Ajg

     	Ajf



     	Aje
"
AI
  At 
kAj 
At 	("kN
  !
 
! "!

  O
  Aj!@ 
E@A !


 
E (    j(  Gr
  Aj"  j "A{K
  AtAr 
k Aj"AtN
 A!
 ! !
 	A6@@@@  
@@@ Ak 
     	Ajm

     	Ajl



@@@@ Ak 
     	Ajk

     	Ajj

     	Aji



@@@@ Ak 
     	Ajh

     	Ajg

     	Ajf




     	Aje
"AI
  At 
kAj At 	("
kN
  
!
 ! "!


 
AI@ 
! 


A 
k!
@@  O
   
j" M
  Ak"-   Ak-  G
  Aj! !

-- Chunk 142 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21151-21300


 
! 
Ak
!
 (
 ( ( kAuM
 ( "
AO

 (
"  k"
j ( 
jK

  K

@  M@   
AI
 (
"Aj"
 Aj"kAkAaO
 
  
A!H
  
j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   
; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A    j"k  K"A AIj"  I!
  ($Aj!  ((!
  (\!
@  
G@ A!O
  j!  )P!
@@@@ Ak 
   



   



   



   


!@ Ak   

 
 Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ "
E  Kr
 (    
k(  G
 Aj"  
k ! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! 
! 
!

 
 
  
  
6   
  A  "  
    
6 	Aj$   k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$   (!
  (!
   ("  (
"j" Fj" k!
  (! (! ( !  (!  A 6  (
" A   j"	Ak"  j"k  	Ak"K"A AIj"  I!A    
   
 k"K"!
 A  !A    I"!A 
A 
AI"A AK"t!  ((!
  (\!  ($Aj"A!I! 
A 
AI"A AK"Ak!
 Ak!@@@@@@@@@@@@  G@ E

-- Chunk 143 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21301-21450
  j!  )P!
@@@@ 
 
   



   



   



   


!@    
  Av t"
AtjA E

 
 
j E

   AqAtj 6, Aj!


 	A k! Ak!@A  
k!@@@@@@  I@A ! 
E Aj" j(   (  GrE@ Aj"  j 	Aj!
 
A6
@@@@  
@@@ Ak 
    	 
A
jm

    	 
A
jl




@@@@ Ak 
    	 
A
jk

    	 
A
jj

    	 
A
ji




@@@@ Ak 
    	 
A
jh

    	 
A
jg

    	 
A
jf




    	 
A
je
"   K""AI
   ! 
(
A !
@@  O
  Aj!@ 
E@A !


 
E (    j(  Gr
  Aj"  j 	"A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@@  
@@@ Ak 
    	 
Ajm

    	 
Ajl



@@@@ Ak 
    	 
Ajk

    	 
Ajj

    	 
Aji



@@@@ Ak 
    	 
Ajh

    	 
Ajg

    	 
Ajf




    	 
Aje
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ ! 



-- Chunk 144 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21451-21600
A 
k!@@  O
   j" M
  Ak"-   Ak-  G
  Aj! !


 
! 
Ak
!
 (
 ( ( kAuM
 ( "
AO

 (
"  k"j ( 
jK

  	K

@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A    j"k  K"A AIj"  I!  ($Aj!  ((!
  (\!
@  G@ A!O
  j!  )P!
@@@@ Ak 
   



   



   



   


!@ Ak   

 
 Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ "E  Kr
 (    k(  G
 Aj"  k 	! (
 ( ( kAuM

 ( "AO

 (
" ( jK

  	K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6  j! 
! !

 
 
  
  
6     A  "  
    6 
Aj$  	 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  
~# Ak"
$   (!  (!   ("  (
"
j" Fj" k!  (! (! ( !	  (!
  A 6  (
" A   j"
Ak"  j"k  
Ak"K"A AIj"  I!A  	 	  
   
k"K"
! 	A  
!A    I"!	A A AI"A AK"t!  ((!
  (\!  ($Aj"A!I!
 A AI"A AK"Ak! Ak!@@@@@@@@@@@@  G@ 
E
  j!  )P!
@@@@  
   



   




-- Chunk 145 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21601-21750
   



   


!@    
  Av t"
AtjA E

 
 
j E

   AqAtj 6, Aj!


 
A k!
 Ak! Ak!@A  k!@@@@@  O
 E Aj" j(   (  GrE@ Aj"  j 
Aj!A!
 

 
A6
@@@@ Ak 

@@@  
    
 
A
jm

    
 
A
jl




@@@@  
    
 
A
jk

    
 
A
jj

    
 
A
ji




@@@@  
    
 
A
jh

    
 
A
jg

    
 
A
jf




    
 
A
je
"AM@    k"AK6 Av jAj!


 
(
"
AI@ ! 

A 
k!	 !@@  O
   	j" M
  Ak"-   Ak-  G
  Aj! !


 !	 
Ak
! (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
	  
K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM

 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj6  j!  (@  (
" A    j"k  K"A AIj"  K!  ($Aj!  ((!
  (\!@  G@ A!O
  j!  )P!
@@@@  
   



   



   



   

-- Chunk 146 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21751-21900


!@    	
  Av t"AtjA E
 
 j E
   AqAtj 6, Aj!


  A 6
@ 	"E  Kr
 (    k(  G
 Aj"  k 
!	 (
 ( ( kAuM
 ( "AO
	 (
" ( jK
  
K

 	Aj!@  
M@  

    
	
 ("A6  A ; AM

 	Aj"	AO@ ($
 A6$   ( kAu6(
  	;  Aj6  j! !	 !
 
 
    6   	  A  "      	6 
Aj$  
 k
A A A A
  
A=A AA"  
 !
 
 
A A AA0  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
A A AA   
AA AA0  
A݃A AA0  

$# Ak"$ @@@@@@@@@@@@@ (AK@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA ) j"I!
 ! 

 
AA AڂA,  
  
6
 ("A!O
 (! (! (\  Atj"#( !	 (! (d! (
! ( (  k"
 (!
 AO
 A AI!$ ("( "
 ("
k"A (AktAs"
k ("  k 
K!%A  
A AktAs"k"  
K!  
A 
!& 
A	j! 
Aj!'  j!!A (t!  
 qAtj"Aj!
 (!" 
 
 k"k!( Aj! 
 k!) Aj!* Ak! 
  jk!+ !@  *G@ AF@ ( Ak

  Atj( 
! 
 I
 
 k!@ ) Ak"K@ A!  kA G 
 Kr
   k 

 
 
I
  AsjAI  +Or
 A  (j"AG
  Aj  
 !
Aj" M
   k"AO
   
Atj" 6  Aj6  
Aj!
  $K
 " j F

 Aj!


 # 
6 A !A !@@@@ A G E 	 &Ir
 	 
O

    K" 	j I

 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr
 !
  	 qAtj!@@@  
j-    j-  I@  	6  	  K
 A
j!

 
 	6  	  M
 !
 !

 ! Aj"!
 Ak! ( !	



-- Chunk 147 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:21901-22050
 A
j!

A
! 
A 6  A 6  AO

 E
 "A!O
  j!	  "! (\ Atj! (d!A !A !@ E
 ( " M
      I"j  
j"
 j  
 ! j"I@ 
  j"k"E
  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  %M
   
  	j  j I j-    j-  I"
!   
!   
qAtj 
Atj! Ak!
 
 
 
A 6  A 6 
  'M

  Ak6

 Aj$  

A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  

$# Ak"$ @@@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA ) j"I!
 ! 

 
AA AڂA,  
  
6
 ("A!O
 (! (\  Atj"#( !	 (! (d! (
! ( (  ("k"
 (!
 AO
 A AI!$ ("( "
 ("
k"A (AktAs"
k ("  k 
K!%A  
A AktAs"k"  
K!  
A 
!& 
A	j! 
Aj!'  j!!A (t!  
 qAtj"Aj!
 (!" 
 
 k"k!( Aj! 
 k!) Aj!* Ak! 
  jk!+ !@  *G@ AF@ ( Ak

  Atj( 
! 
 I
 
 k!@ ) Ak"K@ A!  kA G 
 Kr
   k 

 
 
I
  AsjAI  +Or
 A  (j"AG
  Aj  
 !
Aj" M
   k"AO
   
Atj" 6  Aj6  
Aj!
  $K
 " j F

 Aj!


 # 
6 A !A !@@@@ A G E 	 &Ir
 	 
O

    K" 	j I

 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr

-- Chunk 148 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22051-22200
 !
  	 qAtj!@@@  
j-    j-  I@  	6  	  K
 A
j!

 
 	6  	  M
 !
 !

 ! Aj"!
 Ak! ( !	


 A
j!

A
! 
A 6  A 6  AO

 E
 "A!O
  j!	 (\  "Atj! (d!A !A !@ E
 ( " M
      I"j  
j"
 j  
 ! j"I@ 
  j"k"E
  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  %M
   
  	j  j I j-    j-  I"
!   
!   
qAtj 
Atj! Ak!
 
 
 
A 6  A 6 
  'M

  Ak6

 Aj$  

A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  

$# Ak"$ @@@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA ) j"I!
 ! 

 
AA AڂA,  
  
6
 ("A!O
 (! (\  Atj"#( !	 (! (d! (
! ( (  ("k"
 (!
 AO
 A AI!$ ("( "
 ("
k"A (AktAs"
k ("  k 
K!%A  
A AktAs"k"  
K!  
A 
!& 
A	j! 
Aj!'  j!!A (t!  
 qAtj"Aj!
 (!" 
 
 k"k!( Aj! 
 k!) Aj!* Ak! 
  jk!+ !@  *G@ AF@ ( Ak

  Atj( 
! 
 I
 
 k!@ ) Ak"K@ A!  kA G 
 Kr
   k 

 
 
I
  AsjAI  +Or
 A  (j"AG
  Aj  
 !
Aj" M
   k"AO
   
Atj" 6  Aj6  
Aj!
  $K
 " j F

 Aj!


 # 
6 A !A !@@@@ A G E 	 &Ir
 	 
O

-- Chunk 149 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22201-22350

    K" 	j I

 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr
 !
  	 qAtj!@@@  
j-    j-  I@  	6  	  K
 A
j!

 
 	6  	  M
 !
 !

 ! Aj"!
 Ak! ( !	


 A
j!

A
! 
A 6  A 6  AO

 E
 "A!O
  j!	 (\  "Atj! (d!A !A !@ E
 ( " M
      I"j  
j"
 j  
 ! j"I@ 
  j"k"E
  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  %M
   
  	j  j I j-    j-  I"
!   
!   
qAtj 
Atj! Ak!
 
 
 
A 6  A 6 
  'M

  Ak6

 Aj$  

A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  
%# Ak"$ @@@@@@@@@@ @@@@@@@@@ (AI@ ("
 (
"j K

  
k!	@@  	O
    
j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!O
 (! (\  
Atj"&( !
 (!
 (d!
 (
! ( (  ("k"
 (! AO
 A AI!
 ("( "
 ("k"A (AktAs" k ("  k  K!'A  
A 
AktAs"!k"  
K!" A !# 
A	j! 
Aj!(  j!$A (t! 
 
 !qAtj"Aj!
 (!%   k"k!) Aj! 
 k!* Aj!+ Ak! 
  jk!, !@  +G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	k!@ * 	Ak"K@ A!  	kA G  Kr
   	k 

 
 I
  AsjAI  ,Or
 A  )j"	AG
  	Aj  
 $
Aj"	 M

-- Chunk 150 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22351-22500
   k"AO
   
Atj" 	6  Aj6  
Aj!
 	 
K
 	" j F

 Aj!


 AK
  (  (`  " #I
 
 k"AK
   j "AI
  
O
 

 E
   6   Aj6   
M@A!
  j G

A!
 
Aj


A
A AA)  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A A AރA
  
A A A߃A
  
A A AA
  
 !
 & 
6 A !A !	@@@@ A G E 
 #Ir
 
 
M
 	   	K" 
j I
 
 j! 
 O@   !

   j  j  j"I@ 
 O

 
 
k"E

  
j    
kK!   
Atj" 6  Aj6  
Aj!
  j F A Kr
 !
 
 
 !qAtj!@@@  j-    j-  I@  
6  
 "K
 A
j!

 
 
6  
 "M
 !
 !

 !	 Aj"!
 Ak! ( !



 A
j!

A
! 
A 6  A 6  AO
	 E
 %A!O

  j!
 (\  %Atj! (d!
A !	A !@ E
 ( " M
    	  	I"j  j" j  
 $ j"I@ 
  j"k"E

  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  'M
     
j  j I j-    j-  I"! 	  !	 
   qAtj Atj! Ak!
 
 
 
A 6  A 6 
  (M
	 Ak
6

 Aj$  

A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AA
  
A A AȄA
  
A A AA  


-- Chunk 151 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22501-22650
# Ak"$ @@@@@@@@@@@@ (AK@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA) j"I! ! 
 
AA AڂA,  
  
6
 ("
A!O
 (! (! (\!  
!
 (!	  
Atj"
( ! (d! (! (
!
 ( (  k"
 (! AO
 A AI!
A  
A 	AktAs"k"  
K! A ! 
A	j! 
 j! 
 j!
A (t!  
 qAtj"Aj! Aj! 
 k!  
 
k!! Aj!" Ak!
 !@  "G@ AF@ ( Ak

  Atj( 
!	 
 
I
 
 	k!@ ! 	Ak"K@ A!  	kA G  Ir
   	k 

 
 I
	 
 AsjAI   Or
 A  j"AG
  Aj  
 
Aj" 
M
   k"
AO
	   
Atj"	 6 	 
Aj6  
Aj!
  
K
 "
 j F

 Aj!


 
 
6 A !A !@@ E  Ir
  
O
	 
    I" jM@  j!  
O@   !


  j  j  j! 

  j"  !

    j  j  
  j" j 
I
!  
K@  O

 
 k"
E
  j    kK!   
Atj"	 6 	 
Aj6  
Aj!
 A K
 !
  j F

   qAtj!	@@@  j j-    j-  I@  6   K
 A
j!

  6   M
 	! !

 ! 	Aj"!	
 Ak! 	( !


 A
j!
 A 6  A 6  AO

 
Aj O

  Ak6

 Aj$  

A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  

# Ak"$ @@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!

-- Chunk 152 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22651-22800
@@  
O
    	j  
AA) j"I! ! 
 
AA AڂA,  
  
6
 ("
A!O
 (! (!	 (\  
Atj"
( ! (d! (! (
!
 ( (  ("k"
 (! AO
 A AI!
A  
A 	AktAs"k"  
K! A ! 
A	j! 
 j! 
 j!
A (t!  
 qAtj"Aj! Aj! 
 k!  
 
k!! Aj!" Ak!
 !@  "G@ AF@ ( Ak

  Atj( 
!	 
 
I
 
 	k!@ ! 	Ak"K@ A!  	kA G  Ir
   	k 

 
 I
	 
 AsjAI   Or
 A  j"AG
  Aj  
 
Aj" 
M
   k"
AO
	   
Atj"	 6 	 
Aj6  
Aj!
  
K
 "
 j F

 Aj!


 
 
6 A !A !@@ E  Ir
  
O
	 
    I" jM@  j!  
O@   !


  j  j  j! 

  j"  !

    j  j  
  j" j 
I
!  
K@  O

 
 k"
E
  j    kK!   
Atj"	 6 	 
Aj6  
Aj!
 A K
 !
  j F

   qAtj!	@@@  j j-    j-  I@  6   K
 A
j!

  6   M
 	! !

 ! 	Aj"!	
 Ak! 	( !


 A
j!
 A 6  A 6  AO

 
Aj O

  Ak6

 Aj$  

A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  

# Ak"$ @@@@@@@@@@@@ (AF@@ ("	 (
"j K
   	k!
@@  
O
    	j  
AA) j"I! ! 
 

-- Chunk 153 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22801-22950
AA AڂA,  
  
6
 ("
A!O
 (! (!	 (\  
Atj"
( ! (d! (! (
!
 ( (  ("k"
 (! AO
 A AI!
A  
A 	AktAs"k"  
K! A ! 
A	j! 
 j! 
 j!
A (t!  
 qAtj"Aj! Aj! 
 k!  
 
k!! Aj!" Ak!
 !@  "G@ AF@ ( Ak

  Atj( 
!	 
 
I
 
 	k!@ ! 	Ak"K@ A!  	kA G  Ir
   	k 

 
 I
	 
 AsjAI   Or
 A  j"AG
  Aj  
 
Aj" 
M
   k"
AO
	   
Atj"	 6 	 
Aj6  
Aj!
  
K
 "
 j F

 Aj!


 
 
6 A !A !@@ E  Ir
  
O
	 
    I" jM@  j!  
O@   !


  j  j  j! 

  j"  !

    j  j  
  j" j 
I
!  
K@  O

 
 k"
E
  j    kK!   
Atj"	 6 	 
Aj6  
Aj!
 A K
 !
  j F

   qAtj!	@@@  j j-    j-  I@  6   K
 A
j!

  6   M
 	! !

 ! 	Aj"!	
 Ak! 	( !


 A
j!
 A 6  A 6  AO

 
Aj O

  Ak6

 Aj$  

A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  


# Ak"$ @@@@@@@@ @@@@@@@@@@ (AI@ (" (
"j K

  k!
@@  
O
    j  
AA) j"	I!
 	! 

 
AA AڂA,  

-- Chunk 154 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:22951-23100
  
6
 ("	A!O
 (! (! (\  	Atj" ( !
 (d! (! (
! ( (  ("
k"
 (! AO
 A AI!
A  
A AktAs"
k"  
K!
 A ! 
A	j! 
Aj!! 
 j!  j!A (t!  
 
qAtj"Aj! Aj! 
 k!" 
 k!# Aj!$ Ak! !@  $G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	k!@ # 	Ak"K@ A!  	kA G  Kr
   	k 

 
 I
  AsjAI  "Or
 A  j"	AG
  	Aj   
Aj"	 M
   k"AO
   
Atj" 	6  Aj6  
Aj!
 	 
K
 	" j F

 Aj!


 AK
	 
 (  (`  " I
	 
 k"AK
	  O@   
j 

   j   
"AI
	  
O
 

 E
   6   Aj6   
M@A!
  j G


A!
 
Aj


A
A AA)  
A A AA  
A A AA
  
AA AA
  
AA AA
  
A A AÃA
  
A A AރA
  
A A A߃A
  
A A AA
  
 !
   
6 A !A !@@ E 
 Ir
 
 
O
     I" 
jM@ 
 
j! 
 O@   !

  j  j  j! 


 
 j"  !
  
  j  j    j" 
j I
!  I@ 
 O
 
 
k"E
	  
j    
kK!   
Atj"	 6 	 Aj6  
Aj!
 A K
 !  j F

  
 
qAtj!	@@@  
j j-    j-  I@  
6  
 
K
 A
j!

  
6  
 
M
 	! !

 ! 	Aj"!	
 Ak! 	( !



 A
j!
 A 6  A 6  AO
  !M
 Ak
6


-- Chunk 155 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:23101-23250
 Aj$  

A
A AA
  
A A AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
	# Ak"$ @ (AK@ (" (
"j K
  k!	@@  	O
    j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!I@ (! (! (\!	  
!
 (!
 	 
Atj"( ! (
! (d! ( (  k"
 (!
 AI@ A AI!A  
A 
AktAs"k"  
K! 
A 
! 
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !A !
@@@@@@@@@@@  
G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	AkK@ A!  	kA G 
 	k 
Ir

   	k Aj"	 M

  k"AO
   
Atj" 	6  Aj6  
Aj!
 	 K
 	" j F



 
 
O
AA AA
  
  
6 A !A !	@@ E  Ir
  
O
 	   	K" j I
  j!
  O@ 
  !

   j  
j  j"I@  O
 
 k"E
	  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

   qAtj!@@@  
j-    j-  I@  6   K
 A
j!

 
 6   M
 !
 !

 !	 Aj"!
 Ak! ( !


 A
j!

 
A 6  A 6  AO
  
M
  Ak6


AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  

-- Chunk 156 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:23251-23400

	# Ak"$ @ (AF@ (" (
"j K
  k!	@@  	O
    j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!I@ (! (!	 (\  
Atj"( ! (
! (d! ( (  ("k"
 (!
 AI@ A AI!A  
A 	AktAs"k"  
K! 
A 
! 
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !@@@@@@@@@@@  
G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	AkK@ A!  	kA G 
 	k 
Ir

   	k Aj"	 M

  k"AO
   
Atj" 	6  Aj6  
Aj!
 	 K
 	" j F



 
 
O
AA AA
  
  
6 A !A !	@@ E  Ir
  
O
 	   	K" j I
  j!
  O@ 
  !

   j  
j  j"I@  O
 
 k"E
	  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

   qAtj!@@@  
j-    j-  I@  6   K
 A
j!

 
 6   M
 !
 !

 !	 Aj"!
 Ak! ( !


 A
j!

 
A 6  A 6  AO
  
M
  Ak6


AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  

	# Ak"$ @ (AF@ (" (
"j K
  k!	@@  	O
    j  	AA ) j"
I!
 
! 

 
AA AڂA,  
  	6
 ("
A!I@ (! (!	 (\  
Atj"( ! (
! (d! ( (  ("k"
 (!
 AI@ A AI!A  
A 	AktAs"k"  
K! 
A 
! 

-- Chunk 157 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:23401-23550
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !@@@@@@@@@@@  
G@ AF@ ( Ak

  Atj( 
!	 
 I
 
 	AkK@ A!  	kA G 
 	k 
Ir

   	k Aj"	 M

  k"AO
   
Atj" 	6  Aj6  
Aj!
 	 K
 	" j F



 
 
O
AA AA
  
  
6 A !A !	@@ E  Ir
  
O
 	   	K" j I
  j!
  O@ 
  !

   j  
j  j"I@  O
 
 k"E
	  j    kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

   qAtj!@@@  
j-    j-  I@  6   K
 A
j!

 
 6   M
 !
 !

 !	 Aj"!
 Ak! ( !


 A
j!

 
A 6  A 6  AO
  
M
  Ak6


AA AA
  
A A AÃA
  
A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  


# Ak"$ @ (AI@ ("	 (
"j K
  	k!
@@  
O
    	j  
AA ) j"
I!
 
! 

 
AA AڂA,  
  
6
 ("
A!I@ (! (!
 (\  
Atj"( !	 (
! (d! ( (  ("k"
 (! AI@ A AI!A  
A 
AktAs"k"  
K! A ! 
A	j! 
Aj!
A (t!  
 qAtj"Aj!
 Aj! 
 k!
 Aj!
 Ak! !@@@@@@@@@ @@@@@@@  
G@ AF@ ( Ak

  Atj( 
!
 
 I
 
 
AkK@ A  
kAG 

-- Chunk 158 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:23551-23700
 
k Ir
   
k Aj"
 M
  k"AO
   
Atj" 
6  Aj6  
Aj!
 
 K
 
" j F


 
 O
AA AA
  
 AK
  (  (`  " I
 
 k"AK
   j "AI
  
O
 

 E
   6   Aj6   M@A!
  j G

A!
 
Aj

AA AA
  
A A AÃA
  
A A AރA
  
A A A߃A
  
A A AA
  
 !
  
6 A !A !@@ E 	 Ir
 	 
O
    K" 	j I
 	 j!
 	 O@ 
  !

   j  
j  j"I@ 	 O
 
 	k"E
  	j    	kK!   
Atj" 6  Aj6  
Aj!
 A K
 !  j F

  	 qAtj!@@@  
j-    j-  I@  	6  	 K
 A
j!

 
 	6  	 M
 !
 !

 ! Aj"!
 Ak! ( !	


 A
j!

 
A 6  A 6  AO
  
M
 Ak
6



A
A AA
  
AA AA
  
A A AA
  
A
A AA
  
A A AA
  
AA AA
  
A A AȄA
  
 Aj!
 
 
A A AA
  
A A AA  
A
A AA)  
 Aj$  

# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("
O@  (!  Ej!  j"
Ak!  A 6   j k"k! 
A k! A AI"A AKAk!@A 
 j"k!@@@@@@  I@ Aj!A !@   j"AsjAI
    kj  j  I""	(   (  G
  Aj 	Aj 
  
  Aj!
 
A6
@@@  
    
 
A
jr

    
 
A
jq

    
 
A
jp
"   K"	"AI

-- Chunk 159 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:23701-23850
   	! 
(
A 	!	@@  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  
    
 
Ajr

    
 
Ajq

    
 
Ajp
"AI
  At 	kAj At 
("kN
  !	 ! "!

  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  
    
 
Ajr

    
 
Ajq

    
 
Ajp
"AI
  At 	kAj At 
("kN
  !	 ! "!


 	AI@ 
! 


    	 jkAj" I"
 j!   
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 	Ak! 

! (
 ( ( kAuM
 ( "AO

 (
"
  k"
j ( jK

  
K
@  M@ 
  
AI
 (
"Aj" Aj"
kAkAaO
  
 
A!H
  
j! A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"	6  j!  (@  A 6
@ !
  K
    
 jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 	 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  
6  
6  
Aj$  
 k
    k"AK6 Av jAj!




A A A A

-- Chunk 160 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:23851-24000
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("O@  (!  Ej!  j"	Ak!  A 6   j k"k! 	A k! A AI"A AKAk!@A 
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj 	  	  Aj!
 
A6
@@@  
    	 
A
jr

    	 
A
jq

    	 
A
jp
"   K""AI
   ! 
(
A !
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 j 
 I"
"(   (  G
  Aj Aj 	  	 
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  
    	 
Ajr

    	 
Ajq

    	 
Ajp
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ ! 


    
 jkAj" I" j!   !@@  M  Or
  Ak"-   Ak"-  G
  Aj! !


 
! 
Ak
! (
 ( ( kAuM
 ( "
AO

 (
"
  k"j ( 
jK

  	K
@  M@ 
  AI
 (
"
Aj" Aj"
kAkAaO
  
 A!H
  
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  (@  A 6
@ !  K
     jk" I" j!  AsjAI
 (   (  G
 Aj Aj 	  	  ! (
 
 ( kAuM

 ( "AO

 (
" ( jK
  	K
 Aj!@  M@  

    	

-- Chunk 161 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24001-24150
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j! ! !
 
 
  6  
6  
Aj$  	 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@ ( "  ("( " (" (
j"k   ("
  (
"j"kj"M@  ("O@  (!	  Ej!  j"
Ak!  A 6   j k"k! 
A k! 	A 	AI"A AKAk!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@  
    
 
A
jr

    
 
A
jq

A A AA  
    
 
A
jp
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j!   !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK
	  
K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM

 	Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  	j!  (@  A 6
@ !  K
  
   
jk" I"	 j!  AsjAI
 (   (  G
 Aj Aj 
  
 	 ! (
  ( kAuM
 ( "AO
	 (
" ( jK
  
K

 Aj!	@  M@  

    	
 ("A6  A ; 	AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6  	j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 

-- Chunk 162 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24151-24300
A.A AA   
A.A AA   
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
       A
       A
# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("
O@  (!  Ej!  j"
Ak!  A 6   j k"k! 
A k! A AI"A AKAk!@A 
 j"k!@@@@@@  I@ Aj!A !@   j"AsjAI
    kj  j  I""	(   (  G
  Aj 	Aj 
  
  Aj!
 
A6
@@@  
    
 
A
j

    
 
A
j

    
 
A
j
"   K"	"AI
   	! 
(
A 	!	@@  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  
    
 
Aj

    
 
Aj

    
 
Aj
"AI
  At 	kAj At 
("kN
  !	 ! "!

  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  
    
 
Aj

    
 
Aj

    
 
Aj
"AI
  At 	kAj At 
("kN
  !	 ! "!


 	AI@ 
! 


    	 jkAj" I"
 j!   
!
@@  
M  Or
  Ak"-   Ak"-  G
  Aj! !


 	Ak! 

! (
 ( ( kAuM
 ( "AO

 (
"
  k"
j ( jK

  
K
@  M@ 
  
AI
 (
"Aj" Aj"
kAkAaO
  
 
A!H
  
j! A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   

-- Chunk 163 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24301-24450
; AM
 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"	6  j!  (@  A 6
@ !
  K
    
 jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 	 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  
6  
6  
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("
O@  (!  Ej!  j"
Ak!  A 6   j k"k! 
A k! A AI"A AKAk!@A 
 j"k!@@@@@@  I@ Aj!A !@   j"AsjAI
    kj  j  I""	(   (  G
  Aj 	Aj 
  
  Aj!
 
A6
@@@  
    
 
A
ju

    
 
A
jt

    
 
A
js
"   K"	"AI
   	! 
(
A 	!	@@  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  
    
 
Aju

    
 
Ajt

    
 
Ajs
"AI
  At 	kAj At 
("kN
  !	 ! "!

  O
 @  Aj" k"AsjAI
    kj  j  I""(   (  G
  Aj Aj 
  
  "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  
    
 
Aju

    
 
Ajt

    
 
Ajs
"AI
  At 	kAj At 
("kN
  !	 ! "!


 	AI@ 
! 


    	 jkAj" I"
 j!   
!
@@  

-- Chunk 164 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24451-24600
M  Or
  Ak"-   Ak"-  G
  Aj! !


 	Ak! 

! (
 ( ( kAuM
 ( "AO

 (
"
  k"
j ( jK

  
K
@  M@ 
  
AI
 (
"Aj" Aj"
kAkAaO
  
 
A!H
  
j! A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"	6  j!  (@  A 6
@ !
  K
    
 jk" I" j!  AsjAI
 (   (  G
 Aj Aj 
  
  ! (
 	 ( kAuM

 ( "AO

 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  
6  
6  
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@@ ( "
  ("( " (" (
j"k   ("  (
"j"kj"M@  ("O@  (!  Ej!  j"	Ak!  A 6   j k"k! 	A k! A AI"A AKAk!@A 
 j"k!
@@@@@@  I@ Aj!A !@   
j"AsjAI
    kj  j  I""
(   (  G
  Aj 
Aj 	  	  Aj!
 
A6
@@@  
    	 
A
ju

    	 
A
jt

    	 
A
js
"   K""AI
   ! 
(
A !
@@  O
 @  Aj" k"
AsjAI
   
 kj 
 j 
 I"
"(   (  G
  Aj Aj 	  	 
 "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  
    	 

-- Chunk 165 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24601-24750
Aju

    	 
Ajt

    	 
Ajs
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ ! 


    
 jkAj" I" j!   !@@  M  Or
  Ak"-   Ak"-  G
  Aj! !


 
! 
Ak
! (
 ( ( kAuM
 ( "
AO

 (
"
  k"j ( 
jK

  	K
@  M@ 
  AI
 (
"
Aj" Aj"
kAkAaO
  
 A!H
  
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j!  (@  A 6
@ !  K
     jk" I" j!  AsjAI
 (   (  G
 Aj Aj 	  	  ! (
 
 ( kAuM

 ( "AO

 (
" ( jK
  	K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j! ! !
 
 
  6  
6  
Aj$  	 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !
 !
 
 
A.A AA   
A.A AA   
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$ @@@@@@ ( "  ("( " (" (
j"k   ("
  (
"j"kj"M@  ("O@  (!	  Ej!  j"
Ak!  A 6   j k"k! 
A k! 	A 	AI"A AKAk!@A  
jk!@@@@@  O
@   j"AsjAI
    kj  
j  I""	(   Aj"(  G
  Aj 	Aj 
  
  Aj!	A! 

 
A6
@@@@  
    
 
A
ju

    
 
A
jt

A A AA  
    
 

-- Chunk 166 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24751-24900
A
js
"	AM@    k"AK6 Av jAj!


 
(
"AI@ ! 

  
  
 jkAj" I" j!   !
 !@@  
M  Or
  Ak"-   Ak"-  G
  	Aj!	 !


 ! Ak
! (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK
	  
K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  6   ; 	AM

 	Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  	j!  (@  A 6
@ !  K
  
   
jk" I"	 j!  AsjAI
 (   (  G
 Aj Aj 
  
 	 ! (
  ( kAuM
 ( "AO
	 (
" ( jK
  
K

 Aj!	@  M@  

    	
 ("A6  A ; 	AM

 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6  	j! ! !
 
 
  6  6  
Aj$  
 k
A A A A
  
A=A AA"  
 ! ! !
 
 
A.A AA   
A.A AA   
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
S"@@@@@@@@@@@@@@@@@@@  (Ak 
 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (
"j"k  
 
j"kj! (! (!	 ( !@  (E
 A 	t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"
Ak! Aj!
 	Aj!
 (d!! (\!   
k 
j"k!" 
A k! 
Ak!   Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! 
A!O
   
! 
A!O
   
!  AvAqj( "	 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @   Aj"
 k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 
 
 
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO

   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I

-- Chunk 167 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:24901-25050
 


     	
  (
 j6
@ AM@ (! 

 ($

 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R
  Aj Aj 
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   	Av"j" 
O
  L
  )    )  R
   Aj Aj 
 
 Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" !   
"	AvAqj( !  Atj"( !  
6 @  
K@  
j"	)   )  R
  A	j 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
  	
E
   Av"j"	 
O
  L
  	)   )  R
   A	j 	Aj 
 
 Aj! 
  jk!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   
 
 Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
   
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  
 k
	
  !
 E

 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj"	6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!   kAI
  (   (  G
  Aj Aj 
 
 
  ! (
 	 ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6   Atj 6    Atj 6   j! !  !


-- Chunk 168 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25051-25200

  ! ! 
 
 












 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (
"j"k  
 
j"kj! (! (!	 ( !@  (E
 A 	t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"
Ak! Aj!
 	Aj!
 (d!! (\!   
k 
j"k!" 
A k! 
Ak!   Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! 
A!O
   
! 
A!O
   
!  AvAqj( "	 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @   Aj"
 k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 
 
 
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO

   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($

 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R
  Aj Aj 
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   	Av"j" 
O
  L
  )    )  R
   Aj Aj 
 
 Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" !   
"	AvAqj( !  Atj"( !  
6 @  
K@  
j"	)   )  R
  A	j 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
  	
E
   Av"j"	 
O
  L
  	)   )  R
   A	j 	Aj 
 
 Aj! 
  jk!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   
 
 Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 

-- Chunk 169 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25201-25350
 
 
   
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  
 k
	
  !
 E

 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj"	6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!   kAI
  (   (  G
  Aj Aj 
 
 
  ! (
 	 ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6   Atj 6    Atj 6   j! !  !


  ! ! 
 
 

	

	

	



 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (
"j"k  
 
j"
kj! (! (! ( !@  (E
 A t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"	Ak! Aj!
 Aj! (d!! (\!
   
k 
j"k!" 	A k! 
Ak!  Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! A!O
   ! 
A!O
   
! 
 AvAqj( "
 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @  Aj"  k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 	 
 	  
! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  	K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R

-- Chunk 170 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25351-25500
  Aj Aj 	Aj!   k!@  
M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   
Av"j" 
O

  L
  )    )  R
   Aj Aj 	 
 
Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" ! 
  "
AvAqj( !  Atj"( !   6 @  
K@  
j")   )  R
  A	j Aj 	Aj!  k!@  
M  Mr
 Ak" -   Ak"-  G
 Aj!  !
 
 
  

E
   Av"
j" 
O
  
N
  )   )  R
   A	j Aj 	 
 
Aj!    
jk!@  M  Mr
 Ak" -   Ak"-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   	 
 
Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
   	Aj!   k!@  
M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  	 k
	
  !
 E

 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  	K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!  kAI
  (   (  G
  Aj Aj 	 
 	  
! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  	K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6   Atj 6    Atj 6   j! !  !


  ! ! 
 
 









 ! !  (!  (!  (d!  (\!  (
"  ( " "  ("
kj"  ("!
@  A tjM@  ("( "
 (" (

-- Chunk 171 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25501-25650
"j"k  
 
j"kj! (! (!	 ( !@  (E
 A 	t!A ! @   I@  A@k! 


A t!A ! @   O
  A@k! 
 
 
  M@  ("O@  j"
Ak! Aj!
 	Aj!
 (d!! (\!   
k 
j"k!" 
A k! 
Ak!   Ej!  A!I!#@@@@@   I@ #E
   ! A!O
   ! 
A!O
   
! 
A!O
   
!  AvAqj( "	 
! ! AvAqj( "$ 
!%  Atj"( !  Atj"( !    
k"6   6 @   Aj"
 k"kAI
    kj  
j  
I""&(    Aj"(  G
   Aj &Aj 
 
 
  ! (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
  A6    ; Aj"AM
 Aj"AI
 ($E


@  
K@  
j")    )  R
  Aj Aj 
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
 E
   	Av"j" 
O

  L
  )    )  R
   Aj Aj 
 
 Aj!   jk!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
@@@  
K@  
j"(    (  G


 %E
  $Av" L
   j"(    (  F

   kAu  jAj! 

  j!
  Aj" !   
"	AvAqj( !  Atj"( !  
6 @  
K@  
j"	)   )  R
  A	j 	Aj 
Aj!  	k!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
  	
E
   Av"j"	 
O

  L
  	)   )  R
   A	j 	Aj 
 
 Aj! 
  jk!@ 	 M  Mr
 Ak" -   	Ak"	-  G
 Aj!  !
 
 
 Aj!  Aj!  
I@   
 
 Aj!  k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
   
Aj!   k!@  M   Mr
  Ak"-   Ak"-  G
 Aj! ! 
 
 
  6  6  
 k
	
  !
 E
 (
 ( ( kAuM
 ( "AO
 (
"   k"j ( jK
  
K
@  M@    AI

-- Chunk 172 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25651-25800
 (
" Aj" Aj"kAkAaO
   A!H
   j!  A j! @   Aj  Aj A j"  A j"  I
 


     	
  (
 j6
@ AM@ (! 

 ($
 A6$  ("  ( kAu6(
   Aj6    ; AM
 Ak"AI@ ! !

 ! ! ($

 A6$    ( kAu6(
   ;   Aj"	6  j"!   K
   
 Aj" j" Atj  6   Ak" Atj  
k6    Atj  6   Ak"  Atj   
k6 @@ !   K
  " 
  
k"  k" 
I" j!   kAI
  (   (  G
  Aj Aj 
 
 
  ! (
 	 ( kAuM
 ( "AO
 (
" ( jK
  
K
 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6   Atj 6    Atj 6   j! !  !


  ! ! 
 
 









A A AA   
A A AA   
A A AA   
A.A AA   
A.A AA   
A
A AA   
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
J#@@@@@@@@@@@@@@@@@  (@@@@@  (Ak 
 ! !@  "j"	  "("
 (
"
j"kA (tM@ ("( " ("k" 
M@   kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ 	Ak! Aj! (\! (\!  Ej! 
Aj!#  
 k"
k!$ 	A k!
 
Ak!
 ("A!I!% !@@@  j" K
  %E A!Or
A  k!
 Aj!
  !   "AvAqj( " 
! !@@@  Atj"( ! " !  !    
k"6 @ 
  
j"kAI
    
kj  
j  
I"&"'(   Aj"(  G
  Aj 'Aj 	  	 & ! (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  	K
@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
" 
  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
" A6$  (" ( kAu6(
 A6   ; Aj"AM

 Aj"AI
 ($E


@ E
  Av" !M
   j"(   (  G 
 Ir
  Aj Aj 	  Aj!   
jk! !@@  "M  Mr
  Ak"-   Ak"-  G
  Aj! !

-- Chunk 173 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25801-25950


 E
 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  	K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
"   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
" A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@ 
 O
  
 j"(   (  G
  Aj Aj 	Aj!  k! !@@  M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM

 ( "AO

 (
"  k"j ( jK

  	K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
"   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
" A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
! !


 A6$   ( kAu6(
  ;  Aj"6  j"!  K
  #j" M
   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" 
I" j! 
 kAI
 (   (  G
 Aj Aj 	  	  ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K

 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6   Atj 6   j!  ! ! 
 
 
  6   6  	 k

 ! !
 
 


















 ! !@  "j"	  "("
 (
"
j"kA (tM@ ("( " ("k" 
M@   kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ 	Ak! Aj! (\! (\!  Ej! 

-- Chunk 174 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:25951-26100
Aj!#  
 k"
k!$ 	A k!
 
Ak!
 ("A!I!% !@@@  j" K
  %E A!Or
A  k!
 Aj!
  !   "AvAqj( " 
! !@@@  Atj"( ! " !  !    
k"6 @ 
  
j"kAI
    
kj  
j  
I"&"'(   Aj"(  G
  Aj 'Aj 	  	 & ! (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  	K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
! 
  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
! A6$  (" ( kAu6(
 A6   ; Aj"AM

 Aj"AI
 ($E


@ E
  Av" !M
   j"(   (  G 
 Ir
  Aj Aj 	  Aj!   
jk! !@@  "M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
!   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
! A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@ 
 O
  
 j"(   (  G
  Aj Aj 	Aj!  k! !@@  M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO

 (
"  k"j ( jK

  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
!   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
! A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
! !


 A6$   ( kAu6(
  ;  Aj"6  j"!  K
  #j" M

-- Chunk 175 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:26101-26250
   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" 
I" j! 
 kAI
 (   (  G
 Aj Aj 	  	  ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6   Atj 6   j!  ! ! 
 
 
  6   6  	 k

 ! !
 
 


















 ! !@  "j"  "("
 (
"j"
kA (tM@ ("( " ("k"
 M@   
kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ Ak! Aj! (\! (\!  Ej! 
Aj!#   
k"k!$ A k!
 Ak!
 ("A!I!% !@@@  j" K
  %E
  !
 A!O
A  k!
 Aj!
   "AvAqj( " 
!	 !@@@  
Atj"( ! " !
  !    
k"6 @ 
  
j"kAI
    kj  
j  I"&"'(   Aj"(  G
  Aj 'Aj    & 
!
 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK

  K

@  
M@   AI
 (
"Aj"	 Aj"kAkAaO
  	  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
  A6$  (" ( kAu6(
 A6   ; 
Aj"AM

 
Aj"AI
 ($E


@ 	E
  Av" !M
   j"	(   (  G  Ir
  Aj 	Aj   
Aj!   jk! !@@ 	 "M  Mr
  Ak"-   	Ak"	-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK

  K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
  
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    
	
  (
 j6

-- Chunk 176 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:26251-26400
@ AM@ (!

 ($
  A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@  O
  
 j"	(   (  G
  Aj 	Aj Aj!  	k! !@@ 	 
M  Mr
  Ak"-   	Ak"	-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "
AO
 (
"  k"j ( 
jK

  K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
  
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    
	
  (
 j6
@ AM@ (!

 ($
  A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
!	 !


 A6$   ( kAu6(
  ;  Aj6  j"!  K
  #j" M
   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" I" j! 
 kAI
 (   (  G
 Aj Aj     
! (
 ( ( kAuM
 ( "AO
 (
" ( jK
  K
 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj6   Atj 6   j!  ! ! 
 
 
  6   6   k

 ! !
 
 


















 ! !@  "j"	  "("
 (
"
j"kA (tM@ ("( " ("k" 
M@   kj  (
"!j""k! (! ( ! @ (E
 A t!@  M
 A@k!
 
 
   M@  ("O@ (" Ej"@ 	Ak! Aj! (\! (\!  Ej! 
Aj!#  
 k"
k!$ 	A k!
 
Ak!
 ("A!I!% !@@@  j" K
  %E A!Or
A  k!
 Aj!
  !   "AvAqj( " 
! !@@@  Atj"( ! " !  !    
k"6 @ 
  
j"kAI
    
kj  
j  
I"&"'(   Aj"(  G
  Aj 'Aj 	  	 & ! (
 ( ( kAuM
 ( "AO

-- Chunk 177 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:26401-26550
 (
"  k"j ( jK
  	K

@  
M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
 A6   ; Aj"AM

 Aj"AI
 ($E


@ E
  Av" !M
   j"(   (  G 
 Ir
  Aj Aj 	  Aj!   
jk! !@@  "M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


@ 
 O
  
 j"(   (  G
  Aj Aj 	Aj!  k! !@@  M  Mr
  Ak"-   Ak"-  G
  Aj! !


 E
 (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  	K

@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  Aj6   ; AM

 Ak"AI@  ! ! 

  ! !  ($E


    
O"j"j" K
 
 Atj!
   AvAqj( "  
! !


 A6$   ( kAu6(
  ;  Aj"6  j"!  K
  #j" M

   Atj Aj6   Ak" Atj  
k6 @ !  K
 $ 
  
k" k" 
I" j! 
 kAI
 (   (  G
 Aj Aj 	  	  ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
 Aj!@  
M@  

    
	
 ("A6  A ; AM
	 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"6   Atj 6   j!  ! ! 
 
 
  6   6  	 k

-- Chunk 178 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:26551-26700

 ! !
 
 


















A A AA:  
A A AA   
A A AA   
AA AA   
A A AA   
A.A AA   
A.A AA   
AA AA   
A A AA   
A=A AA"  
A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A A A
  
A=A AA"  
A A AA"  
       A
       A
# Ak"
$  (!
 ( !  A 6  j"A k!  (
"Ak!  (" j! Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@@@  I@  (  (  k"
Aj" !
 Aj!	A !@   k"kAI   
kKr
  	(      I" j"(  G
  Aj Aj     Aj!
 
A6
@@@  
     
A
j

     
A
j

     
A
j
"   K""AI
  	 ! 
(
A !	@@  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"kAI  
  (  ( 
 kKr
  (       I"j"(  G
  Aj Aj     "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  

     
Aj

     
Aj

     
Aj
"AI
  At 	kAj At 
("kN
  
!
 !	 ! "!

  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"
kAI  
  (  ( 
 kKr
  (   
   
 I"j"
(  G
  Aj 
Aj     "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  

     
Aj

     
Aj

     
Aj
"AI
  At 	kAj At 
("
kN
  
!	 ! "!


 	AI@ 
!

    	 jkAj" I"
 j!   
!
 	Ak!@  
M  Or
 Ak"
-   Ak"-  G
 Aj! 
!
 

-- Chunk 179 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:26701-26850
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!

 ! !
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
  K
	@  M@   
AI
 (
"Aj"
 Aj"
kAkAaO
 
 
 
A!H
  
j!
 A j!@  
Aj Aj 
A j"
 A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"
AO@ ($

 A6$   ( kAu6(
  
;  Aj"
6  j!  (@  A 6
@ !
  K
    k" 
k" I"	 j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj    	 ! (
 
 ( kAuM
 ( "AO
 (
" ( jK
	  K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"
6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
# Ak"
$  (!
 ( !  A 6  j"A k!  (
"Ak!  (" j! Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@@@  I@  (  (  k"
Aj" !
 Aj!	A !@   k"kAI   
kKr
  	(      I" j"(  G
  Aj Aj     Aj!
 
A6
@@@  
     
A
jx

     
A
jw

     
A
jv
"   K""AI
  	 ! 
(
A !	@@  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"kAI  
  (  ( 
 kKr
  (       I"j"(  G
  Aj Aj     "A{K
  Al 	kAj Aj"AlN
 A!	 ! !
 
A6@@@@  

     
Ajx

     
Ajw

     
Ajv
"AI
  At 	kAj At 
("kN
  
!
 !	 ! "!

-- Chunk 180 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:26851-27000

  O
  
Aj!
 Aj!@ 	E@A !	

  
 k"
kAI  
  (  ( 
 kKr
  (   
   
 I"j"
(  G
  Aj 
Aj     "A{K
  AtAr 	k Aj"AtN
 A!	 ! !
 
A6@@@  

     
Ajx

     
Ajw

     
Ajv
"AI
  At 	kAj At 
("
kN
  
!	 ! "!


 	AI@ 
!

    	 jkAj" I"
 j!   
!
 	Ak!@  
M  Or
 Ak"
-   Ak"-  G
 Aj! 
!
 
 
  
6  6  
Aj$   k
    k"AK6 Av jAj!

 ! !
@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"
j ( 
jK
  K
	@  M@   
AI
 (
"Aj"
 Aj"
kAkAaO
 
 
 
A!H
  
j!
 A j!@  
Aj Aj 
A j"
 A j" 
I
 


    	
  (
 
j6
@ 
AM@ (!

 ($
 A6$  (" ( kAu6(
  	6   
; AM
 Ak"
AO@ ($

 A6$   ( kAu6(
  
;  Aj"
6  j!  (@  A 6
@ !
  K
    k" 
k" I"	 j!  kAI   (  (  k 
Ir
 (   (  G
 Aj Aj    	 ! (
 
 ( kAuM
 ( "AO
 (
" ( jK
	  K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"
6  j! ! 
!
 
 


A A A A
  
A=A AA"  
 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$  (! ( !
  A 6  j"
A k!  (

-- Chunk 181 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27001-27150
"Ak!  (" j! 
Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@@@  I@  (  (  k"Aj" ! Aj!
A !@   
k"	kAI 
  kKr
  
(   	   	 I"j"(  G
  Aj Aj 
  
  Aj!
 
A6
@@@  
    
 
A
jx

    
 
A
jw

    
 
A
jv
"   K""AI
  
 ! 
(
A !
@@  O
  Aj! Aj!@ 
E@A !


   
k"	kAI 
   (  (  kKr
  (     	 I" 	j"	(  G
  Aj 	Aj 
  
  "A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  

    
 
Ajx

    
 
Ajw

    
 
Ajv
"	AI
  At 
kAj 	At 
("kN
  !
 	! "!


 
AI@ !

    
 jkAj" I" j!   !	 
Ak!@  	M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  6  
6  
Aj$  
 k
    k"AK6 Av jAj!

 
! !

@@@ (
 ( ( kAuK@ ( "AO
 (
"  k"j ( jK
  
K
	@  M@   AI
 (
"Aj" Aj"	kAkAaO
  	 A!H
  j! A j!@  	Aj Aj 	A j"	 A j" I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j!  (@  A 6
@ !  K
    k" k" I" j!  kAI   (  (  k Ir
 (   (  G
 Aj Aj 
  
  ! (
  ( kAuM
 ( "AO
 (
" ( jK
	  
K
 Aj!@  M@  

    	
 ("A6  A ; AM

 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j! 
! !

 
 


A A A A
  
A=A AA"  
 !


A A AA  

-- Chunk 182 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27151-27300
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$  (! ( !
  A 6  j"	A k!  (
"Ak!  (" j! 	Ak!   (j!   (" j" Fj!  (!  ("A AI"A AKAk!@@@@@@@@@  I@  (  (  k"
Aj" !@   
k"kAI 
  kKr
  Aj"(       I"j"(  G
  Aj Aj 	  	  Aj!A!


 
A6
@@@@  
    	 
A
jx

    	 
A
jw

A A AA  
    	 
A
jv
"AM@    k"AK6 Av jAj!

 
(
"
AI@ !

   
 
kAj" I" j!   !
 
Ak!@  
M  Or
 Ak"-   Ak"-  G
 Aj! !
 
 
  6  
6  
Aj$  	 k
 ! 
! !

@@@ (
 ( ( kAuK@ ( "
AO
 (
"  k"j ( 
jK
  	K
@  M@   AI
 (
"Aj"
 Aj"kAkAaO
 
  A!H
  j!
 A j!@  Aj Aj A j" A j" 
I
 


    	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; AM
	 Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j!  (@  A 6
@ !  K
    k" k" I"
 j!  kAI   (  (  k Ir
 (   (  G
 Aj Aj 	  	 
 ! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
	 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j! 
! !

 
 


A A A A
  
A=A AA"  
 ! !


A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
\ @@@@  (Ak 
      A
      A
      A
      A
y   (E@@@@@  (Ak 
      A
      A
      A
      A
A A AA  
 AI@@  (
  ( ( G
   (
"  (G
    (k G A	Ir
 # Ak"$   (6  ) 7 @@@@  (E@ ( ( G
  (
"  (G
   (
kAO
      A      ( k6    (
 j"6
   6
   6 Aj$ 

-- Chunk 183 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27301-27450

A A AA   
AA AA   
AA AA   
A A AA   

      A 
A A AA   
       A 
       A 
# Ak"
$   (!   ("  (
"	j" Fj" k!  (!
 (! ( !  (!
  A 6A     	 
  
k"K"
!	 A  
!A    I"!
  j"
A k! 
Ak! A AI"A AKAk!@@@@@@@@A  	k!@@@@@@  I@A ! 	E Aj" j(   (  GrE@ Aj"  j 
Aj!
 
A6
@@@  

    
 
A
j

    
 
A
j

    
 
A
j
"   K""AI
   ! 
(
A !@@  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"
 
 j 
"
A{K
  Al kAj 
Aj"
AlN
 A! ! 
!
 
A6@@@@  
    
 
Aj

    
 
Aj

    
 
Aj
"
AI
  At kAj 
At 
("kN
  ! 
! "!

  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"  j 
"A{K
  AtAr k Aj"AtN
 A! ! !
 
A6@@@  

    
 
Aj

    
 
Aj

    
 
Aj
"AI
  At kAj At 
("
kN
  
! ! "!


 AI@ 	! 


A k!@@  O
   j"
 M
  Ak"-   
Ak-  G
  Aj! !


 Ak! 	
! (
 ( ( kAuM
 ( "
AO
 (
"
  k"	j ( 
jK

  
K

@  M@ 
  	AI
 (
"
Aj" Aj"
kAkAaO
  
 	A!H
 	 
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 



-- Chunk 184 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27451-27600
 
   	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  6   	; AM

 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j!  (@  A 6
@ "
E  Kr
 (    
k(  G
 Aj"  
k 
! (
 	 ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  	  	6   
  A  "  	    
6 
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !	 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  
# Ak"
$   (!   ("  (
"	j" Fj" k!  (!
 (! ( !  (!
  A 6A     	 
  
k"K"
!	 A  
!A    I"!
  j"
A k! 
Ak! A AI"A AKAk!@@@@@@@@A  	k!@@@@@@  I@A ! 	E Aj" j(   (  GrE@ Aj"  j 
Aj!
 
A6
@@@  

    
 
A
j{

    
 
A
jz

    
 
A
jy
"   K""AI
   ! 
(
A !@@  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"
 
 j 
"
A{K
  Al kAj 
Aj"
AlN
 A! ! 
!
 
A6@@@@  
    
 
Aj{

    
 
Ajz

    
 
Ajy
"
AI
  At kAj 
At 
("kN
  ! 
! "!

  O
  Aj!@ E@A !

 	E (    j(  Gr
  Aj"  j 
"A{K
  AtAr k Aj"AtN
 A! ! !
 
A6@@@  

    
 
Aj{

    
 
Ajz


-- Chunk 185 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27601-27750
    
 
Ajy
"AI
  At kAj At 
("
kN
  
! ! "!


 AI@ 	! 


A k!@@  O
   j"
 M
  Ak"-   
Ak-  G
  Aj! !


 Ak! 	
! (
 ( ( kAuM
 ( "
AO
 (
"
  k"	j ( 
jK

  
K

@  M@ 
  	AI
 (
"
Aj" Aj"
kAkAaO
  
 	A!H
 	 
j! 
A j!@  
Aj Aj 
A j"
 A j" I
 


 
   	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  6   	; AM

 Ak"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j!  (@  A 6
@ "
E  Kr
 (    
k(  G
 Aj"  
k 
! (
 	 ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"	6  j! ! 
!
 
 
  	  	6   
  A  "  	    
6 
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !	 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$   (!   ("  (
"j" Fj" k!	  (!
 (! ( !  (!
  A 6A    	  
 	 
k"K"
!	 A  
!A    I"!  j"
A k! 
Ak! A AI"A AKAk!@@@@@@@@A  	k!@@@@@@  I@A ! 	E Aj" j(   (  GrE@ Aj"  j 
Aj!
 
A6
@@@  

    
 
A
j{

    
 
A
jz

    
 
A
jy
"   K""AI
   ! 
(
A !
@@  O

-- Chunk 186 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27751-27900
  Aj!@ 
E@A !


 	E (    j(  Gr
  Aj"  j 
"A{K
  Al 
kAj Aj"AlN
 A!
 ! !
 
A6@@@  

    
 
Aj{

    
 
Ajz

    
 
Ajy
"AI
  At 
kAj At 
("
kN
  
!
 ! "!


 
AI@ 	! 

A 
k!@@  O
   j" M
  Ak"-   Ak-  G
  Aj! !


 
Ak! 	
! (
 ( ( kAuM
 ( "
AO
 (
"  k"	j ( 
jK

  
K

@  M@   	AI
 (
"
Aj" Aj"kAkAaO
   	A!H
 	 
j! 
A j!@  Aj Aj A j" A j" I
 


    	
  (
 	j6
@ 	AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   	; AM

 Ak"	AO@ ($
 A6$   ( kAu6(
  	;  Aj"
6  j!  (@  A 6
@ "E  Kr
 (    k(  G
 Aj"  k 
! (
 
 ( kAuM
 ( "AO

 (
" ( jK

  
K

 Aj!@  M@  

    	
 ("A6  A ; AM
 Aj"AO@ ($
 A6$   ( kAu6(
  ;  Aj"
6  j! ! !
 
 
  	  	6     A  "  	    6 
Aj$  
 k
    k"AK6 Av jAj!




A A A A
  
A=A AA"  
 !	 !


A A AA  
A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  

# Ak"
$   (!
   ("  (
"j" Fj" k!  (!	 (! ( !  (!
  A 6A      	  
k"K"	! A  	!A    I"!  j"	A k!
 	Ak! 
A 
AI"A AKAk!@@@@@@@A  k!@@@@@  O
 E Aj" j(   (  GrE@ Aj"  j 	Aj!
A!
 

 
A6
@@@@  
    	 
A
j{

    	 

-- Chunk 187 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:27901-28050
A
jz

A A AA  
    	 
A
jy
"
AM@    k"AK6 Av jAj!


 
(
"
AI@ ! 

A 
k! !@@  O
   j" M
  Ak"-   Ak-  G
  
Aj!
 !


 ! 
Ak
! (
 ( ( kAuM
 ( "AO
 (
"  k"j ( jK
  	K
@  
M@   AI
 (
"Aj" Aj"kAkAaO
   A!H
  j! A j!@  Aj Aj A j" A j" I
 


    
	
  (
 j6
@ AM@ (!

 ($
 A6$  (" ( kAu6(
  
6   ; 
AM
	 
Ak"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  
j!  (@  A 6
@ "E  Kr
 (    k(  G
 Aj"  k 	! (
  ( kAuM
 ( "AO
 (
" ( jK
  	K
	 Aj!@  
M@  

    
	
 ("A6  A ; AM
 Aj"AO@ ($

 A6$   ( kAu6(
  ;  Aj"6  j! ! !
 
 
    6     A  "      6 
Aj$  	 k
A A A A
  
A=A AA"  
 ! !


A"A AA"  
A A AA"  
AA AA"  
AA AA"  
A A AA"  
A=A AA"  


 A
ZSTD_cwksp_mark_tables_dirty ZSTD_checkDictValidity sequences->size <= sequences->capacity rawSeqStore->size <= rawSeqStore->capacity res <= dstCapacity fhSize <= dstCapacity cSize <= dstCapacity ZSTD_loadZstdDictionary ZSTD_dedicatedDictSearch_lazy_loadDictionary ZSTD_loadDEntropy ZSTD_safecopy ZSTD_wildcopy cParams1.strategy == cParams2.strategy ZSTD_decompressSequences_body HUF_compress1X_usingCTable_internal_body ZSTD_decompressSequencesLong_body ZSTD_buildFSETable_body ZSTD_cwksp_assert_internal_consistency ZSTD_initCCtx ZSTD_compressCCtx matchIndex >= dmsLowestIndex matchIndex >= ddsLowestIndex matchEndIdx > matchIndex curr > matchIndex ms->window.dictLimit + (1U << cParams->windowLog) >= endIndex target >= idx idx >= startIdx endIdx >= startIdx lastSeqIdx == startIdx max <= defaultMax ZSTD_searchMax ZSTD_window_correctOverflow curr >= windowLow curr >= btLow iend > ilimit_w oLitEnd <= oend_w ZSTD_entropyCost ZSTD_crossEntropyCost compressedCost < basicCost && compressedCost < repeatCost ZSTD_rawLiteralsCost newCurrent >= maxDist ZSTD_compressBlock_fast HUF_sort op >= ostart base+curr+2 > istart base+current0+2 > istart match >= prefixStart seqStore->sequences == seqStore->sequencesStart ws->workspace <= ws->initOnceStart ws->tableEnd <= ws->allocStart ws->tableValidEnd <= ws->allocStart ZSTD_loadDictionaryContent ZSTD_freeCCtxContent ZSTD_DDict_dictContent curr > newCurrent window->lowLimit <= newCurrent window->dictLimit <= newCurrent dctx->streamStage == zdss_init ZSTD_cwksp_init ms->window.dictLimit == ms->window.lowLimit matchIndex >= lowLimit literals + litLength <= litLimit idx >= ms->window.dictLimit ms->dictMatchState == NULL || ms->loadedDictEnd == ms->window.dictLimit matchIndex >= dictLimit curr >= dictLimit matchIndex+matchLength >= dictLimit resultSeqStore->lit == originalSeqStore->lit seqStorePtr->lit + litLength <= seqStorePtr->litStart + seqStorePtr->maxNbLit ZSTD_fracWeight HUF_setMaxHeight ZSTD_resolveRepcodeToRawOffset ZSTD_maxShortOffset curr <= target dctx->refMultipleDDicts && dctx->ddictSet ZSTD_compressBlock_fast_extDict ZSTD_compress_usingDict ZSTD_getDDict ZSTD_decompressBegin_usingDDict ZSTD_DCtx_selectFrameDDict ZSTD_cwksp_reserve_object hufMetadata->hType == set_compressed || hufMetadata->hType == set_repeat HUF_flushBits HUF_addBits HUF_setNbBits mlBits <= MaxMLBits llBits <= MaxLLBits ZSTD_updateStats ZSTD_downscaleStats ZSTD_minLiteralsToCompress ZSTD_ldm_blockCompress ZSTD_ldm_adjustParameters ZSTD_DCtx_resetParameters ZSTD_copyDDictParameters ZSTD_rescaleFreqs ZSTD_assertEqualCParams BOUNDED(3, ms->cParams.minMatch, 6) == mls ZSTD_buildBlockEntropyStats_literals ZSTD_safecopyLiterals ZSTD_compressLiterals ZSTD_noCompressLiterals ZSTD_cwksp_clean_tables ZSTD_ldm_fillFastTables numMatches < rowEntries ZSTD_insertBtAndGetAllMatches ZSTD_seqToCodes ZSTD_seqStore_resolveOffCodes ZSTD_compressSubBlock_sequences zc->seqCollector.seqIndex + 1 < zc->seqCollector.maxSequences ZSTD_copyBlockSequences ZSTD_ldm_generateSequences ZSTD_buildSequencesStatistics ZSTD_hashPtr !kFast || bitC->ptr <= bitC->endPtr bitC.ptr <= bitC.endPtr matchIndex < curr ZSTD_selectBlockCompressor ZSTD_deriveBlockSplitsHelper ZSTD_decompressSequences_bodySplitLitBuffer ZSTD_execSequenceSplitLitBuffer ZSTD_execSequenceEndSplitLitBuffer ZSTD_writeFrameHeader maxSymbolValue <= MaxSeq ZSTD_storeSeq nbSeq <= seqStorePtr->maxNbSeq (size_t)(seqStorePtr->sequences - seqStorePtr->sequencesStart) < seqStorePtr->maxNbSeq HIST_count_parallel_wksp FSE_buildCTable_wksp HUF_readDTableX1_wksp end <= top HUF_compress1X_usingCTable_internal_body_loop *ip <= *op oend >= op iend >= ip ZSTD_updateRep params->useBlockSplitter != ZSTD_ps_auto cctxParams->useBlockSplitter != ZSTD_ps_auto params->useRowMatchFinder != ZSTD_ps_auto params->ldmParams.enableLdm != ZSTD_ps_auto externalRepSearch != ZSTD_ps_auto mode != ZSTD_ps_auto ZSTD_getOffsetInfo ZSTD_decompressBegin tmpMinChain <= minChain ZSTD_minGain ZSTD_cwksp_align cur >= opt[cur].mlen ZSTD_cwksp_mark_tables_clean alloc >= bottom ZSTD_copySequencesToSeqStoreExplicitBlockDelim ZSTD_row_update_internalImpl rankLast[nBitsToDecrease] != noSymbol count[s] < total ZSTD_compressSubBlock_literal ZSTD_estimateBlockSize_literal ZSTD_estimateSubBlockSize_literal ZSTD_resetCCtx_internal ZSTD_CCtxParams_init_internal ZSTD_adjustCParams_internal ZSTD_btGetAllMatches_internal ZSTD_compressBegin_internal ZSTD_compressBlock_splitBlock_internal FSE_optimalTableLog_internal ZSTD_compressContinue_internal ZSTD_row_update_internal ZSTD_entropyCompressSeqStore_internal ZSTD_reduceTable_internal HUF_compressCTable_internal HUF_compress4X_usingCTable_internal ZSTD_updateTree_internal allBytesIdentical ZSTD_deriveSeqStoreChunk ZSTD_compress_frameChunk ZSTD_compressBlock_splitBlock ZSTD_compressRleLiteralsBlock ZSTD_decodeLiteralsBlock ZSTD_compressSubBlock_multi u == length (U32)skipSize < length offset_2 <= dictAndPrefixLength offset_1 <= dictAndPrefixLength ZSTD_startingInputLength cParams1.targetLength == cParams2.targetLength optLdm->seqStore.posInSequence <= currSeq.litLength + currSeq.matchLength op < op + sequenceLength oLitEnd < op + sequenceLength ZSTD_row_prefetch ZSTD_DUBT_findBestMatch ZSTD_RowFindBestMatch ZSTD_HcFindBestMatch ZSTD_DUBT_findBetterDictMatch cParams1.minMatch == cParams2.minMatch ZSTD_optLdm_maybeAddMatch ZSTD_dedicatedDictSearch_lazy_search cParams->hashLog >= rowLog cPar.hashLog >= rowLog cParams1.windowLog == cParams2.windowLog ZSTD_dictAndWindowLog ms->cParams.hashLog > ms->cParams.chainLog cParams1.chainLog == cParams2.chainLog cParams1.hashLog == cParams2.hashLog cParams1.searchLog == cParams2.searchLog huffLog <= LitHufLog params->ldmParams.hashLog >= params->ldmParams.bucketSizeLog FSE_minTableLog HUF_optimalTableLog bitCost <= scaleLog bitCost < scaleLog ofBits <= MaxOff offCode <= MaxOff sequences->pos <= sequences->size rawSeqStore->pos <= rawSeqStore->size zc->externSeqStore.pos <= zc->externSeqStore.size ldmSeqStore.pos == ldmSeqStore.size cLitSize > litSize litLengthSum == litSize litLengthSum <= litSize symbol <= alphabetSize ZSTD_DDict_dictSize cSizeChunk <= zc->blockSize + ZSTD_blockHeaderSize cSizeSingleBlock <= zc->blockSize + ZSTD_blockHeaderSize cSize <= blockSize + ZSTD_blockHeaderSize chainPos <= chainSize newLeftoverSize == chunkSize ZSTD_seqDecompressedSize skippableSize <= srcSize ldmState->window.nextSrc >= (BYTE const*)src + srcSize dstCapacity >= cSize HUF_setValue *ip <= maxSymbolValue ZSTD_reset_matchState ZSTD_sizeof_matchState ZSTD_compressBlock_fast_dictMatchState ZSTD_window_update ZSTD_cwksp_internal_advance_phase phase >= ws->phase ZSTD_finalizeOffBase ZSTD_entropyCompressSeqStore ZSTD_opt_getNextMatchAndUpdateSeqStore ZSTD_buildSeqStore ZSTD_estimateBlockSize_symbolType ZSTD_estimateSubBlockSize_symbolType ZSTD_selectEncodingType seqStorePtr->longLengthType == ZSTD_llt_none ZSTD_decompressMultiFrame ZSTD_buildSeqTable_rle HIST_count_simple ZSTD_cwksp_reserve_table zc->appliedParams.ldmParams.enableLdm == ZSTD_ps_disable zc->appliedParams.useBlockSplitter == ZSTD_ps_enable ZSTD_buildSeqTable ZSTD_allocateChainTable HUF_getNbBitsFromCTable ZSTD_buildCTable ZSTD_cwksp_reserve_aligned_init_once maybeSplitSequence ZSTD_validateSequence ZSTD_decodeSequence ZSTD_execSequence endIndex - prefixStartIndex <= maxDistance ZSTD_litLengthPrice ZSTD_getMatchPrice HUF_alignUpWorkspace ZSTD_cwksp_reserve_internal_buffer_space op <= oend oMatchEnd <= oend oend_w < oend lp <= lend ip <= iend anchor + llen <= iend ip + sequence.litLength + sequence.matchLength <= iend ip + decompressedSize <= iend ip + 8 <= iend chunkStart < iend ip < iend op <= oLitEnd match+4 <= dictEnd dictMatchL < dictEnd dictMatchL3 < dictEnd blockEndIdx >= loadedDictEnd ws->tableValidEnd >= ws->objectEnd ws->workspace <= ws->objectEnd match+4 <= dmsEnd match+4 <= ddsEnd op <= oMatchEnd op < oMatchEnd oLitEnd < oMatchEnd storePos == storeEnd ws->objectEnd <= ws->tableEnd ZSTD_execSequenceEnd ws->allocStart <= ws->workspaceEnd ws->objectEnd <= ws->tableValidEnd isDefaultAllowed ZSTD_hashPtrSalted ZSTD_rowMatchFinderUsed ZSTD_cwksp_reserve_aligned ZSTD_isAligned ZSTD_literalsCompressionIsDisabled ZSTD_blockSplitterEnabled ZSTD_getFrameHeader_advanced seqStoreLiteralsSize >= literalsRead ZSTD_compressBlock_lazy_generic ZSTD_compressBlock_opt_generic FSE_writeNCount_generic ZSTD_compressBlock_fast_extDict_generic ZSTD_compressBlock_doubleFast_extDict_generic ZSTD_compressBlock_fast_noDict_generic ZSTD_compressBlock_doubleFast_noDict_generic ZSTD_compressBlock_fast_dictMatchState_generic ZSTD_compressBlock_doubleFast_dictMatchState_generic ZSTD_compressEnd_public zstd.c curr > matchIndex + dmsIndexDelta ZSTD_initStats_ultra cumul[u] >= cumul[u-1] MEM_readLE32(dict) == ZSTD_MAGIC_DICTIONARY MEM_readLE32(dictPtr) == ZSTD_MAGIC_DICTIONARY newCurrent - maxDist >= ZSTD_WINDOW_START_INDEX total <= INT_MAX cctx->appliedParams.cParams.windowLog <= ZSTD_WINDOWLOG_MAX params->hashLog <= ZSTD_HASHLOG_MAX litLength <= ZSTD_BLOCKSIZE_MAX zc->blockSize <= ZSTD_BLOCKSIZE_MAX srcSize <= ZSTD_BLOCKSIZE_MAX cSize < ZSTD_BLOCKSIZE_MAX symbolValue <= HUF_SYMBOLVALUE_MAX nbBits <= HUF_TABLELOG_ABSOLUTEMAX HUF_getNbBits(elt) <= HUF_TABLELOG_ABSOLUTEMAX ZSTD_updateDUBT litSize >= MIN_LITERALS_FOR_4_STREAMS (bitC->bitPos[idx] & 0xFF) <= HUF_BITS_IN_CONTAINER (bitC->bitPos[0] & 0xFF) <= HUF_BITS_IN_CONTAINER (bitC->bitPos[1] & 0xFF) < HUF_BITS_IN_CONTAINER optPtr->litSumBasePrice >= BITCOST_MULTIPLIER ZSTD_highbit32((U32)maxOffbase) == STREAM_ACCUMULATOR_MIN diff >= WILDCOPY_VECLEN || diff <= -WILDCOPY_VECLEN cur < ZSTD_OPT_NUM storeEnd < ZSTD_OPT_NUM (repCode - ll0 + 1)<=ZSTD_REP_NUM dict==NULL || ddict==NULL ms->dictMatchState == NULL dctx != NULL cctx != NULL dst != NULL ddict != NULL optPtr->symbolCosts != NULL dictMatchStatePtr != NULL loadedDictEndPtr != NULL selectedCompressor != NULL zc->externalMatchCtx.mFinder != NULL optPtr->litFreq != NULL op != NULL ms->dictMatchState != NULL window->base != NULL window->dictBase != NULL ms->chainTable != NULL src != NULL matchLength >= MINMATCH seqStorePtr->maxNbLit <= 128 KB (int)strategy <= 9 ZSTD_overlapCopy8 correction > 1<<28 ip <= iend-8 matchEndIdx > curr+8 *op - *ip >= 8 matchEndIdx > curr + 8 nbBits <= sizeof(bitC->bitContainer[0]) * 8 mult <= 9 && mult >= 7 ZSTD_hash6 ZSTD_BtFindBestMatch_extDict_6 ZSTD_HcFindBestMatch_extDict_6 ZSTD_BtFindBestMatch_noDict_6 ZSTD_HcFindBestMatch_noDict_6 ZSTD_HcFindBestMatch_dedicatedDictSearch_6 ZSTD_BtFindBestMatch_dictMatchState_6 ZSTD_HcFindBestMatch_dictMatchState_6 ZSTD_RowFindBestMatch_extDict_6_6 ZSTD_RowFindBestMatch_noDict_6_6 ZSTD_RowFindBestMatch_dedicatedDictSearch_6_6 ZSTD_RowFindBestMatch_dictMatchState_6_6 ZSTD_RowFindBestMatch_extDict_5_6 ZSTD_RowFindBestMatch_noDict_5_6 ZSTD_RowFindBestMatch_dedicatedDictSearch_5_6 ZSTD_RowFindBestMatch_dictMatchState_5_6 ZSTD_RowFindBestMatch_extDict_4_6 ZSTD_RowFindBestMatch_noDict_4_6 ZSTD_RowFindBestMatch_dedicatedDictSearch_4_6 ZSTD_RowFindBestMatch_dictMatchState_4_6 norm256 < 256 tableLog < 16 rowLog == 4 || rowLog == 5 || rowLog == 6 MAX(4, MIN(6, ms->cParams.minMatch)) == 6 MAX(4, MIN(6, ms->cParams.searchLog)) == 6 ZSTD_BtFindBestMatch_extDict_5 ZSTD_HcFindBestMatch_extDict_5 ZSTD_BtFindBestMatch_noDict_5 ZSTD_HcFindBestMatch_noDict_5 ZSTD_HcFindBestMatch_dedicatedDictSearch_5 ZSTD_BtFindBestMatch_dictMatchState_5 ZSTD_HcFindBestMatch_dictMatchState_5 ZSTD_RowFindBestMatch_extDict_6_5 ZSTD_RowFindBestMatch_noDict_6_5 ZSTD_RowFindBestMatch_dedicatedDictSearch_6_5 ZSTD_RowFindBestMatch_dictMatchState_6_5 ZSTD_RowFindBestMatch_extDict_5_5 ZSTD_RowFindBestMatch_noDict_5_5 ZSTD_RowFindBestMatch_dedicatedDictSearch_5_5 ZSTD_RowFindBestMatch_dictMatchState_5_5 ZSTD_RowFindBestMatch_extDict_4_5 ZSTD_RowFindBestMatch_noDict_4_5 ZSTD_RowFindBestMatch_dedicatedDictSearch_4_5 ZSTD_RowFindBestMatch_dictMatchState_4_5 *maxSymbolValuePtr <= 255 nbAddBits < 255 nbAdditionalBits[symbol] < 255 MAX(4, MIN(6, ms->cParams.minMatch)) == 5 MAX(4, MIN(6, ms->cParams.searchLog)) == 5 ZSTD_BtFindBestMatch_extDict_4 ZSTD_HcFindBestMatch_extDict_4 ZSTD_BtFindBestMatch_noDict_4 ZSTD_HcFindBestMatch_noDict_4 ZSTD_HcFindBestMatch_dedicatedDictSearch_4 ZSTD_BtFindBestMatch_dictMatchState_4 ZSTD_HcFindBestMatch_dictMatchState_4 ZSTD_RowFindBestMatch_extDict_6_4 ZSTD_RowFindBestMatch_noDict_6_4 ZSTD_RowFindBestMatch_dedicatedDictSearch_6_4 ZSTD_RowFindBestMatch_dictMatchState_6_4 ZSTD_RowFindBestMatch_extDict_5_4 ZSTD_RowFindBestMatch_noDict_5_4 ZSTD_RowFindBestMatch_dedicatedDictSearch_5_4 ZSTD_RowFindBestMatch_dictMatchState_5_4 ZSTD_RowFindBestMatch_extDict_4_4 ZSTD_RowFindBestMatch_noDict_4_4 ZSTD_RowFindBestMatch_dedicatedDictSearch_4_4 ZSTD_RowFindBestMatch_dictMatchState_4_4 h <= 64 ms->cParams.chainLog <= 24 dstCapacity >= 4 MAX(4, MIN(6, ms->cParams.minMatch)) == 4 MAX(4, MIN(6, ms->cParams.searchLog)) == 4 skipSize <= 4 curr > matchIndex3 ZSTD_hash3 ZSTD_insertAndFindFirstIndexHash3 fseMetadata->lastCountSize + bitstreamSize == 3 HUF_fillDTableX2Level2 ZSTD_compressBlock_btultra2 hBits <= 32 h <= 32 params->ldmParams.hashRateLog < 32 HUF_mergeIndex1 ZSTD_insertBt1 bucketStartIdx < maxSymbolValue1 pos < maxSymbolValue1 ZSTD_insertDUBT1 hb + BITCOST_ACCURACY < 31 length > 1 srcSize > 1 normalizedCounter[s] > 1 nbSeq_1 > 1 sequence.matchLength >= 1 stepSize >= 1 cSize > 0 || cctx->seqCollector.collectSequences == 1 params.fParams.contentSizeFlag == 1 skipSize == 1 rankLast[nBitsToDecrease] != noSymbol || nBitsToDecrease == 1 ms->window.dictLimit - ms->nextToUpdate <= 1 ll0 <= 1 lowerRank < RANK_POSITION_TABLE_SIZE - 1 zc->seqCollector.maxSequences >= seqStoreSeqSize + 1 ll0 (curr - matchIndex)>0 (optLdm->offset)>0 (inSeqs[idx].offset)>0 (offset)>0 (rawOffset)>0 (cRawOffset)>0 (offsetBound)>0 (curr - matchIndex3)>0 (rep_offset1)>0 (curr - (matchIndex + dmsIndexDelta))>0 (curr - (matchIndex + ddsIndexDelta))>0 n>=0 normalizedCounter[s]>=0 position==0 mnum==0 ZSTD_checkCParams(cPar)==0 shift < 30 price < 1000000000 windowLow > 0 totalCost > 0 sequence.offset > 0 nbBits > 0 total > 0 cSize > 0 offBase > 0 norm256 > 0 hashLog3 > 0 (int)strategy >= 0 n >= 0 opt[cur].price >= 0 opt[0].price >= 0 normalizedCounter[u-1] >= 0 ((size_t)ptr & (ZSTD_CWKSP_ALIGNMENT_BYTES-1))== 0 ((size_t)alloc & (ZSTD_CWKSP_ALIGNMENT_BYTES-1))== 0 position == 0 opt[0].mlen == 0 ms->opt.litLengthSum == 0 tableSize % unroll == 0 n % kUnroll == 0 cctx->staticSize == 0 rankPosition[RANK_POSITION_TABLE_SIZE - 1].base == 0 (value >> nbBits) == 0 n % (2 * kUnroll) == 0 (align & mask) == 0 ((size_t)aligned & mask) == 0 memcmp(match, ip, matchLength) == 0 ((size_t)workSpace & 1) == 0 bytes % ZSTD_ALIGNOF(void*) == 0 (size_t)alloc % ZSTD_ALIGNOF(void*) == 0 (bytes & (ZSTD_CWKSP_ALIGNMENT_BYTES-1)) == 0 (size & (ZSTD_ROWSIZE-1)) == 0 (bytes & (sizeof(U32)-1)) == 0 ((size_t)start & (sizeof(void*)-1)) == 0 ((U32)tota

-- Chunk 188 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/tests/wasm/zstd.wasm:28051-28174
	



 A
                                                  	      
      
                          
           0     @               
     
                                                 
      
      
                               (     @    @          	     
   0                                            	      
      
                          
     (     0                @    
   A
             =     	                }     
          
          ?           }     
       ?   
         
           =     
        
         A
                                     	      
      
                              
            "     %     )     /     ;     S          	                            	      
      
                                    
      !     #     '     +     3     C     c             0                         
      
                                    
                    @    
     
    
    
 A
+               ?                   ?           ?   ?                                                                                                                           	



 	






  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************   
   
                  
                                                                                                                                                                                                                                                                                                                                               0                     @                     @                        	                     	                     	            	        	      
   
                  
                                                                                                                                                                                                                                 
                     
                                                                                                                                  	                     	            
         	            
         	            
        	      
   
                  
   
                   
                                                                                                                                                                                                                                 
                     
                                                                                                    
                              	                     	            	         	            
        	      
   
                                                                                                                                                                                                                        	                           
                                                                @                                          0   	                     	                     	                     	                     	            	         	            
        	   \ww_,zk&_
sʩGޱOKeП:~NX4kj|NC:O"$Ξ%$vv[()u	7Vu_G)9*98'Ξ"
( b{ ʈ]E@V\`t :h4
%ƅO=sFV" Q_Ѳ]iTJ@Ñs
m.0HG51ہ4ҡ|ì̖
we#WwqD
+ 7O_H^zvdF*.
|.qi).^F+~VsU?הZp^EaIJ%҅a8黔ouY	rH5&kGz#9D&x`tm6r<Ψ
C#!b[

MSr]?
.U@h:g	1NnIrXxw8;$8'S\:f$ZGY"V5o
F*eG	%l"Y.$ffnrq7x;PP	=Vx(eX$RƮqvgAy+k)n/h%fPnzES9t:´]ުTYB	}(%
8'j;OQ%^٢ᴼQ;
=Rg=OaB{Wb[B^ K=
1hUL>vf]b*uv*rФbD=|]m
Ǜ׹b)z,!MbDg[tP%ctç*>ZF9N;	rT+6ZNw̓)"Gߢ
KPnE4F/+FØaYvR5Sy8H$&ۂg(X@|NQ7AdpKp
Z*bh؜7R52JGKy Oizc}q^%;ykFY;ƈBcʁKg6Z؈#yk
-ӝNl9\qEP^28ˊ&gf#`;d(|ftjv۾ƅe
`Ȯ~evs#il飃V6$otMZu8Dx=9v[m5D	lrgLv=
R̜К7Qz)ME4jwK

4
q F=<8t
헪B
02pU
9)ӹ
?#'zL
g{*}wFfwIgGڎ(ۭH>
}jInfZj45"f^n[Bʮ})9U-
I"r=	S
	!fa0Ľfp5nsfZY͖mG֣9N򯣟S_L	3VYNu>
/.?6ycVZ@g8m	e3)j|Պ,/^v(ml9r¡MÉS

*0~(⹁7=s^[L6"9
>zVgh$܎gv^
yC8OLͧ=̱):zO2aNuE9BTcqR?do/wzB

؃]>nJ=2,THh/fxLfhLGTG
w7%6ֱ Ұu!d`]k_
W_%3$;cJ6Z/K]XB$^96Gb$ѨVgÎ-nb:wļ+}xA,LUM~u<63O\
,8cH͓dh^W4@$9RŌ$AwL R0bbeX/zKB3%bAL2բ(U$;sîhm~iD(I/{=.cP#l+1t{Gp3!V|;۲NkԌ@Kqߩ@
y}5X>^%뀅˻+~Q
&OM++   ,   -   .   /   0   1   2   3   4   5   6                                                                                                                                                                                                                                                                                 	   
   
 A
lP

=== File: node/documentation/worker/tests/wasm/bincode_js.d.ts ===

-- Chunk 1 --
// bincode_js.d.ts:7-7
function bincode_js_deserialize(val: any): any;

-- Chunk 2 --
// bincode_js.d.ts:12-12
function borsh_bpf_js_deserialize(val: any): any;

-- Chunk 3 --
// bincode_js.d.ts:16-16
function solana_program_init(): void;

-- Chunk 4 --
// bincode_js.d.ts:29-54
class Hash {
  free(): void;
  /**
   * Create a new Hash object
   *
   * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value: any);
  /**
   * Return the base58 string representation of the hash
   * @returns {string}
   */
  toString(): string;
  /**
   * Checks if two `Hash`s are equal
   * @param {Hash} other
   * @returns {boolean}
   */
  equals(other: Hash): boolean;
  /**
   * Return the `Uint8Array` representation of the hash
   * @returns {Uint8Array}
   */
  toBytes(): Uint8Array;
}

-- Chunk 5 --
// bincode_js.d.ts:116-118
class Instruction {
  free(): void;
}

-- Chunk 6 --
// bincode_js.d.ts:121-130
class Instructions {
  free(): void;
  /**
   */
  constructor();
  /**
   * @param {Instruction} instruction
   */
  push(instruction: Instruction): void;
}

-- Chunk 7 --
// bincode_js.d.ts:147-153
class Message {
  free(): void;
  /**
   * The id of a recent ledger entry.
   */
  recent_blockhash: Hash;
}

-- Chunk 8 --
// bincode_js.d.ts:170-225
class Pubkey {
  free(): void;
  /**
   * Create a new Pubkey object
   *
   * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`
   * @param {any} value
   */
  constructor(value: any);
  /**
   * Return the base58 string representation of the public key
   * @returns {string}
   */
  toString(): string;
  /**
   * Check if a `Pubkey` is on the ed25519 curve.
   * @returns {boolean}
   */
  isOnCurve(): boolean;
  /**
   * Checks if two `Pubkey`s are equal
   * @param {Pubkey} other
   * @returns {boolean}
   */
  equals(other: Pubkey): boolean;
  /**
   * Return the `Uint8Array` representation of the public key
   * @returns {Uint8Array}
   */
  toBytes(): Uint8Array;
  /**
   * Derive a Pubkey from another Pubkey, string seed, and a program id
   * @param {Pubkey} base
   * @param {string} seed
   * @param {Pubkey} owner
   * @returns {Pubkey}
   */
  static createWithSeed(base: Pubkey, seed: string, owner: Pubkey): Pubkey;
  /**
   * Derive a program address from seeds and a program id
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {Pubkey}
   */
  static createProgramAddress(seeds: any[], program_id: Pubkey): Pubkey;
  /**
   * Find a valid program address
   *
   * Returns:
   * * `[PubKey, number]` - the program address and bump seed
   * @param {any[]} seeds
   * @param {Pubkey} program_id
   * @returns {any}
   */
  static findProgramAddress(seeds: any[], program_id: Pubkey): any;
}

=== File: node/documentation/worker/src/orcaSettings.ts ===

-- Chunk 1 --
// orcaSettings.ts:7-18
function getHostIP() {
  const interfaces = os.networkInterfaces();
  for (const name of Object.keys(interfaces)) {
    for (const iface of interfaces[name] || []) {
      // Skip over internal (i.e., 127.0.0.1) and non-IPv4 addresses
      if (iface.family === "IPv4" && !iface.internal) {
        return iface.address;
      }
    }
  }
  throw new Error("Unable to determine host IP address");
}

-- Chunk 2 --
// orcaSettings.ts:20-52
async function createPodSpec(): Promise<string> {
  const basePath = await namespaceWrapper.getBasePath();

  const podSpec = `apiVersion: v1
kind: Pod
metadata:
  name: 247-builder-test
spec:
  containers:
    - name: user-${TASK_ID}
      image: ${imageUrl}
      env:
      - name: GITHUB_TOKEN
        value: "${process.env.GITHUB_TOKEN}"
      - name: GITHUB_USERNAME
        value: "${process.env.GITHUB_USERNAME}"
      - name: ANTHROPIC_API_KEY
        value: "${process.env.ANTHROPIC_API_KEY}"
      volumeMounts:
        - name: builder-data
          mountPath: /data
  volumes:
    - name: builder-data
      hostPath:
        path: ${basePath}/orca/data
        type: DirectoryOrCreate
  hostAliases:
  - ip: "${getHostIP()}"
    hostnames:
    - "host.docker.internal"
`;
  return podSpec;
}

-- Chunk 3 --
// orcaSettings.ts:54-66
async function getConfig(): Promise<{
  imageURL: string;
  customPodSpec: string;
  rootCA: string | null;
  timeout: number;
}> {
  return {
    imageURL: imageUrl,
    customPodSpec: await createPodSpec(),
    rootCA: null,
    timeout: 900000,
  };
}

=== File: node/documentation/worker/src/index.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/src/index.ts:1-20
import { initializeTaskManager } from "@_koii/task-manager";
import { setup } from "./task/0-setup";
import { task } from "./task/1-task";
import { submission } from "./task/2-submission";
import { audit } from "./task/3-audit";
import { distribution } from "./task/4-distribution";
import { routes } from "./task/5-routes";

import { initializeOrcaClient } from "@_koii/task-manager/extensions";
import { getConfig } from "./orcaSettings";

initializeTaskManager({
  setup,
  task,
  submission,
  audit,
  distribution,
  routes,
});
initializeOrcaClient(getConfig);

=== File: node/documentation/worker/src/task/0-setup.ts ===

-- Chunk 1 --
// 0-setup.ts:2-5
async function setup(): Promise<void> {
  // Setup a cron job to run every 1 minutes
  task();
}

=== File: node/documentation/worker/src/task/1-task.ts ===

-- Chunk 1 --
// 1-task.ts:15-34
async function task(roundNumber: number): Promise<void> {
  /**
   * Run your task and store the proofs to be submitted for auditing
   * It is expected you will store the proofs in your container
   * The submission of the proofs is done in the submission function
   */
  // FORCE TO PAUSE 30 SECONDS
  // No submission on Round 0 so no need to trigger fetch audit result before round 3
  // Changed from 3 to 4 to have more time
  // if (roundNumber >= 4) {
  //   const auditRound = roundNumber - 4;
  //   const response = await fetch(`${middleServerUrl}/summarizer/worker/update-audit-result`, {
  //     method: "POST",
  //     headers: { "Content-Type": "application/json" },
  //     body: JSON.stringify({ taskId: TASK_ID, round: auditRound }),
  //   });
  //   console.log(`[TASK] Fetched audit result for round ${auditRound}. Status: ${response.status}`);
  // }
  // console.log(`[TASK] EXECUTE TASK FOR ROUND ${roundNumber}`);
}

=== File: node/documentation/worker/src/task/2-submission.ts ===

-- Chunk 1 --
// 2-submission.ts:7-10
interface SubmissionData {
  prUrl: string;
  [key: string]: any;
}

-- Chunk 2 --
// 2-submission.ts:12-18
interface SubmissionParams {
  orcaClient: any;
  roundNumber: number;
  stakingKey: string;
  publicKey: string;
  secretKey: Uint8Array<ArrayBufferLike>;
}

-- Chunk 3 --
// 2-submission.ts:20-62
async function submission(roundNumber: number): Promise<string | void> {
  /**
   * Retrieve the task proofs from your container and submit for auditing
   * Must return a string of max 512 bytes to be submitted on chain
   * The default implementation handles uploading the proofs to IPFS
   * and returning the CID
   */
  if (!(await preRunCheck(roundNumber.toString()))) {
    return;
  }
  const stakingKeypair = await namespaceWrapper.getSubmitterAccount();
  const pubKey = await namespaceWrapper.getMainAccountPubkey();
  if (!stakingKeypair || !pubKey) {
    console.error("[SUBMISSION] No staking keypair or public key found");
    throw new Error("No staking keypair or public key found");
  }
  const stakingKey = stakingKeypair.publicKey.toBase58();

  const secretKey = stakingKeypair.secretKey;
  console.log(`[SUBMISSION] Starting submission process for round ${roundNumber}`);

  try {
    const orcaClient = await initializeOrcaClient();
    const shouldMakeSubmission = await namespaceWrapper.storeGet(`shouldMakeSubmission`);

    if (!shouldMakeSubmission || shouldMakeSubmission !== "true") {
      return;
    }

    const cid = await makeSubmission({
      orcaClient,
      roundNumber,
      stakingKey,
      publicKey: pubKey,
      secretKey,
    });

    return cid || void 0;
  } catch (error) {
    console.error("[SUBMISSION] Error during submission process:", error);
    throw error;
  }
}

-- Chunk 4 --
// 2-submission.ts:64-75
async function initializeOrcaClient() {
  console.log("[SUBMISSION] Initializing Orca client...");
  const orcaClient = await getOrcaClient();

  if (!orcaClient) {
    console.error("[SUBMISSION] Failed to initialize Orca client");
    throw new Error("Failed to initialize Orca client");
  }

  console.log("[SUBMISSION] Orca client initialized successfully");
  return orcaClient;
}

-- Chunk 5 --
// 2-submission.ts:77-115
async function makeSubmission(params: SubmissionParams): Promise<string | void> {
  const { orcaClient, roundNumber, stakingKey, publicKey, secretKey } = params;

  const swarmBountyId = await namespaceWrapper.storeGet(`swarmBountyId`);
  if (!swarmBountyId) {
    console.log("[SUBMISSION] No swarm bounty id found for this round");
    return;
  }

  const submissionData = await fetchSubmissionData(orcaClient, swarmBountyId);
  if (!submissionData) {
    return;
  }

  await notifyMiddleServer({
    taskId: TASK_ID!,
    swarmBountyId,
    prUrl: submissionData.prUrl,
    stakingKey,
    publicKey,
    secretKey,
  });

  const signature = await signSubmissionPayload(
    {
      taskId: TASK_ID,
      roundNumber,
      stakingKey,
      pubKey: publicKey,
      ...submissionData,
    },
    secretKey,
  );

  const cid = await storeSubmissionOnIPFS(signature);
  await cleanupSubmissionState();

  return cid;
}

-- Chunk 6 --
// 2-submission.ts:117-133
async function fetchSubmissionData(orcaClient: any, swarmBountyId: string): Promise<SubmissionData | null> {
  console.log(`[SUBMISSION] Fetching submission data for swarm bounty ${swarmBountyId}`);
  const result = await orcaClient.podCall(`submission/${swarmBountyId}`);

  if (!result || result.data === "No submission") {
    console.log("[SUBMISSION] No existing submission found");
    return null;
  }

  const submission = typeof result.data === "object" && "data" in result.data ? result.data.data : result.data;

  if (!submission?.prUrl) {
    throw new Error("Submission is missing PR URL");
  }

  return submission as SubmissionData;
}

-- Chunk 7 --
// 2-submission.ts:135-166
async function notifyMiddleServer(params: {
  taskId: string;
  swarmBountyId: string;
  prUrl: string;
  stakingKey: string;
  publicKey: string;
  secretKey: Uint8Array<ArrayBufferLike>;
}) {
  const { taskId, swarmBountyId, prUrl, stakingKey, publicKey, secretKey } = params;

  const payload = {
    taskId,
    swarmBountyId,
    prUrl,
    stakingKey,
    publicKey,
    action: "add-round-number",
  };

  const signature = await namespaceWrapper.payloadSigning(payload, secretKey);
  const response = await fetch(`${middleServerUrl}/summarizer/worker/add-round-number`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ signature, stakingKey }),
  });

  console.log("[SUBMISSION] Add PR Response: ", response);

  if (response.status !== 200) {
    throw new Error(`Posting to middle server failed: ${response.statusText}`);
  }
}

-- Chunk 8 --
// 2-submission.ts:168-173
async function signSubmissionPayload(payload: any, secretKey: Uint8Array<ArrayBufferLike>): Promise<string> {
  console.log("[SUBMISSION] Signing submission payload...");
  const signature = await namespaceWrapper.payloadSigning(payload, secretKey);
  console.log("[SUBMISSION] Payload signed successfully");
  return signature!;
}

-- Chunk 9 --
// 2-submission.ts:175-183
async function storeSubmissionOnIPFS(signature: string): Promise<string> {
  console.log("[SUBMISSION] Storing submission on IPFS...");
  const cid = await storeFile({ signature }, "submission.json");
  if (!cid) {
    throw new Error("Failed to store submission on IPFS");
  }
  console.log("[SUBMISSION] Submission stored successfully. CID:", cid);
  return cid;
}

-- Chunk 10 --
// 2-submission.ts:185-188
async function cleanupSubmissionState(): Promise<void> {
  await namespaceWrapper.storeSet(`shouldMakeSubmission`, "false");
  await namespaceWrapper.storeSet(`swarmBountyId`, "");
}

=== File: node/documentation/worker/src/task/4-distribution.ts ===

-- Chunk 1 --
// 4-distribution.ts:5-8
async (roundNumber: number): Promise<Record<string, Submission>> => {
  const submissionInfo = await namespaceWrapper.getTaskSubmissionInfo(roundNumber);
  return submissionInfo?.submissions[roundNumber] || {};
}

-- Chunk 2 --
// 4-distribution.ts:9-15
async (submitters: Submitter[]): Promise<DistributionList> => {
  const distributionList: DistributionList = {};
  for (const submitter of submitters) {
    distributionList[submitter.publicKey] = 0;
  }
  return distributionList;
}

-- Chunk 3 --
// 4-distribution.ts:16-58
async (
  submitters: Submitter[],
  bounty: number,
  roundNumber: number,
): Promise<DistributionList> => {
  try {
    const distributionList: DistributionList = {};

    for (const submitter of submitters) {
      console.log(`\n[DISTRIBUTION] Processing submitter: ${submitter.publicKey}`);

      console.log(`[DISTRIBUTION] Getting submission list for round ${roundNumber}`);
      const submitterSubmissions = await getSubmissionList(roundNumber);
      console.log(`[DISTRIBUTION] Total submissions found: ${Object.keys(submitterSubmissions).length}`);

      const submitterSubmission = submitterSubmissions[submitter.publicKey];
      if (!submitterSubmission || submitterSubmission.submission_value === "") {
        console.log(`[DISTRIBUTION] ❌ No valid submission found for submitter ${submitter.publicKey}`);
        distributionList[submitter.publicKey] = 0;
        continue;
      }
      if (Object.values(status).includes(submitterSubmission.submission_value)) {
        distributionList[submitter.publicKey] = 0;
        continue;
      } else {
        // TODO: Check if I should include = 0 here
        if (submitter.votes >= 0) {
          distributionList[submitter.publicKey] = customReward;
        } else {
          distributionList[submitter.publicKey] = 0;
        }
      }
    }

    console.log(`[DISTRIBUTION] ✅ Distribution completed successfully`);
    console.log(`[DISTRIBUTION] Final distribution list:`, distributionList);
    return distributionList;
  } catch (error: any) {
    console.error(`[DISTRIBUTION] ❌ ERROR IN DISTRIBUTION:`, error);
    console.error(`[DISTRIBUTION] Error stack:`, error.stack);
    return {};
  }
};

=== File: node/documentation/worker/src/task/5-routes.ts ===

-- Chunk 1 --
// 5-routes.ts:16-165
async function routes() {
  app.get("/value", async (_req, res) => {
    const value = await namespaceWrapper.storeGet("value");
    console.log("value", value);
    res.status(200).json({ value: value });
  });

  app.get("/leader/:roundNumber/:submitterPublicKey", async (req, res) => {
    const roundNumber = req.params.roundNumber;
    const submitterPublicKey = req.params.submitterPublicKey;
    const { isLeader, leaderNode } = await getLeaderNode({
      roundNumber: Number(roundNumber),
      submitterPublicKey: submitterPublicKey,
    });
    res.status(200).json({ isLeader: isLeader, leaderNode: leaderNode });
  });

  app.get("/task/:roundNumber", async (req, res) => {
    console.log("task endpoint called with round number: ", req.params.roundNumber);
    const roundNumber = req.params.roundNumber;
    const taskResult = await task(Number(roundNumber));
    res.status(200).json({ result: taskResult });
  });
  app.get("/audit/:roundNumber/:cid/:submitterPublicKey", async (req, res) => {
    const cid = req.params.cid;
    const roundNumber = req.params.roundNumber;
    const submitterPublicKey = req.params.submitterPublicKey;
    const auditResult = await audit(cid, Number(roundNumber), submitterPublicKey);
    res.status(200).json({ result: auditResult });
  });
  app.get("/submission/:roundNumber", async (req, res) => {
    const roundNumber = req.params.roundNumber;
    const submissionResult = await submission(Number(roundNumber));
    res.status(200).json({ result: submissionResult });
  });

  app.get("/submitDistribution/:roundNumber", async (req, res) => {
    const roundNumber = req.params.roundNumber;
    const submitDistributionResult = await taskRunner.submitDistributionList(Number(roundNumber));
    res.status(200).json({ result: submitDistributionResult });
  });
  app.post("/add-todo-draft-pr", async (req, res) => {
    const signature = req.body.signature;
    const prUrl = req.body.prUrl;
    const swarmBountyId = req.body.swarmBountyId;
    console.log("[TASK] req.body", req.body);
    try {
      const publicKey = await namespaceWrapper.getMainAccountPubkey();
      const stakingKeypair = await namespaceWrapper.getSubmitterAccount();
      if (!stakingKeypair) {
        throw new Error("No staking key found");
      }
      const stakingKey = stakingKeypair.publicKey.toBase58();
      const secretKey = stakingKeypair.secretKey;


      if (!publicKey) {
        throw new Error("No public key found");
      }

      const payload = await namespaceWrapper.verifySignature(signature, stakingKey);
      if (!payload) {
        throw new Error("Invalid signature");
      }
      console.log("[TASK] payload: ", payload);
      const data = payload.data;
      if (!data) {
        throw new Error("No signature data found");
      }
      const jsonData = JSON.parse(data);
      if (jsonData.taskId !== TASK_ID) {
        throw new Error(`Invalid task ID from signature: ${jsonData.taskId}. Actual task ID: ${TASK_ID}`);
      }

      const middleServerPayload = {
        taskId: jsonData.taskId,
        swarmBountyId,
        prUrl,
        stakingKey,
        publicKey,
        action: "add-todo-draft-pr",
      };
      const middleServerSignature = await namespaceWrapper.payloadSigning(middleServerPayload, secretKey);
      const middleServerResponse = await fetch(`${middleServerUrl}/summarizer/worker/add-todo-draft-pr`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ signature: middleServerSignature, stakingKey: stakingKey }),
      });

      console.log("[TASK] Add Draft PR Response: ", middleServerResponse);

      if (middleServerResponse.status !== 200) {
        throw new Error(`Posting to middle server failed: ${middleServerResponse.statusText}`);
      }
      res.status(200).json({ result: "Successfully saved PR" });
    } catch (error) {
      console.error("[TASK] Error adding PR to summarizer todo:", error);
      // await namespaceWrapper.storeSet(`result-${roundNumber}`, status.SAVING_TODO_PR_FAILED);
      res.status(400).json({ error: "Failed to save PR" });
    }
  });

  app.post("/add-todo-pr", async (req, res) => {
    const signature = req.body.signature;
    const prUrl = req.body.prUrl;
    const swarmBountyId = req.body.swarmBountyId;
    const success = req.body.success;
    const message = req.body.message;
    console.log("[TASK] req.body", req.body);
    try {
      const publicKey = await namespaceWrapper.getMainAccountPubkey();
      const stakingKeypair = await namespaceWrapper.getSubmitterAccount();
      if (!stakingKeypair) {
        throw new Error("No staking key found");
      }
      const stakingKey = stakingKeypair.publicKey.toBase58();
      const secretKey = stakingKeypair.secretKey;
      if (!success) {
        const middleServerPayload = {
          taskId: TASK_ID,
          swarmBountyId,
          action: "add-todo-status",
          stakingKey,
        };
        const middleServerSignature = await namespaceWrapper.payloadSigning(middleServerPayload, secretKey);
        console.error("[TASK] Error summarizing repository:", message);
        console.log("[TASK] middleServerSignature", middleServerSignature);

        const middleServerResponse = await fetch(`${middleServerUrl}/summarizer/worker/add-todo-status`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ signature: middleServerSignature, stakingKey }),
        });
        if (middleServerResponse.status !== 200) {
          console.error("[TASK] Error posting to middle server:", middleServerResponse.statusText);
          // throw new Error(`Posting to middle server failed: ${middleServerResponse.statusText}`);
        }
        return;
      }

      if (!publicKey) {
        throw new Error("No public key found");
      }

      const payload = await namespaceWrapper.verifySignature(signature, stakingKey);
      if (!payload) {

-- Chunk 2 --
// 5-routes.ts:166-209
        throw new Error("Invalid signature");
      }
      console.log("[TASK] payload: ", payload);
      const data = payload.data;
      if (!data) {
        throw new Error("No signature data found");
      }
      const jsonData = JSON.parse(data);
      if (jsonData.taskId !== TASK_ID) {
        throw new Error(`Invalid task ID from signature: ${jsonData.taskId}. Actual task ID: ${TASK_ID}`);
      }

      const middleServerPayload = {
        taskId: jsonData.taskId,
        swarmBountyId,
        prUrl,
        stakingKey,
        publicKey,
        action: "add-todo-pr",
      };
      const middleServerSignature = await namespaceWrapper.payloadSigning(middleServerPayload, secretKey);
      const middleServerResponse = await fetch(`${middleServerUrl}/summarizer/worker/add-todo-pr`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ signature: middleServerSignature, stakingKey: stakingKey }),
      });

      console.log("[TASK] Add PR Response: ", middleServerResponse);

      if (middleServerResponse.status !== 200) {
        throw new Error(`Posting to middle server failed: ${middleServerResponse.statusText}`);
      }
      await namespaceWrapper.storeSet(`shouldMakeSubmission`, "true");
      await namespaceWrapper.storeSet(`swarmBountyId`, swarmBountyId.toString());
      res.status(200).json({ result: "Successfully saved PR" });
    } catch (error) {
      console.error("[TASK] Error adding PR to summarizer todo:", error);
      // await namespaceWrapper.storeSet(`result-${roundNumber}`, status.SAVING_TODO_PR_FAILED);
      res.status(400).json({ error: "Failed to save PR" });
    }
  });
}

-- Chunk 3 --
// 5-routes.ts:212-214
async (req, res) => {
  res.status(200).json({ result: "Successfully saved task result" });
}

=== File: node/documentation/worker/src/task/3-audit.ts ===

-- Chunk 1 --
// 3-audit.ts:9-85
async function auditWithTimeout(cid: string, roundNumber: number, submitterKey: string): Promise<boolean | void> {
  let orcaClient;
  try {
    orcaClient = await getOrcaClient();
    if (!orcaClient) {
      // await namespaceWrapper.storeSet(`result-${roundNumber}`, status.NO_ORCA_CLIENT);
      return;
    }
    // Check if the cid is one of the status
    if (Object.values(status).includes(cid)) {
      // This returns a dummy trued
      return true;
    }
    const decodeResult = await submissionJSONSignatureDecode({
      submission_value: cid,
      submitterPublicKey: submitterKey,
      roundNumber: roundNumber, // Decode using the actual round number
    });
    if (!decodeResult) {
      console.log("[AUDIT] DECODE RESULT FAILED.");
      return false;
    }
    console.log(`[AUDIT] ✅ Signature decoded successfully`);

    console.log(`[AUDIT] Checking summarizer status for submitter ${submitterKey}`);
    const checkSummarizerResponse = await fetch(`${middleServerUrl}/summarizer/worker/check-todo`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        stakingKey: submitterKey,
        roundNumber, // This round number doesn't matter
        githubUsername: decodeResult.githubUsername,
        prUrl: decodeResult.prUrl,
      }),
    });
    const checkSummarizerJSON = await checkSummarizerResponse.json();
    console.log(`[AUDIT] Summarizer check response:`, checkSummarizerJSON);

    if (!checkSummarizerJSON.success) {
      console.log(`[AUDIT] ❌ Audit failed for ${submitterKey}`);
      return false;
    }
    console.log(`[AUDIT] ✅ Summarizer check passed`);

    console.log(`[AUDIT] Sending audit request for submitter: ${submitterKey}`);
    console.log(`[AUDIT] Submission data being sent to audit:`, decodeResult);

    const auditResult = await orcaClient.podCall(`worker-audit/${decodeResult.roundNumber}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        submission: decodeResult,
      }),
    });
    console.log(`[AUDIT] Audit result:`, auditResult);
    const auditResultData = auditResult.data;

    if (auditResultData.success) {
      console.log(`[AUDIT] ✅ Audit successful for ${submitterKey}`);
      return auditResultData.data.is_approved;
    } else {
      console.log(`[AUDIT] ❌ Audit could not be completed for ${submitterKey}`);
      return true;
    }
  } catch (error) {
    console.error("[AUDIT] Error auditing submission:", error);
    return true; // Return false on error instead of undefined
  } finally {
    console.log("[AUDIT] Cleaning up resources");
  }
}

export a

-- Chunk 2 --
// 3-audit.ts:85-108
tion audit(cid: string, roundNumber: number, submitterKey: string): Promise<boolean | void> {
  let retries = 0;
  
  while (retries < MAX_RETRIES) {
    try {
      const result = await Promise.race<boolean | void>([
        auditWithTimeout(cid, roundNumber, submitterKey),
        new Promise((_, reject) => setTimeout(() => reject(new Error("Audit timeout")), TIMEOUT_MS)),
      ]);
      return result;
    } catch (error) {
      retries++;
      console.log(`[AUDIT] Attempt ${retries} failed:`, error);
      
      if (retries === MAX_RETRIES) {
        console.log(`[AUDIT] Max retries (${MAX_RETRIES}) reached. Giving up.`);
        return true; // Return true as a fallback
      }
      
      // Wait for a short time before retrying
      await new Promise(resolve => setTimeout(resolve, 5000));
    }
  }
}

=== File: node/documentation/worker/src/utils/leader.ts ===

-- Chunk 1 --
// leader.ts:5-58
async function fetchRoundSubmissionGitHubRepoOwner(
  roundNumber: number,
  submitterPublicKey: string,
): Promise<string | null> {
  try {
    const taskSubmissionInfo = await namespaceWrapper.getTaskSubmissionInfo(roundNumber);
    if (!taskSubmissionInfo) {
      console.error("NO TASK SUBMISSION INFO");
      return null;
    }
    const submissions = taskSubmissionInfo.submissions;
    // This should only have one round
    const lastRound = Object.keys(submissions).pop();
    if (!lastRound) {
      return null;
    }
    const lastRoundSubmissions = submissions[lastRound];
    const lastRoundSubmitterSubmission = lastRoundSubmissions[submitterPublicKey];
    console.log("lastRoundSubmitterSubmission", { lastRoundSubmitterSubmission });
    if (!lastRoundSubmitterSubmission) {
      return null;
    }
    const cid = lastRoundSubmitterSubmission.submission_value;
    const submissionString = await getFile(cid);
    const submission = JSON.parse(submissionString);
    console.log({ submission });

    // verify the signature of the submission
    const signaturePayload = await namespaceWrapper.verifySignature(submission.signature, submitterPublicKey);

    console.log({ signaturePayload });

    // verify the signature payload
    if (signaturePayload.error || !signaturePayload.data) {
      console.error("INVALID SIGNATURE");
      return null;
    }
    const data = JSON.parse(signaturePayload.data);

    if (data.taskId !== TASK_ID || data.stakingKey !== submitterPublicKey) {
      console.error("INVALID SIGNATURE DATA");
      return null;
    }
    if (!data.githubUsername) {
      console.error("NO GITHUB USERNAME");
      console.log("data", { data });
      return null;
    }
    return data.githubUsername;
  } catch (error) {
    console.error("FETCH LAST ROUND SUBMISSION GITHUB REPO OWNER ERROR:", error);
    return null;
  }
}

-- Chunk 2 --
// leader.ts:60-71
async function selectShortestDistance(keys: string[], submitterPublicKey: string): Promise<string> {
  let shortestDistance = Infinity;
  let closestKey = "";
  for (const key of keys) {
    const distance = knnDistance(submitterPublicKey, key);
    if (distance < shortestDistance) {
      shortestDistance = distance;
      closestKey = key;
    }
  }
  return closestKey;
}

-- Chunk 3 --
// leader.ts:73-80
async function getSubmissionInfo(roundNumber: number): Promise<any> {
  try {
    return await namespaceWrapper.getTaskSubmissionInfo(roundNumber);
  } catch (error) {
    console.error("GET SUBMISSION INFO ERROR:", error);
    return null;
  }
}

-- Chunk 4 --
// leader.ts:82-94
function calculatePublicKeyFrequency(submissions: any): Record<string, number> {
  const frequency: Record<string, number> = {};
  for (const round in submissions) {
    for (const publicKey in submissions[round]) {
      if (frequency[publicKey]) {
        frequency[publicKey]++;
      } else {
        frequency[publicKey] = 1;
      }
    }
  }
  return frequency;
}

-- Chunk 5 --
// leader.ts:96-104
function handleAuditTrigger(submissionAuditTrigger: any): Set<string> {
  const auditTriggerKeys = new Set<string>();
  for (const round in submissionAuditTrigger) {
    for (const publicKey in submissionAuditTrigger[round]) {
      auditTriggerKeys.add(publicKey);
    }
  }
  return auditTriggerKeys;
}

-- Chunk 6 --
// leader.ts:106-132
async function selectLeaderKey(
  sortedKeys: string[],
  leaderNumber: number,
  submitterPublicKey: string,
  submissionPublicKeysFrequency: Record<string, number>,
): Promise<string> {
  const topValue = sortedKeys[leaderNumber - 1];
  const count = sortedKeys.filter(
    (key) => submissionPublicKeysFrequency[key] >= submissionPublicKeysFrequency[topValue],
  ).length;

  if (count >= leaderNumber) {
    const rng = seedrandom(String(TASK_ID));
    const guaranteedKeys = sortedKeys.filter(
      (key) => submissionPublicKeysFrequency[key] > submissionPublicKeysFrequency[topValue],
    );
    const randomKeys = sortedKeys
      .filter((key) => submissionPublicKeysFrequency[key] === submissionPublicKeysFrequency[topValue])
      .sort(() => rng() - 0.5)
      .slice(0, leaderNumber - guaranteedKeys.length);
    const keys = [...guaranteedKeys, ...randomKeys];
    return await selectShortestDistance(keys, submitterPublicKey);
  } else {
    const keys = sortedKeys.slice(0, leaderNumber);
    return await selectShortestDistance(keys, submitterPublicKey);
  }
}

-- Chunk 7 --
// leader.ts:133-167
async function getRandomNodes(roundNumber: number, numberOfNodes: number): Promise<string[]> {
  console.log("Getting random nodes for round:", roundNumber, "with number of nodes:", numberOfNodes);
  const lastRoundSubmission = await getSubmissionInfo(roundNumber - 1);
  console.log("Last round submission:", lastRoundSubmission);
  if (!lastRoundSubmission) {
    return [];
  }

  const lastRoundSubmissions = lastRoundSubmission.submissions;
  console.log("Last round submissions:", lastRoundSubmissions);

  // Get the last round number
  const lastRound = Object.keys(lastRoundSubmissions).pop();
  if (!lastRound) {
    return [];
  }

  // Get the submissions for that round
  const submissions = lastRoundSubmissions[lastRound];
  console.log("Submissions:", submissions);
  const availableKeys = Object.keys(submissions);
  console.log("Available keys:", availableKeys);
  // If we have fewer submissions than requested nodes, return all available submissions
  if (availableKeys.length <= numberOfNodes) {
    return availableKeys;
  }

  const seed = TASK_ID + roundNumber.toString() || "default" + roundNumber;
  const rng = seedrandom(seed);
  // Use the keys from the submissions object
  const randomKeys = availableKeys.sort(() => rng() - 0.5).slice(0, numberOfNodes);

  console.log("Random keys:", randomKeys);
  return randomKeys;
}

-- Chunk 8 --
// leader.ts:170-219
async function getLeaderForRound(
  roundNumber: number,
  maxLeaderNumber: number,
  submitterPublicKey: string,
): Promise<{ chosenKey: string | null; leaderNode: string | null }> {
  if (roundNumber <= 0) {
    return { chosenKey: null, leaderNode: null };
  }

  const submissionPublicKeysFrequency: Record<string, number> = {};
  const submissionAuditTriggerKeys = new Set<string>();

  for (let i = 1; i < 5; i++) {
    const taskSubmissionInfo = await getSubmissionInfo(roundNumber - i);
    console.log({ taskSubmissionInfo });
    if (taskSubmissionInfo) {
      const submissions = taskSubmissionInfo.submissions;
      const frequency = calculatePublicKeyFrequency(submissions);
      Object.assign(submissionPublicKeysFrequency, frequency);

      const auditTriggerKeys = handleAuditTrigger(taskSubmissionInfo.submissions_audit_trigger);
      auditTriggerKeys.forEach((key) => submissionAuditTriggerKeys.add(key));
    }
  }

  const keysNotInAuditTrigger = Object.keys(submissionPublicKeysFrequency).filter(
    (key) => !submissionAuditTriggerKeys.has(key),
  );
  const sortedKeys = keysNotInAuditTrigger.sort(
    (a, b) => submissionPublicKeysFrequency[b] - submissionPublicKeysFrequency[a],
  );

  console.log({ sortedKeys });

  let chosenKey = null;

  const leaderNumber = sortedKeys.length < maxLeaderNumber ? sortedKeys.length : maxLeaderNumber;

  chosenKey = await selectLeaderKey(sortedKeys, leaderNumber, submitterPublicKey, submissionPublicKeysFrequency);

  // Find GitHub username for the chosen key
  for (let i = 1; i < 5; i++) {
    const githubUsername = await fetchRoundSubmissionGitHubRepoOwner(roundNumber - i, chosenKey);
    if (githubUsername) {
      return { chosenKey, leaderNode: githubUsername };
    }
  }

  return { chosenKey, leaderNode: null };
}

-- Chunk 9 --
// leader.ts:221-243
async function getLeaderNode({
  roundNumber,
  leaderNumber = 5,
  submitterPublicKey,
}: {
  roundNumber: number;
  leaderNumber?: number;
  submitterPublicKey: string;
}): Promise<{ isLeader: boolean; leaderNode: string | null }> {
  // Find leader for current round
  const currentLeader = await getLeaderForRound(roundNumber, leaderNumber, submitterPublicKey);
  console.log({ currentLeader });

  if (currentLeader.chosenKey === submitterPublicKey) {
    // If we're the leader, get the leader from 3 rounds ago
    const previousLeader = await getLeaderForRound(roundNumber - 3, leaderNumber, submitterPublicKey);
    console.log({ previousLeader });
    return { isLeader: true, leaderNode: previousLeader.leaderNode };
  }

  // Not the leader, return the current leader's info
  return { isLeader: false, leaderNode: currentLeader.leaderNode };
}

-- Chunk 10 --
// leader.ts:245-248
function base58ToNumber(char: string): number {
  const base58Chars = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
  return base58Chars.indexOf(char);
}

-- Chunk 11 --
// leader.ts:250-265
function knnDistance(a: string, b: string): number {
  if (a.length !== b.length) {
    throw new Error("Strings must be of the same length for KNN distance calculation.");
  }
  const truncatedA = a.slice(0, 30);
  const truncatedB = b.slice(0, 30);

  let distance = 0;
  for (let i = 0; i < truncatedA.length; i++) {
    const numA = base58ToNumber(truncatedA[i]);
    const numB = base58ToNumber(truncatedB[i]);
    distance += Math.abs(numA - numB);
  }

  return distance;
}

=== File: node/documentation/worker/src/utils/ipfs.ts ===

-- Chunk 1 --
// ipfs.ts:5-28
async function storeFile(data: any, filename: string = "submission.json"): Promise<string> {
  // Create a new instance of the Koii Storage Client
  const client = KoiiStorageClient.getInstance({});
  const basePath = await namespaceWrapper.getBasePath();
  try {
    // Write the data to a temp file
    fs.writeFileSync(`${basePath}/${filename}`, typeof data === "string" ? data : JSON.stringify(data));

    // Get the user staking account, to be used for signing the upload request
    const userStaking = await namespaceWrapper.getSubmitterAccount();
    if (!userStaking) {
      throw new Error("No staking keypair found");
    }

    // Upload the file to IPFS and get the CID
    const { cid } = await client.uploadFile(`${basePath}/${filename}`, userStaking);
    return cid;
  } catch (error) {
    throw error;
  } finally {
    // Delete the temp file
    fs.unlinkSync(`${basePath}/${filename}`);
  }
}

-- Chunk 2 --
// ipfs.ts:30-34
async function getFile(cid: string, filename: string = "submission.json"): Promise<string> {
  const storageClient = KoiiStorageClient.getInstance({});
  const fileBlob = await storageClient.getFile(cid, filename);
  return await fileBlob.text();
}

=== File: node/documentation/worker/src/utils/constant.ts ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/node/documentation/worker/src/utils/constant.ts:1-62
import dotenv from "dotenv";
dotenv.config();

export const status = {
  ISSUE_SUMMARIZATION_FAILED: "Issue summarization failed",
  // ISSUE_SUCCESSFULLY_SUMMARIZED: "Issue successfully summarized",
  NO_ISSUES_PENDING_TO_BE_SUMMARIZED: "No issues pending to be summarized",
  ROUND_LESS_THAN_OR_EQUAL_TO_1: "Round <= 1",
  NO_ORCA_CLIENT: "No orca client",
  NOT_SELECTED_AS_SUMMARIZER: "Not selected as summarizer",
  UNKNOWN_ERROR: "Unknown error",
  STAR_ISSUE_FAILED: "Star issue failed",
  GITHUB_CHECK_FAILED: "GitHub check failed",
  ANTHROPIC_API_KEY_INVALID: "Anthropic API key invalid",
  ANTHROPIC_API_KEY_NO_CREDIT: "Anthropic API key has no credit",
  NO_DATA_FOR_THIS_ROUND: "No data for this round",
  SAVING_TODO_PR_FAILED: "Summarizer todo PR not saved",
  SAVING_TODO_PR_SUCCEEDED: "Summarizer todo PR saved",
  NOT_FINISHED_TASK: "Not finished task",
  NO_SUBMISSION_BUT_SUBMISSION_CALLED: "No submission but submission called",
};

export const errorMessage = {
  ISSUE_FAILED_TO_BE_SUMMARIZED: "We couldn't summarize this issue. Please try again later.",
  ISSUE_SUCCESSFULLY_SUMMARIZED: "The issue was successfully summarized.",
  NO_ISSUES_PENDING_TO_BE_SUMMARIZED: "There are no issues waiting to be summarized at this time.",
  ROUND_LESS_THAN_OR_EQUAL_TO_1: "This operation requires a round number greater than 1.",
  NO_ORCA_CLIENT: "The Orca client is not available.",
  NO_CHOSEN_AS_ISSUE_SUMMARIZER: "You haven't been selected as an issue summarizer.",
  UNKNOWN_ERROR: "An unexpected error occurred. Please try again later.",
  STAR_ISSUE_FAILED: "We couldn't star the issue. Please try again later.",
  GITHUB_CHECK_FAILED: "The GitHub check failed. Please verify your GitHub Key.",
  ANTHROPIC_API_KEY_INVALID: "The Anthropic API Key is not valid. Please check your API key.",
  ANTHROPIC_API_KEY_NO_CREDIT: "Your Anthropic API key has no remaining credits.",
  NO_DATA_FOR_THIS_ROUND: "There is no data available for this round.",
  ISSUE_FAILED_TO_ADD_PR_TO_SUMMARIZER_TODO: "We couldn't add the PR to the summarizer todo list.",
};

export const actionMessage = {
  ISSUE_FAILED_TO_BE_SUMMARIZED: "We couldn't summarize this issue. Please try again later.",
  ISSUE_SUCCESSFULLY_SUMMARIZED: "The issue was successfully summarized.",
  NO_ISSUES_PENDING_TO_BE_SUMMARIZED: "There are no issues waiting to be summarized at this time.",
  ROUND_LESS_THAN_OR_EQUAL_TO_1: "This operation requires a round number greater than 1.",
  NO_ORCA_CLIENT: "Please click Orca icon to connect your Orca Pod.",
  NO_CHOSEN_AS_ISSUE_SUMMARIZER: "You haven't been selected as an issue summarizer.",
  UNKNOWN_ERROR: "An unexpected error occurred. Please try again later.",
  STAR_ISSUE_FAILED: "We couldn't star the issue. Please try again later.",
  GITHUB_CHECK_FAILED: "Please go to the env variable page to update your GitHub Key.",
  ANTHROPIC_API_KEY_INVALID:
    "Please follow the guide under task description page to set up your Anthropic API key correctly.",
  ANTHROPIC_API_KEY_NO_CREDIT: "Please add credits to continue.",
  NO_DATA_FOR_THIS_ROUND: "There is no data available for this round.",
  ISSUE_FAILED_TO_ADD_PR_TO_SUMMARIZER_TODO:
    "We couldn't add the PR to the summarizer todo list. Please try again later.",
};
/*********************THE CONSTANTS THAT PROD/TEST ARE DIFFERENT *********************/
export const defaultBountyMarkdownFile =
  "https://raw.githubusercontent.com/koii-network/prometheus-swarm-bounties/master/README.md";

export const customReward = 400 * 10 ** 9; // This should be in ROE!

export const middleServerUrl = "https://builder247-prod.dev.koii.network";

=== File: node/documentation/worker/src/utils/existingIssues.ts ===

-- Chunk 1 --
// existingIssues.ts:3-12
interface BountyIssue {
  githubUrl: string;
  projectName: string;
  bountyTask: string;
  description: string;
  bountyAmount: string;
  bountyType: string;
  transactionHash: string;
  status: string;
}

-- Chunk 2 --
// existingIssues.ts:14-93
async function getExistingIssues(): Promise<BountyIssue[]> {
  try {
    // read from the bounty markdown file
    //  console.log('Fetching markdown file from:', defaultBountyMarkdownFile);
    const bountyMarkdownFile = await fetch(defaultBountyMarkdownFile);
    const bountyMarkdownFileText = await bountyMarkdownFile.text();

    //  console.log('Raw markdown content:', bountyMarkdownFileText);

    const bountyMarkdownFileLines = bountyMarkdownFileText.split("\n");
    //  console.log('Number of lines:', bountyMarkdownFileLines.length);

    const issues: BountyIssue[] = [];
    let isTableStarted = false;

    for (const line of bountyMarkdownFileLines) {
      // Skip empty lines
      if (line.trim() === "") {
        //  console.log('Skipping empty line');
        continue;
      }

      //  console.log('Processing line:', line);

      // Skip the title line starting with #
      if (line.startsWith("#")) {
        //  console.log('Found title line:', line);
        continue;
      }

      // Skip the header and separator lines
      if (line.startsWith("|") && line.includes("GitHub URL")) {
        //console.log('Found header line');
        continue;
      }
      if (line.startsWith("|") && line.includes("-----")) {
        //  console.log('Found separator line');
        continue;
      }

      // Process table rows
      if (line.startsWith("|")) {
        isTableStarted = true;
        // Remove first and last | and split by |
        const cells = line
          .slice(1, -1)
          .split("|")
          .map((cell) => cell.trim());
        //  console.log('Parsed cells:', cells);

        // Extract GitHub URL and name from markdown link format [name](url)
        const githubUrlMatch = cells[0].match(/\[(.*?)\]\((.*?)\)/);
        //  console.log('GitHub URL match:', githubUrlMatch);

        const projectName = githubUrlMatch ? githubUrlMatch[1] : "";
        const githubUrl = githubUrlMatch ? githubUrlMatch[2] : "";

        const issue: BountyIssue = {
          githubUrl,
          projectName,
          bountyTask: cells[1],
          description: cells[3],
          bountyAmount: cells[4],
          bountyType: cells[5],
          transactionHash: cells[6],
          status: cells[7],
        };

        //  console.log('Created issue object:', issue);
        issues.push(issue);
      }
    }
    // Filter all issues with status "Initialized" && Bounty Task is Document & Summarize
    console.log("Final parsed issues number:", issues.length);
    return issues;
  } catch (error) {
    //  console.error('Error processing markdown:', error);
    throw error;
  }
}

-- Chunk 3 --
// existingIssues.ts:95-97
async function getInitializedDocumentSummarizeIssues(issues: BountyIssue[]) {
  return issues.filter((issue) => issue.status === "Initialized" && issue.bountyTask === "Document & Summarize");
}

=== File: node/documentation/worker/src/utils/submissionJSONSignatureDecode.ts ===

-- Chunk 1 --
// submissionJSONSignatureDecode.ts:6-47
async function submissionJSONSignatureDecode({
  submission_value,
  submitterPublicKey,
  roundNumber,
}: {
  submission_value: string;
  submitterPublicKey: string;
  roundNumber: number;
}) {
  let submissionString;
  try {
    console.log("Getting file from IPFS", submission_value);
    submissionString = await getFile(submission_value);
    console.log("submissionString", submissionString);
  } catch (error) {
    console.log("error", error);
    console.error("INVALID SIGNATURE DATA");
    return null;
  }
  // verify the signature of the submission
  const submission = JSON.parse(submissionString);
  console.log("submission", submission);
  const signaturePayload = await namespaceWrapper.verifySignature(submission.signature, submitterPublicKey);
  if (!signaturePayload.data) {
    console.error("INVALID SIGNATURE");
    return null;
  }
  const data = JSON.parse(signaturePayload.data);
  console.log("signaturePayload", signaturePayload);
  console.log("data", data);
  if (
    data.taskId !== TASK_ID ||
    data.roundNumber !== roundNumber ||
    data.stakingKey !== submitterPublicKey ||
    !data.pubKey ||
    !data.prUrl
  ) {
    console.error("INVALID SIGNATURE DATA");
    return null;
  }
  return data;
}

=== File: node/documentation/worker/src/utils/distributionList.ts ===

-- Chunk 1 --
// distributionList.ts:10-70
async function filterIneligibleNodes(
  distributionList: Record<string, number>,
  roundNumber: number,
): Promise<Record<string, any>> {
  const filteredDistributionList: Record<string, any> = {};

  if (Object.keys(distributionList).length === 0) {
    console.log("Distribution list is empty, skipping filterIneligibleNodes");
    return filteredDistributionList;
  }

  const taskSubmissionInfo = await namespaceWrapper.getTaskSubmissionInfo(roundNumber);
  if (!taskSubmissionInfo) {
    console.log("Task submission info is null, skipping filterIneligibleNodes");
    return filteredDistributionList;
  }

  const submissions = taskSubmissionInfo.submissions;

  for (const [stakingKey, amount] of Object.entries(distributionList)) {
    const numericAmount = amount as number;

    // Skip if amount is zero or negative (failed audit)
    if (numericAmount <= 0) {
      console.log("Skipping staking key:", stakingKey, "Amount:", numericAmount);
      continue;
    }

    // Find corresponding submission
    const submissionCID = submissions[roundNumber][stakingKey]["submission_value"];

    const submission = await getFile(submissionCID);

    // Skip if no submission found
    if (!submission) {
      console.log("No submission found, skipping staking key:", stakingKey);
      continue;
    }

    const submissionData = JSON.parse(submission);

    console.log("Staking key:", stakingKey, "Submission data:", submissionData);

    const payload = await namespaceWrapper.verifySignature(submissionData.signature, stakingKey);
    console.log("Payload:", payload);

    const payloadData = JSON.parse(payload.data || "{}");

    // Skip if submission has no PR URL or is a dummy submission
    if (!payloadData.prUrl || payloadData.prUrl === "none") {
      continue;
    }

    // Node is eligible, include in filtered list
    filteredDistributionList[stakingKey] = payloadData;
  }

  console.log("Filtered distribution list:", filteredDistributionList);

  return filteredDistributionList;
}

-- Chunk 2 --
// distributionList.ts:72-96
async function getDistributionList(roundNumber: number): Promise<Record<string, any> | null> {
  try {
    const taskDistributionInfo = await namespaceWrapper.getTaskDistributionInfo(roundNumber);
    if (!taskDistributionInfo) {
      console.log("Task distribution info is null, skipping task");
      return null;
    }
    const distribution = taskDistributionInfo.distribution_rewards_submission[roundNumber];
    const leaderStakingKey = Object.keys(distribution)[0];
    console.log("Fetching distribution list for round", roundNumber, "with leader staking key", leaderStakingKey);
    const distributionList = await namespaceWrapper.getDistributionList(leaderStakingKey, roundNumber);
    if (!distributionList) {
      console.log("Distribution list is null, skipping task");
      return null;
    }
    console.log("Raw distribution list:", distributionList);

    const parsedDistributionList: Record<string, number> = JSON.parse(distributionList);

    return await filterIneligibleNodes(parsedDistributionList, roundNumber);
  } catch (error) {
    console.error("Error fetching distribution list:", error);
    return null;
  }
}

=== File: node/documentation/worker/src/utils/check/checks.ts ===

-- Chunk 1 --
// checks.ts:8-57
async function preRunCheck(roundNumber: string) {
  if (!process.env.ANTHROPIC_API_KEY) {
    await namespaceWrapper.logMessage(
      LogLevel.Error,
      errorMessage.ANTHROPIC_API_KEY_INVALID,
      actionMessage.ANTHROPIC_API_KEY_INVALID,
    );
    await namespaceWrapper.storeSet(`result-${roundNumber}`, status.ANTHROPIC_API_KEY_INVALID);
    return false;
  }
  if (!isValidAnthropicApiKey(process.env.ANTHROPIC_API_KEY!)) {
    await namespaceWrapper.logMessage(
      LogLevel.Error,
      errorMessage.ANTHROPIC_API_KEY_INVALID,
      actionMessage.ANTHROPIC_API_KEY_INVALID,
    );
    await namespaceWrapper.storeSet(`result-${roundNumber}`, status.ANTHROPIC_API_KEY_INVALID);
    return false;
  }
  const isAnthropicAPIKeyValid = await checkAnthropicAPIKey(process.env.ANTHROPIC_API_KEY!);
  if (!isAnthropicAPIKeyValid) {
    await namespaceWrapper.logMessage(
      LogLevel.Error,
      errorMessage.ANTHROPIC_API_KEY_NO_CREDIT,
      actionMessage.ANTHROPIC_API_KEY_NO_CREDIT,
    );
    await namespaceWrapper.storeSet(`result-${roundNumber}`, status.ANTHROPIC_API_KEY_NO_CREDIT);
    return false;
  }
  if (!process.env.GITHUB_USERNAME || !process.env.GITHUB_TOKEN) {
    await namespaceWrapper.logMessage(
      LogLevel.Error,
      errorMessage.GITHUB_CHECK_FAILED,
      actionMessage.GITHUB_CHECK_FAILED,
    );
    await namespaceWrapper.storeSet(`result-${roundNumber}`, status.GITHUB_CHECK_FAILED);
    return false;
  }
  const isGitHubValid = await checkGitHub(process.env.GITHUB_USERNAME!, process.env.GITHUB_TOKEN!);
  if (!isGitHubValid) {
    await namespaceWrapper.logMessage(
      LogLevel.Error,
      errorMessage.GITHUB_CHECK_FAILED,
      actionMessage.GITHUB_CHECK_FAILED,
    );
    await namespaceWrapper.storeSet(`result-${roundNumber}`, status.GITHUB_CHECK_FAILED);
    return false;
  }
  return true;
}

=== File: node/documentation/worker/src/utils/check/anthropicCheck.ts ===

-- Chunk 1 --
// anthropicCheck.ts:1-4
function isValidAnthropicApiKey(key: string) {
  const regex = /^sk-ant-[a-zA-Z0-9_-]{32,}$/;
  return regex.test(key);
}

-- Chunk 2 --
// anthropicCheck.ts:6-35
async function checkAnthropicAPIKey(apiKey: string) {
  const response = await fetch("https://api.anthropic.com/v1/messages", {
    method: "POST",
    headers: {
      "x-api-key": apiKey,
      "anthropic-version": "2023-06-01",
      "content-type": "application/json",
    },
    body: JSON.stringify({
      model: "claude-3-opus-20240229", // or a cheaper model
      max_tokens: 1, // minimal usage
      messages: [{ role: "user", content: "Hi" }],
    }),
  });

  if (response.status === 200) {
    console.log("✅ API key is valid and has credit.");
    return true;
  } else {
    const data = await response.json().catch(() => ({}));
    if (response.status === 401) {
      console.log("❌ Invalid API key.");
    } else if (response.status === 403 && data.error?.message?.includes("billing")) {
      console.log("❌ API key has no credit or is not authorized.");
    } else {
      console.log("⚠️ Unexpected error:", data);
    }
    return false;
  }
}

=== File: node/documentation/worker/src/utils/check/githubCheck.ts ===

-- Chunk 1 --
// githubCheck.ts:1-15
async function checkGitHub(username: string, token: string) {
  // 1. Check username
  const userRes = await fetch(`https://api.github.com/users/${username}`);
  const isUsernameValid = userRes.status === 200;

  // 2. Check token
  const tokenRes = await fetch("https://api.github.com/user", {
    headers: {
      Authorization: `token ${token}`,
    },
  });
  const isTokenValid = tokenRes.status === 200;
  const isIdentityValid = await checkGitHubIdentity(username, token);
  return isIdentityValid && isUsernameValid && isTokenValid;
}

-- Chunk 2 --
// githubCheck.ts:17-36
async function checkGitHubIdentity(username: string, token: string) {
  const res = await fetch("https://api.github.com/user", {
    headers: {
      Authorization: `token ${token}`,
      Accept: "application/vnd.github.v3+json",
    },
  });

  if (res.status !== 200) {
    return false;
  }

  const data = await res.json();

  if (data.login.toLowerCase() !== username.toLowerCase()) {
    return false;
  }

  return true;
}

=== File: node/documentation/worker/src/utils/task/task.ts ===

-- Chunk 1 --
// task.ts:8-134
async function task() {
  while (true) {
    try {
      let requiredWorkResponse;
      const orcaClient = await getOrcaClient();
      // check if the env variable is valid
      const stakingKeypair = await namespaceWrapper.getSubmitterAccount()!;
      const pubKey = await namespaceWrapper.getMainAccountPubkey();
      if (!orcaClient || !stakingKeypair || !pubKey) {
        await namespaceWrapper.logMessage(LogLevel.Error, errorMessage.NO_ORCA_CLIENT, actionMessage.NO_ORCA_CLIENT);
        // Wait for 1 minute before retrying
        await new Promise((resolve) => setTimeout(resolve, 60000));
        continue;
      }
      const stakingKey = stakingKeypair.publicKey.toBase58();

      /****************** All these issues need to be generate a markdown file ******************/

      const signature = await namespaceWrapper.payloadSigning(
        {
          taskId: TASK_ID,
          // roundNumber: roundNumber,
          action: "fetch-todo",
          githubUsername: process.env.GITHUB_USERNAME,
          stakingKey: stakingKey,
        },
        stakingKeypair.secretKey,
      );

      const retryDelay = 60000; // 1 minute in milliseconds

      while (true) {
        requiredWorkResponse = await fetch(`${middleServerUrl}/summarizer/worker/fetch-todo`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ signature: signature, stakingKey: stakingKey }),
        });

        if (requiredWorkResponse.status === 200) {
          break;
        }

        console.log(
          `[TASK] Server returned status ${requiredWorkResponse.status}, retrying in ${retryDelay / 1000} seconds...`,
        );
        await new Promise((resolve) => setTimeout(resolve, retryDelay));
      }

      // check if the response is 200 after all retries
      if (!requiredWorkResponse || requiredWorkResponse.status !== 200) {
        // return;
        continue;
      }
      const requiredWorkResponseData = await requiredWorkResponse.json();
      console.log("[TASK] requiredWorkResponseData: ", requiredWorkResponseData);
      // const uuid = uuidv4();
      const alreadyAssigned = await namespaceWrapper.storeGet(JSON.stringify(requiredWorkResponseData.data.id));
      if (alreadyAssigned) {
        continue;
        // return;
      } else {
        await namespaceWrapper.storeSet(JSON.stringify(requiredWorkResponseData.data.id), "initialized");
      }

      const podcallPayload = {
        taskId: TASK_ID,
      };

      const podCallSignature = await namespaceWrapper.payloadSigning(podcallPayload, stakingKeypair.secretKey);

      const jsonBody = {
        task_id: TASK_ID,
        swarmBountyId: requiredWorkResponseData.data.id,
        repo_url: `https://github.com/${requiredWorkResponseData.data.repo_owner}/${requiredWorkResponseData.data.repo_name}`,
        podcall_signature: podCallSignature,
      };
      console.log("[TASK] jsonBody: ", jsonBody);
      try {
        const timeout = 100000; // 100 seconds timeout
        let repoSummaryResponse;
        let retryCount = 0;
        const maxRetries = 3;

        while (retryCount < maxRetries) {
          try {
            const podcallPromise = orcaClient.podCall(`worker-task`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(jsonBody),
            });

            const timeoutPromise = new Promise((_, reject) => 
              setTimeout(() => reject(new Error("Podcall timeout after 100 seconds")), timeout)
            );

            repoSummaryResponse = await Promise.race([podcallPromise, timeoutPromise]);
            console.log("[TASK] repoSummaryResponse: ", repoSummaryResponse);
            break; // If successful, break the retry loop
          } catch (error: any) {
            console.log(`[TASK] Podcall attempt ${retryCount + 1} failed:`, error);
            retryCount++;
            if (retryCount === maxRetries) {
              throw new Error(`Podcall failed after ${maxRetries} attempts: ${error.message}`);
            }
            console.log(`[TASK] Retrying in 10 seconds...`);
            await new Promise((resolve) => setTimeout(resolve, 10000)); // Wait 10 seconds before retry
          }
        }
      } catch (error) {
        //   await namespaceWrapper.storeSet(`result-${roundNumber}`, status.ISSUE_SUMMARIZATION_FAILED);
        console.error("[TASK] EXECUTE TASK ERROR:", error);
        continue;
      }
    } catch (error) {
      console.error("[TASK] EXECUTE TASK ERROR:", error);
      // Wait for 1 minute before retrying on error
      await new Promise((resolve) => setTimeout(resolve, 60000));
    }

    // Wait for 1 minute before starting the next iteration
    await new Promise((resolve) => setTimeout(resolve, 60000));
  }
}

=== File: orca-agent/README.md ===

=== File: orca-agent/requirements.txt ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/requirements.txt:1-18
aiohttp==3.11.16
anthropic==0.49.0
colorama==0.4.6
fastapi==0.115.12
Flask==3.1.0
GitPython==3.1.44
gunicorn==23.0.0
kno-sdk==1.3.7
linguist==0.1.1
openai==1.68.2
prometheus-swarm==0.1.5
prometheus_client==0.21.1
PyGithub==2.6.1
python-dotenv==1.1.0
SQLAlchemy==2.0.39
sqlmodel==0.0.24
uvicorn==0.34.1
Werkzeug==3.1.3

=== File: orca-agent/.env ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/.env:1-27
ANTHROPIC_API_KEY=sk-ant-api03-dRMIOfiDGxIlpIepmA8QUB8
# the token requires the repo scope
GITHUB_TOKEN=ghp_2jPKGyC3ON
GITHUB_USERNAME=HermanKoii
github_token=ghp_2jPKGyC3O

# for testing only
# these credentials must be different from the ones above
# they are used to create and delete test repositories
# the token requires the repo and delete_repo scopes
UPSTREAM_GITHUB_TOKEN=your_upstream_github_token
UPSTREAM_GITHUB_USERNAME=your_upstream_github_username

# for testing only
MIDDLE_SERVER_URL=http://localhost:3000

TASK_SYSTEM_PROMPT="You are an AI development assistant specializing in writing code and creating GitHub pull requests.
Follow these rules:
1. Create a new file in the /src directory.
2. Write a single Python function that accomplishes the assigned task.
3. Commit and push the changes to the remote repository.
4. Create a second new file in the /tests directory.
5. Write a series of tests that thoroughly test the function, including edge cases and error handling, using PyTest.
6. Commit and push the changes to the remote repository.
7. Run the tests to ensure they pass.
8. Continue to make commits and push them to the remote repository until the tests pass.
9. Validate code changes before submitting"

=== File: orca-agent/setup.md ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/setup.md:1-118
# 247 Builder

## Developing locally

Navigate to the correct directory:

```sh
cd builder/container
```

Set up a virtual environment and activate it:

```sh
python3 -m venv .venv
source .venv/bin/activate
```

Install dependencies:

```sh
pip install -r requirements.txt
```

Run tests:

```sh
python3 -m pytest tests/
```

Run the agent:

```sh
python3 main.py
```

## Developing in Docker

### Running the Flask Server

Navigate to the correct directory:

```sh
cd builder/container
```

Build the image:

```sh
docker build -t builder247 .
```

Run the container:

```sh
docker run builder247
```

You can also run with a mounted volume if you'd like to change files without updating the container:

```sh
docker run -v $(pwd):/app builder247
```

### Running Interactively (using the shell)

Navigate to the correct directory:

```sh
cd builder/container
```

Change this line in the Dockerfile:

```sh
CMD ["python", "main.py"]
```

to

```sh
CMD ["/bin/bash"]
```

Build the image:

```sh
docker build -t builder247.
```

Run the container with a mounted volume:

```sh
docker run -it -v $(pwd)/builder:/app builder247
```

This will give you access to your files within the container and run the container in interactive mode with shell access. You can then run tests inside the container using:

```sh
python -m pytest tests/
```

or

```sh
python3 -m pytest tests/
```

You can also run the flask server in the container with:

```sh
python main.py
```

To exit the container's shell:

```sh
exit
```

=== File: orca-agent/main.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/main.py:1-6
from src.server import create_app

app = create_app()

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080, debug=True)

=== File: orca-agent/build.sh ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/build.sh:1-3
# Copy the agent_framework package
cp -r ../../../agent-framework/prometheus_swarm .
cp ../../../agent-framework/setup.py .

=== File: orca-agent/.env.example ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/.env.example:1-26
ANTHROPIC_API_KEY=your_anthropic_api_key
# the token requires the repo scope
GITHUB_TOKEN=your_github_token
GITHUB_USERNAME=your_github_username

# for testing only
# these credentials must be different from the ones above
# they are used to create and delete test repositories
# the token requires the repo and delete_repo scopes
UPSTREAM_GITHUB_TOKEN=your_upstream_github_token
UPSTREAM_GITHUB_USERNAME=your_upstream_github_username

# for testing only
MIDDLE_SERVER_URL=http://localhost:3000

TASK_SYSTEM_PROMPT="You are an AI development assistant specializing in writing code and creating GitHub pull requests.
Follow these rules:
1. Create a new file in the /src directory.
2. Write a single Python function that accomplishes the assigned task.
3. Commit and push the changes to the remote repository.
4. Create a second new file in the /tests directory.
5. Write a series of tests that thoroughly test the function, including edge cases and error handling, using PyTest.
6. Commit and push the changes to the remote repository.
7. Run the tests to ensure they pass.
8. Continue to make commits and push them to the remote repository until the tests pass.
9. Validate code changes before submitting"

=== File: orca-agent/.dockerignore ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/.dockerignore:1-16
**/.env
**/.env.*

**/node_modules
**/dist
**/build
**/*.log
**/Dockerfile
**/docker-compose.yml
**/venv
**/.venv
**/*__pycache__
**/.pytest_cache
**/*.db
**/*.egg-info
**/*/repos/

=== File: orca-agent/setup.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/setup.py:1-8
from setuptools import setup, find_packages

setup(
    name="task-flow",
    version="0.1",
    packages=find_packages(include=["src", "src.*"]),
    python_requires=">=3.6",
)

=== File: orca-agent/src/types.py ===

-- Chunk 1 --
// types.py:4-12
class ToolDefinition(TypedDict):
    """Standard internal tool definition format."""

    name: str
    description: str
    parameters: Dict[str, str]  # JSON Schema object
    required: List[str]
    final_tool: bool
    function: Callable

-- Chunk 2 --
// types.py:15-20
class ToolCall(TypedDict):
    """Format for a tool call made by the LLM."""

    id: str  # Unique identifier for this tool call
    name: str  # name of tool being called
    arguments: Dict[str, Any]

-- Chunk 3 --
// types.py:23-33
class ToolOutput(TypedDict):
    """Standard output format for all tools.

    All tools must return a response in this format.
    The message field contains a human-readable description of what happened,
    which will be an error message if success is False.
    """

    success: bool  # Whether the tool execution was successful
    message: str  # Human-readable message about what happened (error message if success is False)
    data: Optional[Dict[str, Any]]  # Optional structured data from the tool

-- Chunk 4 --
// types.py:36-43
class ToolResponse(TypedDict):
    """Format for a tool execution response.

    Wraps a tool's output with its call ID for client handling.
    """

    tool_call_id: str  # ID of the tool call this is responding to
    output: ToolOutput  # The actual output from the tool

-- Chunk 5 --
// types.py:46-51
class PhaseResult(TypedDict):
    """Format for a phase result."""

    success: bool
    data: Dict[str, Any]
    error: Optional[str]

-- Chunk 6 --
// types.py:54-58
class ToolChoice(TypedDict):
    """Configuration for tool usage."""

    type: Literal["optional", "required", "required_any"]
    tool: Optional[str]  # Required only when type is "required"

-- Chunk 7 --
// types.py:61-65
class ToolConfig(TypedDict):
    """Configuration for tool usage."""

    tool_definitions: List[ToolDefinition]
    tool_choice: ToolChoice

-- Chunk 8 --
// types.py:68-72
class TextContent(TypedDict):
    """Format for plain text content."""

    type: Literal["text"]
    text: str

-- Chunk 9 --
// types.py:75-79
class ToolCallContent(TypedDict):
    """Format for tool call content."""

    type: Literal["tool_call"]
    tool_call: ToolCall

-- Chunk 10 --
// types.py:82-86
class ToolResponseContent(TypedDict):
    """Format for tool response content."""

    type: Literal["tool_response"]
    tool_response: ToolResponse

-- Chunk 11 --
// types.py:89-93
class MessageContent(TypedDict):
    """Standard internal message format."""

    role: Literal["user", "assistant", "system", "tool"]
    content: Union[str, List[Union[TextContent, ToolCall, ToolResponseContent]]]

=== File: orca-agent/src/workflows/repoMetadataKno/workflow.py ===

-- Chunk 1 --
// workflow.py:23-44
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:47-196
class RepoMetadataKnoWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        repo_url,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = repo_url.strip("/").split("/")
        repo_owner = parts[-2]
        repo_name = parts[-1]

        super().__init__(
            client=client,
            prompts=prompts,
            repo_url=repo_url,
            repo_owner=repo_owner,
            repo_name=repo_name,
        )
        self._cleanup_required = False

    @contextlib.contextmanager
    def managed_workflow(self):
        """Context manager to ensure proper cleanup."""
        try:
            self.setup()
            self._cleanup_required = True
            yield self
        except Exception as e:
            log_error(e, "Error during workflow execution")
            raise
        finally:
            if self._cleanup_required:
                exit(1)
                # self.cleanup()

    def setup(self):
        try:
            """Set up repository and workspace."""
            check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
            validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))

            # Get the default branch from GitHub
            try:
                gh = Github(os.getenv("GITHUB_TOKEN"))
                self.context["repo_full_name"] = (
                    f"{self.context['repo_owner']}/{self.context['repo_name']}"
                )

                repo = gh.get_repo(
                    f"{self.context['repo_owner']}/{self.context['repo_name']}"
                )
                self.context["base"] = repo.default_branch
                log_key_value("Default branch", self.context["base"])
            except Exception as e:
                log_error(e, "Failed to get default branch, using 'main'")
                self.context["base"] = "main" 
                

            # Set up repository directory
            setup_result = setup_repository(self.context["repo_url"], github_token=os.getenv("GITHUB_TOKEN"), github_username=os.getenv("GITHUB_USERNAME"))
            if not setup_result["success"]:
                raise Exception(f"Failed to set up repository: {setup_result['message']}")
            self.context["github_token"] = os.getenv("GITHUB_TOKEN")
            self.context["repo_path"] = setup_result["data"]["clone_path"]
            self.original_dir = setup_result["data"]["original_dir"]
            self.context["fork_url"] = setup_result["data"]["fork_url"]
            self.context["fork_owner"] = setup_result["data"]["fork_owner"]
            self.context["fork_name"] = setup_result["data"]["fork_name"]

            # Enter repo directory
            os.chdir(self.context["repo_path"])
        except Exception as e:
            log_error(e, "Error during setup")
            raise
        # Configure Git user info
        # setup_git_user_config(self.context["repo_path"])

        # Get current files for context

    def cleanup(self):
        """Cleanup workspace."""
        try:
            # Make sure we're not in the repo directory before cleaning up
            if os.getcwd() == self.context.get("repo_path", ""):
                os.chdir(self.original_dir)
            
            log_key_value("Cleaning up repository", self.context.get("repo_path", ""))
            
            # Clean up the repository directory
            if self.context.get("repo_path"):
                cleanup_repository(self.original_dir, self.context["repo_path"])
            
            # Clean up any temporary files or resources
            self._cleanup_temporary_resources()
            
            # Reset cleanup flag
            self._cleanup_required = False
            
        except Exception as e:
            log_error(e, "Error during cleanup")
            # Don't raise the exception to ensure cleanup continues
            pass

    def _cleanup_temporary_resources(self):
        """Clean up any temporary resources created during workflow execution."""
        # Add any additional cleanup steps here
        pass

    def run(self):
        with self.managed_workflow():
            linguist = Linguist()
            languages = linguist.analyze_project(self.context["repo_path"])
         
            index = index_repo(Path(self.context["repo_path"]))
            system_prompt = """
            You are a senior code-analysis agent working on the repository below.

            Your job is to systematically gather information and then summarize your findings.
            """
            
            prompt = f"""
                    Before making any changes, can you summarize the architecture and key components of this GitHub repo as you understand it from the current context? 
                    Please include the main technologies used, key folders/files, and the primary functionality implemented by reading all the important files.
                    If you are missing any crucial files or information, mention that too.
                    Below is the list of languages used in the repository:
                    {languages}
                """
                
            format = """f
                ```json
                {{
                "name": "example-project",
                "description": "A cross-platform desktop application for note-taking and task management.",
                "repository_url": "https://github.com/username/example-project",
                
                "primary_language": "C++",
                "languages_used": [
                    {{"language": "C++", "percentage": 85.0}},
                    {{"language": "QML", "percentage": 10.0}},
                    {{"language": "Shell", "percentage": 5.0}}
                ],

                "frameworks_used": [
                    {{"name": "Qt", "version": "6.5"}},
                    {{"name": "Boost", "version": "1.81"}}
                ],

                "build_tools_used": [

-- Chunk 3 --
// workflow.py:197-261
                    {{"name": "CMake", "version": "3.27"}},
                    {{"name": "Make"}}
                ],

                "test_frameworks_used": [
                    {{"name": "Catch2", "version": "3.3"}}
                ],

                "linters_used": [
                    {{"name": "clang-tidy"}},
                    {{"name": "cppcheck"}}
                ],

                "ci_cd_tools": ["GitHub Actions"],
                "ci_cd_config_files": [".github/workflows/build.yml"],

                "packaging_method": "CMake + CPack",
                "packaging_output_formats": [".tar.gz", ".deb"],

                "deployment_type": "desktop",
                "deployment_platforms": ["Linux", "Windows", "macOS"],

                "application_type": "Desktop",
                "core_features": [
                    "Note editing and formatting",
                    "Task tagging and reminders",
                    "Sync with local filesystem"
                ],

                "authentication_used": false,

                "data_storage_type": "Local",
                "data_storage_format": "SQLite database",
                "data_storage_models": 7,

                "external_dependencies": [
                    {{"name": "sqlite", "version": "3.39"}},
                    {{"name": "zlib", "version": "1.2.13"}}
                ]
                }}
            """

            index = load_index(Path(self.context["repo_path"]))
            print("loaded index", index)
            resp = agent_query(
                repo_index=index,
                llm_system_prompt=system_prompt,
                prompt=prompt,
                MODEL_API_KEY=os.environ.get("ANTHROPIC_API_KEY"),
                output_format=format
            )
            print(resp)
            # Response contains ```json```, we need to extract the json from it
            resp = resp.split("```json")[1].split("```")[0]
            print(resp)
            # Convert the json string to a json object
            resp = json.loads(resp)
            print(resp)
            return {
                "success": True,
                "message": "Repository indexing complete",
                "data": {
                     resp
                }
            }

=== File: orca-agent/src/workflows/repoMetadataKno/linguist.py ===

-- Chunk 1 --
// linguist.py:6-66
class Linguist:
    def __init__(self):
        self.language_stats = defaultdict(int)
        self.total_bytes = 0
    
    def _is_binary(self, filepath):
        """Check if a file is binary."""
        try:
            with open(filepath, 'tr') as check_file:
                check_file.read()
                return False
        except UnicodeDecodeError:
            return True
    
    def _should_analyze(self, filepath):
        """Determine if a file should be analyzed."""
        # Skip hidden files and directories
        if any(part.startswith('.') for part in filepath.split(os.sep)):
            return False
            
        # Skip common binary file extensions
        binary_extensions = {'.pyc', '.so', '.dll', '.exe', '.bin'}
        if os.path.splitext(filepath)[1].lower() in binary_extensions:
            return False
            
        # Skip binary files
        if self._is_binary(filepath):
            return False
            
        return True
    
    def analyze_project(self, project_path):
        """Analyze a project directory and return language statistics."""
        for root, _, files in os.walk(project_path):
            for file in files:
                filepath = os.path.join(root, file)
                
                if not self._should_analyze(filepath):
                    continue
                    
                try:
                    with open(filepath, 'r', encoding='utf-8') as f:
                        content = f.read()
                        file_size = len(content.encode('utf-8'))
                        
                        try:
                            lexer = guess_lexer_for_filename(filepath, content)
                            self.language_stats[lexer.name] += file_size
                            self.total_bytes += file_size
                        except ClassNotFound:
                            continue
                except (IOError, UnicodeDecodeError):
                    continue
        
        # Convert byte counts to percentages
        if self.total_bytes > 0:
            return {
                lang: (bytes_count / self.total_bytes) * 100
                for lang, bytes_count in self.language_stats.items()
            }
        return {}

=== File: orca-agent/src/workflows/repoMetadataKno/phases.py ===

-- Chunk 1 --
// phases.py:7-15
class RepoClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_repository",
            available_tools=["read_file", "list_files", "classify_repository", ],
            conversation_id=conversation_id,
            name="Repository Classification",
        )

-- Chunk 2 --
// phases.py:17-25
class LanguageClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_language",
            available_tools=["read_file", "list_files", "classify_language"],
            conversation_id=conversation_id,
            name="Language Classification",
        )

-- Chunk 3 --
// phases.py:27-35
class TestFrameworkClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_test_framework",
            available_tools=["read_file", "list_files", "classify_test_framework"],
            conversation_id=conversation_id,
            name="Test Framework Classification",
        )

-- Chunk 4 --
// phases.py:37-45
class ReadmeGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_readme",
            available_tools=["read_file", "list_files", "generate_readme"],
            conversation_id=conversation_id,
            name="Readme Generation",
        )

=== File: orca-agent/src/workflows/repoMetadataKno/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/src/workflows/repoMetadataKno/prompts.py:1-72
"""Prompts for the repository summarization workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in summarizing "
        "repositories into comprehensive documentation. You excel at analyzing codebases "
        "and creating clear, structured documentation."
    ),
    "classify_repository": (
        "Analyze the repository structure and identify the type of repository this is.\n"
        "Use the `classify_repository` tool to report your choice.\n"
        "You must choose one of the following repository types:\n"
        "- Library/SDK: Code meant to be imported and used by other developers\n"
        "- Web App: Frontend or full-stack web application\n"
        "- API Service: Server-side application providing APIs\n"
        "- Mobile App: Native or cross-platform mobile app\n"
        "- Tutorial: Educational repository demonstrating techniques\n"
        "- Template: Starter code for new projects\n"
        "- CLI Tool: Command-line interface application\n"
        "- Framework: Foundational structure for building applications\n"
        "- Data Science: Machine learning or data analysis project\n"
        "- Plugin: Extension or module for a larger system (e.g., CMS, IDE, platform)\n"
        "- Chrome Extension: Browser extension targeting the Chrome platform\n"
        "- Jupyter Notebook: Interactive code notebooks, often for demos or research\n"
        "- Infrastructure: Configuration or automation code (e.g., Docker, Terraform)\n"
        "- Smart Contract: Blockchain smart contracts, typically written in Solidity, Rust, etc.\n"
        "- DApp: Decentralized application with both smart contract and frontend components\n"
        "- Game: Codebase for a game or game engine (2D, 3D, or browser-based)\n"
        "- Desktop App: GUI application for desktop environments (e.g., Electron, Qt, Tauri)\n"
        "- Dataset: Repository containing structured data for analysis or training\n"
        "- None: If repository is not programming related\n"
        "- Other: If it doesn't fit into any of the above categories\n"
    ),
    "classify_language": (
        "Analyze the repository and identify the primary programming language(s) used.\n"
        "Use the `classify_language` tool to report your choice.\n"
        "You must choose one or more of the following languages:\n"
        "- Python\n"
        "- JavaScript/TypeScript\n"
        "- Java\n"
        "- C/C++\n"
        "- Go\n"
        "- Rust\n"
        "- Ruby\n"
        "- PHP\n"
        "- Swift\n"
        "- Kotlin\n"
        "- Scala\n"
        "- R\n"
        "- Shell Script\n"
        "- None: If repository is not programming related\n"
        "- Other: If it doesn't fit into any of the above categories\n"
    ),
    "classify_test_framework": (
        "Analyze the repository and identify the test framework(s) used.\n"
        "Use the `classify_test_framework` tool to report your choice.\n"
        "You must choose one or more of the following test frameworks:\n"
        "- pytest (Python)\n"
        "- unittest (Python)\n"
        "- Jest (JavaScript)\n"
        "- Mocha (JavaScript)\n"
        "- JUnit (Java)\n"
        "- TestNG (Java)\n"
        "- Go testing (Go)\n"
        "- RSpec (Ruby)\n"
        "- PHPUnit (PHP)\n"
        "- XCTest (Swift)\n"
        "- Kotest (Kotlin)\n"
        "- None: If no test framework is detected\n"
        "- Other: If it doesn't fit into any of the above categories\n"
    ),
}

=== File: orca-agent/src/workflows/repoMetadataKno/__main__.py ===

-- Chunk 1 --
// __main__.py:14-48
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Classify a GitHub repository"
    )
    parser.add_argument(
        "--repo",
        type=str,
        required=True,
        help="GitHub repository URL (e.g., https://github.com/owner/repo)",
    )

    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )
    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = RepoMetadataKnoWorkflow(
        client=client,
        prompts=PROMPTS,
        repo_url=args.repo,
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Repo classifier workflow failed")
        sys.exit(1)

=== File: orca-agent/src/workflows/repoClassifier/workflow.py ===

-- Chunk 1 --
// workflow.py:17-38
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:41-190
class RepoClassifierWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        repo_url,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = repo_url.strip("/").split("/")
        repo_owner = parts[-2]
        repo_name = parts[-1]

        super().__init__(
            client=client,
            prompts=prompts,
            repo_url=repo_url,
            repo_owner=repo_owner,
            repo_name=repo_name,
        )
        self._cleanup_required = False

    @contextlib.contextmanager
    def managed_workflow(self):
        """Context manager to ensure proper cleanup."""
        try:
            self.setup()
            self._cleanup_required = True
            yield self
        except Exception as e:
            log_error(e, "Error during workflow execution")
            raise
        finally:
            if self._cleanup_required:
                self.cleanup()

    def setup(self):
        try:
            """Set up repository and workspace."""
            check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
            validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))

            # Get the default branch from GitHub
            try:
                gh = Github(os.getenv("GITHUB_TOKEN"))
                self.context["repo_full_name"] = (
                    f"{self.context['repo_owner']}/{self.context['repo_name']}"
                )

                repo = gh.get_repo(
                    f"{self.context['repo_owner']}/{self.context['repo_name']}"
                )
                self.context["base"] = repo.default_branch
                log_key_value("Default branch", self.context["base"])
            except Exception as e:
                log_error(e, "Failed to get default branch, using 'main'")
                self.context["base"] = "main" 
                

            # Set up repository directory
            setup_result = setup_repository(self.context["repo_url"], github_token=os.getenv("GITHUB_TOKEN"), github_username=os.getenv("GITHUB_USERNAME"))
            if not setup_result["success"]:
                raise Exception(f"Failed to set up repository: {setup_result['message']}")
            self.context["github_token"] = os.getenv("GITHUB_TOKEN")
            self.context["repo_path"] = setup_result["data"]["clone_path"]
            self.original_dir = setup_result["data"]["original_dir"]
            self.context["fork_url"] = setup_result["data"]["fork_url"]
            self.context["fork_owner"] = setup_result["data"]["fork_owner"]
            self.context["fork_name"] = setup_result["data"]["fork_name"]

            # Enter repo directory
            os.chdir(self.context["repo_path"])
        except Exception as e:
            log_error(e, "Error during setup")
            raise
        # Configure Git user info
        # setup_git_user_config(self.context["repo_path"])

        # Get current files for context

    def cleanup(self):
        """Cleanup workspace."""
        try:
            # Make sure we're not in the repo directory before cleaning up
            if os.getcwd() == self.context.get("repo_path", ""):
                os.chdir(self.original_dir)
            
            log_key_value("Cleaning up repository", self.context.get("repo_path", ""))
            
            # Clean up the repository directory
            if self.context.get("repo_path"):
                cleanup_repository(self.original_dir, self.context["repo_path"])
            
            # Clean up any temporary files or resources
            self._cleanup_temporary_resources()
            
            # Reset cleanup flag
            self._cleanup_required = False
            
        except Exception as e:
            log_error(e, "Error during cleanup")
            # Don't raise the exception to ensure cleanup continues
            pass

    def _cleanup_temporary_resources(self):
        """Clean up any temporary resources created during workflow execution."""
        # Add any additional cleanup steps here
        pass

    def run(self):
        with self.managed_workflow():
            repoMetadata = {}
            max_retries = 3
            
            # Helper function to extract pure string from classification result
            def extract_value(result, key):
                if result.get("success") and result.get("data", {}).get(key):
                    return result["data"][key]
                return None
            
            # Helper function to retry classification
            def retry_classification(phase_class, retries=max_retries):
                for attempt in range(retries):
                    try:
                        result = phase_class(self).execute()
                        if result.get("success"):
                            return result
                        if attempt < retries - 1:
                            log_error(f"Attempt {attempt + 1} failed, retrying...")
                    except Exception as e:
                        log_error(e, f"Error during classification attempt {attempt + 1}")
                        if attempt == retries - 1:
                            raise
                return result
            
            try:
                # Get repository type with retry
                repo_type_result = retry_classification(phases.RepoClassificationPhase)
                repoMetadata["repo_type"] = extract_value(repo_type_result, "repo_type")
                
                # Get language with retry
                language_result = retry_classification(phases.LanguageClassificationPhase)
                repoMetadata["language"] = extract_value(language_result, "language")
                
                # Get test framework with retry
                test_framework_result = retry_classification(phases.TestFrameworkClassificationPhase)
                repoMetadata["test_framework"] = extract_value(test_framework_result, "test_framework")
                
                # Check if all classifications were successful
                success = all([

-- Chunk 3 --
// workflow.py:191-206
                    repoMetadata["repo_type"],
                    repoMetadata["language"],
                    repoMetadata["test_framework"]
                ])
                
                log_key_value("Repository metadata", repoMetadata)
                
                return {
                    "success": success,
                    "message": "Repository classification complete" if success else "Repository classification failed",
                    "data": repoMetadata,
                }
                
            except Exception as e:
                log_error(e, "Error during repository classification")
                raise

=== File: orca-agent/src/workflows/repoClassifier/phases.py ===

-- Chunk 1 --
// phases.py:7-15
class RepoClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_repository",
            available_tools=["read_file", "list_files", "classify_repository", ],
            conversation_id=conversation_id,
            name="Repository Classification",
        )

-- Chunk 2 --
// phases.py:17-25
class LanguageClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_language",
            available_tools=["read_file", "list_files", "classify_language"],
            conversation_id=conversation_id,
            name="Language Classification",
        )

-- Chunk 3 --
// phases.py:27-35
class TestFrameworkClassificationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="classify_test_framework",
            available_tools=["read_file", "list_files", "classify_test_framework"],
            conversation_id=conversation_id,
            name="Test Framework Classification",
        )

-- Chunk 4 --
// phases.py:37-45
class ReadmeGenerationPhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="generate_readme",
            available_tools=["read_file", "list_files", "generate_readme"],
            conversation_id=conversation_id,
            name="Readme Generation",
        )

=== File: orca-agent/src/workflows/repoClassifier/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/src/workflows/repoClassifier/prompts.py:1-72
"""Prompts for the repository summarization workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in summarizing "
        "repositories into comprehensive documentation. You excel at analyzing codebases "
        "and creating clear, structured documentation."
    ),
    "classify_repository": (
        "Analyze the repository structure and identify the type of repository this is.\n"
        "Use the `classify_repository` tool to report your choice.\n"
        "You must choose one of the following repository types:\n"
        "- Library/SDK: Code meant to be imported and used by other developers\n"
        "- Web App: Frontend or full-stack web application\n"
        "- API Service: Server-side application providing APIs\n"
        "- Mobile App: Native or cross-platform mobile app\n"
        "- Tutorial: Educational repository demonstrating techniques\n"
        "- Template: Starter code for new projects\n"
        "- CLI Tool: Command-line interface application\n"
        "- Framework: Foundational structure for building applications\n"
        "- Data Science: Machine learning or data analysis project\n"
        "- Plugin: Extension or module for a larger system (e.g., CMS, IDE, platform)\n"
        "- Chrome Extension: Browser extension targeting the Chrome platform\n"
        "- Jupyter Notebook: Interactive code notebooks, often for demos or research\n"
        "- Infrastructure: Configuration or automation code (e.g., Docker, Terraform)\n"
        "- Smart Contract: Blockchain smart contracts, typically written in Solidity, Rust, etc.\n"
        "- DApp: Decentralized application with both smart contract and frontend components\n"
        "- Game: Codebase for a game or game engine (2D, 3D, or browser-based)\n"
        "- Desktop App: GUI application for desktop environments (e.g., Electron, Qt, Tauri)\n"
        "- Dataset: Repository containing structured data for analysis or training\n"
        "- None: If repository is not programming related\n"
        "- Other: If it doesn't fit into any of the above categories\n"
    ),
    "classify_language": (
        "Analyze the repository and identify the primary programming language(s) used.\n"
        "Use the `classify_language` tool to report your choice.\n"
        "You must choose one or more of the following languages:\n"
        "- Python\n"
        "- JavaScript/TypeScript\n"
        "- Java\n"
        "- C/C++\n"
        "- Go\n"
        "- Rust\n"
        "- Ruby\n"
        "- PHP\n"
        "- Swift\n"
        "- Kotlin\n"
        "- Scala\n"
        "- R\n"
        "- Shell Script\n"
        "- None: If repository is not programming related\n"
        "- Other: If it doesn't fit into any of the above categories\n"
    ),
    "classify_test_framework": (
        "Analyze the repository and identify the test framework(s) used.\n"
        "Use the `classify_test_framework` tool to report your choice.\n"
        "You must choose one or more of the following test frameworks:\n"
        "- pytest (Python)\n"
        "- unittest (Python)\n"
        "- Jest (JavaScript)\n"
        "- Mocha (JavaScript)\n"
        "- JUnit (Java)\n"
        "- TestNG (Java)\n"
        "- Go testing (Go)\n"
        "- RSpec (Ruby)\n"
        "- PHPUnit (PHP)\n"
        "- XCTest (Swift)\n"
        "- Kotest (Kotlin)\n"
        "- None: If no test framework is detected\n"
        "- Other: If it doesn't fit into any of the above categories\n"
    ),
}

=== File: orca-agent/src/workflows/repoClassifier/__main__.py ===

-- Chunk 1 --
// __main__.py:14-48
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Classify a GitHub repository"
    )
    parser.add_argument(
        "--repo",
        type=str,
        required=True,
        help="GitHub repository URL (e.g., https://github.com/owner/repo)",
    )

    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )
    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = RepoClassifierWorkflow(
        client=client,
        prompts=PROMPTS,
        repo_url=args.repo,
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Repo classifier workflow failed")
        sys.exit(1)

=== File: orca-agent/src/workflows/repoSummarizerAudit/workflow.py ===

-- Chunk 1 --
// workflow.py:17-38
class Task:
    def __init__(self, title: str, description: str, acceptance_criteria: list[str]):
        self.title = title
        self.description = description
        self.acceptance_criteria = acceptance_criteria

    def to_dict(self) -> dict:
        """Convert task to dictionary format."""
        return {
            "title": self.title,
            "description": self.description,
            "acceptance_criteria": self.acceptance_criteria,
        }

    @classmethod
    def from_dict(cls, data: dict) -> "Task":
        """Create task from dictionary."""
        return cls(
            title=data["title"],
            description=data["description"],
            acceptance_criteria=data["acceptance_criteria"],
        )

-- Chunk 2 --
// workflow.py:41-162
class repoSummarizerAuditWorkflow(Workflow):
    def __init__(
        self,
        client,
        prompts,
        pr_url,
    ):
        # Extract owner and repo name from URL
        # URL format: https://github.com/owner/repo
        parts = pr_url.strip("/").split("/")
        repo_owner = parts[-4]
        repo_name = parts[-3]
        pr_number = int(parts[-1])  # Convert to integer
        super().__init__(
            client=client,
            prompts=prompts,
            repo_owner=repo_owner,
            repo_name=repo_name,
            pr_number=pr_number,
        )
        self.context["pr_number"] = pr_number
        self.context["pr_url"] = pr_url
        self.context["repo_owner"] = repo_owner
        self.context["repo_name"] = repo_name
        self.context["repo_full_name"] = f"{repo_owner}/{repo_name}"

    def setup(self):
        """Set up repository and workspace."""
        # Check required environment variables and validate GitHub auth
        check_required_env_vars(["GITHUB_TOKEN", "GITHUB_USERNAME"])
        validate_github_auth(os.getenv("GITHUB_TOKEN"), os.getenv("GITHUB_USERNAME"))
        self.context["repo_url"] = f"https://github.com/{self.context['repo_owner']}/{self.context['repo_name']}"
        # Set up repository directory
        setup_result = setup_repository(self.context["repo_url"], github_token=os.getenv("GITHUB_TOKEN"), github_username=os.getenv("GITHUB_USERNAME"))
        if not setup_result["success"]:
            raise Exception(f"Failed to set up repository: {setup_result['message']}")
            
        self.context["repo_path"] = setup_result["data"]["clone_path"]
        self.original_dir = setup_result["data"]["original_dir"]
        self.context["fork_url"] = setup_result["data"]["fork_url"]
        self.context["fork_owner"] = setup_result["data"]["fork_owner"]
        self.context["fork_name"] = setup_result["data"]["fork_name"]
        self.context["github_token"] = os.getenv("GITHUB_TOKEN")
        # Enter repo directory
        os.chdir(self.context["repo_path"])
        gh = Github(self.context["github_token"])
        repo = gh.get_repo(
            f"{self.context['repo_owner']}/{self.context['repo_name']}"
        )
        pr = repo.get_pull(self.context["pr_number"])
        self.context["pr"] = pr
        # Add remote for PR's repository and fetch the branch
        os.system(
            f"git remote add pr_source https://github.com/{pr.head.repo.full_name}"
        )
        os.system(f"git fetch pr_source {pr.head.ref}")
        os.system("git checkout FETCH_HEAD")

        # Get current files for context
        self.context["current_files"] = get_current_files()

    def cleanup(self):
        """Cleanup workspace."""
        # Make sure we're not in the repo directory before cleaning up
        if os.getcwd() == self.context.get("repo_path", ""):
            os.chdir(self.original_dir)

        # Clean up the repository directory
        cleanup_repository(self.original_dir, self.context.get("repo_path", ""))
        # Clean up the MongoDB

    def run(self):
        check_readme_file_result = self.check_readme_file()

        return check_readme_file_result

    def check_readme_file(self):
        """Execute the issue generation workflow."""
        try:
            self.setup()
            # ==================== Generate issues ====================
            check_readme_file_phase = phases.CheckReadmeFilePhase(workflow=self)
            check_readme_file_result = check_readme_file_phase.execute()
            # Check Issue Generation Result
            if not check_readme_file_result or not check_readme_file_result.get(
                "success"
            ):
                log_error(
                    Exception(check_readme_file_result.get("error", "No result")),
                    "Readme file check failed",
                )
                return {
                    "success": False,
                    "message": "Readme file check failed",
                    "data": {
                        "recommendation": False,
                    },
                }
            log_section("Readme file check completed")
            print(check_readme_file_result)
            recommendation = check_readme_file_result["data"]["recommendation"]
            log_key_value(
                "Readme file check completed", f"Recommendation: {recommendation}"
            )
            # Star the repository
            return {
                "success": True,
                "message": "Readme file check completed",
                "data": {
                    "recommendation": recommendation == "APPROVE",
                },
            }
        except Exception as e:
            log_error(e, "Readme file check workflow failed")
            print(e)
            return {
                "success": False,
                "message": f"Readme file check workflow failed: {str(e)}",
                "data": {
                    "recommendation": False,
                },
            }

=== File: orca-agent/src/workflows/repoSummarizerAudit/phases.py ===

-- Chunk 1 --
// phases.py:6-14
class CheckReadmeFilePhase(WorkflowPhase):
    def __init__(self, workflow: Workflow, conversation_id: str = None):
        super().__init__(
            workflow=workflow,
            prompt_name="check_readme_file",
            available_tools=["read_file",  "list_files", "review_pull_request_legacy"],
            conversation_id=conversation_id,
            name="Check Readme File",
        )

=== File: orca-agent/src/workflows/repoSummarizerAudit/prompts.py ===

-- Chunk 1 --
// /home/herman/Downloads/PrometheusMonorepo/node/documentation/worker/orca-agent/repos/repo_0/orca-agent/src/workflows/repoSummarizerAudit/prompts.py:1-29
"""Prompts for the repository summarization workflow."""

PROMPTS = {
    "system_prompt": (
        "You are an expert software architect and technical lead specializing in summarizing "
        "repositories into comprehensive documentation. You excel at analyzing codebases "
        "and creating clear, structured documentation."
    ),
    
    "check_readme_file": (
        "A pull request has been checked out for you. The repository is {repo_owner}/{repo_name} and "
        "the PR number is {pr_number}. The following files are available:\n"
        "{current_files}\n\n"
        "The criteria for the README file are:\n"
        "1. Project Overview\n"
        "   - Purpose and main functionality\n"
        "   - Key features\n"
        "2. Repository Structure\n"
        "   - Detailed breakdown of directories and their purposes\n"
        "   - Key files and their roles\n"
        "3. Technical Details\n"
        "   - Technologies used\n"
        "   - Architecture overview\n"
        "4. File Contents\n"
        "   - Specific description of each significant file\n\n"
        "Please review the README file and give feedback.\n"
    ),

}

=== File: orca-agent/src/workflows/repoSummarizerAudit/__main__.py ===

-- Chunk 1 --
// __main__.py:14-48
def main():
    """Run the todo creator workflow."""
    parser = argparse.ArgumentParser(
        description="Create tasks from a feature specification for a GitHub repository"
    )
    parser.add_argument(
        "--pr-url",
        type=str,
        required=True,
        help="GitHub pull request URL (e.g., https://github.com/owner/repo/pull/1)",
    )

    parser.add_argument(
        "--model",
        type=str,
        default="anthropic",
        choices=["anthropic", "openai", "xai"],
        help="Model provider to use (default: anthropic)",
    )
    args = parser.parse_args()

    # Initialize client
    client = setup_client(args.model)

    # Run the todo creator workflow
    workflow = repoSummarizerAuditWorkflow(
        client=client,
        prompts=PROMPTS,
        pr_url=args.pr_url,
    )

    result = workflow.run()
    if not result or not result.get("success"):
        print("Todo creator workflow failed")
        sys.exit(1)

=== File: orca-agent/src/server/__init__.py ===

-- Chunk 1 --
// __init__.py:14-76
def create_app():
    """Create and configure the Flask application."""
    app = Flask(__name__)

    # Add request ID middleware
    @app.before_request
    def before_request():
        request.id = str(uuid.uuid4())
        # Store request start time for duration calculation
        request.start_time = request.environ.get("REQUEST_TIME", 0)

    @app.after_request
    def after_request(response):
        # Calculate request duration
        duration = (
            request.environ.get("REQUEST_TIME", 0) - request.start_time
        ) * 1000

        # Get error message if this is an error response
        error_msg = ""
        if response.status_code >= 400:
            try:
                json_data = response.get_json()
                if isinstance(json_data, dict):
                    error_msg = (
                        json_data.get("error") or
                        json_data.get("message", "")
                    )
            except Exception:
                # If we can't get JSON data, try to get the message
                error_msg = getattr(response, "description", "")

        # Log the request with appropriate color
        color = Fore.GREEN if response.status_code < 400 else Fore.RED
        log_value(
            f"[{color}REQ{Style.RESET_ALL}] {request.method} {request.path} "
            f"{color}{response.status_code}{Style.RESET_ALL} "
            f"{error_msg} {duration}ms"
        )

        return response

    # Register blueprints
    app.register_blueprint(healthz.bp)
    app.register_blueprint(repo_classify.bp)
    app.register_blueprint(audit.bp)
    # app.register_blueprint(submission.bp)
    # Configure logging within app context
    with app.app_context():
        # Set up logging (includes both console and database logging)
        configure_logging()
        # Initialize database
        initialize_database()
        # Disable Flask's default logging
        app.logger.disabled = True

        # Log startup information
        log_section("SERVER STARTUP")
        log_key_value("Workers", 1)
        log_key_value("Host", "0.0.0.0:8080")
        log_key_value("Database", os.getenv("DATABASE_PATH", "Not configured"))

    return app

=== File: orca-agent/src/server/services/repo_classification_kno.py ===

-- Chunk 1 --
// repo_classification_kno.py:13-32
def handle_task_creation(repo_url):
    """Handle task creation request."""
    try:
        client = setup_client("anthropic")

        workflow = RepoClassifierWorkflow(
            client=client,
            prompts=PROMPTS,
            repo_url=repo_url,
        )
        result = workflow.run()
        if result.get("success"):
            return result
        else:
            return jsonify({"success": False, "result": result.get("error", "No result")})
    except Exception as e:
        logger.error(f"Repo classification failed: {str(e)}")
        return jsonify(
            {"success": False, "message": str(e)}
        )

=== File: orca-agent/src/server/services/repo_classification_service.py ===

-- Chunk 1 --
// repo_classification_service.py:13-32
def handle_task_creation(repo_url):
    """Handle task creation request."""
    try:
        client = setup_client("anthropic")

        workflow = RepoClassifierWorkflow(
            client=client,
            prompts=PROMPTS,
            repo_url=repo_url,
        )
        result = workflow.run()
        if result.get("success"):
            return result
        else:
            return jsonify({"success": False, "result": result.get("error", "No result")})
    except Exception as e:
        logger.error(f"Repo classification failed: {str(e)}")
        return jsonify(
            {"success": False, "message": str(e)}
        )

=== File: orca-agent/src/server/services/github_service.py ===

-- Chunk 1 --
// github_service.py:9-43
def verify_pr_ownership(
    pr_url,
    expected_username,
    expected_owner,
    expected_repo,
):
    try:
        gh = Github(os.environ.get("GITHUB_TOKEN"))

        match = re.match(r"https://github.com/([^/]+)/([^/]+)/pull/(\d+)", pr_url)
        if not match:
            logger.error(f"Invalid PR URL: {pr_url}")
            return False

        owner, repo_name, pr_number = match.groups()

        if owner != expected_owner or repo_name != expected_repo:
            logger.error(
                f"PR URL mismatch: {pr_url} != {expected_owner}/{expected_repo}"
            )
            return False

        repo = gh.get_repo(f"{owner}/{repo_name}")
        pr = repo.get_pull(int(pr_number))

        if pr.user.login != expected_username:
            logger.error(
                f"PR username mismatch: {pr.user.login} != {expected_username}"
            )
            return False
        return True

    except Exception as e:
        logger.error(f"Error verifying PR ownership: {str(e)}")
        return True

=== File: orca-agent/src/server/services/audit_service.py ===

-- Chunk 1 --
// audit_service.py:13-41
def audit_repo(pr_url):
    # def review_pr(repo_urls, pr_url, github_username, star_only=True):
    """Review PR and decide if it should be accepted, revised, or rejected."""
    try:
        # Set up client and workflow
        client = setup_client("anthropic")

        # Below commented out because we won't need to distribute starring repo nodes
        # star_repo_workflow = StarRepoAuditWorkflow(
        #     client=client,
        #     prompts=STAR_REPO_AUDIT_PROMPTS,
        #     repo_url=repo_urls[0],
        #     github_username=github_username,
        # )
        # star_repo_workflow.run()

        repo_summerizer_audit_workflow = repoSummarizerAuditWorkflow(
            client=client,
            prompts=REPO_SUMMARIZER_AUDIT_PROMPTS,
            pr_url=pr_url,
        )

        # Run workflow and get result
        result = repo_summerizer_audit_workflow.run()
        recommendation = result["data"]["recommendation"]
        return recommendation
    except Exception as e:
        logger.error(f"PR review failed: {str(e)}")
        raise Exception("PR review failed")

=== File: orca-agent/src/server/models/Log.py ===

-- Chunk 1 --
// Log.py:7-10
def init_logs_table():
    """Initialize the logs table if it doesn't exist."""
    # Not needed - handled by SQLModel
    pass

-- Chunk 2 --
// Log.py:13-65
def save_log(
    level: str,
    message: str,
    module: str = None,
    function: str = None,
    path: str = None,
    line_no: int = None,
    exception: str = None,
    stack_trace: str = None,
    request_id: str = None,
    additional_data: str = None,
) -> bool:
    """
    Save a log entry to the database.

    Args:
        level: Log level (ERROR, WARNING, INFO, etc)
        message: Log message
        module: Module name where log was generated
        function: Function name where log was generated
        path: File path where log was generated
        line_no: Line number where log was generated
        exception: Exception type if any
        stack_trace: Stack trace if any
        request_id: Request ID if available
        additional_data: Any additional JSON-serializable data

    Returns:
        bool: True if log was saved successfully
    """
    try:
        db = get_db()
        from prometheus_swarm.database import Log

        log = Log(
            timestamp=datetime.utcnow(),
            level=level,
            message=message,
            module=module,
            function=function,
            path=path,
            line_no=line_no,
            exception=exception,
            stack_trace=stack_trace,
            request_id=request_id,
            additional_data=additional_data,
        )
        db.add(log)
        db.commit()
        return True
    except Exception as e:
        print(f"Failed to save log to database: {e}")  # Fallback logging
        return False

=== File: orca-agent/src/server/routes/repo_classify_kno.py ===

-- Chunk 1 --
// repo_classify_kno.py:8-20
def start_task():   
    logger = repo_classification_kno.logger
    logger.info("Task started")
    data = request.get_json()
    logger.info(f"Task data: {data}")    
    if not data.get("repo_url"):
        return jsonify({"error": "Missing repo_url"}), 401

    result = repo_classification_kno.handle_task_creation(
        repo_url=data["repo_url"],
    )

    return result

=== File: orca-agent/src/server/routes/audit.py ===

-- Chunk 1 --
// audit.py:12-62
def audit_submission(round_number: int):
    logger.info("Auditing submission")

    data = request.get_json()
    submission = data.get("submission")

    if not submission:
        return jsonify({"error": "Missing submission"}), 400

    # submission_round_number = submission.get("roundNumber")
    task_id = submission.get("taskId")
    pr_url = submission.get("prUrl")
    github_username = submission.get("githubUsername")
    
    # Extract repo owner and name from PR URL
    try:
        pr_url_parts = pr_url.split('github.com/')[1].split('/')
        repo_owner = pr_url_parts[0]
        repo_name = pr_url_parts[1]
    except (IndexError, AttributeError):
        return jsonify({"error": "Invalid PR URL format"}), 400
    print(f"Repo owner: {repo_owner}, Repo name: {repo_name}")
    # This is commented out because the round number might be different due to we put the audit logic in the distribution part
    # if int(round_number) != submission_round_number:
    #     return jsonify({"error": "Round number mismatch"}), 400

    if (
        not task_id
        or not pr_url
        or not github_username
        or not repo_owner
        or not repo_name
    ):
        return jsonify({"error": "Missing submission data"}), 400

    is_valid = verify_pr_ownership(
        pr_url=pr_url,
        expected_username=github_username,
        expected_owner=repo_owner,
        expected_repo=repo_name,
    )

    if not is_valid:
        return jsonify(False)

    try:
        is_approved = audit_repo(pr_url)
        return jsonify(is_approved), 200
    except Exception as e:
        logger.error(f"Error auditing PR: {str(e)}")
        return jsonify(True), 200

=== File: orca-agent/src/server/routes/healthz.py ===

-- Chunk 1 --
// healthz.py:11-14
def healthz():
    # Test database connection
    _ = get_db()
    return jsonify({"status": "ok"})

=== File: orca-agent/src/server/routes/repo_classify.py ===

-- Chunk 1 --
// repo_classify.py:8-22
def start_task():
    logger = repo_classification_service.logger
    logger.info("Task started")

    data = request.get_json()
    logger.info(f"Task data: {data}")
    
    if not data.get("repo_url"):
        return jsonify({"error": "Missing repo_url"}), 401

    result = repo_classification_service.handle_task_creation(
        repo_url=data["repo_url"],
    )

    return result
